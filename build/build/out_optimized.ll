; ModuleID = 'C:\Users\PaulK\OneDrive\Documents\PL\PyPL\build\build\out_reg2mem.ll'
source_filename = "llvm-link"

@lluoh_Warning_Remove_returned_Nil_for_key_ = internal unnamed_addr constant [37 x i8] c"Warning: Remove returned Nil for key "
@bfdvn_Warning_Remove_returned_wrong_value_for_key_ = internal unnamed_addr constant [45 x i8] c"Warning: Remove returned wrong value for key "
@afqmt_Error_Nil_returned_during_random_hit_test_for_key_ = internal unnamed_addr constant [51 x i8] c"Error: Nil returned during random hit test for key "
@nuqee__unique_keys_for_random_hit_test = internal unnamed_addr constant [33 x i8] c" unique keys for random hit test."
@ikfyp_Error_Nil_returned_during_sequential_hit_test_for_key_ = internal unnamed_addr constant [55 x i8] c"Error: Nil returned during sequential hit test for key "
@PRNG_field_seed = internal constant { ptr, ptr } { ptr @PRNG_getter_seed, ptr @PRNG_setter_seed }
@string_string = internal constant [4 x i8] c"%s\0A\00"
@exception_message = internal constant [45 x i8] c"Error: uncaught exception. Program aborted.\0A\00"
@into_caller_buf = linkonce_odr thread_local global [3 x ptr] zeroinitializer
@current_coroutine = linkonce_odr thread_local local_unnamed_addr global ptr null
@always_one = linkonce thread_local local_unnamed_addr global i1 true
@current_ptr = internal thread_local global ptr null
@bool_typ_hashtbl = constant [4 x ptr] [ptr @Object, ptr @any_typ, ptr null, ptr @bool_typ]
@bool_typ_offset_tbl = constant [4 x i32] [i32 10, i32 10, i32 0, i32 10]
@i8_typ_hashtbl = constant [4 x ptr] [ptr @Object, ptr @any_typ, ptr null, ptr @i8_typ]
@i8_typ_offset_tbl = constant [4 x i32] [i32 10, i32 10, i32 0, i32 10]
@i32_typ_hashtbl = constant [4 x ptr] [ptr @Object, ptr @any_typ, ptr @i32_typ, ptr null]
@i32_typ_offset_tbl = constant [4 x i32] [i32 10, i32 10, i32 10, i32 0]
@i64_typ_hashtbl = constant [4 x ptr] [ptr @any_typ, ptr @Object, ptr @i64_typ, ptr null]
@i64_typ_offset_tbl = constant [4 x i32] [i32 10, i32 10, i32 10, i32 0]
@f64_typ_hashtbl = constant [4 x ptr] [ptr @Object, ptr @any_typ, ptr null, ptr @f64_typ]
@f64_typ_offset_tbl = constant [4 x i32] [i32 10, i32 10, i32 0, i32 10]
@nil_typ_hashtbl = constant [2 x ptr] [ptr @nil_typ, ptr @any_typ]
@nil_typ_offset_tbl = constant [2 x i32] [i32 10, i32 10]
@any_typ_hashtbl = constant [1 x ptr] [ptr @any_typ]
@any_typ_offset_tbl = constant [1 x i32] [i32 10]
@function_typ_hashtbl = constant [4 x ptr] [ptr @Object, ptr @any_typ, ptr @function_typ, ptr null]
@function_typ_offset_tbl = constant [4 x i32] [i32 10, i32 10, i32 10, i32 0]
@buffer_typ_hashtbl = constant [4 x ptr] [ptr @Object, ptr @buffer_typ, ptr @any_typ, ptr null]
@buffer_typ_offset_tbl = constant [4 x i32] [i32 10, i32 10, i32 10, i32 0]
@union_typ_hashtbl = constant [4 x ptr] [ptr @union_typ, ptr null, ptr @any_typ, ptr @Object]
@union_typ_offset_tbl = constant [4 x i32] [i32 10, i32 0, i32 10, i32 10]
@Object_hashtbl = constant [2 x ptr] [ptr @Object, ptr @any_typ]
@Object_offset_tbl = constant [2 x i32] [i32 10, i32 10]
@Pair_hashtbl = constant [4 x ptr] [ptr @Object, ptr @any_typ, ptr @Pair, ptr null]
@Pair_offset_tbl = constant [4 x i32] [i32 20, i32 10, i32 10, i32 0]
@Container_hashtbl = constant [4 x ptr] [ptr @Object, ptr @any_typ, ptr null, ptr @Container]
@Container_offset_tbl = constant [4 x i32] [i32 10, i32 10, i32 0, i32 10]
@Iterator_hashtbl = constant [4 x ptr] [ptr @Iterator, ptr @any_typ, ptr @Container, ptr @Object]
@Iterator_offset_tbl = constant [4 x i32] [i32 10, i32 10, i32 13, i32 13]
@Iterable_hashtbl = constant [4 x ptr] [ptr @Iterable, ptr @any_typ, ptr @Container, ptr @Object]
@Iterable_offset_tbl = constant [4 x i32] [i32 10, i32 10, i32 33, i32 33]
@MapIterable_hashtbl = constant [8 x ptr] [ptr null, ptr @Container, ptr @MapIterable, ptr @Iterable, ptr @Object, ptr null, ptr null, ptr @any_typ]
@MapIterable_offset_tbl = constant [8 x i32] [i32 0, i32 61, i32 10, i32 38, i32 61, i32 0, i32 0, i32 10]
@MapIterable = constant { [3 x i64], [7 x ptr], [51 x ptr] } { [3 x i64] [i64 -7488770571603291722, i64 4611686018427388279, i64 7], [7 x ptr] [ptr @subtype_test, ptr @MapIterable_hashtbl, ptr @MapIterable_offset_tbl, ptr @_data_size_MapIterable, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [51 x ptr] [ptr @MapIterable_field_MapIterable_0, ptr @MapIterable_field_MapIterable_1, ptr @MapIterable_field_iterable, ptr @MapIterable_field_f, ptr @MapIterable_B_init_iterableIterableT_fFunctionT_to_U, ptr @MapIterable_B_iterator_, ptr @MapIterable_B_each_fFunctionT_to_Nothing, ptr @MapIterable_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @MapIterable_B_all_fFunctionT_to_i1, ptr @MapIterable_B_any_fFunctionT_to_i1, ptr @MapIterable_B_map_fFunctionT_to_U, ptr @MapIterable_B_filter_fFunctionT_to_i1, ptr @MapIterable_B_chain_otherIterableT, ptr @MapIterable_B_interleave_otherIterableT, ptr @MapIterable_B_zip_otherIterableU, ptr @MapIterable_B_product_otherIterableU, ptr @MapIterable_init_iterableIterableT_fFunctionT_to_U, ptr @MapIterable_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU, ptr @MapIterable_field_MapIterable_1, ptr @MapIterable_B_iterator_, ptr @MapIterable_B_each_fFunctionT_to_Nothing, ptr @MapIterable_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @MapIterable_B_all_fFunctionT_to_i1, ptr @MapIterable_B_any_fFunctionT_to_i1, ptr @MapIterable_B_map_fFunctionT_to_U, ptr @MapIterable_B_filter_fFunctionT_to_i1, ptr @MapIterable_B_chain_otherIterableT, ptr @MapIterable_B_interleave_otherIterableT, ptr @MapIterable_B_zip_otherIterableU, ptr @MapIterable_B_product_otherIterableU, ptr @MapIterable_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU] }
@MapIterator_hashtbl = constant [8 x ptr] [ptr @Object, ptr @any_typ, ptr @MapIterator, ptr @Container, ptr null, ptr @Iterator, ptr null, ptr null]
@MapIterator_offset_tbl = constant [8 x i32] [i32 21, i32 10, i32 10, i32 21, i32 0, i32 18, i32 0, i32 0]
@MapIterator = constant { [3 x i64], [7 x ptr], [11 x ptr] } { [3 x i64] [i64 -146553482626734782, i64 4611686018427388081, i64 7], [7 x ptr] [ptr @subtype_test, ptr @MapIterator_hashtbl, ptr @MapIterator_offset_tbl, ptr @_data_size_MapIterator, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [11 x ptr] [ptr @MapIterator_field_MapIterator_0, ptr @MapIterator_field_MapIterator_1, ptr @MapIterator_field_iterator, ptr @MapIterator_field_f, ptr @MapIterator_B_init_iteratorIteratorT_fFunctionT_to_U, ptr @MapIterator_B_next_, ptr @MapIterator_init_iteratorIteratorT_fFunctionT_to_U, ptr @MapIterator_next_, ptr @MapIterator_field_MapIterator_1, ptr @MapIterator_B_next_, ptr @MapIterator_next_] }
@FilterIterable_hashtbl = constant [8 x ptr] [ptr null, ptr @Object, ptr @any_typ, ptr @FilterIterable, ptr null, ptr @Container, ptr @Iterable, ptr null]
@FilterIterable_offset_tbl = constant [8 x i32] [i32 0, i32 60, i32 10, i32 10, i32 0, i32 60, i32 37, i32 0]
@FilterIterable = constant { [3 x i64], [7 x ptr], [50 x ptr] } { [3 x i64] [i64 8498466713076104350, i64 4611686018427388319, i64 7], [7 x ptr] [ptr @subtype_test, ptr @FilterIterable_hashtbl, ptr @FilterIterable_offset_tbl, ptr @_data_size_FilterIterable, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [50 x ptr] [ptr @FilterIterable_field_FilterIterable_0, ptr @FilterIterable_field_iterable, ptr @FilterIterable_field_f, ptr @FilterIterable_B_init_iterableIterableT_fFunctionT_to_i1, ptr @FilterIterable_B_iterator_, ptr @FilterIterable_B_each_fFunctionT_to_Nothing, ptr @FilterIterable_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @FilterIterable_B_all_fFunctionT_to_i1, ptr @FilterIterable_B_any_fFunctionT_to_i1, ptr @FilterIterable_B_map_fFunctionT_to_U, ptr @FilterIterable_B_filter_fFunctionT_to_i1, ptr @FilterIterable_B_chain_otherIterableT, ptr @FilterIterable_B_interleave_otherIterableT, ptr @FilterIterable_B_zip_otherIterableU, ptr @FilterIterable_B_product_otherIterableU, ptr @FilterIterable_init_iterableIterableT_fFunctionT_to_i1, ptr @FilterIterable_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU, ptr @FilterIterable_field_FilterIterable_0, ptr @FilterIterable_B_iterator_, ptr @FilterIterable_B_each_fFunctionT_to_Nothing, ptr @FilterIterable_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @FilterIterable_B_all_fFunctionT_to_i1, ptr @FilterIterable_B_any_fFunctionT_to_i1, ptr @FilterIterable_B_map_fFunctionT_to_U, ptr @FilterIterable_B_filter_fFunctionT_to_i1, ptr @FilterIterable_B_chain_otherIterableT, ptr @FilterIterable_B_interleave_otherIterableT, ptr @FilterIterable_B_zip_otherIterableU, ptr @FilterIterable_B_product_otherIterableU, ptr @FilterIterable_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU] }
@FilterIterator_hashtbl = constant [8 x ptr] [ptr @Object, ptr @any_typ, ptr null, ptr @Container, ptr null, ptr @Iterator, ptr @FilterIterator, ptr null]
@FilterIterator_offset_tbl = constant [8 x i32] [i32 20, i32 10, i32 0, i32 20, i32 0, i32 17, i32 10, i32 0]
@FilterIterator = constant { [3 x i64], [7 x ptr], [10 x ptr] } { [3 x i64] [i64 -1221365496900303883, i64 4611686018427388081, i64 7], [7 x ptr] [ptr @subtype_test, ptr @FilterIterator_hashtbl, ptr @FilterIterator_offset_tbl, ptr @_data_size_FilterIterator, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [10 x ptr] [ptr @FilterIterator_field_FilterIterator_0, ptr @FilterIterator_field_iterator, ptr @FilterIterator_field_f, ptr @FilterIterator_B_init_iteratorIteratorT_fFunctionT_to_i1, ptr @FilterIterator_B_next_, ptr @FilterIterator_init_iteratorIteratorT_fFunctionT_to_i1, ptr @FilterIterator_next_, ptr @FilterIterator_field_FilterIterator_0, ptr @FilterIterator_B_next_, ptr @FilterIterator_next_] }
@ChainIterable_hashtbl = constant [8 x ptr] [ptr @any_typ, ptr @Iterable, ptr null, ptr @ChainIterable, ptr @Container, ptr null, ptr null, ptr @Object]
@ChainIterable_offset_tbl = constant [8 x i32] [i32 10, i32 37, i32 0, i32 10, i32 60, i32 0, i32 0, i32 60]
@ChainIterable = constant { [3 x i64], [7 x ptr], [50 x ptr] } { [3 x i64] [i64 -2370247058431047815, i64 4611686018427388247, i64 7], [7 x ptr] [ptr @subtype_test, ptr @ChainIterable_hashtbl, ptr @ChainIterable_offset_tbl, ptr @_data_size_ChainIterable, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [50 x ptr] [ptr @ChainIterable_field_ChainIterable_0, ptr @ChainIterable_field_first, ptr @ChainIterable_field_second, ptr @ChainIterable_B_init_firstIterableT_secondIterableT, ptr @ChainIterable_B_iterator_, ptr @ChainIterable_B_each_fFunctionT_to_Nothing, ptr @ChainIterable_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @ChainIterable_B_all_fFunctionT_to_i1, ptr @ChainIterable_B_any_fFunctionT_to_i1, ptr @ChainIterable_B_map_fFunctionT_to_U, ptr @ChainIterable_B_filter_fFunctionT_to_i1, ptr @ChainIterable_B_chain_otherIterableT, ptr @ChainIterable_B_interleave_otherIterableT, ptr @ChainIterable_B_zip_otherIterableU, ptr @ChainIterable_B_product_otherIterableU, ptr @ChainIterable_init_firstIterableT_secondIterableT, ptr @ChainIterable_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU, ptr @ChainIterable_field_ChainIterable_0, ptr @ChainIterable_B_iterator_, ptr @ChainIterable_B_each_fFunctionT_to_Nothing, ptr @ChainIterable_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @ChainIterable_B_all_fFunctionT_to_i1, ptr @ChainIterable_B_any_fFunctionT_to_i1, ptr @ChainIterable_B_map_fFunctionT_to_U, ptr @ChainIterable_B_filter_fFunctionT_to_i1, ptr @ChainIterable_B_chain_otherIterableT, ptr @ChainIterable_B_interleave_otherIterableT, ptr @ChainIterable_B_zip_otherIterableU, ptr @ChainIterable_B_product_otherIterableU, ptr @ChainIterable_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU] }
@ChainIterator_hashtbl = constant [8 x ptr] [ptr null, ptr null, ptr @Container, ptr @Iterator, ptr @Object, ptr null, ptr @any_typ, ptr @ChainIterator]
@ChainIterator_offset_tbl = constant [8 x i32] [i32 0, i32 0, i32 21, i32 18, i32 21, i32 0, i32 10, i32 10]
@ChainIterator = constant { [3 x i64], [7 x ptr], [11 x ptr] } { [3 x i64] [i64 6043157723929225452, i64 4611686018427388091, i64 7], [7 x ptr] [ptr @subtype_test, ptr @ChainIterator_hashtbl, ptr @ChainIterator_offset_tbl, ptr @_data_size_ChainIterator, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [11 x ptr] [ptr @ChainIterator_field_ChainIterator_0, ptr @ChainIterator_field_first, ptr @ChainIterator_field_second, ptr @ChainIterator_field_on_first, ptr @ChainIterator_B_init_firstIteratorT_secondIteratorT, ptr @ChainIterator_B_next_, ptr @ChainIterator_init_firstIteratorT_secondIteratorT, ptr @ChainIterator_next_, ptr @ChainIterator_field_ChainIterator_0, ptr @ChainIterator_B_next_, ptr @ChainIterator_next_] }
@InterleaveIterable_hashtbl = constant [8 x ptr] [ptr null, ptr @Container, ptr @InterleaveIterable, ptr @Iterable, ptr @Object, ptr null, ptr null, ptr @any_typ]
@InterleaveIterable_offset_tbl = constant [8 x i32] [i32 0, i32 60, i32 10, i32 37, i32 60, i32 0, i32 0, i32 10]
@InterleaveIterable = constant { [3 x i64], [7 x ptr], [50 x ptr] } { [3 x i64] [i64 4936782714255954462, i64 4611686018427388279, i64 7], [7 x ptr] [ptr @subtype_test, ptr @InterleaveIterable_hashtbl, ptr @InterleaveIterable_offset_tbl, ptr @_data_size_InterleaveIterable, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [50 x ptr] [ptr @InterleaveIterable_field_InterleaveIterable_0, ptr @InterleaveIterable_field_first, ptr @InterleaveIterable_field_second, ptr @InterleaveIterable_B_init_firstIterableT_secondIterableT, ptr @InterleaveIterable_B_iterator_, ptr @InterleaveIterable_B_each_fFunctionT_to_Nothing, ptr @InterleaveIterable_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @InterleaveIterable_B_all_fFunctionT_to_i1, ptr @InterleaveIterable_B_any_fFunctionT_to_i1, ptr @InterleaveIterable_B_map_fFunctionT_to_U, ptr @InterleaveIterable_B_filter_fFunctionT_to_i1, ptr @InterleaveIterable_B_chain_otherIterableT, ptr @InterleaveIterable_B_interleave_otherIterableT, ptr @InterleaveIterable_B_zip_otherIterableU, ptr @InterleaveIterable_B_product_otherIterableU, ptr @InterleaveIterable_init_firstIterableT_secondIterableT, ptr @InterleaveIterable_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU, ptr @InterleaveIterable_field_InterleaveIterable_0, ptr @InterleaveIterable_B_iterator_, ptr @InterleaveIterable_B_each_fFunctionT_to_Nothing, ptr @InterleaveIterable_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @InterleaveIterable_B_all_fFunctionT_to_i1, ptr @InterleaveIterable_B_any_fFunctionT_to_i1, ptr @InterleaveIterable_B_map_fFunctionT_to_U, ptr @InterleaveIterable_B_filter_fFunctionT_to_i1, ptr @InterleaveIterable_B_chain_otherIterableT, ptr @InterleaveIterable_B_interleave_otherIterableT, ptr @InterleaveIterable_B_zip_otherIterableU, ptr @InterleaveIterable_B_product_otherIterableU, ptr @InterleaveIterable_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU] }
@InterleaveIterator_hashtbl = constant [8 x ptr] [ptr @Object, ptr @any_typ, ptr null, ptr @Container, ptr @InterleaveIterator, ptr @Iterator, ptr null, ptr null]
@InterleaveIterator_offset_tbl = constant [8 x i32] [i32 21, i32 10, i32 0, i32 21, i32 10, i32 18, i32 0, i32 0]
@InterleaveIterator = constant { [3 x i64], [7 x ptr], [11 x ptr] } { [3 x i64] [i64 -3924664358248524505, i64 4611686018427388081, i64 7], [7 x ptr] [ptr @subtype_test, ptr @InterleaveIterator_hashtbl, ptr @InterleaveIterator_offset_tbl, ptr @_data_size_InterleaveIterator, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [11 x ptr] [ptr @InterleaveIterator_field_InterleaveIterator_0, ptr @InterleaveIterator_field_first, ptr @InterleaveIterator_field_second, ptr @InterleaveIterator_field_on_first, ptr @InterleaveIterator_B_init_firstIteratorT_secondIteratorT, ptr @InterleaveIterator_B_next_, ptr @InterleaveIterator_init_firstIteratorT_secondIteratorT, ptr @InterleaveIterator_next_, ptr @InterleaveIterator_field_InterleaveIterator_0, ptr @InterleaveIterator_B_next_, ptr @InterleaveIterator_next_] }
@ZipIterable_hashtbl = constant [8 x ptr] [ptr @any_typ, ptr @Iterable, ptr null, ptr null, ptr @Container, ptr null, ptr @ZipIterable, ptr @Object]
@ZipIterable_offset_tbl = constant [8 x i32] [i32 10, i32 39, i32 0, i32 0, i32 62, i32 0, i32 10, i32 62]
@ZipIterable = constant { [3 x i64], [7 x ptr], [52 x ptr] } { [3 x i64] [i64 35232740166152944, i64 4611686018427388247, i64 7], [7 x ptr] [ptr @subtype_test, ptr @ZipIterable_hashtbl, ptr @ZipIterable_offset_tbl, ptr @_data_size_ZipIterable, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [52 x ptr] [ptr @ZipIterable_field_ZipIterable_0, ptr @ZipIterable_field_ZipIterable_1, ptr @ZipIterable_field_ZipIterable_2, ptr @ZipIterable_field_first, ptr @ZipIterable_field_second, ptr @ZipIterable_B_init_firstIterableT_secondIterableU, ptr @ZipIterable_B_iterator_, ptr @ZipIterable_B_each_fFunctionT_to_Nothing, ptr @ZipIterable_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @ZipIterable_B_all_fFunctionT_to_i1, ptr @ZipIterable_B_any_fFunctionT_to_i1, ptr @ZipIterable_B_map_fFunctionT_to_U, ptr @ZipIterable_B_filter_fFunctionT_to_i1, ptr @ZipIterable_B_chain_otherIterableT, ptr @ZipIterable_B_interleave_otherIterableT, ptr @ZipIterable_B_zip_otherIterableU, ptr @ZipIterable_B_product_otherIterableU, ptr @ZipIterable_init_firstIterableT_secondIterableU, ptr @ZipIterable_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU, ptr @ZipIterable_field_ZipIterable_2, ptr @ZipIterable_B_iterator_, ptr @ZipIterable_B_each_fFunctionT_to_Nothing, ptr @ZipIterable_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @ZipIterable_B_all_fFunctionT_to_i1, ptr @ZipIterable_B_any_fFunctionT_to_i1, ptr @ZipIterable_B_map_fFunctionT_to_U, ptr @ZipIterable_B_filter_fFunctionT_to_i1, ptr @ZipIterable_B_chain_otherIterableT, ptr @ZipIterable_B_interleave_otherIterableT, ptr @ZipIterable_B_zip_otherIterableU, ptr @ZipIterable_B_product_otherIterableU, ptr @ZipIterable_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU] }
@ZipIterator_hashtbl = constant [8 x ptr] [ptr null, ptr null, ptr @Container, ptr @Iterator, ptr @Object, ptr null, ptr @any_typ, ptr @ZipIterator]
@ZipIterator_offset_tbl = constant [8 x i32] [i32 0, i32 0, i32 22, i32 19, i32 22, i32 0, i32 10, i32 10]
@ZipIterator = constant { [3 x i64], [7 x ptr], [12 x ptr] } { [3 x i64] [i64 -2141114445739585318, i64 4611686018427388091, i64 7], [7 x ptr] [ptr @subtype_test, ptr @ZipIterator_hashtbl, ptr @ZipIterator_offset_tbl, ptr @_data_size_ZipIterator, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [12 x ptr] [ptr @ZipIterator_field_ZipIterator_0, ptr @ZipIterator_field_ZipIterator_1, ptr @ZipIterator_field_ZipIterator_2, ptr @ZipIterator_field_first, ptr @ZipIterator_field_second, ptr @ZipIterator_B_init_firstIteratorT_secondIteratorU, ptr @ZipIterator_B_next_, ptr @ZipIterator_init_firstIteratorT_secondIteratorU, ptr @ZipIterator_next_, ptr @ZipIterator_field_ZipIterator_2, ptr @ZipIterator_B_next_, ptr @ZipIterator_next_] }
@ProductIterable_hashtbl = constant [8 x ptr] [ptr @Object, ptr @any_typ, ptr @ProductIterable, ptr @Container, ptr null, ptr @Iterable, ptr null, ptr null]
@ProductIterable_offset_tbl = constant [8 x i32] [i32 62, i32 10, i32 10, i32 62, i32 0, i32 39, i32 0, i32 0]
@ProductIterable = constant { [3 x i64], [7 x ptr], [52 x ptr] } { [3 x i64] [i64 4128338911757318636, i64 4611686018427388081, i64 7], [7 x ptr] [ptr @subtype_test, ptr @ProductIterable_hashtbl, ptr @ProductIterable_offset_tbl, ptr @_data_size_ProductIterable, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [52 x ptr] [ptr @ProductIterable_field_ProductIterable_0, ptr @ProductIterable_field_ProductIterable_1, ptr @ProductIterable_field_ProductIterable_2, ptr @ProductIterable_field_first, ptr @ProductIterable_field_second, ptr @ProductIterable_B_init_firstIterableT_secondIterableU, ptr @ProductIterable_B_iterator_, ptr @ProductIterable_B_each_fFunctionT_to_Nothing, ptr @ProductIterable_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @ProductIterable_B_all_fFunctionT_to_i1, ptr @ProductIterable_B_any_fFunctionT_to_i1, ptr @ProductIterable_B_map_fFunctionT_to_U, ptr @ProductIterable_B_filter_fFunctionT_to_i1, ptr @ProductIterable_B_chain_otherIterableT, ptr @ProductIterable_B_interleave_otherIterableT, ptr @ProductIterable_B_zip_otherIterableU, ptr @ProductIterable_B_product_otherIterableU, ptr @ProductIterable_init_firstIterableT_secondIterableU, ptr @ProductIterable_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU, ptr @ProductIterable_field_ProductIterable_2, ptr @ProductIterable_B_iterator_, ptr @ProductIterable_B_each_fFunctionT_to_Nothing, ptr @ProductIterable_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @ProductIterable_B_all_fFunctionT_to_i1, ptr @ProductIterable_B_any_fFunctionT_to_i1, ptr @ProductIterable_B_map_fFunctionT_to_U, ptr @ProductIterable_B_filter_fFunctionT_to_i1, ptr @ProductIterable_B_chain_otherIterableT, ptr @ProductIterable_B_interleave_otherIterableT, ptr @ProductIterable_B_zip_otherIterableU, ptr @ProductIterable_B_product_otherIterableU, ptr @ProductIterable_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU] }
@ProductIterator_hashtbl = constant [8 x ptr] [ptr @any_typ, ptr null, ptr @Iterator, ptr null, ptr @Container, ptr @Object, ptr null, ptr @ProductIterator]
@ProductIterator_offset_tbl = constant [8 x i32] [i32 10, i32 0, i32 21, i32 0, i32 24, i32 24, i32 0, i32 10]
@ProductIterator = constant { [3 x i64], [7 x ptr], [14 x ptr] } { [3 x i64] [i64 1697250377212095568, i64 4611686018427388157, i64 7], [7 x ptr] [ptr @subtype_test, ptr @ProductIterator_hashtbl, ptr @ProductIterator_offset_tbl, ptr @_data_size_ProductIterator, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [14 x ptr] [ptr @ProductIterator_field_ProductIterator_0, ptr @ProductIterator_field_ProductIterator_1, ptr @ProductIterator_field_ProductIterator_2, ptr @ProductIterator_field_first_iterator, ptr @ProductIterator_field_second_iterator, ptr @ProductIterator_field_second_iterable, ptr @ProductIterator_field_current_first, ptr @ProductIterator_B_init_first_iteratorIteratorT_second_iterableIterableU, ptr @ProductIterator_B_next_, ptr @ProductIterator_init_first_iteratorIteratorT_second_iterableIterableU, ptr @ProductIterator_next_, ptr @ProductIterator_field_ProductIterator_2, ptr @ProductIterator_B_next_, ptr @ProductIterator_next_] }
@Pair_field_first = internal constant { ptr, ptr } { ptr @Pair_getter_first, ptr @Pair_setter_first }
@Pair_field_second = internal constant { ptr, ptr } { ptr @Pair_getter_second, ptr @Pair_setter_second }
@MapIterable_field_iterable = internal constant { ptr, ptr } { ptr @MapIterable_getter_iterable, ptr @MapIterable_setter_iterable }
@MapIterable_field_f = internal constant { ptr, ptr } { ptr @MapIterable_getter_f, ptr @MapIterable_setter_f }
@MapIterator_field_iterator = internal constant { ptr, ptr } { ptr @MapIterator_getter_iterator, ptr @MapIterator_setter_iterator }
@MapIterator_field_f = internal constant { ptr, ptr } { ptr @MapIterator_getter_f, ptr @MapIterator_setter_f }
@FilterIterable_field_iterable = internal constant { ptr, ptr } { ptr @FilterIterable_getter_iterable, ptr @FilterIterable_setter_iterable }
@FilterIterable_field_f = internal constant { ptr, ptr } { ptr @FilterIterable_getter_f, ptr @FilterIterable_setter_f }
@FilterIterator_field_iterator = internal constant { ptr, ptr } { ptr @FilterIterator_getter_iterator, ptr @FilterIterator_setter_iterator }
@FilterIterator_field_f = internal constant { ptr, ptr } { ptr @FilterIterator_getter_f, ptr @FilterIterator_setter_f }
@ChainIterable_field_first = internal constant { ptr, ptr } { ptr @ChainIterable_getter_first, ptr @ChainIterable_setter_first }
@ChainIterable_field_second = internal constant { ptr, ptr } { ptr @ChainIterable_getter_second, ptr @ChainIterable_setter_second }
@ChainIterator_field_first = internal constant { ptr, ptr } { ptr @ChainIterator_getter_first, ptr @ChainIterator_setter_first }
@ChainIterator_field_second = internal constant { ptr, ptr } { ptr @ChainIterator_getter_second, ptr @ChainIterator_setter_second }
@ChainIterator_field_on_first = internal constant { ptr, ptr } { ptr @ChainIterator_getter_on_first, ptr @ChainIterator_setter_on_first }
@InterleaveIterable_field_first = internal constant { ptr, ptr } { ptr @InterleaveIterable_getter_first, ptr @InterleaveIterable_setter_first }
@InterleaveIterable_field_second = internal constant { ptr, ptr } { ptr @InterleaveIterable_getter_second, ptr @InterleaveIterable_setter_second }
@InterleaveIterator_field_first = internal constant { ptr, ptr } { ptr @InterleaveIterator_getter_first, ptr @InterleaveIterator_setter_first }
@InterleaveIterator_field_second = internal constant { ptr, ptr } { ptr @InterleaveIterator_getter_second, ptr @InterleaveIterator_setter_second }
@InterleaveIterator_field_on_first = internal constant { ptr, ptr } { ptr @InterleaveIterator_getter_on_first, ptr @InterleaveIterator_setter_on_first }
@ZipIterable_field_first = internal constant { ptr, ptr } { ptr @ZipIterable_getter_first, ptr @ZipIterable_setter_first }
@ZipIterable_field_second = internal constant { ptr, ptr } { ptr @ZipIterable_getter_second, ptr @ZipIterable_setter_second }
@ZipIterator_field_first = internal constant { ptr, ptr } { ptr @ZipIterator_getter_first, ptr @ZipIterator_setter_first }
@ZipIterator_field_second = internal constant { ptr, ptr } { ptr @ZipIterator_getter_second, ptr @ZipIterator_setter_second }
@ProductIterable_field_first = internal constant { ptr, ptr } { ptr @ProductIterable_getter_first, ptr @ProductIterable_setter_first }
@ProductIterable_field_second = internal constant { ptr, ptr } { ptr @ProductIterable_getter_second, ptr @ProductIterable_setter_second }
@ProductIterator_field_first_iterator = internal constant { ptr, ptr } { ptr @ProductIterator_getter_first_iterator, ptr @ProductIterator_setter_first_iterator }
@ProductIterator_field_second_iterator = internal constant { ptr, ptr } { ptr @ProductIterator_getter_second_iterator, ptr @ProductIterator_setter_second_iterator }
@ProductIterator_field_second_iterable = internal constant { ptr, ptr } { ptr @ProductIterator_getter_second_iterable, ptr @ProductIterator_setter_second_iterable }
@ProductIterator_field_current_first = internal constant { ptr, ptr } { ptr @ProductIterator_getter_current_first, ptr @ProductIterator_setter_current_first }
@_parameterization_Character = linkonce_odr constant [2 x ptr] [ptr @Character, ptr null]
@Representable_hashtbl = constant [4 x ptr] [ptr @Representable, ptr null, ptr @any_typ, ptr @Object]
@Representable_offset_tbl = constant [4 x i32] [i32 10, i32 0, i32 10, i32 12]
@String_hashtbl = constant [8 x ptr] [ptr @any_typ, ptr @Iterable, ptr @Representable, ptr @Container, ptr @Object, ptr null, ptr null, ptr @String]
@String_offset_tbl = constant [8 x i32] [i32 10, i32 64, i32 87, i32 87, i32 87, i32 0, i32 0, i32 10]
@Character_hashtbl = constant [4 x ptr] [ptr @Object, ptr null, ptr @any_typ, ptr @Character]
@Character_offset_tbl = constant [4 x i32] [i32 15, i32 0, i32 10, i32 10]
@StringIterator_hashtbl = constant [8 x ptr] [ptr @Object, ptr @any_typ, ptr null, ptr @Container, ptr null, ptr @Iterator, ptr @StringIterator, ptr null]
@StringIterator_offset_tbl = constant [8 x i32] [i32 20, i32 10, i32 0, i32 20, i32 0, i32 17, i32 10, i32 0]
@Exception_hashtbl = constant [4 x ptr] [ptr @Object, ptr null, ptr @any_typ, ptr @Exception]
@Exception_offset_tbl = constant [4 x i32] [i32 23, i32 0, i32 10, i32 10]
@String_field_bytes = internal constant { ptr, ptr } { ptr @String_getter_bytes, ptr @String_setter_bytes }
@String_field_length = internal constant { ptr, ptr } { ptr @String_getter_length, ptr @String_setter_length }
@String_field_capacity = internal constant { ptr, ptr } { ptr @String_getter_capacity, ptr @String_setter_capacity }
@Character_field_byte = internal constant { ptr, ptr } { ptr @Character_getter_byte, ptr @Character_setter_byte }
@StringIterator_field_str = internal constant { ptr, ptr } { ptr @StringIterator_getter_str, ptr @StringIterator_setter_str }
@StringIterator_field_index = internal constant { ptr, ptr } { ptr @StringIterator_getter_index, ptr @StringIterator_setter_index }
@Exception_field_line_number = internal constant { ptr, ptr } { ptr @Exception_getter_line_number, ptr @Exception_setter_line_number }
@Exception_field_file_name = internal constant { ptr, ptr } { ptr @Exception_getter_file_name, ptr @Exception_setter_file_name }
@Exception_field_message = internal constant { ptr, ptr } { ptr @Exception_getter_message, ptr @Exception_setter_message }
@i32_string = linkonce_odr constant [4 x i8] c"%d\0A\00"
@i64_string = linkonce_odr constant [6 x i8] c"%lld\0A\00"
@float_string = linkonce_odr constant [4 x i8] c"%f\0A\00"
@IO_hashtbl = constant [4 x ptr] [ptr @any_typ, ptr @IO, ptr null, ptr @Object]
@IO_offset_tbl = constant [4 x i32] [i32 10, i32 10, i32 0, i32 20]
@i8_typ = constant { [3 x i64], [7 x ptr], [0 x ptr] } { [3 x i64] [i64 2582149688529881115, i64 4611686018427388081, i64 3], [7 x ptr] [ptr @subtype_test, ptr @i8_typ_hashtbl, ptr @i8_typ_offset_tbl, ptr @_data_size_i8_typ, ptr @_box_i8_typ, ptr @_unbox_i8_typ, ptr @_data_size_i8_typ], [0 x ptr] undef }
@hblhi_CUsersPaulKOneDriveDocumentsPLPyPLlibarraymini = internal unnamed_addr constant [56 x i8] c"C:\\Users\\PaulK\\OneDrive\\Documents\\PL\\PyPL\\lib\\array.mini"
@Representable = constant { [3 x i64], [7 x ptr], [2 x ptr] } { [3 x i64] [i64 -7260840641129990118, i64 4611686018427388093, i64 3], [7 x ptr] [ptr @subtype_test, ptr @Representable_hashtbl, ptr @Representable_offset_tbl, ptr @_data_size_Representable, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [2 x ptr] [ptr @Representable_B_repr_, ptr @Representable_repr_] }
@Array_hashtbl = constant [8 x ptr] [ptr null, ptr null, ptr @Iterable, ptr @any_typ, ptr @Container, ptr @Array, ptr @Representable, ptr @Object]
@Array_offset_tbl = constant [8 x i32] [i32 0, i32 0, i32 68, i32 10, i32 91, i32 10, i32 91, i32 91]
@ArrayIterator_hashtbl = constant [8 x ptr] [ptr @Object, ptr @any_typ, ptr null, ptr @Container, ptr @ArrayIterator, ptr @Iterator, ptr null, ptr null]
@ArrayIterator_offset_tbl = constant [8 x i32] [i32 20, i32 10, i32 0, i32 20, i32 10, i32 17, i32 0, i32 0]
@ArrayIterator = constant { [3 x i64], [7 x ptr], [10 x ptr] } { [3 x i64] [i64 3447345754186651411, i64 4611686018427388081, i64 7], [7 x ptr] [ptr @subtype_test, ptr @ArrayIterator_hashtbl, ptr @ArrayIterator_offset_tbl, ptr @_data_size_ArrayIterator, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [10 x ptr] [ptr @ArrayIterator_field_ArrayIterator_0, ptr @ArrayIterator_field_array, ptr @ArrayIterator_field_index, ptr @ArrayIterator_B_init_arrayArrayT, ptr @ArrayIterator_B_next_, ptr @ArrayIterator_init_arrayArrayT, ptr @ArrayIterator_next_, ptr @ArrayIterator_field_ArrayIterator_0, ptr @ArrayIterator_B_next_, ptr @ArrayIterator_next_] }
@Array_field_buffer = internal constant { ptr, ptr } { ptr @Array_getter_buffer, ptr @Array_setter_buffer }
@Array_field_length = internal constant { ptr, ptr } { ptr @Array_getter_length, ptr @Array_setter_length }
@Array_field_capacity = internal constant { ptr, ptr } { ptr @Array_getter_capacity, ptr @Array_setter_capacity }
@ArrayIterator_field_array = internal constant { ptr, ptr } { ptr @ArrayIterator_getter_array, ptr @ArrayIterator_setter_array }
@ArrayIterator_field_index = internal constant { ptr, ptr } { ptr @ArrayIterator_getter_index, ptr @ArrayIterator_setter_index }
@f64_typ = constant { [3 x i64], [7 x ptr], [0 x ptr] } { [3 x i64] [i64 -757315540097298781, i64 4611686018427388081, i64 3], [7 x ptr] [ptr @subtype_test, ptr @f64_typ_hashtbl, ptr @f64_typ_offset_tbl, ptr @_data_size_f64_typ, ptr @_box_f64_typ, ptr @_unbox_f64_typ, ptr @_data_size_f64_typ], [0 x ptr] undef }
@otwol_CUsersPaulKOneDriveDocumentsPLPyPLlibmapmini = internal unnamed_addr constant [54 x i8] c"C:\\Users\\PaulK\\OneDrive\\Documents\\PL\\PyPL\\lib\\map.mini"
@Character = constant { [3 x i64], [7 x ptr], [5 x ptr] } { [3 x i64] [i64 6681222582356018452, i64 4611686018427388091, i64 3], [7 x ptr] [ptr @subtype_test, ptr @Character_hashtbl, ptr @Character_offset_tbl, ptr @_data_size_Character, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [5 x ptr] [ptr @Character_field_byte, ptr @Character_B_byte_, ptr @Character_B_init_bytei8, ptr @Character_byte_, ptr @Character_init_bytei8] }
@StringIterator = constant { [3 x i64], [7 x ptr], [10 x ptr] } { [3 x i64] [i64 -7260570988945952630, i64 4611686018427388081, i64 7], [7 x ptr] [ptr @subtype_test, ptr @StringIterator_hashtbl, ptr @StringIterator_offset_tbl, ptr @_data_size_StringIterator, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [10 x ptr] [ptr @StringIterator_field_str, ptr @StringIterator_field_index, ptr @StringIterator_field_StringIterator_0, ptr @StringIterator_B_init_strString, ptr @StringIterator_B_next_, ptr @StringIterator_init_strString, ptr @StringIterator_next_, ptr @StringIterator_field_StringIterator_0, ptr @StringIterator_B_next_, ptr @StringIterator_next_] }
@Exception = constant { [3 x i64], [7 x ptr], [13 x ptr] } { [3 x i64] [i64 9027164862567808692, i64 4611686018427388091, i64 3], [7 x ptr] [ptr @subtype_test, ptr @Exception_hashtbl, ptr @Exception_offset_tbl, ptr @_data_size_Exception, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [13 x ptr] [ptr @Exception_field_line_number, ptr @Exception_field_file_name, ptr @Exception_field_message, ptr @Exception_B_init_messageString, ptr @Exception_B_init_, ptr @Exception_B_set_info_line_numberi32_file_nameString, ptr @Exception_B_report_, ptr @Exception_B_print_message_, ptr @Exception_init_messageString, ptr @Exception_init_, ptr @Exception_set_info_line_numberi32_file_nameString, ptr @Exception_report_, ptr @Exception_print_message_] }
@KeyNotFound_hashtbl = constant [4 x ptr] [ptr @Object, ptr @KeyNotFound, ptr @any_typ, ptr @Exception]
@KeyNotFound_offset_tbl = constant [4 x i32] [i32 36, i32 10, i32 10, i32 23]
@KeyNotFound = constant { [3 x i64], [7 x ptr], [26 x ptr] } { [3 x i64] [i64 2946564862774055400, i64 4611686018427388091, i64 3], [7 x ptr] [ptr @subtype_test, ptr @KeyNotFound_hashtbl, ptr @KeyNotFound_offset_tbl, ptr @_data_size_KeyNotFound, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [26 x ptr] [ptr @KeyNotFound_field_line_number, ptr @KeyNotFound_field_file_name, ptr @KeyNotFound_field_message, ptr @KeyNotFound_B_init_messageString, ptr @KeyNotFound_B_init_, ptr @KeyNotFound_B_set_info_line_numberi32_file_nameString, ptr @KeyNotFound_B_report_, ptr @KeyNotFound_B_print_message_, ptr @Exception_init_messageString, ptr @Exception_init_, ptr @Exception_set_info_line_numberi32_file_nameString, ptr @Exception_report_, ptr @Exception_print_message_, ptr @KeyNotFound_field_line_number, ptr @KeyNotFound_field_file_name, ptr @KeyNotFound_field_message, ptr @KeyNotFound_B_init_messageString, ptr @KeyNotFound_B_init_, ptr @KeyNotFound_B_set_info_line_numberi32_file_nameString, ptr @KeyNotFound_B_report_, ptr @KeyNotFound_B_print_message_, ptr @Exception_init_messageString, ptr @Exception_init_, ptr @Exception_set_info_line_numberi32_file_nameString, ptr @Exception_report_, ptr @Exception_print_message_] }
@Map_hashtbl = constant [8 x ptr] [ptr null, ptr null, ptr @Iterable, ptr @any_typ, ptr @Container, ptr @Map, ptr null, ptr @Object]
@Map_offset_tbl = constant [8 x i32] [i32 0, i32 0, i32 47, i32 10, i32 70, i32 10, i32 0, i32 70]
@HashMap_hashtbl = constant [8 x ptr] [ptr null, ptr null, ptr @Iterable, ptr @any_typ, ptr @Container, ptr @Map, ptr @HashMap, ptr @Object]
@HashMap_offset_tbl = constant [8 x i32] [i32 0, i32 0, i32 107, i32 10, i32 130, i32 47, i32 10, i32 130]
@KeyNotFound_field_line_number = internal constant { ptr, ptr } { ptr @KeyNotFound_getter_line_number, ptr @KeyNotFound_setter_line_number }
@KeyNotFound_field_file_name = internal constant { ptr, ptr } { ptr @KeyNotFound_getter_file_name, ptr @KeyNotFound_setter_file_name }
@KeyNotFound_field_message = internal constant { ptr, ptr } { ptr @KeyNotFound_getter_message, ptr @KeyNotFound_setter_message }
@_parameterization_Nil = linkonce_odr constant [2 x ptr] [ptr @nil_typ, ptr null]
@union_typ = constant { [3 x i64], [7 x ptr], [0 x ptr] } { [3 x i64] [i64 -7543233778997666740, i64 4611686018427388093, i64 3], [7 x ptr] [ptr @subtype_test, ptr @union_typ_hashtbl, ptr @union_typ_offset_tbl, ptr @_data_size_union_typ, ptr @_box_union_typ, ptr @_unbox_union_typ, ptr @_data_size_union_typ], [0 x ptr] undef }
@Container = constant { [3 x i64], [7 x ptr], [0 x ptr] } { [3 x i64] [i64 9056556090793359372, i64 4611686018427388081, i64 3], [7 x ptr] [ptr @subtype_test, ptr @Container_hashtbl, ptr @Container_offset_tbl, ptr @_data_size_Container, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [0 x ptr] undef }
@Iterator = constant { [3 x i64], [7 x ptr], [0 x ptr] } { [3 x i64] [i64 8673632051301757104, i64 4611686018427388349, i64 3], [7 x ptr] [ptr @subtype_test, ptr @Iterator_hashtbl, ptr @Iterator_offset_tbl, ptr @_data_size_Iterator, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [0 x ptr] undef }
@Iterable = constant { [3 x i64], [7 x ptr], [0 x ptr] } { [3 x i64] [i64 3037712219555723519, i64 4611686018427388477, i64 3], [7 x ptr] [ptr @subtype_test, ptr @Iterable_hashtbl, ptr @Iterable_offset_tbl, ptr @_data_size_Iterable, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [0 x ptr] undef }
@Map = constant { [3 x i64], [7 x ptr], [0 x ptr] } { [3 x i64] [i64 -5249855671126779970, i64 4611686018427388331, i64 7], [7 x ptr] [ptr @subtype_test, ptr @Map_hashtbl, ptr @Map_offset_tbl, ptr @_data_size_Map, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [0 x ptr] undef }
@HashMap = constant { [3 x i64], [7 x ptr], [0 x ptr] } { [3 x i64] [i64 -2849643283898152329, i64 4611686018427388331, i64 7], [7 x ptr] [ptr @subtype_test, ptr @HashMap_hashtbl, ptr @HashMap_offset_tbl, ptr @_data_size_HashMap, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [0 x ptr] undef }
@Entry_hashtbl = constant [4 x ptr] [ptr @Entry, ptr @Object, ptr @any_typ, ptr null]
@Entry_offset_tbl = constant [4 x i32] [i32 10, i32 25, i32 10, i32 0]
@Entry = constant { [3 x i64], [7 x ptr], [15 x ptr] } { [3 x i64] [i64 4015701072841558310, i64 4611686018427388181, i64 3], [7 x ptr] [ptr @subtype_test, ptr @Entry_hashtbl, ptr @Entry_offset_tbl, ptr @_data_size_Entry, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [15 x ptr] [ptr @Entry_field_Entry_0, ptr @Entry_field_Entry_1, ptr @Entry_field_primary_hash, ptr @Entry_field_key, ptr @Entry_field_value, ptr @Entry_B_init_keyK_valueV_primary_hashi32, ptr @Entry_B_key_, ptr @Entry_B_value_, ptr @Entry_B_primary_hash_, ptr @Entry_B_to_pair_, ptr @Entry_init_keyK_valueV_primary_hashi32, ptr @Entry_key_, ptr @Entry_value_, ptr @Entry_primary_hash_, ptr @Entry_to_pair_] }
@CuckooMap_hashtbl = constant [8 x ptr] [ptr null, ptr @CuckooMap, ptr @Iterable, ptr @any_typ, ptr @Container, ptr @Map, ptr @HashMap, ptr @Object]
@CuckooMap_offset_tbl = constant [8 x i32] [i32 0, i32 10, i32 259, i32 10, i32 282, i32 199, i32 79, i32 282]
@CuckooMapIterator_hashtbl = constant [8 x ptr] [ptr @CuckooMapIterator, ptr null, ptr @Container, ptr @Iterator, ptr @Object, ptr null, ptr @any_typ, ptr null]
@CuckooMapIterator_offset_tbl = constant [8 x i32] [i32 10, i32 0, i32 27, i32 24, i32 27, i32 0, i32 10, i32 0]
@CuckooMapIterator = constant { [3 x i64], [7 x ptr], [17 x ptr] } { [3 x i64] [i64 -1975748647346050920, i64 4611686018427388091, i64 7], [7 x ptr] [ptr @subtype_test, ptr @CuckooMapIterator_hashtbl, ptr @CuckooMapIterator_offset_tbl, ptr @_data_size_CuckooMapIterator, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [17 x ptr] [ptr @CuckooMapIterator_field_CuckooMapIterator_0, ptr @CuckooMapIterator_field_CuckooMapIterator_1, ptr @CuckooMapIterator_field_CuckooMapIterator_2, ptr @CuckooMapIterator_field_map_table1, ptr @CuckooMapIterator_field_map_table2, ptr @CuckooMapIterator_field_table_len, ptr @CuckooMapIterator_field_index, ptr @CuckooMapIterator_field_on_second, ptr @CuckooMapIterator_B_init_map_table1BufferEntryK._V_or_Nil_map_table2BufferEntryK._V_or_Nil_table_leni32, ptr @CuckooMapIterator_B_next_from_table_tableBufferEntryK._V_or_Nil, ptr @CuckooMapIterator_B_next_, ptr @CuckooMapIterator_init_map_table1BufferEntryK._V_or_Nil_map_table2BufferEntryK._V_or_Nil_table_leni32, ptr @CuckooMapIterator_next_from_table_tableBufferEntryK._V_or_Nil, ptr @CuckooMapIterator_next_, ptr @CuckooMapIterator_field_CuckooMapIterator_2, ptr @CuckooMapIterator_B_next_, ptr @CuckooMapIterator_next_] }
@Entry_field_primary_hash = internal constant { ptr, ptr } { ptr @Entry_getter_primary_hash, ptr @Entry_setter_primary_hash }
@Entry_field_key = internal constant { ptr, ptr } { ptr @Entry_getter_key, ptr @Entry_setter_key }
@Entry_field_value = internal constant { ptr, ptr } { ptr @Entry_getter_value, ptr @Entry_setter_value }
@CuckooMap_field_table1 = internal constant { ptr, ptr } { ptr @CuckooMap_getter_table1, ptr @CuckooMap_setter_table1 }
@CuckooMap_field_table2 = internal constant { ptr, ptr } { ptr @CuckooMap_getter_table2, ptr @CuckooMap_setter_table2 }
@CuckooMap_field_table_len = internal constant { ptr, ptr } { ptr @CuckooMap_getter_table_len, ptr @CuckooMap_setter_table_len }
@CuckooMap_field_size = internal constant { ptr, ptr } { ptr @CuckooMap_getter_size, ptr @CuckooMap_setter_size }
@CuckooMap_field_hasher = internal constant { ptr, ptr } { ptr @CuckooMap_getter_hasher, ptr @CuckooMap_setter_hasher }
@CuckooMap_field_eq = internal constant { ptr, ptr } { ptr @CuckooMap_getter_eq, ptr @CuckooMap_setter_eq }
@CuckooMapIterator_field_map_table1 = internal constant { ptr, ptr } { ptr @CuckooMapIterator_getter_map_table1, ptr @CuckooMapIterator_setter_map_table1 }
@CuckooMapIterator_field_map_table2 = internal constant { ptr, ptr } { ptr @CuckooMapIterator_getter_map_table2, ptr @CuckooMapIterator_setter_map_table2 }
@CuckooMapIterator_field_table_len = internal constant { ptr, ptr } { ptr @CuckooMapIterator_getter_table_len, ptr @CuckooMapIterator_setter_table_len }
@CuckooMapIterator_field_index = internal constant { ptr, ptr } { ptr @CuckooMapIterator_getter_index, ptr @CuckooMapIterator_setter_index }
@CuckooMapIterator_field_on_second = internal constant { ptr, ptr } { ptr @CuckooMapIterator_getter_on_second, ptr @CuckooMapIterator_setter_on_second }
@_parameterization_Pairi32._i1 = linkonce_odr constant [4 x ptr] [ptr @Pair, ptr @_parameterization_i32, ptr @_parameterization_i1, ptr null]
@_parameterization_i1 = linkonce_odr constant [2 x ptr] [ptr @bool_typ, ptr null]
@_parameterization_Pairi32._i32 = linkonce_odr constant [4 x ptr] [ptr @Pair, ptr @_parameterization_i32, ptr @_parameterization_i32, ptr null]
@_parameterization_i32 = linkonce_odr constant [2 x ptr] [ptr @i32_typ, ptr null]
@_parameterization_Bufferi8 = linkonce_odr constant [2 x ptr] [ptr @buffer_typ, ptr null]
@_parameterization_String = linkonce_odr constant [2 x ptr] [ptr @String, ptr null]
@bool_typ = constant { [3 x i64], [7 x ptr], [0 x ptr] } { [3 x i64] [i64 5801531371504802705, i64 4611686018427388081, i64 3], [7 x ptr] [ptr @subtype_test, ptr @bool_typ_hashtbl, ptr @bool_typ_offset_tbl, ptr @_data_size_bool_typ, ptr @_box_bool_typ, ptr @_unbox_bool_typ, ptr @_data_size_bool_typ], [0 x ptr] undef }
@i32_typ = constant { [3 x i64], [7 x ptr], [0 x ptr] } { [3 x i64] [i64 -2253724949814257982, i64 4611686018427388081, i64 3], [7 x ptr] [ptr @subtype_test, ptr @i32_typ_hashtbl, ptr @i32_typ_offset_tbl, ptr @_data_size_i32_typ, ptr @_box_i32_typ, ptr @_unbox_i32_typ, ptr @_data_size_i32_typ], [0 x ptr] undef }
@i64_typ = constant { [3 x i64], [7 x ptr], [0 x ptr] } { [3 x i64] [i64 -7469797244461771922, i64 4611686018427388157, i64 3], [7 x ptr] [ptr @subtype_test, ptr @i64_typ_hashtbl, ptr @i64_typ_offset_tbl, ptr @_data_size_i64_typ, ptr @_box_i64_typ, ptr @_unbox_i64_typ, ptr @_data_size_i64_typ], [0 x ptr] undef }
@nil_typ = constant { [3 x i64], [7 x ptr], [0 x ptr] } { [3 x i64] [i64 -5126806859456325683, i64 4611686018427388081, i64 1], [7 x ptr] [ptr @subtype_test, ptr @nil_typ_hashtbl, ptr @nil_typ_offset_tbl, ptr @_data_size_nil_typ, ptr @_box_nil_typ, ptr @_unbox_nil_typ, ptr @_data_size_nil_typ], [0 x ptr] undef }
@any_typ = constant { [3 x i64], [7 x ptr], [0 x ptr] } { [3 x i64] [i64 3084208142191802847, i64 4611686018427388073, i64 0], [7 x ptr] [ptr @subtype_test, ptr @any_typ_hashtbl, ptr @any_typ_offset_tbl, ptr @_data_size_any_typ, ptr @_box_Default, ptr @_unbox_Default, ptr @_data_size_any_typ], [0 x ptr] undef }
@function_typ = constant { [3 x i64], [7 x ptr], [0 x ptr] } { [3 x i64] [i64 7927147055246173914, i64 4611686018427388081, i64 3], [7 x ptr] [ptr @subtype_test, ptr @function_typ_hashtbl, ptr @function_typ_offset_tbl, ptr @_data_size_function_typ, ptr @_box_function_typ, ptr @_unbox_function_typ, ptr @_data_size_function_typ], [0 x ptr] undef }
@buffer_typ = constant { [3 x i64], [7 x ptr], [0 x ptr] } { [3 x i64] [i64 -318192747195410237, i64 4611686018427388091, i64 3], [7 x ptr] [ptr @subtype_test, ptr @buffer_typ_hashtbl, ptr @buffer_typ_offset_tbl, ptr @_data_size_buffer_typ, ptr @_box_buffer_typ, ptr @_unbox_buffer_typ, ptr @_data_size_buffer_typ], [0 x ptr] undef }
@Object = constant { [3 x i64], [7 x ptr], [0 x ptr] } { [3 x i64] [i64 3282773614056351330, i64 4611686018427388081, i64 1], [7 x ptr] [ptr @subtype_test, ptr @Object_hashtbl, ptr @Object_offset_tbl, ptr @_data_size_Object, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [0 x ptr] undef }
@Pair = constant { [3 x i64], [7 x ptr], [10 x ptr] } { [3 x i64] [i64 9197944775169318296, i64 4611686018427388081, i64 3], [7 x ptr] [ptr @subtype_test, ptr @Pair_hashtbl, ptr @Pair_offset_tbl, ptr @_data_size_Pair, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [10 x ptr] [ptr @Pair_field_Pair_0, ptr @Pair_field_Pair_1, ptr @Pair_field_first, ptr @Pair_field_second, ptr @Pair_B_init_firstT_secondU, ptr @Pair_B_first_, ptr @Pair_B_second_, ptr @Pair_init_firstT_secondU, ptr @Pair_first_, ptr @Pair_second_] }
@String = constant { [3 x i64], [7 x ptr], [79 x ptr] } { [3 x i64] [i64 6499063144389013426, i64 4611686018427388601, i64 7], [7 x ptr] [ptr @subtype_test, ptr @String_hashtbl, ptr @String_offset_tbl, ptr @_data_size_String, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [79 x ptr] [ptr @String_field_bytes, ptr @String_field_length, ptr @String_field_capacity, ptr @String_field_String_0, ptr @String_B__Self_from_c_string_c_stringBufferi8, ptr @String_B_init_, ptr @String_B_init_bytesBufferi8_lengthi32_capacityi32, ptr @String_B_length_, ptr @String_B_capacity_, ptr @String_B_bytes_, ptr @String_B_c_string_, ptr @String_B_append_xi8, ptr @String_B_extend_strString, ptr @String_B__index_xi32, ptr @String_B__EQ_otherString, ptr @String_B_pop_, ptr @String_B_copy_, ptr @String_B_iterator_, ptr @String_B_each_fFunctionT_to_Nothing, ptr @String_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @String_B_all_fFunctionT_to_i1, ptr @String_B_any_fFunctionT_to_i1, ptr @String_B_map_fFunctionT_to_U, ptr @String_B_filter_fFunctionT_to_i1, ptr @String_B_chain_otherIterableT, ptr @String_B_interleave_otherIterableT, ptr @String_B_zip_otherIterableU, ptr @String_B_product_otherIterableU, ptr @String_B_repr_, ptr @String__Self_from_c_string_c_stringBufferi8, ptr @String_init_, ptr @String_init_bytesBufferi8_lengthi32_capacityi32, ptr @String_length_, ptr @String_capacity_, ptr @String_bytes_, ptr @String_c_string_, ptr @String_append_xi8, ptr @String_extend_strString, ptr @String__index_xi32, ptr @String__EQ_otherString, ptr @String_pop_, ptr @String_copy_, ptr @String_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU, ptr @String_repr_, ptr @String_field_String_0, ptr @String_B_iterator_, ptr @String_B_each_fFunctionT_to_Nothing, ptr @String_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @String_B_all_fFunctionT_to_i1, ptr @String_B_any_fFunctionT_to_i1, ptr @String_B_map_fFunctionT_to_U, ptr @String_B_filter_fFunctionT_to_i1, ptr @String_B_chain_otherIterableT, ptr @String_B_interleave_otherIterableT, ptr @String_B_zip_otherIterableU, ptr @String_B_product_otherIterableU, ptr @String_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU, ptr @String_B_repr_, ptr @String_repr_] }
@CuckooMap = constant { [3 x i64], [7 x ptr], [272 x ptr] } { [3 x i64] [i64 3547150501766965522, i64 4611686018427388331, i64 7], [7 x ptr] [ptr @subtype_test, ptr @CuckooMap_hashtbl, ptr @CuckooMap_offset_tbl, ptr @_data_size_CuckooMap, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [272 x ptr] [ptr @CuckooMap_field_CuckooMap_0, ptr @CuckooMap_field_CuckooMap_1, ptr @CuckooMap_field_CuckooMap_6, ptr @CuckooMap_field_table1, ptr @CuckooMap_field_table2, ptr @CuckooMap_field_table_len, ptr @CuckooMap_field_size, ptr @CuckooMap_field_hasher, ptr @CuckooMap_field_eq, ptr @CuckooMap_B__Self_max_displacements_, ptr @CuckooMap_B_init_hasherFunctionK_to_i32_eqFunctionK._K_to_i1, ptr @CuckooMap_B_hash1_keyK, ptr @CuckooMap_B_hash2_from_primary_primary_hashi32, ptr @CuckooMap_B_index1_primary_hashi32, ptr @CuckooMap_B_index2_primary_hashi32, ptr @CuckooMap_B_place_entry_or_get_failed_entry_to_insertEntryK._V, ptr @CuckooMap_B_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32, ptr @CuckooMap_B_resize_, ptr @CuckooMap_B_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil, ptr @CuckooMap_B_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil, ptr @CuckooMap_B_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil, ptr @CuckooMap_B_insert_keyK_valueV, ptr @CuckooMap_B_size_, ptr @CuckooMap_B_get_keyK, ptr @CuckooMap_B__set_index_keyK_valueV, ptr @CuckooMap_B_remove_keyK, ptr @CuckooMap_B_clear_, ptr @CuckooMap_B__index_keyK, ptr @CuckooMap_B_iterator_, ptr @CuckooMap_B_each_fFunctionT_to_Nothing, ptr @CuckooMap_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @CuckooMap_B_all_fFunctionT_to_i1, ptr @CuckooMap_B_any_fFunctionT_to_i1, ptr @CuckooMap_B_map_fFunctionT_to_U, ptr @CuckooMap_B_filter_fFunctionT_to_i1, ptr @CuckooMap_B_chain_otherIterableT, ptr @CuckooMap_B_interleave_otherIterableT, ptr @CuckooMap_B_zip_otherIterableU, ptr @CuckooMap_B_product_otherIterableU, ptr @CuckooMap__Self_max_displacements_, ptr @CuckooMap_init_hasherFunctionK_to_i32_eqFunctionK._K_to_i1, ptr @CuckooMap_hash1_keyK, ptr @CuckooMap_hash2_from_primary_primary_hashi32, ptr @CuckooMap_index1_primary_hashi32, ptr @CuckooMap_index2_primary_hashi32, ptr @CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V, ptr @CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32, ptr @CuckooMap_resize_, ptr @CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil, ptr @CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil, ptr @CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil, ptr @CuckooMap_insert_keyK_valueV, ptr @CuckooMap_size_, ptr @CuckooMap_get_keyK, ptr @CuckooMap__set_index_keyK_valueV, ptr @CuckooMap_remove_keyK, ptr @CuckooMap_clear_, ptr @Map__index_keyK, ptr @CuckooMap_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU, ptr @CuckooMap_field_CuckooMap_0, ptr @CuckooMap_field_CuckooMap_1, ptr @CuckooMap_field_CuckooMap_6, ptr @CuckooMap_B_size_, ptr @CuckooMap_B_get_keyK, ptr @CuckooMap_B__set_index_keyK_valueV, ptr @CuckooMap_B_remove_keyK, ptr @CuckooMap_B_clear_, ptr @CuckooMap_B__index_keyK, ptr @CuckooMap_B_iterator_, ptr @CuckooMap_B_each_fFunctionT_to_Nothing, ptr @CuckooMap_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @CuckooMap_B_all_fFunctionT_to_i1, ptr @CuckooMap_B_any_fFunctionT_to_i1, ptr @CuckooMap_B_map_fFunctionT_to_U, ptr @CuckooMap_B_filter_fFunctionT_to_i1, ptr @CuckooMap_B_chain_otherIterableT, ptr @CuckooMap_B_interleave_otherIterableT, ptr @CuckooMap_B_zip_otherIterableU, ptr @CuckooMap_B_product_otherIterableU, ptr @CuckooMap_size_, ptr @CuckooMap_get_keyK, ptr @CuckooMap__set_index_keyK_valueV, ptr @CuckooMap_remove_keyK, ptr @CuckooMap_clear_, ptr @Map__index_keyK, ptr @CuckooMap_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU, ptr @CuckooMap_field_CuckooMap_0, ptr @CuckooMap_field_CuckooMap_1, ptr @CuckooMap_field_CuckooMap_6, ptr @CuckooMap_B_size_, ptr @CuckooMap_B_get_keyK, ptr @CuckooMap_B__set_index_keyK_valueV, ptr @CuckooMap_B_remove_keyK, ptr @CuckooMap_B_clear_, ptr @CuckooMap_B__index_keyK, ptr @CuckooMap_B_iterator_, ptr @CuckooMap_B_each_fFunctionT_to_Nothing, ptr @CuckooMap_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @CuckooMap_B_all_fFunctionT_to_i1, ptr @CuckooMap_B_any_fFunctionT_to_i1, ptr @CuckooMap_B_map_fFunctionT_to_U, ptr @CuckooMap_B_filter_fFunctionT_to_i1, ptr @CuckooMap_B_chain_otherIterableT, ptr @CuckooMap_B_interleave_otherIterableT, ptr @CuckooMap_B_zip_otherIterableU, ptr @CuckooMap_B_product_otherIterableU, ptr @CuckooMap_size_, ptr @CuckooMap_get_keyK, ptr @CuckooMap__set_index_keyK_valueV, ptr @CuckooMap_remove_keyK, ptr @CuckooMap_clear_, ptr @Map__index_keyK, ptr @CuckooMap_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU, ptr @CuckooMap_field_CuckooMap_6, ptr @CuckooMap_B_iterator_, ptr @CuckooMap_B_each_fFunctionT_to_Nothing, ptr @CuckooMap_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @CuckooMap_B_all_fFunctionT_to_i1, ptr @CuckooMap_B_any_fFunctionT_to_i1, ptr @CuckooMap_B_map_fFunctionT_to_U, ptr @CuckooMap_B_filter_fFunctionT_to_i1, ptr @CuckooMap_B_chain_otherIterableT, ptr @CuckooMap_B_interleave_otherIterableT, ptr @CuckooMap_B_zip_otherIterableU, ptr @CuckooMap_B_product_otherIterableU, ptr @CuckooMap_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU, ptr @CuckooMap_field_CuckooMap_6, ptr @CuckooMap_B_iterator_, ptr @CuckooMap_B_each_fFunctionT_to_Nothing, ptr @CuckooMap_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @CuckooMap_B_all_fFunctionT_to_i1, ptr @CuckooMap_B_any_fFunctionT_to_i1, ptr @CuckooMap_B_map_fFunctionT_to_U, ptr @CuckooMap_B_filter_fFunctionT_to_i1, ptr @CuckooMap_B_chain_otherIterableT, ptr @CuckooMap_B_interleave_otherIterableT, ptr @CuckooMap_B_zip_otherIterableU, ptr @CuckooMap_B_product_otherIterableU, ptr @CuckooMap_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU, ptr @CuckooMap_field_CuckooMap_0, ptr @CuckooMap_field_CuckooMap_1, ptr @CuckooMap_field_CuckooMap_6, ptr @CuckooMap_B_size_, ptr @CuckooMap_B_get_keyK, ptr @CuckooMap_B__set_index_keyK_valueV, ptr @CuckooMap_B_remove_keyK, ptr @CuckooMap_B_clear_, ptr @CuckooMap_B__index_keyK, ptr @CuckooMap_B_iterator_, ptr @CuckooMap_B_each_fFunctionT_to_Nothing, ptr @CuckooMap_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @CuckooMap_B_all_fFunctionT_to_i1, ptr @CuckooMap_B_any_fFunctionT_to_i1, ptr @CuckooMap_B_map_fFunctionT_to_U, ptr @CuckooMap_B_filter_fFunctionT_to_i1, ptr @CuckooMap_B_chain_otherIterableT, ptr @CuckooMap_B_interleave_otherIterableT, ptr @CuckooMap_B_zip_otherIterableU, ptr @CuckooMap_B_product_otherIterableU, ptr @CuckooMap_size_, ptr @CuckooMap_get_keyK, ptr @CuckooMap__set_index_keyK_valueV, ptr @CuckooMap_remove_keyK, ptr @CuckooMap_clear_, ptr @Map__index_keyK, ptr @CuckooMap_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU, ptr @CuckooMap_field_CuckooMap_6, ptr @CuckooMap_B_iterator_, ptr @CuckooMap_B_each_fFunctionT_to_Nothing, ptr @CuckooMap_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @CuckooMap_B_all_fFunctionT_to_i1, ptr @CuckooMap_B_any_fFunctionT_to_i1, ptr @CuckooMap_B_map_fFunctionT_to_U, ptr @CuckooMap_B_filter_fFunctionT_to_i1, ptr @CuckooMap_B_chain_otherIterableT, ptr @CuckooMap_B_interleave_otherIterableT, ptr @CuckooMap_B_zip_otherIterableU, ptr @CuckooMap_B_product_otherIterableU, ptr @CuckooMap_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU, ptr @CuckooMap_field_CuckooMap_6, ptr @CuckooMap_B_iterator_, ptr @CuckooMap_B_each_fFunctionT_to_Nothing, ptr @CuckooMap_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @CuckooMap_B_all_fFunctionT_to_i1, ptr @CuckooMap_B_any_fFunctionT_to_i1, ptr @CuckooMap_B_map_fFunctionT_to_U, ptr @CuckooMap_B_filter_fFunctionT_to_i1, ptr @CuckooMap_B_chain_otherIterableT, ptr @CuckooMap_B_interleave_otherIterableT, ptr @CuckooMap_B_zip_otherIterableU, ptr @CuckooMap_B_product_otherIterableU, ptr @CuckooMap_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU] }
@IO = constant { [3 x i64], [7 x ptr], [10 x ptr] } { [3 x i64] [i64 5359822646784595218, i64 4611686018427388247, i64 3], [7 x ptr] [ptr @subtype_test, ptr @IO_hashtbl, ptr @IO_offset_tbl, ptr @_data_size_IO, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [10 x ptr] [ptr @IO_B__Self_print_xNil__Self_print_xi8__Self_print_xi1__Self_print_xf64__Self_print_xRepresentable__Self_print_xi32__Self_print_xString__Self_print_xi64__Self_print_xCharacter, ptr @IO__Self_print_xNil, ptr @IO__Self_print_xi8, ptr @IO__Self_print_xi1, ptr @IO__Self_print_xf64, ptr @IO__Self_print_xRepresentable, ptr @IO__Self_print_xi32, ptr @IO__Self_print_xString, ptr @IO__Self_print_xi64, ptr @IO__Self_print_xCharacter] }
@Array = constant { [3 x i64], [7 x ptr], [83 x ptr] } { [3 x i64] [i64 -5261542750394134544, i64 4611686018427388331, i64 7], [7 x ptr] [ptr @subtype_test, ptr @Array_hashtbl, ptr @Array_offset_tbl, ptr @_data_size_Array, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [83 x ptr] [ptr @Array_field_Array_0, ptr @Array_field_buffer, ptr @Array_field_length, ptr @Array_field_capacity, ptr @Array_B__Self_from_iterable_iterableIterableT, ptr @Array_B_init_, ptr @Array_B_init_capacityi32, ptr @Array_B_init_lengthi32_capacityi32, ptr @Array_B_init_bufferBufferT_lengthi32_capacityi32, ptr @Array_B_length_, ptr @Array_B_capacity_, ptr @Array_B_append_xT, ptr @Array_B_extend_otherArrayT, ptr @Array_B_reserve_new_capacityi32, ptr @Array_B__index_xi32, ptr @Array_B__set_index_xi32_valueT, ptr @Array_B_throw_oob_xi32, ptr @Array_B_unchecked_index_xi32, ptr @Array_B_unchecked_insert_xi32_valueT, ptr @Array_B_iterator_, ptr @Array_B_each_fFunctionT_to_Nothing, ptr @Array_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Array_B_all_fFunctionT_to_i1, ptr @Array_B_any_fFunctionT_to_i1, ptr @Array_B_map_fFunctionT_to_U, ptr @Array_B_filter_fFunctionT_to_i1, ptr @Array_B_chain_otherIterableT, ptr @Array_B_interleave_otherIterableT, ptr @Array_B_zip_otherIterableU, ptr @Array_B_product_otherIterableU, ptr @Array_B_repr_, ptr @Array__Self_from_iterable_iterableIterableT, ptr @Array_init_, ptr @Array_init_capacityi32, ptr @Array_init_lengthi32_capacityi32, ptr @Array_init_bufferBufferT_lengthi32_capacityi32, ptr @Array_length_, ptr @Array_capacity_, ptr @Array_append_xT, ptr @Array_extend_otherArrayT, ptr @Array_reserve_new_capacityi32, ptr @Array__index_xi32, ptr @Array__set_index_xi32_valueT, ptr @Array_throw_oob_xi32, ptr @Array_unchecked_index_xi32, ptr @Array_unchecked_insert_xi32_valueT, ptr @Array_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU, ptr @Array_repr_, ptr @Array_field_Array_0, ptr @Array_B_iterator_, ptr @Array_B_each_fFunctionT_to_Nothing, ptr @Array_B_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Array_B_all_fFunctionT_to_i1, ptr @Array_B_any_fFunctionT_to_i1, ptr @Array_B_map_fFunctionT_to_U, ptr @Array_B_filter_fFunctionT_to_i1, ptr @Array_B_chain_otherIterableT, ptr @Array_B_interleave_otherIterableT, ptr @Array_B_zip_otherIterableU, ptr @Array_B_product_otherIterableU, ptr @Array_iterator_, ptr @Iterable_each_fFunctionT_to_Nothing, ptr @Iterable_reduce_accumulatorT_fFunctionT._T_to_T, ptr @Iterable_all_fFunctionT_to_i1, ptr @Iterable_any_fFunctionT_to_i1, ptr @Iterable_map_fFunctionT_to_U, ptr @Iterable_filter_fFunctionT_to_i1, ptr @Iterable_chain_otherIterableT, ptr @Iterable_interleave_otherIterableT, ptr @Iterable_zip_otherIterableU, ptr @Iterable_product_otherIterableU, ptr @Array_B_repr_, ptr @Array_repr_] }
@PRNG_hashtbl = constant [4 x ptr] [ptr @Object, ptr @any_typ, ptr @PRNG, ptr null]
@PRNG_offset_tbl = constant [4 x i32] [i32 15, i32 10, i32 10, i32 0]
@PRNG = constant { [3 x i64], [7 x ptr], [5 x ptr] } { [3 x i64] [i64 -4401938362882229211, i64 4611686018427388081, i64 3], [7 x ptr] [ptr @subtype_test, ptr @PRNG_hashtbl, ptr @PRNG_offset_tbl, ptr @_data_size_PRNG, ptr @_box_Default, ptr @_unbox_Default, ptr @_size_Default], [5 x ptr] [ptr @PRNG_field_seed, ptr @PRNG_B_init_initial_seedi32, ptr @PRNG_B_next_, ptr @PRNG_init_initial_seedi32, ptr @PRNG_next_] }

; Function Attrs: mustprogress nofree norecurse nosync nounwind speculatable willreturn memory(argmem: read)
define i1 @subtype_test(i64 %tbl_size, i64 %hash_coef, i64 %cand_id, i64 %candidate, ptr nocapture nofree readonly %supertype_tbl) #0 {
  %product.i = mul i64 %cand_id, %hash_coef
  %shifted.i = lshr i64 %product.i, 32
  %xored.i = xor i64 %shifted.i, %product.i
  %hash.i = and i64 %xored.i, %tbl_size
  %gep = getelementptr i64, ptr %supertype_tbl, i64 %hash.i
  %stored_val = load i64, ptr %gep, align 4
  %eq = icmp eq i64 %stored_val, %candidate
  ret i1 %eq
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_PRNG(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 4, i64 4 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, i160 } @_box_Default(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(28) %fat_ptr, ptr nocapture nofree readnone %parameterization) #2 {
  %vptr = load ptr, ptr %fat_ptr, align 8
  %1 = insertvalue { ptr, i160 } undef, ptr %vptr, 0
  %2 = getelementptr inbounds i8, ptr %fat_ptr, i64 8
  %3 = load i160, ptr %2, align 8
  %4 = insertvalue { ptr, i160 } %1, i160 %3, 1
  ret { ptr, i160 } %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @_unbox_Default({ ptr, i160 } %fat_ptr, ptr nocapture nofree readnone %parameterization, ptr nocapture nofree noundef nonnull writeonly align 8 dereferenceable(28) %destination) #3 {
  %vptr = extractvalue { ptr, i160 } %fat_ptr, 0
  %data = extractvalue { ptr, i160 } %fat_ptr, 1
  %dest_data = getelementptr inbounds i8, ptr %destination, i64 8
  store ptr %vptr, ptr %destination, align 8
  store i160 %data, ptr %dest_data, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_size_Default(ptr nocapture nofree readnone %parameterization) #1 {
  ret { i64, i64 } { i64 32, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @PRNG_B_init_initial_seedi32({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 104
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @PRNG_B_next_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 112
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @PRNG_init_initial_seedi32({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, i32 %3) #5 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !1
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !1
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !1
  %product.i.i.i = mul i64 %hash_coef.i.i, -4401938362882229211
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !1
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 40, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract, i64 %6
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr i8, ptr %8, i64 8
  %10 = load ptr, ptr %9, align 8
  %. = call i32 @llvm.smax.i32(i32 %3, i32 noundef 1) #38
  call void %10(ptr %.fca.1.extract, i32 %.) #39
  ret void
}

; Function Attrs: mustprogress nounwind willreturn
define i32 @PRNG_next_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #6 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !4
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !4
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !4
  %product.i.i.i = mul i64 %hash_coef.i.i, -4401938362882229211
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !4
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 40, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract, i64 %5
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr %7, align 8
  %9 = call i32 %8(ptr %.fca.1.extract) #40
  %10 = mul i32 %9, 1103515245
  %11 = add i32 %10, 12345
  %12 = and i32 %11, 2147483647
  %13 = call ptr @llvm.invariant.start.p0(i64 noundef 40, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %14 = getelementptr i8, ptr %7, i64 8
  %15 = load ptr, ptr %14, align 8
  call void %15(ptr %.fca.1.extract, i32 %12) #39
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 40, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %17 = load ptr, ptr %6, align 8
  %18 = load ptr, ptr %17, align 8
  %19 = call i32 %18(ptr %.fca.1.extract) #40
  ret i32 %19
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @set_offset(ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %fat_ptr, ptr nocapture nofree noundef nonnull readonly align 4 dereferenceable(8) %id_ptr) local_unnamed_addr #4 {
  %vptr = load ptr, ptr %fat_ptr, align 8
  %id.i = load i64, ptr %id_ptr, align 4
  %hash_coef_ptr.i = getelementptr i8, ptr %vptr, i64 8
  %tbl_size_ptr.i = getelementptr i8, ptr %vptr, i64 16
  %offset_tbl_ptr.i = getelementptr i8, ptr %vptr, i64 40
  %hash_coef.i = load i64, ptr %hash_coef_ptr.i, align 4
  %tbl_size.i = load i64, ptr %tbl_size_ptr.i, align 4
  %offset_tbl.i = load ptr, ptr %offset_tbl_ptr.i, align 8
  %product.i.i = mul i64 %hash_coef.i, %id.i
  %shifted.i.i = lshr i64 %product.i.i, 32
  %xored.i.i = xor i64 %shifted.i.i, %product.i.i
  %hash.i.i = and i64 %xored.i.i, %tbl_size.i
  %offset_ptr.i = getelementptr i32, ptr %offset_tbl.i, i64 %hash.i.i
  %offset.i = load i32, ptr %offset_ptr.i, align 4
  %destination = getelementptr i8, ptr %fat_ptr, i64 24
  store i32 %offset.i, ptr %destination, align 8
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare ptr @llvm.invariant.start.p0(i64 immarg, ptr nocapture) #7

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none)
define i32 @get_offset(ptr nocapture nofree readonly align 8 %vptr, ptr nocapture nofree noundef nonnull readonly align 4 dereferenceable(8) %id_ptr) local_unnamed_addr #8 {
  %id = load i64, ptr %id_ptr, align 4
  %hash_coef_ptr = getelementptr i8, ptr %vptr, i64 8
  %tbl_size_ptr = getelementptr i8, ptr %vptr, i64 16
  %offset_tbl_ptr = getelementptr i8, ptr %vptr, i64 40
  %hash_coef = load i64, ptr %hash_coef_ptr, align 8
  %tbl_size = load i64, ptr %tbl_size_ptr, align 8
  %offset_tbl = load ptr, ptr %offset_tbl_ptr, align 8
  %product.i = mul i64 %hash_coef, %id
  %shifted.i = lshr i64 %product.i, 32
  %xored.i = xor i64 %shifted.i, %product.i
  %hash.i = and i64 %xored.i, %tbl_size
  %offset_ptr = getelementptr i32, ptr %offset_tbl, i64 %hash.i
  %offset = load i32, ptr %offset_ptr, align 4
  ret i32 %offset
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define i64 @hash_to_index(i64 %tbl_size, i64 %hash_coef, i64 %cand_id) local_unnamed_addr #1 {
  %product = mul i64 %cand_id, %hash_coef
  %shifted = lshr i64 %product, 32
  %xored = xor i64 %shifted, %product
  %hash = and i64 %xored, %tbl_size
  ret i64 %hash
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #9

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define i32 @PRNG_getter_seed(ptr nocapture nofree noundef nonnull readonly align 4 dereferenceable(4) %0) #2 {
  %2 = load i32, ptr %0, align 4
  ret i32 %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @PRNG_setter_seed(ptr nocapture nofree noundef nonnull writeonly align 4 dereferenceable(4) %0, i32 %1) #3 {
  store i32 %1, ptr %0, align 4
  ret void
}

define i1 @zaxrucnnxg(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1, { ptr, i160 } %2) #10 {
  %.fca.1.extract3 = extractvalue { ptr, i160 } %1, 1
  %.sroa.15.8.extract.trunc = trunc i160 %.fca.1.extract3 to i32
  %.fca.1.extract = extractvalue { ptr, i160 } %2, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %4 = tail call i1 %0(i32 %.sroa.15.8.extract.trunc, i32 %.sroa.1.8.extract.trunc)
  ret i1 %4
}

define i32 @hnjsjisnil(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1) #10 {
  %.fca.1.extract = extractvalue { ptr, i160 } %1, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %3 = tail call i32 %0(i32 %.sroa.1.8.extract.trunc)
  ret i32 %3
}

define i1 @tairsijaax(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1, { ptr, i160 } %2) #10 {
  %.fca.1.extract3 = extractvalue { ptr, i160 } %1, 1
  %.sroa.15.8.extract.trunc = trunc i160 %.fca.1.extract3 to i32
  %.fca.1.extract = extractvalue { ptr, i160 } %2, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %4 = tail call i1 %0(i32 %.sroa.15.8.extract.trunc, i32 %.sroa.1.8.extract.trunc)
  ret i1 %4
}

define i32 @szqiccmpty(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1) #10 {
  %.fca.1.extract = extractvalue { ptr, i160 } %1, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %3 = tail call i32 %0(i32 %.sroa.1.8.extract.trunc)
  ret i32 %3
}

define i1 @hjevcjjaie(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1, { ptr, i160 } %2) #10 {
  %.fca.1.extract3 = extractvalue { ptr, i160 } %1, 1
  %.sroa.15.8.extract.trunc = trunc i160 %.fca.1.extract3 to i32
  %.fca.1.extract = extractvalue { ptr, i160 } %2, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %4 = tail call i1 %0(i32 %.sroa.15.8.extract.trunc, i32 %.sroa.1.8.extract.trunc)
  ret i1 %4
}

define i32 @hznlcnrizt(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1) #10 {
  %.fca.1.extract = extractvalue { ptr, i160 } %1, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %3 = tail call i32 %0(i32 %.sroa.1.8.extract.trunc)
  ret i32 %3
}

define i1 @saopqjqbse(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1, { ptr, i160 } %2) #10 {
  %.fca.1.extract3 = extractvalue { ptr, i160 } %1, 1
  %.sroa.15.8.extract.trunc = trunc i160 %.fca.1.extract3 to i32
  %.fca.1.extract = extractvalue { ptr, i160 } %2, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %4 = tail call i1 %0(i32 %.sroa.15.8.extract.trunc, i32 %.sroa.1.8.extract.trunc)
  ret i1 %4
}

define i32 @euzwsrfdqb(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1) #10 {
  %.fca.1.extract = extractvalue { ptr, i160 } %1, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %3 = tail call i32 %0(i32 %.sroa.1.8.extract.trunc)
  ret i32 %3
}

define i1 @dpmhvdztoi(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1, { ptr, i160 } %2) #10 {
  %.fca.1.extract3 = extractvalue { ptr, i160 } %1, 1
  %.sroa.15.8.extract.trunc = trunc i160 %.fca.1.extract3 to i32
  %.fca.1.extract = extractvalue { ptr, i160 } %2, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %4 = tail call i1 %0(i32 %.sroa.15.8.extract.trunc, i32 %.sroa.1.8.extract.trunc)
  ret i1 %4
}

define i32 @smmvirnftz(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1) #10 {
  %.fca.1.extract = extractvalue { ptr, i160 } %1, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %3 = tail call i32 %0(i32 %.sroa.1.8.extract.trunc)
  ret i32 %3
}

define i1 @qchnrssnvn(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1, { ptr, i160 } %2) #10 {
  %.fca.1.extract3 = extractvalue { ptr, i160 } %1, 1
  %.sroa.15.8.extract.trunc = trunc i160 %.fca.1.extract3 to i32
  %.fca.1.extract = extractvalue { ptr, i160 } %2, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %4 = tail call i1 %0(i32 %.sroa.15.8.extract.trunc, i32 %.sroa.1.8.extract.trunc)
  ret i1 %4
}

define i32 @mvogsyztbq(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1) #10 {
  %.fca.1.extract = extractvalue { ptr, i160 } %1, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %3 = tail call i32 %0(i32 %.sroa.1.8.extract.trunc)
  ret i32 %3
}

define i1 @peclnbhgie(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1, { ptr, i160 } %2) #10 {
  %.fca.1.extract3 = extractvalue { ptr, i160 } %1, 1
  %.sroa.15.8.extract.trunc = trunc i160 %.fca.1.extract3 to i32
  %.fca.1.extract = extractvalue { ptr, i160 } %2, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %4 = tail call i1 %0(i32 %.sroa.15.8.extract.trunc, i32 %.sroa.1.8.extract.trunc)
  ret i1 %4
}

define i32 @uixwpatxai(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1) #10 {
  %.fca.1.extract = extractvalue { ptr, i160 } %1, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %3 = tail call i32 %0(i32 %.sroa.1.8.extract.trunc)
  ret i32 %3
}

define i1 @mukskakzok(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1, { ptr, i160 } %2) #10 {
  %.fca.1.extract3 = extractvalue { ptr, i160 } %1, 1
  %.sroa.15.8.extract.trunc = trunc i160 %.fca.1.extract3 to i32
  %.fca.1.extract = extractvalue { ptr, i160 } %2, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %4 = tail call i1 %0(i32 %.sroa.15.8.extract.trunc, i32 %.sroa.1.8.extract.trunc)
  ret i1 %4
}

define i32 @ehiwfuzyge(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1) #10 {
  %.fca.1.extract = extractvalue { ptr, i160 } %1, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %3 = tail call i32 %0(i32 %.sroa.1.8.extract.trunc)
  ret i32 %3
}

define i1 @rhouwbwlus(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1, { ptr, i160 } %2) #10 {
  %.fca.1.extract3 = extractvalue { ptr, i160 } %1, 1
  %.sroa.15.8.extract.trunc = trunc i160 %.fca.1.extract3 to i32
  %.fca.1.extract = extractvalue { ptr, i160 } %2, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %4 = tail call i1 %0(i32 %.sroa.15.8.extract.trunc, i32 %.sroa.1.8.extract.trunc)
  ret i1 %4
}

define i32 @ahwhwlsikh(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1) #10 {
  %.fca.1.extract = extractvalue { ptr, i160 } %1, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %3 = tail call i32 %0(i32 %.sroa.1.8.extract.trunc)
  ret i32 %3
}

define i1 @awrddwmptn(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1, { ptr, i160 } %2) #10 {
  %.fca.1.extract3 = extractvalue { ptr, i160 } %1, 1
  %.sroa.15.8.extract.trunc = trunc i160 %.fca.1.extract3 to i32
  %.fca.1.extract = extractvalue { ptr, i160 } %2, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %4 = tail call i1 %0(i32 %.sroa.15.8.extract.trunc, i32 %.sroa.1.8.extract.trunc)
  ret i1 %4
}

define i32 @rbttktqtkg(ptr nest nocapture nofree noundef nonnull readonly %0, { ptr, i160 } %1) #10 {
  %.fca.1.extract = extractvalue { ptr, i160 } %1, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %3 = tail call i32 %0(i32 %.sroa.1.8.extract.trunc)
  ret i32 %3
}

; Function Attrs: nounwind
define void @print_benchmark_result({ ptr, ptr, ptr, i32 } %0, i32 %1, i64 %2) local_unnamed_addr #11 {
  %result.i.i339.h2s347 = alloca [4 x i8], align 4
  store i32 0, ptr %result.i.i339.h2s347, align 4
  %result.i.i320.h2s349 = alloca [16 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %result.i.i320.h2s349, i8 0, i64 16, i1 false)
  %result.i.i301.h2s351 = alloca [4 x i8], align 4
  store i32 0, ptr %result.i.i301.h2s351, align 4
  %result.i.i282.h2s353 = alloca [15 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(15) %result.i.i282.h2s353, i8 0, i64 15, i1 false)
  %result.i.i268.h2s355 = alloca [15 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(15) %result.i.i268.h2s355, i8 0, i64 15, i1 false)
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !7
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !7
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !7
  %product.i.i.i = mul i64 %hash_coef.i.i, 6499063144389013426
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !7
  %4 = insertvalue { ptr, i160 } undef, ptr %.fca.0.extract, 0
  %5 = ptrtoint ptr %.fca.1.extract to i64
  %6 = ptrtoint ptr %.fca.2.extract to i64
  %.sroa.6.8.insert.ext = zext i32 %offset.i.i to i160
  %.sroa.6.8.insert.shift = shl nuw i160 %.sroa.6.8.insert.ext, 128
  %.sroa.5.8.insert.ext = zext i64 %6 to i160
  %.sroa.5.8.insert.shift = shl nuw nsw i160 %.sroa.5.8.insert.ext, 64
  %.sroa.5.8.insert.insert = or disjoint i160 %.sroa.6.8.insert.shift, %.sroa.5.8.insert.shift
  %.sroa.3.8.insert.ext119 = zext i64 %5 to i160
  %.sroa.3.8.insert.insert120 = or disjoint i160 %.sroa.5.8.insert.insert, %.sroa.3.8.insert.ext119
  %7 = insertvalue { ptr, i160 } %4, i160 %.sroa.3.8.insert.insert120, 1
  %8 = alloca [1 x ptr], align 8
  store ptr @_parameterization_String, ptr %8, align 8
  %9 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %8) #37
  %10 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO) #37
  %11 = icmp eq ptr %.fca.0.extract, @i8_typ
  br i1 %11, label %._crit_edge.lr.ph.i, label %12

12:                                               ; preds = %3
  %13 = icmp eq ptr %.fca.0.extract, @bool_typ
  br i1 %13, label %._crit_edge.lr.ph.i, label %14

14:                                               ; preds = %12
  %15 = icmp eq ptr %.fca.0.extract, @f64_typ
  br i1 %15, label %._crit_edge.lr.ph.i, label %16

16:                                               ; preds = %14
  %17 = getelementptr i8, ptr %.fca.0.extract, i64 24
  %18 = getelementptr i8, ptr %.fca.0.extract, i64 32
  %19 = load i64, ptr %hash_coef_ptr.i.i, align 4
  %20 = load i64, ptr %tbl_size_ptr.i.i, align 4
  %21 = load ptr, ptr %17, align 8
  %22 = load ptr, ptr %18, align 8
  %result.i.i = call i1 %21(i64 %20, i64 %19, i64 6499063144389013426, i64 ptrtoint (ptr @String to i64), ptr readonly %22) #41
  br i1 %result.i.i, label %23, label %.critedge.i

23:                                               ; preds = %16
  %result.i1.i = call i1 %21(i64 %20, i64 %19, i64 6681222582356018452, i64 ptrtoint (ptr @Character to i64), ptr readonly %22) #41
  br i1 %result.i1.i, label %.critedge.i, label %._crit_edge.lr.ph.i

.critedge.i:                                      ; preds = %23, %16
  %24 = icmp eq ptr %.fca.0.extract, @i64_typ
  br i1 %24, label %._crit_edge.lr.ph.i, label %25

25:                                               ; preds = %.critedge.i
  %result.i2.i = call i1 %21(i64 %20, i64 %19, i64 6681222582356018452, i64 ptrtoint (ptr @Character to i64), ptr readonly %22) #41
  br i1 %result.i2.i, label %26, label %.critedge15.i

26:                                               ; preds = %25
  br i1 %result.i.i, label %.critedge17.i, label %._crit_edge.lr.ph.i

.critedge15.i:                                    ; preds = %25
  %result.i4.i = call i1 %21(i64 %20, i64 %19, i64 -7260840641129990118, i64 ptrtoint (ptr @Representable to i64), ptr readonly %22) #41
  %result.i4.not.i = xor i1 %result.i4.i, true
  %brmerge.i = or i1 %result.i.i, %result.i4.not.i
  br i1 %brmerge.i, label %.critedge17.i, label %._crit_edge.lr.ph.i

.critedge17.i:                                    ; preds = %.critedge15.i, %26
  %27 = icmp eq ptr %.fca.0.extract, @i32_typ
  %28 = select i1 %27, i32 6, i32 1
  br label %._crit_edge.lr.ph.i

._crit_edge.lr.ph.i:                              ; preds = %3, %12, %14, %23, %.critedge.i, %26, %.critedge15.i, %.critedge17.i
  %.reg2mem29.0.i = phi i32 [ 2, %3 ], [ 3, %12 ], [ 4, %14 ], [ 8, %.critedge.i ], [ %28, %.critedge17.i ], [ 9, %26 ], [ 7, %23 ], [ 5, %.critedge15.i ]
  %29 = zext nneg i32 %.reg2mem29.0.i to i64
  %30 = getelementptr [10 x ptr], ptr @IO, i64 0, i64 %29
  %31 = getelementptr i8, ptr %30, i64 80
  %32 = load ptr, ptr %31, align 8
  call void %32(ptr nonnull align 8 dereferenceable(8) %8, { ptr, i160 } %7) #42
  store <14 x i8> <i8 32, i8 32, i8 79, i8 112, i8 101, i8 114, i8 97, i8 116, i8 105, i8 111, i8 110, i8 115, i8 58, i8 32>, ptr %result.i.i268.h2s355, align 16
  %puts.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(15) %result.i.i268.h2s355) #43
  %33 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %1) #43
  store <14 x i8> <i8 32, i8 32, i8 84, i8 111, i8 116, i8 97, i8 108, i8 32, i8 84, i8 105, i8 109, i8 101, i8 58, i8 32>, ptr %result.i.i282.h2s353, align 16
  %puts.i206 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(15) %result.i.i282.h2s353) #43
  %34 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(6) @i64_string, i64 %2) #43
  %35 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO) #44
  store <3 x i8> <i8 32, i8 109, i8 115>, ptr %result.i.i301.h2s351, align 4
  %36 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String) #44
  %puts.i226 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(4) %result.i.i301.h2s351) #43
  %37 = icmp sgt i32 %1, 0
  br i1 %37, label %._crit_edge1, label %._crit_edge

._crit_edge1:                                     ; preds = %._crit_edge.lr.ph.i
  %38 = icmp sgt i64 %2, 0
  br i1 %38, label %39, label %._crit_edge.lr.ph.i321

39:                                               ; preds = %._crit_edge1
  %40 = mul i64 %2, 1000000
  %41 = zext nneg i32 %1 to i64
  %42 = sdiv i64 %40, %41
  br label %._crit_edge.lr.ph.i321

._crit_edge.lr.ph.i321:                           ; preds = %39, %._crit_edge1
  %.0 = phi i64 [ %42, %39 ], [ 0, %._crit_edge1 ]
  store <15 x i8> <i8 32, i8 32, i8 84, i8 105, i8 109, i8 101, i8 47, i8 79, i8 112, i8 58, i8 32, i8 32, i8 32, i8 32, i8 126>, ptr %result.i.i320.h2s349, align 16
  %puts.i246 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(16) %result.i.i320.h2s349) #43
  %43 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(6) @i64_string, i64 %.0) #43
  %44 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO) #44
  store <3 x i8> <i8 32, i8 110, i8 115>, ptr %result.i.i339.h2s347, align 4
  %45 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String) #44
  %puts.i266 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(4) %result.i.i339.h2s347) #43
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.lr.ph.i321, %._crit_edge.lr.ph.i
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind speculatable willreturn memory(read, inaccessiblemem: none)
define ptr @class_behavior_wrapper(ptr nocapture nofree noundef nonnull readonly %f, ptr nocapture nofree noundef nonnull readonly %0) local_unnamed_addr #12 {
  %result = call ptr %f(ptr nocapture nofree noundef nonnull %0) #45
  ret ptr %result
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn allockind("alloc,zeroed") allocsize(0) memory(readwrite, argmem: none, inaccessiblemem: none)
define noalias ptr @bump_malloc(i64 noundef %size) local_unnamed_addr #13 {
  %result = tail call noalias ptr @bump_malloc_inner(i64 noundef %size, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  ret ptr %result
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind speculatable willreturn memory(argmem: read)
define { i64, i64 } @size_wrapper(ptr nocapture nofree noundef nonnull readonly %f, ptr nocapture nofree readonly %0) local_unnamed_addr #0 {
  %result = call { i64, i64 } %f(ptr nocapture nofree readonly %0) #41
  ret { i64, i64 } %result
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind speculatable willreturn memory(read, inaccessiblemem: none)
define ptr @behavior_wrapper(ptr nocapture nofree noundef nonnull readonly %f, { ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull readonly %1) local_unnamed_addr #12 {
  %result = call ptr %f({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull %1) #45
  ret ptr %result
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind willreturn allockind("alloc,zeroed") allocsize(0) memory(argmem: readwrite)
define noalias ptr @bump_malloc_inner(i64 noundef %size, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %current_ptr) local_unnamed_addr #14 {
  %size_plus_15 = add i64 %size, 15
  %aligned_size = and i64 %size_plus_15, -16
  %current = load ptr, ptr %current_ptr, align 8
  %new_ptr = getelementptr i8, ptr %current, i64 %aligned_size
  store ptr %new_ptr, ptr %current_ptr, align 8
  ret ptr %current
}

define void @benchmark_insert_sequential(i32 %0) local_unnamed_addr #10 {
  %2 = alloca {}, align 8
  %result.i.i652.h2s1519 = alloca [5 x i8], align 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(5) %result.i.i652.h2s1519, i8 0, i64 5, i1 false)
  %result.i.i633.h2s1520 = alloca [19 x i8], align 32
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 32 dereferenceable(19) %result.i.i633.h2s1520, i8 0, i64 19, i1 false)
  %result.i.i339.i.h2s1522 = alloca [4 x i8], align 4
  store i32 0, ptr %result.i.i339.i.h2s1522, align 4
  %result.i.i320.i.h2s1524 = alloca [16 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %result.i.i320.i.h2s1524, i8 0, i64 16, i1 false)
  %result.i.i301.i.h2s1526 = alloca [4 x i8], align 4
  store i32 0, ptr %result.i.i301.i.h2s1526, align 4
  %result.i.i282.i.h2s1528 = alloca [15 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(15) %result.i.i282.i.h2s1528, i8 0, i64 15, i1 false)
  %result.i.i268.i.h2s1530 = alloca [15 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(15) %result.i.i268.i.h2s1530, i8 0, i64 15, i1 false)
  %result.i.i618.h2s1532 = alloca [18 x i8], align 32
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 32 dereferenceable(18) %result.i.i618.h2s1532, i8 0, i64 18, i1 false)
  %3 = alloca [1 x ptr], align 8
  %4 = alloca { ptr }, align 8
  %5 = alloca [1 x ptr], align 8
  %6 = alloca { ptr }, align 8
  %7 = alloca [1 x ptr], align 8
  %8 = alloca { ptr }, align 8
  %9 = alloca [1 x ptr], align 8
  %10 = alloca { ptr }, align 8
  %11 = alloca [1 x ptr], align 8
  %12 = alloca { ptr }, align 8
  %13 = alloca [1 x ptr], align 8
  %14 = alloca { ptr }, align 8
  %15 = alloca [1 x ptr], align 8
  %16 = alloca { ptr }, align 8
  %17 = alloca [1 x ptr], align 8
  %18 = alloca { ptr }, align 8
  %19 = alloca [1 x ptr], align 8
  %20 = alloca { ptr }, align 8
  %21 = alloca [1 x ptr], align 8
  %22 = alloca { ptr }, align 8
  %23 = alloca [1 x ptr], align 8
  %24 = alloca { ptr }, align 8
  %25 = alloca [1 x ptr], align 8
  %26 = alloca { ptr }, align 8
  %27 = alloca [1 x ptr], align 8
  %28 = alloca { ptr }, align 8
  %29 = alloca [1 x ptr], align 8
  %30 = alloca { ptr }, align 8
  %31 = alloca [1 x ptr], align 8
  %32 = alloca { ptr }, align 8
  %33 = alloca [1 x ptr], align 8
  %34 = alloca { ptr }, align 8
  %oldProtect.i13 = alloca i32, align 4
  %oldProtect.i = alloca i32, align 4
  %35 = alloca [3 x ptr], align 8
  %36 = alloca { ptr, ptr, ptr }, align 8
  %37 = alloca [1 x ptr], align 8
  %38 = alloca { ptr }, align 8
  %39 = alloca [3 x ptr], align 8
  %40 = alloca { ptr, ptr, ptr }, align 8
  %41 = alloca [1 x ptr], align 8
  %42 = alloca { ptr }, align 8
  %result.i9 = call noalias nonnull align 8 dereferenceable(64) ptr @bump_malloc_inner(i64 noundef 64, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr @_parameterization_i32, ptr %result.i9, align 8
  %43 = getelementptr inbounds i8, ptr %result.i9, i64 8
  store ptr @_parameterization_i32, ptr %43, align 8
  %44 = getelementptr inbounds i8, ptr %result.i9, i64 16
  store ptr @_parameterization_Pairi32._i32, ptr %44, align 8
  %45 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(64) %result.i9) #37
  %result.i10 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i) #37
  %result.i11 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i10, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i10, ptr noalias nofree noundef nonnull readnone @rbttktqtkg, ptr noalias nofree noundef nonnull readnone @i32_hasher) #37
  %ret.i = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i10) #48
  %46 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i10) #37
  %result.i12 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i13) #37
  %result.i14 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i12, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i13) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i13) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i12, ptr noalias nofree noundef nonnull readnone @awrddwmptn, ptr noalias nofree noundef nonnull readnone @i32_eq) #37
  %ret.i15 = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i12) #48
  %47 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i12) #37
  %48 = getelementptr inbounds i8, ptr %result.i9, i64 48
  store ptr %ret.i, ptr %48, align 8
  %49 = getelementptr inbounds i8, ptr %result.i9, i64 56
  store ptr %ret.i15, ptr %49, align 8
  %50 = getelementptr inbounds i8, ptr %result.i9, i64 40
  store i32 8, ptr %50, align 8
  %result.i.i = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %51 = getelementptr inbounds i8, ptr %result.i9, i64 24
  store ptr %result.i.i, ptr %51, align 8
  %result.i1.i72 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %52 = getelementptr inbounds i8, ptr %result.i9, i64 32
  store ptr %result.i1.i72, ptr %52, align 8
  %53 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %54 = call i64 @clock()
  %55 = icmp sgt i32 %0, 0
  br i1 %55, label %._crit_edge.preheader, label %972

._crit_edge.preheader:                            ; preds = %1
  %56 = getelementptr inbounds i8, ptr %result.i9, i64 44
  %57 = insertvalue { ptr, ptr, ptr, i32 } { ptr @CuckooMap, ptr undef, ptr undef, i32 undef }, ptr %result.i9, 1
  %58 = insertvalue { ptr, ptr, ptr, i32 } %57, ptr undef, 2
  %59 = insertvalue { ptr, ptr, ptr, i32 } %58, i32 10, 3
  %60 = insertvalue { ptr, ptr, ptr, i32 } %57, i32 10, 3
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.preheader, %CuckooMap_insert_keyK_valueV.exit
  %.063 = phi i32 [ %61, %CuckooMap_insert_keyK_valueV.exit ], [ 0, %._crit_edge.preheader ]
  %61 = add nuw nsw i32 %.063, 1
  %.sroa.0131.0.insert.ext = zext nneg i32 %.063 to i160
  %62 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0131.0.insert.ext, 1
  %.sroa.0128.0.insert.ext = zext nneg i32 %61 to i160
  %63 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0128.0.insert.ext, 1
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %64 = load ptr, ptr %48, align 8
  %65 = call i32 %64({ ptr, i160 } %62) #42
  %66 = load i32, ptr %50, align 8
  %67 = add i32 %66, -1
  %68 = and i32 %67, %65
  %69 = load ptr, ptr %51, align 8
  %70 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %71 = sext i32 %68 to i64
  %72 = shl nsw i64 %71, 5
  %73 = getelementptr i8, ptr %69, i64 %72
  %74 = load ptr, ptr %73, align 8
  %75 = getelementptr i8, ptr %73, i64 8
  %76 = icmp ne ptr %74, @nil_typ
  %77 = icmp ne ptr %74, null
  %.not64.i = and i1 %76, %77
  br i1 %.not64.i, label %78, label %176

78:                                               ; preds = %._crit_edge
  %79 = load i64, ptr %75, align 4
  %.sroa_idx.i = getelementptr i8, ptr %73, i64 16
  %80 = load i64, ptr %.sroa_idx.i, align 4
  %81 = inttoptr i64 %79 to ptr
  %82 = inttoptr i64 %80 to ptr
  %hash_coef_ptr.i.i3.i = getelementptr i8, ptr %74, i64 8
  %tbl_size_ptr.i.i4.i = getelementptr i8, ptr %74, i64 16
  %offset_tbl_ptr.i.i5.i = getelementptr i8, ptr %74, i64 40
  %hash_coef.i.i6.i = load i64, ptr %hash_coef_ptr.i.i3.i, align 4, !noalias !10
  %tbl_size.i.i7.i = load i64, ptr %tbl_size_ptr.i.i4.i, align 4, !noalias !10
  %offset_tbl.i.i8.i = load ptr, ptr %offset_tbl_ptr.i.i5.i, align 8, !noalias !10
  %product.i.i.i9.i = mul i64 %hash_coef.i.i6.i, 4015701072841558310
  %shifted.i.i.i10.i = lshr i64 %product.i.i.i9.i, 32
  %xored.i.i.i11.i = xor i64 %shifted.i.i.i10.i, %product.i.i.i9.i
  %hash.i.i.i12.i = and i64 %xored.i.i.i11.i, %tbl_size.i.i7.i
  %offset_ptr.i.i13.i = getelementptr i32, ptr %offset_tbl.i.i8.i, i64 %hash.i.i.i12.i
  %offset.i.i14.i = load i32, ptr %offset_ptr.i.i13.i, align 4, !noalias !10
  %83 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %74, 0
  %84 = insertvalue { ptr, ptr, ptr, i32 } %83, ptr %81, 1
  %85 = insertvalue { ptr, ptr, ptr, i32 } %84, ptr %82, 2
  %86 = insertvalue { ptr, ptr, ptr, i32 } %85, i32 %offset.i.i14.i, 3
  %87 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %88 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %74) #37
  %89 = sext i32 %offset.i.i14.i to i64
  %90 = getelementptr ptr, ptr %74, i64 %89
  %91 = getelementptr i8, ptr %90, i64 64
  %92 = load ptr, ptr %91, align 8
  %result.i.i288 = call ptr %92({ ptr, ptr, ptr, i32 } %86, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %93 = call i32 %result.i.i288({ ptr, ptr, ptr, i32 } %86, { ptr, ptr, ptr, i32 } %86, ptr nonnull align 8 %2) #42
  %94 = icmp eq i32 %93, %65
  br i1 %94, label %._crit_edge.i289, label %176

._crit_edge.i289:                                 ; preds = %78
  %95 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %96 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %74)
  %97 = getelementptr i8, ptr %90, i64 48
  %98 = load ptr, ptr %97, align 8
  %result.i16.i290 = call ptr %98({ ptr, ptr, ptr, i32 } %86, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %99 = call { ptr, i160 } %result.i16.i290({ ptr, ptr, ptr, i32 } %86, { ptr, ptr, ptr, i32 } %86, ptr nonnull align 8 %2) #42
  %100 = load ptr, ptr %49, align 8
  %101 = call i1 %100({ ptr, i160 } %99, { ptr, i160 } %62) #42
  br i1 %101, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, label %176

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit: ; preds = %._crit_edge.i289
  %102 = load ptr, ptr %result.i9, align 8
  %103 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %104 = load ptr, ptr %43, align 8
  %105 = load ptr, ptr %102, align 8, !alias.scope !13
  %106 = getelementptr i8, ptr %105, i64 72
  %107 = load ptr, ptr %106, align 8, !alias.scope !13
  %result.i.i.i291 = call { i64, i64 } %107(ptr nocapture nofree nonnull readonly align 8 %102) #41, !alias.scope !13
  %108 = extractvalue { i64, i64 } %result.i.i.i291, 0
  %109 = extractvalue { i64, i64 } %result.i.i.i291, 1
  %110 = urem i64 20, %109
  %111 = icmp eq i64 %110, 0
  %112 = sub i64 %109, %110
  %113 = select i1 %111, i64 0, i64 %112
  %114 = add i64 %108, 20
  %115 = add i64 %114, %113
  %116 = load ptr, ptr %104, align 8, !alias.scope !13
  %117 = getelementptr i8, ptr %116, i64 72
  %118 = load ptr, ptr %117, align 8, !alias.scope !13
  %result.i1.i.i292 = call { i64, i64 } %118(ptr nocapture nofree nonnull readonly align 8 %104) #41, !alias.scope !13
  %119 = extractvalue { i64, i64 } %result.i1.i.i292, 0
  %120 = extractvalue { i64, i64 } %result.i1.i.i292, 1
  %121 = call i64 @llvm.umax.i64(i64 %109, i64 %120) #38
  %122 = call i64 @llvm.umax.i64(i64 %121, i64 noundef 8) #38, !range !16
  %123 = urem i64 %115, %120
  %124 = icmp eq i64 %123, 0
  %125 = sub i64 %120, %123
  %126 = select i1 %124, i64 0, i64 %125
  %127 = add i64 %119, %115
  %128 = add i64 %127, %126
  %129 = urem i64 %128, %122
  %130 = icmp eq i64 %129, 0
  %131 = sub i64 %122, %129
  %132 = select i1 %130, i64 0, i64 %131
  %133 = add i64 %132, %128
  %result.i20.i293 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %133, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %102, ptr %result.i20.i293, align 8
  %134 = getelementptr inbounds i8, ptr %result.i20.i293, i64 8
  store ptr %104, ptr %134, align 8
  %135 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i293)
  %136 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %137 = load ptr, ptr %102, align 8
  %138 = getelementptr i8, ptr %137, i64 72
  %139 = load ptr, ptr %138, align 8
  %result.i.i54.i = call { i64, i64 } %139(ptr nocapture nofree nonnull readonly align 8 %102) #41
  %140 = extractvalue { i64, i64 } %result.i.i54.i, 1
  %141 = urem i64 20, %140
  %142 = icmp eq i64 %141, 0
  %reass.sub = sub i64 %140, %141
  %143 = add i64 %reass.sub, 20
  %144 = select i1 %142, i64 20, i64 %143
  %145 = getelementptr i8, ptr %result.i20.i293, i64 %144
  %146 = getelementptr i8, ptr %137, i64 64
  %147 = load ptr, ptr %146, align 8
  call void %147({ ptr, i160 } %62, ptr nocapture nofree nonnull readonly align 8 %102, ptr nocapture nofree writeonly %145) #49
  %148 = load ptr, ptr %result.i20.i293, align 8
  %149 = load ptr, ptr %148, align 8
  %150 = getelementptr i8, ptr %149, i64 72
  %151 = load ptr, ptr %150, align 8
  %result.i.i55.i = call { i64, i64 } %151(ptr nocapture nofree nonnull readonly align 8 %148) #41
  %152 = extractvalue { i64, i64 } %result.i.i55.i, 0
  %153 = extractvalue { i64, i64 } %result.i.i55.i, 1
  %154 = urem i64 20, %153
  %155 = icmp eq i64 %154, 0
  %156 = sub i64 %153, %154
  %157 = select i1 %155, i64 0, i64 %156
  %158 = add i64 %152, 20
  %159 = add i64 %158, %157
  %160 = load ptr, ptr %134, align 8
  %161 = load ptr, ptr %160, align 8
  %162 = getelementptr i8, ptr %161, i64 72
  %163 = load ptr, ptr %162, align 8
  %result.i1.i56.i = call { i64, i64 } %163(ptr nocapture nofree nonnull readonly align 8 %160) #41
  %164 = extractvalue { i64, i64 } %result.i1.i56.i, 1
  %165 = urem i64 %159, %164
  %166 = icmp eq i64 %165, 0
  %167 = sub i64 %164, %165
  %168 = select i1 %166, i64 0, i64 %167
  %169 = getelementptr i8, ptr %result.i20.i293, i64 %159
  %170 = getelementptr i8, ptr %169, i64 %168
  %171 = getelementptr i8, ptr %161, i64 64
  %172 = load ptr, ptr %171, align 8
  call void %172({ ptr, i160 } %63, ptr nocapture nofree nonnull readonly align 8 %160, ptr nocapture nofree writeonly %170) #49
  %173 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %174 = getelementptr inbounds i8, ptr %result.i20.i293, i64 16
  store i32 %65, ptr %174, align 8
  store ptr @Entry, ptr %73, align 8
  %175 = ptrtoint ptr %result.i20.i293 to i64
  store i64 %175, ptr %75, align 4
  %.sroa_idx28.i = getelementptr i8, ptr %73, i64 24
  store i32 10, ptr %.sroa_idx28.i, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit

176:                                              ; preds = %._crit_edge.i289, %._crit_edge, %78
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %177 = add i32 %65, 2127912214
  %178 = shl i32 %65, 12
  %179 = add i32 %177, %178
  %180 = ashr i32 %179, 19
  %181 = xor i32 %179, %180
  %182 = xor i32 %181, -949894596
  %183 = add i32 %182, 374761393
  %184 = shl i32 %182, 5
  %185 = add i32 %183, %184
  %186 = add i32 %185, -744332180
  %187 = shl i32 %185, 9
  %188 = xor i32 %186, %187
  %189 = add i32 %188, -42973499
  %190 = shl i32 %188, 3
  %191 = add i32 %189, %190
  %192 = ashr i32 %191, 16
  %193 = xor i32 %191, %192
  %194 = xor i32 %193, -1252372727
  %195 = load i32, ptr %50, align 8
  %196 = add i32 %195, -1
  %197 = and i32 %196, %194
  %198 = load ptr, ptr %52, align 8
  %199 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %200 = sext i32 %197 to i64
  %201 = shl nsw i64 %200, 5
  %202 = getelementptr i8, ptr %198, i64 %201
  %203 = load ptr, ptr %202, align 8
  %204 = getelementptr i8, ptr %202, i64 8
  %205 = icmp ne ptr %203, @nil_typ
  %206 = icmp ne ptr %203, null
  %.not64.i322 = and i1 %205, %206
  br i1 %.not64.i322, label %207, label %305

207:                                              ; preds = %176
  %208 = load i64, ptr %204, align 4
  %.sroa_idx.i324 = getelementptr i8, ptr %202, i64 16
  %209 = load i64, ptr %.sroa_idx.i324, align 4
  %210 = inttoptr i64 %208 to ptr
  %211 = inttoptr i64 %209 to ptr
  %hash_coef_ptr.i.i3.i325 = getelementptr i8, ptr %203, i64 8
  %tbl_size_ptr.i.i4.i326 = getelementptr i8, ptr %203, i64 16
  %offset_tbl_ptr.i.i5.i327 = getelementptr i8, ptr %203, i64 40
  %hash_coef.i.i6.i328 = load i64, ptr %hash_coef_ptr.i.i3.i325, align 4, !noalias !17
  %tbl_size.i.i7.i329 = load i64, ptr %tbl_size_ptr.i.i4.i326, align 4, !noalias !17
  %offset_tbl.i.i8.i330 = load ptr, ptr %offset_tbl_ptr.i.i5.i327, align 8, !noalias !17
  %product.i.i.i9.i331 = mul i64 %hash_coef.i.i6.i328, 4015701072841558310
  %shifted.i.i.i10.i332 = lshr i64 %product.i.i.i9.i331, 32
  %xored.i.i.i11.i333 = xor i64 %shifted.i.i.i10.i332, %product.i.i.i9.i331
  %hash.i.i.i12.i334 = and i64 %xored.i.i.i11.i333, %tbl_size.i.i7.i329
  %offset_ptr.i.i13.i335 = getelementptr i32, ptr %offset_tbl.i.i8.i330, i64 %hash.i.i.i12.i334
  %offset.i.i14.i336 = load i32, ptr %offset_ptr.i.i13.i335, align 4, !noalias !17
  %212 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %203, 0
  %213 = insertvalue { ptr, ptr, ptr, i32 } %212, ptr %210, 1
  %214 = insertvalue { ptr, ptr, ptr, i32 } %213, ptr %211, 2
  %215 = insertvalue { ptr, ptr, ptr, i32 } %214, i32 %offset.i.i14.i336, 3
  %216 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %217 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %203) #37
  %218 = sext i32 %offset.i.i14.i336 to i64
  %219 = getelementptr ptr, ptr %203, i64 %218
  %220 = getelementptr i8, ptr %219, i64 64
  %221 = load ptr, ptr %220, align 8
  %result.i.i337 = call ptr %221({ ptr, ptr, ptr, i32 } %215, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %222 = call i32 %result.i.i337({ ptr, ptr, ptr, i32 } %215, { ptr, ptr, ptr, i32 } %215, ptr nonnull align 8 %2) #42
  %223 = icmp eq i32 %222, %65
  br i1 %223, label %._crit_edge.i338, label %305

._crit_edge.i338:                                 ; preds = %207
  %224 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %225 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %203)
  %226 = getelementptr i8, ptr %219, i64 48
  %227 = load ptr, ptr %226, align 8
  %result.i16.i339 = call ptr %227({ ptr, ptr, ptr, i32 } %215, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %228 = call { ptr, i160 } %result.i16.i339({ ptr, ptr, ptr, i32 } %215, { ptr, ptr, ptr, i32 } %215, ptr nonnull align 8 %2) #42
  %229 = load ptr, ptr %49, align 8
  %230 = call i1 %229({ ptr, i160 } %228, { ptr, i160 } %62) #42
  br i1 %230, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit351, label %305

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit351: ; preds = %._crit_edge.i338
  %231 = load ptr, ptr %result.i9, align 8
  %232 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %233 = load ptr, ptr %43, align 8
  %234 = load ptr, ptr %231, align 8, !alias.scope !20
  %235 = getelementptr i8, ptr %234, i64 72
  %236 = load ptr, ptr %235, align 8, !alias.scope !20
  %result.i.i.i343 = call { i64, i64 } %236(ptr nocapture nofree nonnull readonly align 8 %231) #41, !alias.scope !20
  %237 = extractvalue { i64, i64 } %result.i.i.i343, 0
  %238 = extractvalue { i64, i64 } %result.i.i.i343, 1
  %239 = urem i64 20, %238
  %240 = icmp eq i64 %239, 0
  %241 = sub i64 %238, %239
  %242 = select i1 %240, i64 0, i64 %241
  %243 = add i64 %237, 20
  %244 = add i64 %243, %242
  %245 = load ptr, ptr %233, align 8, !alias.scope !20
  %246 = getelementptr i8, ptr %245, i64 72
  %247 = load ptr, ptr %246, align 8, !alias.scope !20
  %result.i1.i.i344 = call { i64, i64 } %247(ptr nocapture nofree nonnull readonly align 8 %233) #41, !alias.scope !20
  %248 = extractvalue { i64, i64 } %result.i1.i.i344, 0
  %249 = extractvalue { i64, i64 } %result.i1.i.i344, 1
  %250 = call i64 @llvm.umax.i64(i64 %238, i64 %249) #38
  %251 = call i64 @llvm.umax.i64(i64 %250, i64 noundef 8) #38, !range !16
  %252 = urem i64 %244, %249
  %253 = icmp eq i64 %252, 0
  %254 = sub i64 %249, %252
  %255 = select i1 %253, i64 0, i64 %254
  %256 = add i64 %248, %244
  %257 = add i64 %256, %255
  %258 = urem i64 %257, %251
  %259 = icmp eq i64 %258, 0
  %260 = sub i64 %251, %258
  %261 = select i1 %259, i64 0, i64 %260
  %262 = add i64 %261, %257
  %result.i20.i345 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %262, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %231, ptr %result.i20.i345, align 8
  %263 = getelementptr inbounds i8, ptr %result.i20.i345, i64 8
  store ptr %233, ptr %263, align 8
  %264 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i345)
  %265 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %266 = load ptr, ptr %231, align 8
  %267 = getelementptr i8, ptr %266, i64 72
  %268 = load ptr, ptr %267, align 8
  %result.i.i54.i346 = call { i64, i64 } %268(ptr nocapture nofree nonnull readonly align 8 %231) #41
  %269 = extractvalue { i64, i64 } %result.i.i54.i346, 1
  %270 = urem i64 20, %269
  %271 = icmp eq i64 %270, 0
  %reass.sub1549 = sub i64 %269, %270
  %272 = add i64 %reass.sub1549, 20
  %273 = select i1 %271, i64 20, i64 %272
  %274 = getelementptr i8, ptr %result.i20.i345, i64 %273
  %275 = getelementptr i8, ptr %266, i64 64
  %276 = load ptr, ptr %275, align 8
  call void %276({ ptr, i160 } %62, ptr nocapture nofree nonnull readonly align 8 %231, ptr nocapture nofree writeonly %274) #49
  %277 = load ptr, ptr %result.i20.i345, align 8
  %278 = load ptr, ptr %277, align 8
  %279 = getelementptr i8, ptr %278, i64 72
  %280 = load ptr, ptr %279, align 8
  %result.i.i55.i348 = call { i64, i64 } %280(ptr nocapture nofree nonnull readonly align 8 %277) #41
  %281 = extractvalue { i64, i64 } %result.i.i55.i348, 0
  %282 = extractvalue { i64, i64 } %result.i.i55.i348, 1
  %283 = urem i64 20, %282
  %284 = icmp eq i64 %283, 0
  %285 = sub i64 %282, %283
  %286 = select i1 %284, i64 0, i64 %285
  %287 = add i64 %281, 20
  %288 = add i64 %287, %286
  %289 = load ptr, ptr %263, align 8
  %290 = load ptr, ptr %289, align 8
  %291 = getelementptr i8, ptr %290, i64 72
  %292 = load ptr, ptr %291, align 8
  %result.i1.i56.i349 = call { i64, i64 } %292(ptr nocapture nofree nonnull readonly align 8 %289) #41
  %293 = extractvalue { i64, i64 } %result.i1.i56.i349, 1
  %294 = urem i64 %288, %293
  %295 = icmp eq i64 %294, 0
  %296 = sub i64 %293, %294
  %297 = select i1 %295, i64 0, i64 %296
  %298 = getelementptr i8, ptr %result.i20.i345, i64 %288
  %299 = getelementptr i8, ptr %298, i64 %297
  %300 = getelementptr i8, ptr %290, i64 64
  %301 = load ptr, ptr %300, align 8
  call void %301({ ptr, i160 } %63, ptr nocapture nofree nonnull readonly align 8 %289, ptr nocapture nofree writeonly %299) #49
  %302 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %303 = getelementptr inbounds i8, ptr %result.i20.i345, i64 16
  store i32 %65, ptr %303, align 8
  store ptr @Entry, ptr %202, align 8
  %304 = ptrtoint ptr %result.i20.i345 to i64
  store i64 %304, ptr %204, align 4
  %.sroa_idx28.i350 = getelementptr i8, ptr %202, i64 24
  store i32 10, ptr %.sroa_idx28.i350, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit

305:                                              ; preds = %._crit_edge.i338, %176, %207
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %306 = load i32, ptr %56, align 4
  %307 = load i32, ptr %50, align 8
  %.not.i = icmp slt i32 %306, %307
  br i1 %.not.i, label %._crit_edge.i, label %308

308:                                              ; preds = %305
  %309 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %310 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %311 = load ptr, ptr %51, align 8
  %312 = load ptr, ptr %52, align 8
  %313 = shl i32 %307, 1
  %spec.select.i366 = call i32 @llvm.smax.i32(i32 %313, i32 noundef 16) #37
  store i32 %spec.select.i366, ptr %50, align 8
  %314 = zext nneg i32 %spec.select.i366 to i64
  %315 = shl nuw nsw i64 %314, 5
  %result.i.i367 = call noalias ptr @bump_malloc_inner(i64 noundef %315, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i367, ptr %51, align 8
  %result.i1.i = call noalias ptr @bump_malloc_inner(i64 noundef %315, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i, ptr %52, align 8
  store i32 0, ptr %56, align 4
  %316 = icmp sgt i32 %307, 0
  br i1 %316, label %.lr.ph.i, label %._crit_edge.i

.lr.ph.i:                                         ; preds = %308, %._crit_edge.i743
  %.045.i = phi i32 [ %373, %._crit_edge.i743 ], [ 0, %308 ]
  %317 = zext nneg i32 %.045.i to i64
  %318 = shl nuw nsw i64 %317, 5
  %319 = getelementptr i8, ptr %311, i64 %318
  %320 = load ptr, ptr %319, align 8
  %321 = icmp ne ptr %320, @nil_typ
  %322 = icmp ne ptr %320, null
  %.not16.i = and i1 %321, %322
  br i1 %.not16.i, label %323, label %._crit_edge.i743

323:                                              ; preds = %.lr.ph.i
  %324 = getelementptr i8, ptr %319, i64 8
  %325 = load i64, ptr %324, align 4
  %.sroa_idx.i744 = getelementptr i8, ptr %319, i64 16
  %326 = load i64, ptr %.sroa_idx.i744, align 4
  %hash_coef_ptr.i.i3.i745 = getelementptr i8, ptr %320, i64 8
  %tbl_size_ptr.i.i4.i746 = getelementptr i8, ptr %320, i64 16
  %offset_tbl_ptr.i.i5.i747 = getelementptr i8, ptr %320, i64 40
  %327 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %23)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %24)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %25)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %26)
  %hash_coef.i.i17.i = load i64, ptr %hash_coef_ptr.i.i3.i745, align 4, !noalias !23
  %tbl_size.i.i18.i = load i64, ptr %tbl_size_ptr.i.i4.i746, align 4, !noalias !23
  %offset_tbl.i.i19.i = load ptr, ptr %offset_tbl_ptr.i.i5.i747, align 8, !noalias !23
  %product.i.i.i20.i = mul i64 %hash_coef.i.i17.i, 4015701072841558310
  %shifted.i.i.i21.i = lshr i64 %product.i.i.i20.i, 32
  %xored.i.i.i22.i = xor i64 %shifted.i.i.i21.i, %product.i.i.i20.i
  %hash.i.i.i23.i = and i64 %xored.i.i.i22.i, %tbl_size.i.i18.i
  %offset_ptr.i.i24.i = getelementptr i32, ptr %offset_tbl.i.i19.i, i64 %hash.i.i.i23.i
  %offset.i.i39.i = load i32, ptr %offset_ptr.i.i24.i, align 4, !noalias !24
  %328 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %329 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %330 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %331

331:                                              ; preds = %.cont.i1018, %323
  %.0308.i1001 = phi i32 [ 0, %323 ], [ %364, %.cont.i1018 ]
  %.070307.i1002 = phi i1 [ true, %323 ], [ %365, %.cont.i1018 ]
  %.sroa.0.0306.i1003 = phi ptr [ %320, %323 ], [ %354, %.cont.i1018 ]
  %.sroa.6.0305.i1004.in = phi i64 [ %325, %323 ], [ %356, %.cont.i1018 ]
  %.sroa.12.0304.i1005.in = phi i64 [ %326, %323 ], [ %357, %.cont.i1018 ]
  %.sroa.17.0303.i1006 = phi i32 [ %offset.i.i39.i, %323 ], [ %offset.i.i71.i1032, %.cont.i1018 ]
  %.sroa.12.0304.i1005 = inttoptr i64 %.sroa.12.0304.i1005.in to ptr
  %.sroa.6.0305.i1004 = inttoptr i64 %.sroa.6.0305.i1004.in to ptr
  %332 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1003, 0
  %333 = insertvalue { ptr, ptr, ptr, i32 } %332, ptr %.sroa.6.0305.i1004, 1
  %334 = insertvalue { ptr, ptr, ptr, i32 } %333, ptr %.sroa.12.0304.i1005, 2
  %335 = insertvalue { ptr, ptr, ptr, i32 } %334, i32 %.sroa.17.0303.i1006, 3
  %336 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1003)
  %337 = sext i32 %.sroa.17.0303.i1006 to i64
  %338 = getelementptr ptr, ptr %.sroa.0.0306.i1003, i64 %337
  %339 = getelementptr i8, ptr %338, i64 64
  %340 = load ptr, ptr %339, align 8
  %result.i43.i1007 = call ptr %340({ ptr, ptr, ptr, i32 } %335, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %341 = call i32 %result.i43.i1007({ ptr, ptr, ptr, i32 } %335, { ptr, ptr, ptr, i32 } %335, ptr nonnull align 8 %2) #42
  %..i1008 = select i1 %.070307.i1002, ptr %23, ptr %25
  %.184.i1009 = select i1 %.070307.i1002, i64 104, i64 112
  %.185.i1010 = select i1 %.070307.i1002, ptr %24, ptr %26
  %.186.i1011 = select i1 %.070307.i1002, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1008, align 8
  %342 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1008)
  %343 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1009
  %344 = load ptr, ptr %343, align 8
  store ptr @i32_typ, ptr %.185.i1010, align 8
  %result.i44.i1012 = call ptr %344({ ptr, ptr, ptr, i32 } %60, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1010) #45
  %345 = call i32 %result.i44.i1012({ ptr, ptr, ptr, i32 } %60, { ptr, ptr, ptr, i32 } %60, ptr nonnull align 8 dereferenceable(8) %..i1008, i32 %341) #42
  %346 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %347 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1011
  %348 = load ptr, ptr %347, align 8
  %349 = load ptr, ptr %348, align 8
  %350 = call { ptr } %349(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i1013 = extractvalue { ptr } %350, 0
  %351 = sext i32 %345 to i64
  %352 = shl nsw i64 %351, 5
  %353 = getelementptr i8, ptr %.fca.0.extract53.i1013, i64 %352
  %354 = load ptr, ptr %353, align 8
  %355 = getelementptr i8, ptr %353, i64 8
  %356 = load i64, ptr %355, align 4
  %.sroa_idx.i1014 = getelementptr i8, ptr %353, i64 16
  %357 = load i64, ptr %.sroa_idx.i1014, align 4
  %358 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %359 = call { ptr } %349(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i = extractvalue { ptr } %359, 0
  %360 = getelementptr i8, ptr %.fca.0.extract51.i, i64 %352
  store ptr %.sroa.0.0306.i1003, ptr %360, align 8
  %361 = getelementptr i8, ptr %360, i64 8
  store i64 %.sroa.6.0305.i1004.in, ptr %361, align 4
  %.sroa_idx100.i1015 = getelementptr i8, ptr %360, i64 16
  store i64 %.sroa.12.0304.i1005.in, ptr %.sroa_idx100.i1015, align 4
  %.sroa_idx101.i1016 = getelementptr i8, ptr %360, i64 24
  store i32 %.sroa.17.0303.i1006, ptr %.sroa_idx101.i1016, align 4
  %362 = icmp ne ptr %354, @nil_typ
  %363 = icmp ne ptr %354, null
  %.not90.i1017 = and i1 %362, %363
  br i1 %.not90.i1017, label %.cont.i1018, label %369

.cont.i1018:                                      ; preds = %331
  %364 = add nuw nsw i32 %.0308.i1001, 1
  %365 = xor i1 %.070307.i1002, true
  %hash_coef_ptr.i.i60.i1021 = getelementptr i8, ptr %354, i64 8
  %tbl_size_ptr.i.i61.i1022 = getelementptr i8, ptr %354, i64 16
  %offset_tbl_ptr.i.i62.i1023 = getelementptr i8, ptr %354, i64 40
  %hash_coef.i.i63.i1024 = load i64, ptr %hash_coef_ptr.i.i60.i1021, align 4
  %tbl_size.i.i64.i1025 = load i64, ptr %tbl_size_ptr.i.i61.i1022, align 4
  %offset_tbl.i.i65.i1026 = load ptr, ptr %offset_tbl_ptr.i.i62.i1023, align 8
  %product.i.i.i66.i1027 = mul i64 %hash_coef.i.i63.i1024, 4015701072841558310
  %shifted.i.i.i67.i1028 = lshr i64 %product.i.i.i66.i1027, 32
  %xored.i.i.i68.i1029 = xor i64 %shifted.i.i.i67.i1028, %product.i.i.i66.i1027
  %hash.i.i.i69.i1030 = and i64 %xored.i.i.i68.i1029, %tbl_size.i.i64.i1025
  %offset_ptr.i.i70.i1031 = getelementptr i32, ptr %offset_tbl.i.i65.i1026, i64 %hash.i.i.i69.i1030
  %offset.i.i71.i1032 = load i32, ptr %offset_ptr.i.i70.i1031, align 4
  %366 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %367 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %368 = icmp ult i32 %.0308.i1001, 99
  br i1 %368, label %331, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1034

369:                                              ; preds = %331
  %370 = load i32, ptr %56, align 4
  %371 = add i32 %370, 1
  %372 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %371, ptr %56, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1034

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1034: ; preds = %.cont.i1018, %369
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %23)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %24)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %25)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %26)
  br label %._crit_edge.i743

._crit_edge.i743:                                 ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1034, %.lr.ph.i
  %373 = add nuw nsw i32 %.045.i, 1
  %374 = icmp slt i32 %373, %307
  br i1 %374, label %.lr.ph.i, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit: ; preds = %._crit_edge.i743, %._crit_edge.i773
  %.045.i771 = phi i32 [ %431, %._crit_edge.i773 ], [ 0, %._crit_edge.i743 ]
  %375 = zext nneg i32 %.045.i771 to i64
  %376 = shl nuw nsw i64 %375, 5
  %377 = getelementptr i8, ptr %312, i64 %376
  %378 = load ptr, ptr %377, align 8
  %379 = icmp ne ptr %378, @nil_typ
  %380 = icmp ne ptr %378, null
  %.not16.i772 = and i1 %379, %380
  br i1 %.not16.i772, label %381, label %._crit_edge.i773

381:                                              ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit
  %382 = getelementptr i8, ptr %377, i64 8
  %383 = load i64, ptr %382, align 4
  %.sroa_idx.i774 = getelementptr i8, ptr %377, i64 16
  %384 = load i64, ptr %.sroa_idx.i774, align 4
  %hash_coef_ptr.i.i3.i775 = getelementptr i8, ptr %378, i64 8
  %tbl_size_ptr.i.i4.i776 = getelementptr i8, ptr %378, i64 16
  %offset_tbl_ptr.i.i5.i777 = getelementptr i8, ptr %378, i64 40
  %385 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %19)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %20)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %21)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %22)
  %hash_coef.i.i17.i1052 = load i64, ptr %hash_coef_ptr.i.i3.i775, align 4, !noalias !23
  %tbl_size.i.i18.i1053 = load i64, ptr %tbl_size_ptr.i.i4.i776, align 4, !noalias !23
  %offset_tbl.i.i19.i1054 = load ptr, ptr %offset_tbl_ptr.i.i5.i777, align 8, !noalias !23
  %product.i.i.i20.i1055 = mul i64 %hash_coef.i.i17.i1052, 4015701072841558310
  %shifted.i.i.i21.i1056 = lshr i64 %product.i.i.i20.i1055, 32
  %xored.i.i.i22.i1057 = xor i64 %shifted.i.i.i21.i1056, %product.i.i.i20.i1055
  %hash.i.i.i23.i1058 = and i64 %xored.i.i.i22.i1057, %tbl_size.i.i18.i1053
  %offset_ptr.i.i24.i1059 = getelementptr i32, ptr %offset_tbl.i.i19.i1054, i64 %hash.i.i.i23.i1058
  %offset.i.i39.i1060 = load i32, ptr %offset_ptr.i.i24.i1059, align 4, !noalias !27
  %386 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %387 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %388 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %389

389:                                              ; preds = %.cont.i1083, %381
  %.0308.i1061 = phi i32 [ 0, %381 ], [ %422, %.cont.i1083 ]
  %.070307.i1062 = phi i1 [ true, %381 ], [ %423, %.cont.i1083 ]
  %.sroa.0.0306.i1063 = phi ptr [ %378, %381 ], [ %412, %.cont.i1083 ]
  %.sroa.6.0305.i1064.in = phi i64 [ %383, %381 ], [ %414, %.cont.i1083 ]
  %.sroa.12.0304.i1065.in = phi i64 [ %384, %381 ], [ %415, %.cont.i1083 ]
  %.sroa.17.0303.i1066 = phi i32 [ %offset.i.i39.i1060, %381 ], [ %offset.i.i71.i1097, %.cont.i1083 ]
  %.sroa.12.0304.i1065 = inttoptr i64 %.sroa.12.0304.i1065.in to ptr
  %.sroa.6.0305.i1064 = inttoptr i64 %.sroa.6.0305.i1064.in to ptr
  %390 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1063, 0
  %391 = insertvalue { ptr, ptr, ptr, i32 } %390, ptr %.sroa.6.0305.i1064, 1
  %392 = insertvalue { ptr, ptr, ptr, i32 } %391, ptr %.sroa.12.0304.i1065, 2
  %393 = insertvalue { ptr, ptr, ptr, i32 } %392, i32 %.sroa.17.0303.i1066, 3
  %394 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1063)
  %395 = sext i32 %.sroa.17.0303.i1066 to i64
  %396 = getelementptr ptr, ptr %.sroa.0.0306.i1063, i64 %395
  %397 = getelementptr i8, ptr %396, i64 64
  %398 = load ptr, ptr %397, align 8
  %result.i43.i1067 = call ptr %398({ ptr, ptr, ptr, i32 } %393, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %399 = call i32 %result.i43.i1067({ ptr, ptr, ptr, i32 } %393, { ptr, ptr, ptr, i32 } %393, ptr nonnull align 8 %2) #42
  %..i1068 = select i1 %.070307.i1062, ptr %19, ptr %21
  %.184.i1069 = select i1 %.070307.i1062, i64 104, i64 112
  %.185.i1070 = select i1 %.070307.i1062, ptr %20, ptr %22
  %.186.i1071 = select i1 %.070307.i1062, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1068, align 8
  %400 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1068)
  %401 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1069
  %402 = load ptr, ptr %401, align 8
  store ptr @i32_typ, ptr %.185.i1070, align 8
  %result.i44.i1072 = call ptr %402({ ptr, ptr, ptr, i32 } %60, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1070) #45
  %403 = call i32 %result.i44.i1072({ ptr, ptr, ptr, i32 } %60, { ptr, ptr, ptr, i32 } %60, ptr nonnull align 8 dereferenceable(8) %..i1068, i32 %399) #42
  %404 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %405 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1071
  %406 = load ptr, ptr %405, align 8
  %407 = load ptr, ptr %406, align 8
  %408 = call { ptr } %407(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i1073 = extractvalue { ptr } %408, 0
  %409 = sext i32 %403 to i64
  %410 = shl nsw i64 %409, 5
  %411 = getelementptr i8, ptr %.fca.0.extract53.i1073, i64 %410
  %412 = load ptr, ptr %411, align 8
  %413 = getelementptr i8, ptr %411, i64 8
  %414 = load i64, ptr %413, align 4
  %.sroa_idx.i1074 = getelementptr i8, ptr %411, i64 16
  %415 = load i64, ptr %.sroa_idx.i1074, align 4
  %416 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %417 = call { ptr } %407(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i1075 = extractvalue { ptr } %417, 0
  %418 = getelementptr i8, ptr %.fca.0.extract51.i1075, i64 %410
  store ptr %.sroa.0.0306.i1063, ptr %418, align 8
  %419 = getelementptr i8, ptr %418, i64 8
  store i64 %.sroa.6.0305.i1064.in, ptr %419, align 4
  %.sroa_idx100.i1076 = getelementptr i8, ptr %418, i64 16
  store i64 %.sroa.12.0304.i1065.in, ptr %.sroa_idx100.i1076, align 4
  %.sroa_idx101.i1077 = getelementptr i8, ptr %418, i64 24
  store i32 %.sroa.17.0303.i1066, ptr %.sroa_idx101.i1077, align 4
  %420 = icmp ne ptr %412, @nil_typ
  %421 = icmp ne ptr %412, null
  %.not90.i1078 = and i1 %420, %421
  br i1 %.not90.i1078, label %.cont.i1083, label %427

.cont.i1083:                                      ; preds = %389
  %422 = add nuw nsw i32 %.0308.i1061, 1
  %423 = xor i1 %.070307.i1062, true
  %hash_coef_ptr.i.i60.i1086 = getelementptr i8, ptr %412, i64 8
  %tbl_size_ptr.i.i61.i1087 = getelementptr i8, ptr %412, i64 16
  %offset_tbl_ptr.i.i62.i1088 = getelementptr i8, ptr %412, i64 40
  %hash_coef.i.i63.i1089 = load i64, ptr %hash_coef_ptr.i.i60.i1086, align 4
  %tbl_size.i.i64.i1090 = load i64, ptr %tbl_size_ptr.i.i61.i1087, align 4
  %offset_tbl.i.i65.i1091 = load ptr, ptr %offset_tbl_ptr.i.i62.i1088, align 8
  %product.i.i.i66.i1092 = mul i64 %hash_coef.i.i63.i1089, 4015701072841558310
  %shifted.i.i.i67.i1093 = lshr i64 %product.i.i.i66.i1092, 32
  %xored.i.i.i68.i1094 = xor i64 %shifted.i.i.i67.i1093, %product.i.i.i66.i1092
  %hash.i.i.i69.i1095 = and i64 %xored.i.i.i68.i1094, %tbl_size.i.i64.i1090
  %offset_ptr.i.i70.i1096 = getelementptr i32, ptr %offset_tbl.i.i65.i1091, i64 %hash.i.i.i69.i1095
  %offset.i.i71.i1097 = load i32, ptr %offset_ptr.i.i70.i1096, align 4
  %424 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %425 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %426 = icmp ult i32 %.0308.i1061, 99
  br i1 %426, label %389, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1106

427:                                              ; preds = %389
  %428 = load i32, ptr %56, align 4
  %429 = add i32 %428, 1
  %430 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %429, ptr %56, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1106

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1106: ; preds = %.cont.i1083, %427
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %19)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %20)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %21)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %22)
  br label %._crit_edge.i773

._crit_edge.i773:                                 ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1106, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit
  %431 = add nuw nsw i32 %.045.i771, 1
  %432 = icmp slt i32 %431, %307
  br i1 %432, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %._crit_edge.i773, %308, %305
  %433 = load ptr, ptr %result.i9, align 8
  %434 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %435 = load ptr, ptr %43, align 8
  %436 = load ptr, ptr %433, align 8
  %437 = getelementptr i8, ptr %436, i64 72
  %438 = load ptr, ptr %437, align 8
  %result.i.i.i = call { i64, i64 } %438(ptr nocapture nofree nonnull readonly align 8 %433) #41
  %439 = extractvalue { i64, i64 } %result.i.i.i, 0
  %440 = extractvalue { i64, i64 } %result.i.i.i, 1
  %441 = urem i64 20, %440
  %442 = icmp eq i64 %441, 0
  %443 = sub i64 %440, %441
  %444 = select i1 %442, i64 0, i64 %443
  %445 = add i64 %439, 20
  %446 = add i64 %445, %444
  %447 = load ptr, ptr %435, align 8
  %448 = getelementptr i8, ptr %447, i64 72
  %449 = load ptr, ptr %448, align 8
  %result.i1.i.i = call { i64, i64 } %449(ptr nocapture nofree nonnull readonly align 8 %435) #41
  %450 = extractvalue { i64, i64 } %result.i1.i.i, 0
  %451 = extractvalue { i64, i64 } %result.i1.i.i, 1
  %452 = call i64 @llvm.umax.i64(i64 %440, i64 %451) #38
  %453 = call i64 @llvm.umax.i64(i64 %452, i64 noundef 8) #38, !range !16
  %454 = urem i64 %446, %451
  %455 = icmp eq i64 %454, 0
  %456 = sub i64 %451, %454
  %457 = select i1 %455, i64 0, i64 %456
  %458 = add i64 %450, %446
  %459 = add i64 %458, %457
  %460 = urem i64 %459, %453
  %461 = icmp eq i64 %460, 0
  %462 = sub i64 %453, %460
  %463 = select i1 %461, i64 0, i64 %462
  %464 = add i64 %463, %459
  %result.i16.i = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %464, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %433, ptr %result.i16.i, align 8
  %465 = getelementptr inbounds i8, ptr %result.i16.i, i64 8
  store ptr %435, ptr %465, align 8
  %466 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i16.i)
  %467 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %468 = load ptr, ptr %433, align 8
  %469 = getelementptr i8, ptr %468, i64 72
  %470 = load ptr, ptr %469, align 8
  %result.i.i110.i = call { i64, i64 } %470(ptr nocapture nofree nonnull readonly align 8 %433) #41
  %471 = extractvalue { i64, i64 } %result.i.i110.i, 1
  %472 = urem i64 20, %471
  %473 = icmp eq i64 %472, 0
  %reass.sub1548 = sub i64 %471, %472
  %474 = add i64 %reass.sub1548, 20
  %475 = select i1 %473, i64 20, i64 %474
  %476 = getelementptr i8, ptr %result.i16.i, i64 %475
  %477 = getelementptr i8, ptr %468, i64 64
  %478 = load ptr, ptr %477, align 8
  call void %478({ ptr, i160 } %62, ptr nocapture nofree nonnull readonly align 8 %433, ptr nocapture nofree writeonly %476) #49
  %479 = load ptr, ptr %result.i16.i, align 8
  %480 = load ptr, ptr %479, align 8
  %481 = getelementptr i8, ptr %480, i64 72
  %482 = load ptr, ptr %481, align 8
  %result.i.i111.i = call { i64, i64 } %482(ptr nocapture nofree nonnull readonly align 8 %479) #41
  %483 = extractvalue { i64, i64 } %result.i.i111.i, 0
  %484 = extractvalue { i64, i64 } %result.i.i111.i, 1
  %485 = urem i64 20, %484
  %486 = icmp eq i64 %485, 0
  %487 = sub i64 %484, %485
  %488 = select i1 %486, i64 0, i64 %487
  %489 = add i64 %483, 20
  %490 = add i64 %489, %488
  %491 = load ptr, ptr %465, align 8
  %492 = load ptr, ptr %491, align 8
  %493 = getelementptr i8, ptr %492, i64 72
  %494 = load ptr, ptr %493, align 8
  %result.i1.i112.i = call { i64, i64 } %494(ptr nocapture nofree nonnull readonly align 8 %491) #41
  %495 = extractvalue { i64, i64 } %result.i1.i112.i, 1
  %496 = urem i64 %490, %495
  %497 = icmp eq i64 %496, 0
  %498 = sub i64 %495, %496
  %499 = select i1 %497, i64 0, i64 %498
  %500 = getelementptr i8, ptr %result.i16.i, i64 %490
  %501 = getelementptr i8, ptr %500, i64 %499
  %502 = getelementptr i8, ptr %492, i64 64
  %503 = load ptr, ptr %502, align 8
  call void %503({ ptr, i160 } %63, ptr nocapture nofree nonnull readonly align 8 %491, ptr nocapture nofree writeonly %501) #49
  %504 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %505 = getelementptr inbounds i8, ptr %result.i16.i, i64 16
  store i32 %65, ptr %505, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %31)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %32)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %33)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %34)
  %506 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %507 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %508 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %509

509:                                              ; preds = %.cont.i, %._crit_edge.i
  %.0308.i = phi i32 [ 0, %._crit_edge.i ], [ %544, %.cont.i ]
  %.070307.i = phi i1 [ true, %._crit_edge.i ], [ %545, %.cont.i ]
  %.sroa.0.0306.i = phi ptr [ @Entry, %._crit_edge.i ], [ %532, %.cont.i ]
  %.sroa.6.0305.i = phi ptr [ %result.i16.i, %._crit_edge.i ], [ %.sroa.speculated111.i, %.cont.i ]
  %.sroa.12.0304.i = phi ptr [ undef, %._crit_edge.i ], [ %.sroa.speculated105.i, %.cont.i ]
  %.sroa.17.0303.i = phi i32 [ 10, %._crit_edge.i ], [ %offset.i.i71.i, %.cont.i ]
  %510 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i, 0
  %511 = insertvalue { ptr, ptr, ptr, i32 } %510, ptr %.sroa.6.0305.i, 1
  %512 = insertvalue { ptr, ptr, ptr, i32 } %511, ptr %.sroa.12.0304.i, 2
  %513 = insertvalue { ptr, ptr, ptr, i32 } %512, i32 %.sroa.17.0303.i, 3
  %514 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i)
  %515 = sext i32 %.sroa.17.0303.i to i64
  %516 = getelementptr ptr, ptr %.sroa.0.0306.i, i64 %515
  %517 = getelementptr i8, ptr %516, i64 64
  %518 = load ptr, ptr %517, align 8
  %result.i43.i = call ptr %518({ ptr, ptr, ptr, i32 } %513, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %519 = call i32 %result.i43.i({ ptr, ptr, ptr, i32 } %513, { ptr, ptr, ptr, i32 } %513, ptr nonnull align 8 %2) #42
  %..i = select i1 %.070307.i, ptr %31, ptr %33
  %.184.i = select i1 %.070307.i, i64 104, i64 112
  %.185.i = select i1 %.070307.i, ptr %32, ptr %34
  %.186.i = select i1 %.070307.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i, align 8
  %520 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i)
  %521 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i
  %522 = load ptr, ptr %521, align 8
  store ptr @i32_typ, ptr %.185.i, align 8
  %result.i44.i = call ptr %522({ ptr, ptr, ptr, i32 } %59, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i) #45
  %523 = call i32 %result.i44.i({ ptr, ptr, ptr, i32 } %59, { ptr, ptr, ptr, i32 } %59, ptr nonnull align 8 dereferenceable(8) %..i, i32 %519) #42
  %524 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %525 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i
  %526 = load ptr, ptr %525, align 8
  %527 = load ptr, ptr %526, align 8
  %528 = call { ptr } %527(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i = extractvalue { ptr } %528, 0
  %529 = sext i32 %523 to i64
  %530 = shl nsw i64 %529, 5
  %531 = getelementptr i8, ptr %.fca.0.extract53.i, i64 %530
  %532 = load ptr, ptr %531, align 8
  %533 = getelementptr i8, ptr %531, i64 8
  %534 = load i64, ptr %533, align 4
  %.sroa_idx.i384 = getelementptr i8, ptr %531, i64 16
  %535 = load i64, ptr %.sroa_idx.i384, align 4
  %536 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %537 = call { ptr } %527(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i385 = extractvalue { ptr } %537, 0
  %538 = getelementptr i8, ptr %.fca.0.extract51.i385, i64 %530
  store ptr %.sroa.0.0306.i, ptr %538, align 8
  %539 = getelementptr i8, ptr %538, i64 8
  %540 = ptrtoint ptr %.sroa.6.0305.i to i64
  %541 = ptrtoint ptr %.sroa.12.0304.i to i64
  store i64 %540, ptr %539, align 4
  %.sroa_idx100.i = getelementptr i8, ptr %538, i64 16
  store i64 %541, ptr %.sroa_idx100.i, align 4
  %.sroa_idx101.i = getelementptr i8, ptr %538, i64 24
  store i32 %.sroa.17.0303.i, ptr %.sroa_idx101.i, align 4
  %542 = icmp ne ptr %532, @nil_typ
  %543 = icmp ne ptr %532, null
  %.not90.i = and i1 %542, %543
  br i1 %.not90.i, label %.cont.i, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit

.cont.i:                                          ; preds = %509
  %544 = add nuw nsw i32 %.0308.i, 1
  %545 = xor i1 %.070307.i, true
  %.sroa.speculated111.i = inttoptr i64 %534 to ptr
  %.sroa.speculated105.i = inttoptr i64 %535 to ptr
  %hash_coef_ptr.i.i60.i = getelementptr i8, ptr %532, i64 8
  %tbl_size_ptr.i.i61.i = getelementptr i8, ptr %532, i64 16
  %offset_tbl_ptr.i.i62.i = getelementptr i8, ptr %532, i64 40
  %hash_coef.i.i63.i = load i64, ptr %hash_coef_ptr.i.i60.i, align 4
  %tbl_size.i.i64.i = load i64, ptr %tbl_size_ptr.i.i61.i, align 4
  %offset_tbl.i.i65.i = load ptr, ptr %offset_tbl_ptr.i.i62.i, align 8
  %product.i.i.i66.i = mul i64 %hash_coef.i.i63.i, 4015701072841558310
  %shifted.i.i.i67.i = lshr i64 %product.i.i.i66.i, 32
  %xored.i.i.i68.i = xor i64 %shifted.i.i.i67.i, %product.i.i.i66.i
  %hash.i.i.i69.i = and i64 %xored.i.i.i68.i, %tbl_size.i.i64.i
  %offset_ptr.i.i70.i = getelementptr i32, ptr %offset_tbl.i.i65.i, i64 %hash.i.i.i69.i
  %offset.i.i71.i = load i32, ptr %offset_ptr.i.i70.i, align 4
  %546 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %547 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %548 = icmp ult i32 %.0308.i, 99
  br i1 %548, label %509, label %552

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit: ; preds = %509
  %549 = load i32, ptr %56, align 4
  %550 = add i32 %549, 1
  %551 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %550, ptr %56, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %31)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %32)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %33)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %34)
  br label %CuckooMap_insert_keyK_valueV.exit

552:                                              ; preds = %.cont.i
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %31)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %32)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %33)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %34)
  %553 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %554 = load ptr, ptr %51, align 8
  %555 = load ptr, ptr %52, align 8
  %556 = load i32, ptr %50, align 8
  %557 = shl i32 %556, 1
  %spec.select.i402 = call i32 @llvm.smax.i32(i32 %557, i32 noundef 16) #37
  store i32 %spec.select.i402, ptr %50, align 8
  %558 = zext nneg i32 %spec.select.i402 to i64
  %559 = shl nuw nsw i64 %558, 5
  %result.i.i403 = call noalias ptr @bump_malloc_inner(i64 noundef %559, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i403, ptr %51, align 8
  %result.i1.i404 = call noalias ptr @bump_malloc_inner(i64 noundef %559, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i404, ptr %52, align 8
  store i32 0, ptr %56, align 4
  %560 = icmp sgt i32 %556, 0
  br i1 %560, label %.lr.ph.i793, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861

.lr.ph.i793:                                      ; preds = %552, %._crit_edge.i808
  %.045.i806 = phi i32 [ %617, %._crit_edge.i808 ], [ 0, %552 ]
  %561 = zext nneg i32 %.045.i806 to i64
  %562 = shl nuw nsw i64 %561, 5
  %563 = getelementptr i8, ptr %554, i64 %562
  %564 = load ptr, ptr %563, align 8
  %565 = icmp ne ptr %564, @nil_typ
  %566 = icmp ne ptr %564, null
  %.not16.i807 = and i1 %565, %566
  br i1 %.not16.i807, label %567, label %._crit_edge.i808

567:                                              ; preds = %.lr.ph.i793
  %568 = getelementptr i8, ptr %563, i64 8
  %569 = load i64, ptr %568, align 4
  %.sroa_idx.i809 = getelementptr i8, ptr %563, i64 16
  %570 = load i64, ptr %.sroa_idx.i809, align 4
  %hash_coef_ptr.i.i3.i810 = getelementptr i8, ptr %564, i64 8
  %tbl_size_ptr.i.i4.i811 = getelementptr i8, ptr %564, i64 16
  %offset_tbl_ptr.i.i5.i812 = getelementptr i8, ptr %564, i64 40
  %571 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %15)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %16)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %17)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %18)
  %hash_coef.i.i17.i1124 = load i64, ptr %hash_coef_ptr.i.i3.i810, align 4, !noalias !23
  %tbl_size.i.i18.i1125 = load i64, ptr %tbl_size_ptr.i.i4.i811, align 4, !noalias !23
  %offset_tbl.i.i19.i1126 = load ptr, ptr %offset_tbl_ptr.i.i5.i812, align 8, !noalias !23
  %product.i.i.i20.i1127 = mul i64 %hash_coef.i.i17.i1124, 4015701072841558310
  %shifted.i.i.i21.i1128 = lshr i64 %product.i.i.i20.i1127, 32
  %xored.i.i.i22.i1129 = xor i64 %shifted.i.i.i21.i1128, %product.i.i.i20.i1127
  %hash.i.i.i23.i1130 = and i64 %xored.i.i.i22.i1129, %tbl_size.i.i18.i1125
  %offset_ptr.i.i24.i1131 = getelementptr i32, ptr %offset_tbl.i.i19.i1126, i64 %hash.i.i.i23.i1130
  %offset.i.i39.i1132 = load i32, ptr %offset_ptr.i.i24.i1131, align 4, !noalias !30
  %572 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %573 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %574 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %575

575:                                              ; preds = %.cont.i1155, %567
  %.0308.i1133 = phi i32 [ 0, %567 ], [ %608, %.cont.i1155 ]
  %.070307.i1134 = phi i1 [ true, %567 ], [ %609, %.cont.i1155 ]
  %.sroa.0.0306.i1135 = phi ptr [ %564, %567 ], [ %598, %.cont.i1155 ]
  %.sroa.6.0305.i1136.in = phi i64 [ %569, %567 ], [ %600, %.cont.i1155 ]
  %.sroa.12.0304.i1137.in = phi i64 [ %570, %567 ], [ %601, %.cont.i1155 ]
  %.sroa.17.0303.i1138 = phi i32 [ %offset.i.i39.i1132, %567 ], [ %offset.i.i71.i1169, %.cont.i1155 ]
  %.sroa.12.0304.i1137 = inttoptr i64 %.sroa.12.0304.i1137.in to ptr
  %.sroa.6.0305.i1136 = inttoptr i64 %.sroa.6.0305.i1136.in to ptr
  %576 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1135, 0
  %577 = insertvalue { ptr, ptr, ptr, i32 } %576, ptr %.sroa.6.0305.i1136, 1
  %578 = insertvalue { ptr, ptr, ptr, i32 } %577, ptr %.sroa.12.0304.i1137, 2
  %579 = insertvalue { ptr, ptr, ptr, i32 } %578, i32 %.sroa.17.0303.i1138, 3
  %580 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1135)
  %581 = sext i32 %.sroa.17.0303.i1138 to i64
  %582 = getelementptr ptr, ptr %.sroa.0.0306.i1135, i64 %581
  %583 = getelementptr i8, ptr %582, i64 64
  %584 = load ptr, ptr %583, align 8
  %result.i43.i1139 = call ptr %584({ ptr, ptr, ptr, i32 } %579, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %585 = call i32 %result.i43.i1139({ ptr, ptr, ptr, i32 } %579, { ptr, ptr, ptr, i32 } %579, ptr nonnull align 8 %2) #42
  %..i1140 = select i1 %.070307.i1134, ptr %15, ptr %17
  %.184.i1141 = select i1 %.070307.i1134, i64 104, i64 112
  %.185.i1142 = select i1 %.070307.i1134, ptr %16, ptr %18
  %.186.i1143 = select i1 %.070307.i1134, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1140, align 8
  %586 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1140)
  %587 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1141
  %588 = load ptr, ptr %587, align 8
  store ptr @i32_typ, ptr %.185.i1142, align 8
  %result.i44.i1144 = call ptr %588({ ptr, ptr, ptr, i32 } %60, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1142) #45
  %589 = call i32 %result.i44.i1144({ ptr, ptr, ptr, i32 } %60, { ptr, ptr, ptr, i32 } %60, ptr nonnull align 8 dereferenceable(8) %..i1140, i32 %585) #42
  %590 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %591 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1143
  %592 = load ptr, ptr %591, align 8
  %593 = load ptr, ptr %592, align 8
  %594 = call { ptr } %593(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i1145 = extractvalue { ptr } %594, 0
  %595 = sext i32 %589 to i64
  %596 = shl nsw i64 %595, 5
  %597 = getelementptr i8, ptr %.fca.0.extract53.i1145, i64 %596
  %598 = load ptr, ptr %597, align 8
  %599 = getelementptr i8, ptr %597, i64 8
  %600 = load i64, ptr %599, align 4
  %.sroa_idx.i1146 = getelementptr i8, ptr %597, i64 16
  %601 = load i64, ptr %.sroa_idx.i1146, align 4
  %602 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %603 = call { ptr } %593(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i1147 = extractvalue { ptr } %603, 0
  %604 = getelementptr i8, ptr %.fca.0.extract51.i1147, i64 %596
  store ptr %.sroa.0.0306.i1135, ptr %604, align 8
  %605 = getelementptr i8, ptr %604, i64 8
  store i64 %.sroa.6.0305.i1136.in, ptr %605, align 4
  %.sroa_idx100.i1148 = getelementptr i8, ptr %604, i64 16
  store i64 %.sroa.12.0304.i1137.in, ptr %.sroa_idx100.i1148, align 4
  %.sroa_idx101.i1149 = getelementptr i8, ptr %604, i64 24
  store i32 %.sroa.17.0303.i1138, ptr %.sroa_idx101.i1149, align 4
  %606 = icmp ne ptr %598, @nil_typ
  %607 = icmp ne ptr %598, null
  %.not90.i1150 = and i1 %606, %607
  br i1 %.not90.i1150, label %.cont.i1155, label %613

.cont.i1155:                                      ; preds = %575
  %608 = add nuw nsw i32 %.0308.i1133, 1
  %609 = xor i1 %.070307.i1134, true
  %hash_coef_ptr.i.i60.i1158 = getelementptr i8, ptr %598, i64 8
  %tbl_size_ptr.i.i61.i1159 = getelementptr i8, ptr %598, i64 16
  %offset_tbl_ptr.i.i62.i1160 = getelementptr i8, ptr %598, i64 40
  %hash_coef.i.i63.i1161 = load i64, ptr %hash_coef_ptr.i.i60.i1158, align 4
  %tbl_size.i.i64.i1162 = load i64, ptr %tbl_size_ptr.i.i61.i1159, align 4
  %offset_tbl.i.i65.i1163 = load ptr, ptr %offset_tbl_ptr.i.i62.i1160, align 8
  %product.i.i.i66.i1164 = mul i64 %hash_coef.i.i63.i1161, 4015701072841558310
  %shifted.i.i.i67.i1165 = lshr i64 %product.i.i.i66.i1164, 32
  %xored.i.i.i68.i1166 = xor i64 %shifted.i.i.i67.i1165, %product.i.i.i66.i1164
  %hash.i.i.i69.i1167 = and i64 %xored.i.i.i68.i1166, %tbl_size.i.i64.i1162
  %offset_ptr.i.i70.i1168 = getelementptr i32, ptr %offset_tbl.i.i65.i1163, i64 %hash.i.i.i69.i1167
  %offset.i.i71.i1169 = load i32, ptr %offset_ptr.i.i70.i1168, align 4
  %610 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %611 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %612 = icmp ult i32 %.0308.i1133, 99
  br i1 %612, label %575, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1178

613:                                              ; preds = %575
  %614 = load i32, ptr %56, align 4
  %615 = add i32 %614, 1
  %616 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %615, ptr %56, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1178

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1178: ; preds = %.cont.i1155, %613
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %15)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %16)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %17)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %18)
  br label %._crit_edge.i808

._crit_edge.i808:                                 ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1178, %.lr.ph.i793
  %617 = add nuw nsw i32 %.045.i806, 1
  %618 = icmp slt i32 %617, %556
  br i1 %618, label %.lr.ph.i793, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit826

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit826: ; preds = %._crit_edge.i808, %._crit_edge.i843
  %.045.i841 = phi i32 [ %675, %._crit_edge.i843 ], [ 0, %._crit_edge.i808 ]
  %619 = zext nneg i32 %.045.i841 to i64
  %620 = shl nuw nsw i64 %619, 5
  %621 = getelementptr i8, ptr %555, i64 %620
  %622 = load ptr, ptr %621, align 8
  %623 = icmp ne ptr %622, @nil_typ
  %624 = icmp ne ptr %622, null
  %.not16.i842 = and i1 %623, %624
  br i1 %.not16.i842, label %625, label %._crit_edge.i843

625:                                              ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit826
  %626 = getelementptr i8, ptr %621, i64 8
  %627 = load i64, ptr %626, align 4
  %.sroa_idx.i844 = getelementptr i8, ptr %621, i64 16
  %628 = load i64, ptr %.sroa_idx.i844, align 4
  %hash_coef_ptr.i.i3.i845 = getelementptr i8, ptr %622, i64 8
  %tbl_size_ptr.i.i4.i846 = getelementptr i8, ptr %622, i64 16
  %offset_tbl_ptr.i.i5.i847 = getelementptr i8, ptr %622, i64 40
  %629 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %11)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %12)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %13)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %14)
  %hash_coef.i.i17.i1196 = load i64, ptr %hash_coef_ptr.i.i3.i845, align 4, !noalias !23
  %tbl_size.i.i18.i1197 = load i64, ptr %tbl_size_ptr.i.i4.i846, align 4, !noalias !23
  %offset_tbl.i.i19.i1198 = load ptr, ptr %offset_tbl_ptr.i.i5.i847, align 8, !noalias !23
  %product.i.i.i20.i1199 = mul i64 %hash_coef.i.i17.i1196, 4015701072841558310
  %shifted.i.i.i21.i1200 = lshr i64 %product.i.i.i20.i1199, 32
  %xored.i.i.i22.i1201 = xor i64 %shifted.i.i.i21.i1200, %product.i.i.i20.i1199
  %hash.i.i.i23.i1202 = and i64 %xored.i.i.i22.i1201, %tbl_size.i.i18.i1197
  %offset_ptr.i.i24.i1203 = getelementptr i32, ptr %offset_tbl.i.i19.i1198, i64 %hash.i.i.i23.i1202
  %offset.i.i39.i1204 = load i32, ptr %offset_ptr.i.i24.i1203, align 4, !noalias !33
  %630 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %631 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %632 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %633

633:                                              ; preds = %.cont.i1227, %625
  %.0308.i1205 = phi i32 [ 0, %625 ], [ %666, %.cont.i1227 ]
  %.070307.i1206 = phi i1 [ true, %625 ], [ %667, %.cont.i1227 ]
  %.sroa.0.0306.i1207 = phi ptr [ %622, %625 ], [ %656, %.cont.i1227 ]
  %.sroa.6.0305.i1208.in = phi i64 [ %627, %625 ], [ %658, %.cont.i1227 ]
  %.sroa.12.0304.i1209.in = phi i64 [ %628, %625 ], [ %659, %.cont.i1227 ]
  %.sroa.17.0303.i1210 = phi i32 [ %offset.i.i39.i1204, %625 ], [ %offset.i.i71.i1241, %.cont.i1227 ]
  %.sroa.12.0304.i1209 = inttoptr i64 %.sroa.12.0304.i1209.in to ptr
  %.sroa.6.0305.i1208 = inttoptr i64 %.sroa.6.0305.i1208.in to ptr
  %634 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1207, 0
  %635 = insertvalue { ptr, ptr, ptr, i32 } %634, ptr %.sroa.6.0305.i1208, 1
  %636 = insertvalue { ptr, ptr, ptr, i32 } %635, ptr %.sroa.12.0304.i1209, 2
  %637 = insertvalue { ptr, ptr, ptr, i32 } %636, i32 %.sroa.17.0303.i1210, 3
  %638 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1207)
  %639 = sext i32 %.sroa.17.0303.i1210 to i64
  %640 = getelementptr ptr, ptr %.sroa.0.0306.i1207, i64 %639
  %641 = getelementptr i8, ptr %640, i64 64
  %642 = load ptr, ptr %641, align 8
  %result.i43.i1211 = call ptr %642({ ptr, ptr, ptr, i32 } %637, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %643 = call i32 %result.i43.i1211({ ptr, ptr, ptr, i32 } %637, { ptr, ptr, ptr, i32 } %637, ptr nonnull align 8 %2) #42
  %..i1212 = select i1 %.070307.i1206, ptr %11, ptr %13
  %.184.i1213 = select i1 %.070307.i1206, i64 104, i64 112
  %.185.i1214 = select i1 %.070307.i1206, ptr %12, ptr %14
  %.186.i1215 = select i1 %.070307.i1206, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1212, align 8
  %644 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1212)
  %645 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1213
  %646 = load ptr, ptr %645, align 8
  store ptr @i32_typ, ptr %.185.i1214, align 8
  %result.i44.i1216 = call ptr %646({ ptr, ptr, ptr, i32 } %60, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1214) #45
  %647 = call i32 %result.i44.i1216({ ptr, ptr, ptr, i32 } %60, { ptr, ptr, ptr, i32 } %60, ptr nonnull align 8 dereferenceable(8) %..i1212, i32 %643) #42
  %648 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %649 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1215
  %650 = load ptr, ptr %649, align 8
  %651 = load ptr, ptr %650, align 8
  %652 = call { ptr } %651(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i1217 = extractvalue { ptr } %652, 0
  %653 = sext i32 %647 to i64
  %654 = shl nsw i64 %653, 5
  %655 = getelementptr i8, ptr %.fca.0.extract53.i1217, i64 %654
  %656 = load ptr, ptr %655, align 8
  %657 = getelementptr i8, ptr %655, i64 8
  %658 = load i64, ptr %657, align 4
  %.sroa_idx.i1218 = getelementptr i8, ptr %655, i64 16
  %659 = load i64, ptr %.sroa_idx.i1218, align 4
  %660 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %661 = call { ptr } %651(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i1219 = extractvalue { ptr } %661, 0
  %662 = getelementptr i8, ptr %.fca.0.extract51.i1219, i64 %654
  store ptr %.sroa.0.0306.i1207, ptr %662, align 8
  %663 = getelementptr i8, ptr %662, i64 8
  store i64 %.sroa.6.0305.i1208.in, ptr %663, align 4
  %.sroa_idx100.i1220 = getelementptr i8, ptr %662, i64 16
  store i64 %.sroa.12.0304.i1209.in, ptr %.sroa_idx100.i1220, align 4
  %.sroa_idx101.i1221 = getelementptr i8, ptr %662, i64 24
  store i32 %.sroa.17.0303.i1210, ptr %.sroa_idx101.i1221, align 4
  %664 = icmp ne ptr %656, @nil_typ
  %665 = icmp ne ptr %656, null
  %.not90.i1222 = and i1 %664, %665
  br i1 %.not90.i1222, label %.cont.i1227, label %671

.cont.i1227:                                      ; preds = %633
  %666 = add nuw nsw i32 %.0308.i1205, 1
  %667 = xor i1 %.070307.i1206, true
  %hash_coef_ptr.i.i60.i1230 = getelementptr i8, ptr %656, i64 8
  %tbl_size_ptr.i.i61.i1231 = getelementptr i8, ptr %656, i64 16
  %offset_tbl_ptr.i.i62.i1232 = getelementptr i8, ptr %656, i64 40
  %hash_coef.i.i63.i1233 = load i64, ptr %hash_coef_ptr.i.i60.i1230, align 4
  %tbl_size.i.i64.i1234 = load i64, ptr %tbl_size_ptr.i.i61.i1231, align 4
  %offset_tbl.i.i65.i1235 = load ptr, ptr %offset_tbl_ptr.i.i62.i1232, align 8
  %product.i.i.i66.i1236 = mul i64 %hash_coef.i.i63.i1233, 4015701072841558310
  %shifted.i.i.i67.i1237 = lshr i64 %product.i.i.i66.i1236, 32
  %xored.i.i.i68.i1238 = xor i64 %shifted.i.i.i67.i1237, %product.i.i.i66.i1236
  %hash.i.i.i69.i1239 = and i64 %xored.i.i.i68.i1238, %tbl_size.i.i64.i1234
  %offset_ptr.i.i70.i1240 = getelementptr i32, ptr %offset_tbl.i.i65.i1235, i64 %hash.i.i.i69.i1239
  %offset.i.i71.i1241 = load i32, ptr %offset_ptr.i.i70.i1240, align 4
  %668 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %669 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %670 = icmp ult i32 %.0308.i1205, 99
  br i1 %670, label %633, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1250

671:                                              ; preds = %633
  %672 = load i32, ptr %56, align 4
  %673 = add i32 %672, 1
  %674 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %673, ptr %56, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1250

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1250: ; preds = %.cont.i1227, %671
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %11)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %12)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %13)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %14)
  br label %._crit_edge.i843

._crit_edge.i843:                                 ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1250, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit826
  %675 = add nuw nsw i32 %.045.i841, 1
  %676 = icmp slt i32 %675, %556
  br i1 %676, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit826, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861: ; preds = %._crit_edge.i843, %552
  %677 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %27)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %28)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %29)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %30)
  %hash_coef.i.i17.i427 = load i64, ptr %hash_coef_ptr.i.i60.i, align 4, !noalias !23
  %tbl_size.i.i18.i428 = load i64, ptr %tbl_size_ptr.i.i61.i, align 4, !noalias !23
  %offset_tbl.i.i19.i429 = load ptr, ptr %offset_tbl_ptr.i.i62.i, align 8, !noalias !23
  %product.i.i.i20.i430 = mul i64 %hash_coef.i.i17.i427, 4015701072841558310
  %shifted.i.i.i21.i431 = lshr i64 %product.i.i.i20.i430, 32
  %xored.i.i.i22.i432 = xor i64 %shifted.i.i.i21.i431, %product.i.i.i20.i430
  %hash.i.i.i23.i433 = and i64 %xored.i.i.i22.i432, %tbl_size.i.i18.i428
  %offset_ptr.i.i24.i434 = getelementptr i32, ptr %offset_tbl.i.i19.i429, i64 %hash.i.i.i23.i433
  %offset.i.i39.i435 = load i32, ptr %offset_ptr.i.i24.i434, align 4, !noalias !36
  %678 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %679 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %680 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %681

681:                                              ; preds = %.cont.i459, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861
  %.0308.i437 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861 ], [ %714, %.cont.i459 ]
  %.070307.i438 = phi i1 [ true, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861 ], [ %715, %.cont.i459 ]
  %.sroa.0.0306.i439 = phi ptr [ %532, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861 ], [ %704, %.cont.i459 ]
  %.sroa.6.0305.i440.in = phi i64 [ %534, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861 ], [ %706, %.cont.i459 ]
  %.sroa.12.0304.i441.in = phi i64 [ %535, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861 ], [ %707, %.cont.i459 ]
  %.sroa.17.0303.i442 = phi i32 [ %offset.i.i39.i435, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861 ], [ %offset.i.i71.i473, %.cont.i459 ]
  %.sroa.12.0304.i441 = inttoptr i64 %.sroa.12.0304.i441.in to ptr
  %.sroa.6.0305.i440 = inttoptr i64 %.sroa.6.0305.i440.in to ptr
  %682 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i439, 0
  %683 = insertvalue { ptr, ptr, ptr, i32 } %682, ptr %.sroa.6.0305.i440, 1
  %684 = insertvalue { ptr, ptr, ptr, i32 } %683, ptr %.sroa.12.0304.i441, 2
  %685 = insertvalue { ptr, ptr, ptr, i32 } %684, i32 %.sroa.17.0303.i442, 3
  %686 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i439)
  %687 = sext i32 %.sroa.17.0303.i442 to i64
  %688 = getelementptr ptr, ptr %.sroa.0.0306.i439, i64 %687
  %689 = getelementptr i8, ptr %688, i64 64
  %690 = load ptr, ptr %689, align 8
  %result.i43.i443 = call ptr %690({ ptr, ptr, ptr, i32 } %685, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %691 = call i32 %result.i43.i443({ ptr, ptr, ptr, i32 } %685, { ptr, ptr, ptr, i32 } %685, ptr nonnull align 8 %2) #42
  %..i444 = select i1 %.070307.i438, ptr %27, ptr %29
  %.184.i445 = select i1 %.070307.i438, i64 104, i64 112
  %.185.i446 = select i1 %.070307.i438, ptr %28, ptr %30
  %.186.i447 = select i1 %.070307.i438, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i444, align 8
  %692 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i444)
  %693 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i445
  %694 = load ptr, ptr %693, align 8
  store ptr @i32_typ, ptr %.185.i446, align 8
  %result.i44.i448 = call ptr %694({ ptr, ptr, ptr, i32 } %59, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i446) #45
  %695 = call i32 %result.i44.i448({ ptr, ptr, ptr, i32 } %59, { ptr, ptr, ptr, i32 } %59, ptr nonnull align 8 dereferenceable(8) %..i444, i32 %691) #42
  %696 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %697 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i447
  %698 = load ptr, ptr %697, align 8
  %699 = load ptr, ptr %698, align 8
  %700 = call { ptr } %699(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i449 = extractvalue { ptr } %700, 0
  %701 = sext i32 %695 to i64
  %702 = shl nsw i64 %701, 5
  %703 = getelementptr i8, ptr %.fca.0.extract53.i449, i64 %702
  %704 = load ptr, ptr %703, align 8
  %705 = getelementptr i8, ptr %703, i64 8
  %706 = load i64, ptr %705, align 4
  %.sroa_idx.i450 = getelementptr i8, ptr %703, i64 16
  %707 = load i64, ptr %.sroa_idx.i450, align 4
  %708 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %709 = call { ptr } %699(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i451 = extractvalue { ptr } %709, 0
  %710 = getelementptr i8, ptr %.fca.0.extract51.i451, i64 %702
  store ptr %.sroa.0.0306.i439, ptr %710, align 8
  %711 = getelementptr i8, ptr %710, i64 8
  store i64 %.sroa.6.0305.i440.in, ptr %711, align 4
  %.sroa_idx100.i452 = getelementptr i8, ptr %710, i64 16
  store i64 %.sroa.12.0304.i441.in, ptr %.sroa_idx100.i452, align 4
  %.sroa_idx101.i453 = getelementptr i8, ptr %710, i64 24
  store i32 %.sroa.17.0303.i442, ptr %.sroa_idx101.i453, align 4
  %712 = icmp ne ptr %704, @nil_typ
  %713 = icmp ne ptr %704, null
  %.not90.i454 = and i1 %712, %713
  br i1 %.not90.i454, label %.cont.i459, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit482

.cont.i459:                                       ; preds = %681
  %714 = add nuw nsw i32 %.0308.i437, 1
  %715 = xor i1 %.070307.i438, true
  %hash_coef_ptr.i.i60.i462 = getelementptr i8, ptr %704, i64 8
  %tbl_size_ptr.i.i61.i463 = getelementptr i8, ptr %704, i64 16
  %offset_tbl_ptr.i.i62.i464 = getelementptr i8, ptr %704, i64 40
  %hash_coef.i.i63.i465 = load i64, ptr %hash_coef_ptr.i.i60.i462, align 4
  %tbl_size.i.i64.i466 = load i64, ptr %tbl_size_ptr.i.i61.i463, align 4
  %offset_tbl.i.i65.i467 = load ptr, ptr %offset_tbl_ptr.i.i62.i464, align 8
  %product.i.i.i66.i468 = mul i64 %hash_coef.i.i63.i465, 4015701072841558310
  %shifted.i.i.i67.i469 = lshr i64 %product.i.i.i66.i468, 32
  %xored.i.i.i68.i470 = xor i64 %shifted.i.i.i67.i469, %product.i.i.i66.i468
  %hash.i.i.i69.i471 = and i64 %xored.i.i.i68.i470, %tbl_size.i.i64.i466
  %offset_ptr.i.i70.i472 = getelementptr i32, ptr %offset_tbl.i.i65.i467, i64 %hash.i.i.i69.i471
  %offset.i.i71.i473 = load i32, ptr %offset_ptr.i.i70.i472, align 4
  %716 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %717 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %718 = icmp ult i32 %.0308.i437, 99
  br i1 %718, label %681, label %722

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit482: ; preds = %681
  %719 = load i32, ptr %56, align 4
  %720 = add i32 %719, 1
  %721 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %720, ptr %56, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %27)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %28)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %29)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %30)
  br label %CuckooMap_insert_keyK_valueV.exit

722:                                              ; preds = %.cont.i459
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %27)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %28)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %29)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %30)
  %723 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %724 = load ptr, ptr %51, align 8
  %725 = load ptr, ptr %52, align 8
  %726 = load i32, ptr %50, align 8
  %727 = shl i32 %726, 1
  %spec.select.i498 = call i32 @llvm.smax.i32(i32 %727, i32 noundef 16) #37
  store i32 %spec.select.i498, ptr %50, align 8
  %728 = zext nneg i32 %spec.select.i498 to i64
  %729 = shl nuw nsw i64 %728, 5
  %result.i.i499 = call noalias ptr @bump_malloc_inner(i64 noundef %729, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i499, ptr %51, align 8
  %result.i1.i500 = call noalias ptr @bump_malloc_inner(i64 noundef %729, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i500, ptr %52, align 8
  store i32 0, ptr %56, align 4
  %730 = icmp sgt i32 %726, 0
  br i1 %730, label %.lr.ph.i863, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit896.thread

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit896.thread: ; preds = %722
  %731 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %CuckooMap_insert_keyK_valueV.exit

.lr.ph.i863:                                      ; preds = %722, %._crit_edge.i878
  %.045.i876 = phi i32 [ %788, %._crit_edge.i878 ], [ 0, %722 ]
  %732 = zext nneg i32 %.045.i876 to i64
  %733 = shl nuw nsw i64 %732, 5
  %734 = getelementptr i8, ptr %724, i64 %733
  %735 = load ptr, ptr %734, align 8
  %736 = icmp ne ptr %735, @nil_typ
  %737 = icmp ne ptr %735, null
  %.not16.i877 = and i1 %736, %737
  br i1 %.not16.i877, label %738, label %._crit_edge.i878

738:                                              ; preds = %.lr.ph.i863
  %739 = getelementptr i8, ptr %734, i64 8
  %740 = load i64, ptr %739, align 4
  %.sroa_idx.i879 = getelementptr i8, ptr %734, i64 16
  %741 = load i64, ptr %.sroa_idx.i879, align 4
  %hash_coef_ptr.i.i3.i880 = getelementptr i8, ptr %735, i64 8
  %tbl_size_ptr.i.i4.i881 = getelementptr i8, ptr %735, i64 16
  %offset_tbl_ptr.i.i5.i882 = getelementptr i8, ptr %735, i64 40
  %742 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %7)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %8)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %9)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %10)
  %hash_coef.i.i17.i1268 = load i64, ptr %hash_coef_ptr.i.i3.i880, align 4, !noalias !23
  %tbl_size.i.i18.i1269 = load i64, ptr %tbl_size_ptr.i.i4.i881, align 4, !noalias !23
  %offset_tbl.i.i19.i1270 = load ptr, ptr %offset_tbl_ptr.i.i5.i882, align 8, !noalias !23
  %product.i.i.i20.i1271 = mul i64 %hash_coef.i.i17.i1268, 4015701072841558310
  %shifted.i.i.i21.i1272 = lshr i64 %product.i.i.i20.i1271, 32
  %xored.i.i.i22.i1273 = xor i64 %shifted.i.i.i21.i1272, %product.i.i.i20.i1271
  %hash.i.i.i23.i1274 = and i64 %xored.i.i.i22.i1273, %tbl_size.i.i18.i1269
  %offset_ptr.i.i24.i1275 = getelementptr i32, ptr %offset_tbl.i.i19.i1270, i64 %hash.i.i.i23.i1274
  %offset.i.i39.i1276 = load i32, ptr %offset_ptr.i.i24.i1275, align 4, !noalias !39
  %743 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %744 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %745 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %746

746:                                              ; preds = %.cont.i1299, %738
  %.0308.i1277 = phi i32 [ 0, %738 ], [ %779, %.cont.i1299 ]
  %.070307.i1278 = phi i1 [ true, %738 ], [ %780, %.cont.i1299 ]
  %.sroa.0.0306.i1279 = phi ptr [ %735, %738 ], [ %769, %.cont.i1299 ]
  %.sroa.6.0305.i1280.in = phi i64 [ %740, %738 ], [ %771, %.cont.i1299 ]
  %.sroa.12.0304.i1281.in = phi i64 [ %741, %738 ], [ %772, %.cont.i1299 ]
  %.sroa.17.0303.i1282 = phi i32 [ %offset.i.i39.i1276, %738 ], [ %offset.i.i71.i1313, %.cont.i1299 ]
  %.sroa.12.0304.i1281 = inttoptr i64 %.sroa.12.0304.i1281.in to ptr
  %.sroa.6.0305.i1280 = inttoptr i64 %.sroa.6.0305.i1280.in to ptr
  %747 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1279, 0
  %748 = insertvalue { ptr, ptr, ptr, i32 } %747, ptr %.sroa.6.0305.i1280, 1
  %749 = insertvalue { ptr, ptr, ptr, i32 } %748, ptr %.sroa.12.0304.i1281, 2
  %750 = insertvalue { ptr, ptr, ptr, i32 } %749, i32 %.sroa.17.0303.i1282, 3
  %751 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1279)
  %752 = sext i32 %.sroa.17.0303.i1282 to i64
  %753 = getelementptr ptr, ptr %.sroa.0.0306.i1279, i64 %752
  %754 = getelementptr i8, ptr %753, i64 64
  %755 = load ptr, ptr %754, align 8
  %result.i43.i1283 = call ptr %755({ ptr, ptr, ptr, i32 } %750, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %756 = call i32 %result.i43.i1283({ ptr, ptr, ptr, i32 } %750, { ptr, ptr, ptr, i32 } %750, ptr nonnull align 8 %2) #42
  %..i1284 = select i1 %.070307.i1278, ptr %7, ptr %9
  %.184.i1285 = select i1 %.070307.i1278, i64 104, i64 112
  %.185.i1286 = select i1 %.070307.i1278, ptr %8, ptr %10
  %.186.i1287 = select i1 %.070307.i1278, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1284, align 8
  %757 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1284)
  %758 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1285
  %759 = load ptr, ptr %758, align 8
  store ptr @i32_typ, ptr %.185.i1286, align 8
  %result.i44.i1288 = call ptr %759({ ptr, ptr, ptr, i32 } %60, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1286) #45
  %760 = call i32 %result.i44.i1288({ ptr, ptr, ptr, i32 } %60, { ptr, ptr, ptr, i32 } %60, ptr nonnull align 8 dereferenceable(8) %..i1284, i32 %756) #42
  %761 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %762 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1287
  %763 = load ptr, ptr %762, align 8
  %764 = load ptr, ptr %763, align 8
  %765 = call { ptr } %764(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i1289 = extractvalue { ptr } %765, 0
  %766 = sext i32 %760 to i64
  %767 = shl nsw i64 %766, 5
  %768 = getelementptr i8, ptr %.fca.0.extract53.i1289, i64 %767
  %769 = load ptr, ptr %768, align 8
  %770 = getelementptr i8, ptr %768, i64 8
  %771 = load i64, ptr %770, align 4
  %.sroa_idx.i1290 = getelementptr i8, ptr %768, i64 16
  %772 = load i64, ptr %.sroa_idx.i1290, align 4
  %773 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %774 = call { ptr } %764(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i1291 = extractvalue { ptr } %774, 0
  %775 = getelementptr i8, ptr %.fca.0.extract51.i1291, i64 %767
  store ptr %.sroa.0.0306.i1279, ptr %775, align 8
  %776 = getelementptr i8, ptr %775, i64 8
  store i64 %.sroa.6.0305.i1280.in, ptr %776, align 4
  %.sroa_idx100.i1292 = getelementptr i8, ptr %775, i64 16
  store i64 %.sroa.12.0304.i1281.in, ptr %.sroa_idx100.i1292, align 4
  %.sroa_idx101.i1293 = getelementptr i8, ptr %775, i64 24
  store i32 %.sroa.17.0303.i1282, ptr %.sroa_idx101.i1293, align 4
  %777 = icmp ne ptr %769, @nil_typ
  %778 = icmp ne ptr %769, null
  %.not90.i1294 = and i1 %777, %778
  br i1 %.not90.i1294, label %.cont.i1299, label %784

.cont.i1299:                                      ; preds = %746
  %779 = add nuw nsw i32 %.0308.i1277, 1
  %780 = xor i1 %.070307.i1278, true
  %hash_coef_ptr.i.i60.i1302 = getelementptr i8, ptr %769, i64 8
  %tbl_size_ptr.i.i61.i1303 = getelementptr i8, ptr %769, i64 16
  %offset_tbl_ptr.i.i62.i1304 = getelementptr i8, ptr %769, i64 40
  %hash_coef.i.i63.i1305 = load i64, ptr %hash_coef_ptr.i.i60.i1302, align 4
  %tbl_size.i.i64.i1306 = load i64, ptr %tbl_size_ptr.i.i61.i1303, align 4
  %offset_tbl.i.i65.i1307 = load ptr, ptr %offset_tbl_ptr.i.i62.i1304, align 8
  %product.i.i.i66.i1308 = mul i64 %hash_coef.i.i63.i1305, 4015701072841558310
  %shifted.i.i.i67.i1309 = lshr i64 %product.i.i.i66.i1308, 32
  %xored.i.i.i68.i1310 = xor i64 %shifted.i.i.i67.i1309, %product.i.i.i66.i1308
  %hash.i.i.i69.i1311 = and i64 %xored.i.i.i68.i1310, %tbl_size.i.i64.i1306
  %offset_ptr.i.i70.i1312 = getelementptr i32, ptr %offset_tbl.i.i65.i1307, i64 %hash.i.i.i69.i1311
  %offset.i.i71.i1313 = load i32, ptr %offset_ptr.i.i70.i1312, align 4
  %781 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %782 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %783 = icmp ult i32 %.0308.i1277, 99
  br i1 %783, label %746, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1322

784:                                              ; preds = %746
  %785 = load i32, ptr %56, align 4
  %786 = add i32 %785, 1
  %787 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %786, ptr %56, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1322

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1322: ; preds = %.cont.i1299, %784
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %8)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %9)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %10)
  br label %._crit_edge.i878

._crit_edge.i878:                                 ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1322, %.lr.ph.i863
  %788 = add nuw nsw i32 %.045.i876, 1
  %789 = icmp slt i32 %788, %726
  br i1 %789, label %.lr.ph.i863, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit896

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit896: ; preds = %._crit_edge.i878
  %790 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %791

791:                                              ; preds = %._crit_edge.i913, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit896
  %.045.i911 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit896 ], [ %848, %._crit_edge.i913 ]
  %792 = zext nneg i32 %.045.i911 to i64
  %793 = shl nuw nsw i64 %792, 5
  %794 = getelementptr i8, ptr %725, i64 %793
  %795 = load ptr, ptr %794, align 8
  %796 = icmp ne ptr %795, @nil_typ
  %797 = icmp ne ptr %795, null
  %.not16.i912 = and i1 %796, %797
  br i1 %.not16.i912, label %798, label %._crit_edge.i913

798:                                              ; preds = %791
  %799 = getelementptr i8, ptr %794, i64 8
  %800 = load i64, ptr %799, align 4
  %.sroa_idx.i914 = getelementptr i8, ptr %794, i64 16
  %801 = load i64, ptr %.sroa_idx.i914, align 4
  %hash_coef_ptr.i.i3.i915 = getelementptr i8, ptr %795, i64 8
  %tbl_size_ptr.i.i4.i916 = getelementptr i8, ptr %795, i64 16
  %offset_tbl_ptr.i.i5.i917 = getelementptr i8, ptr %795, i64 40
  %802 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %3)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %4)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %5)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %6)
  %hash_coef.i.i17.i1340 = load i64, ptr %hash_coef_ptr.i.i3.i915, align 4, !noalias !23
  %tbl_size.i.i18.i1341 = load i64, ptr %tbl_size_ptr.i.i4.i916, align 4, !noalias !23
  %offset_tbl.i.i19.i1342 = load ptr, ptr %offset_tbl_ptr.i.i5.i917, align 8, !noalias !23
  %product.i.i.i20.i1343 = mul i64 %hash_coef.i.i17.i1340, 4015701072841558310
  %shifted.i.i.i21.i1344 = lshr i64 %product.i.i.i20.i1343, 32
  %xored.i.i.i22.i1345 = xor i64 %shifted.i.i.i21.i1344, %product.i.i.i20.i1343
  %hash.i.i.i23.i1346 = and i64 %xored.i.i.i22.i1345, %tbl_size.i.i18.i1341
  %offset_ptr.i.i24.i1347 = getelementptr i32, ptr %offset_tbl.i.i19.i1342, i64 %hash.i.i.i23.i1346
  %offset.i.i39.i1348 = load i32, ptr %offset_ptr.i.i24.i1347, align 4, !noalias !42
  %803 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %804 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %805 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %806

806:                                              ; preds = %.cont.i1371, %798
  %.0308.i1349 = phi i32 [ 0, %798 ], [ %839, %.cont.i1371 ]
  %.070307.i1350 = phi i1 [ true, %798 ], [ %840, %.cont.i1371 ]
  %.sroa.0.0306.i1351 = phi ptr [ %795, %798 ], [ %829, %.cont.i1371 ]
  %.sroa.6.0305.i1352.in = phi i64 [ %800, %798 ], [ %831, %.cont.i1371 ]
  %.sroa.12.0304.i1353.in = phi i64 [ %801, %798 ], [ %832, %.cont.i1371 ]
  %.sroa.17.0303.i1354 = phi i32 [ %offset.i.i39.i1348, %798 ], [ %offset.i.i71.i1385, %.cont.i1371 ]
  %.sroa.12.0304.i1353 = inttoptr i64 %.sroa.12.0304.i1353.in to ptr
  %.sroa.6.0305.i1352 = inttoptr i64 %.sroa.6.0305.i1352.in to ptr
  %807 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1351, 0
  %808 = insertvalue { ptr, ptr, ptr, i32 } %807, ptr %.sroa.6.0305.i1352, 1
  %809 = insertvalue { ptr, ptr, ptr, i32 } %808, ptr %.sroa.12.0304.i1353, 2
  %810 = insertvalue { ptr, ptr, ptr, i32 } %809, i32 %.sroa.17.0303.i1354, 3
  %811 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1351)
  %812 = sext i32 %.sroa.17.0303.i1354 to i64
  %813 = getelementptr ptr, ptr %.sroa.0.0306.i1351, i64 %812
  %814 = getelementptr i8, ptr %813, i64 64
  %815 = load ptr, ptr %814, align 8
  %result.i43.i1355 = call ptr %815({ ptr, ptr, ptr, i32 } %810, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %816 = call i32 %result.i43.i1355({ ptr, ptr, ptr, i32 } %810, { ptr, ptr, ptr, i32 } %810, ptr nonnull align 8 %2) #42
  %..i1356 = select i1 %.070307.i1350, ptr %3, ptr %5
  %.184.i1357 = select i1 %.070307.i1350, i64 104, i64 112
  %.185.i1358 = select i1 %.070307.i1350, ptr %4, ptr %6
  %.186.i1359 = select i1 %.070307.i1350, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1356, align 8
  %817 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1356)
  %818 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1357
  %819 = load ptr, ptr %818, align 8
  store ptr @i32_typ, ptr %.185.i1358, align 8
  %result.i44.i1360 = call ptr %819({ ptr, ptr, ptr, i32 } %60, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1358) #45
  %820 = call i32 %result.i44.i1360({ ptr, ptr, ptr, i32 } %60, { ptr, ptr, ptr, i32 } %60, ptr nonnull align 8 dereferenceable(8) %..i1356, i32 %816) #42
  %821 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %822 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1359
  %823 = load ptr, ptr %822, align 8
  %824 = load ptr, ptr %823, align 8
  %825 = call { ptr } %824(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i1361 = extractvalue { ptr } %825, 0
  %826 = sext i32 %820 to i64
  %827 = shl nsw i64 %826, 5
  %828 = getelementptr i8, ptr %.fca.0.extract53.i1361, i64 %827
  %829 = load ptr, ptr %828, align 8
  %830 = getelementptr i8, ptr %828, i64 8
  %831 = load i64, ptr %830, align 4
  %.sroa_idx.i1362 = getelementptr i8, ptr %828, i64 16
  %832 = load i64, ptr %.sroa_idx.i1362, align 4
  %833 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %834 = call { ptr } %824(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i1363 = extractvalue { ptr } %834, 0
  %835 = getelementptr i8, ptr %.fca.0.extract51.i1363, i64 %827
  store ptr %.sroa.0.0306.i1351, ptr %835, align 8
  %836 = getelementptr i8, ptr %835, i64 8
  store i64 %.sroa.6.0305.i1352.in, ptr %836, align 4
  %.sroa_idx100.i1364 = getelementptr i8, ptr %835, i64 16
  store i64 %.sroa.12.0304.i1353.in, ptr %.sroa_idx100.i1364, align 4
  %.sroa_idx101.i1365 = getelementptr i8, ptr %835, i64 24
  store i32 %.sroa.17.0303.i1354, ptr %.sroa_idx101.i1365, align 4
  %837 = icmp ne ptr %829, @nil_typ
  %838 = icmp ne ptr %829, null
  %.not90.i1366 = and i1 %837, %838
  br i1 %.not90.i1366, label %.cont.i1371, label %844

.cont.i1371:                                      ; preds = %806
  %839 = add nuw nsw i32 %.0308.i1349, 1
  %840 = xor i1 %.070307.i1350, true
  %hash_coef_ptr.i.i60.i1374 = getelementptr i8, ptr %829, i64 8
  %tbl_size_ptr.i.i61.i1375 = getelementptr i8, ptr %829, i64 16
  %offset_tbl_ptr.i.i62.i1376 = getelementptr i8, ptr %829, i64 40
  %hash_coef.i.i63.i1377 = load i64, ptr %hash_coef_ptr.i.i60.i1374, align 4
  %tbl_size.i.i64.i1378 = load i64, ptr %tbl_size_ptr.i.i61.i1375, align 4
  %offset_tbl.i.i65.i1379 = load ptr, ptr %offset_tbl_ptr.i.i62.i1376, align 8
  %product.i.i.i66.i1380 = mul i64 %hash_coef.i.i63.i1377, 4015701072841558310
  %shifted.i.i.i67.i1381 = lshr i64 %product.i.i.i66.i1380, 32
  %xored.i.i.i68.i1382 = xor i64 %shifted.i.i.i67.i1381, %product.i.i.i66.i1380
  %hash.i.i.i69.i1383 = and i64 %xored.i.i.i68.i1382, %tbl_size.i.i64.i1378
  %offset_ptr.i.i70.i1384 = getelementptr i32, ptr %offset_tbl.i.i65.i1379, i64 %hash.i.i.i69.i1383
  %offset.i.i71.i1385 = load i32, ptr %offset_ptr.i.i70.i1384, align 4
  %841 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %842 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %843 = icmp ult i32 %.0308.i1349, 99
  br i1 %843, label %806, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1394

844:                                              ; preds = %806
  %845 = load i32, ptr %56, align 4
  %846 = add i32 %845, 1
  %847 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %846, ptr %56, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1394

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1394: ; preds = %.cont.i1371, %844
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %6)
  br label %._crit_edge.i913

._crit_edge.i913:                                 ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1394, %791
  %848 = add nuw nsw i32 %.045.i911, 1
  %849 = icmp slt i32 %848, %726
  br i1 %849, label %791, label %CuckooMap_insert_keyK_valueV.exit

CuckooMap_insert_keyK_valueV.exit:                ; preds = %._crit_edge.i913, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit896.thread, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit482, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit351, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %850 = icmp slt i32 %61, %0
  br i1 %850, label %._crit_edge, label %._crit_edge2

._crit_edge2:                                     ; preds = %CuckooMap_insert_keyK_valueV.exit
  %851 = call i64 @clock()
  %852 = add nsw i32 %0, -1
  %.sroa.0117.0.insert.ext = zext nneg i32 %852 to i160
  %853 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0117.0.insert.ext, 1
  %854 = load ptr, ptr %48, align 8
  %855 = call i32 %854({ ptr, i160 } %853) #42
  %856 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %857 = load i32, ptr %50, align 8
  %858 = add i32 %857, -1
  %859 = and i32 %858, %855
  %860 = load ptr, ptr %51, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %861 = sext i32 %859 to i64
  %862 = shl nsw i64 %861, 5
  %863 = getelementptr i8, ptr %860, i64 %862
  %864 = load ptr, ptr %863, align 8
  %865 = icmp ne ptr %864, @nil_typ
  %866 = icmp ne ptr %864, null
  %.not44.i = and i1 %865, %866
  br i1 %.not44.i, label %867, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

867:                                              ; preds = %._crit_edge2
  %868 = getelementptr i8, ptr %863, i64 8
  %869 = load i64, ptr %868, align 4
  %.sroa_idx.i545 = getelementptr i8, ptr %863, i64 16
  %870 = load i64, ptr %.sroa_idx.i545, align 4
  %871 = inttoptr i64 %869 to ptr
  %872 = inttoptr i64 %870 to ptr
  %hash_coef_ptr.i.i2.i = getelementptr i8, ptr %864, i64 8
  %tbl_size_ptr.i.i3.i = getelementptr i8, ptr %864, i64 16
  %offset_tbl_ptr.i.i4.i = getelementptr i8, ptr %864, i64 40
  %hash_coef.i.i5.i = load i64, ptr %hash_coef_ptr.i.i2.i, align 4, !noalias !45
  %tbl_size.i.i6.i = load i64, ptr %tbl_size_ptr.i.i3.i, align 4, !noalias !45
  %offset_tbl.i.i7.i = load ptr, ptr %offset_tbl_ptr.i.i4.i, align 8, !noalias !45
  %product.i.i.i8.i = mul i64 %hash_coef.i.i5.i, 4015701072841558310
  %shifted.i.i.i9.i = lshr i64 %product.i.i.i8.i, 32
  %xored.i.i.i10.i = xor i64 %shifted.i.i.i9.i, %product.i.i.i8.i
  %hash.i.i.i11.i = and i64 %xored.i.i.i10.i, %tbl_size.i.i6.i
  %offset_ptr.i.i12.i = getelementptr i32, ptr %offset_tbl.i.i7.i, i64 %hash.i.i.i11.i
  %offset.i.i13.i = load i32, ptr %offset_ptr.i.i12.i, align 4, !noalias !45
  %873 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %864, 0
  %874 = insertvalue { ptr, ptr, ptr, i32 } %873, ptr %871, 1
  %875 = insertvalue { ptr, ptr, ptr, i32 } %874, ptr %872, 2
  %876 = insertvalue { ptr, ptr, ptr, i32 } %875, i32 %offset.i.i13.i, 3
  %877 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %878 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %864) #37
  %879 = sext i32 %offset.i.i13.i to i64
  %880 = getelementptr ptr, ptr %864, i64 %879
  %881 = getelementptr i8, ptr %880, i64 64
  %882 = load ptr, ptr %881, align 8
  %result.i.i546 = call ptr %882({ ptr, ptr, ptr, i32 } %876, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %883 = call i32 %result.i.i546({ ptr, ptr, ptr, i32 } %876, { ptr, ptr, ptr, i32 } %876, ptr nonnull align 8 %2) #42
  %884 = icmp eq i32 %883, %855
  br i1 %884, label %._crit_edge.i547, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

._crit_edge.i547:                                 ; preds = %867
  %885 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %886 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %864)
  %887 = getelementptr i8, ptr %880, i64 48
  %888 = load ptr, ptr %887, align 8
  %result.i15.i548 = call ptr %888({ ptr, ptr, ptr, i32 } %876, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %889 = call { ptr, i160 } %result.i15.i548({ ptr, ptr, ptr, i32 } %876, { ptr, ptr, ptr, i32 } %876, ptr nonnull align 8 %2) #42
  %890 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %891 = load ptr, ptr %49, align 8
  %892 = call i1 %891({ ptr, i160 } %889, { ptr, i160 } %853) #42
  br i1 %892, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread: ; preds = %._crit_edge.i547, %._crit_edge2, %867
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %900

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit: ; preds = %._crit_edge.i547
  %893 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %894 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %864)
  %895 = getelementptr i8, ptr %880, i64 56
  %896 = load ptr, ptr %895, align 8
  %result.i16.i549 = call ptr %896({ ptr, ptr, ptr, i32 } %876, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %897 = call { ptr, i160 } %result.i16.i549({ ptr, ptr, ptr, i32 } %876, { ptr, ptr, ptr, i32 } %876, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i = extractvalue { ptr, i160 } %897, 0
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %898 = icmp ne ptr %.fca.0.extract21.i, @nil_typ
  %899 = icmp ne ptr %.fca.0.extract21.i, null
  %.not63.i = and i1 %898, %899
  br i1 %.not63.i, label %CuckooMap_get_keyK.exit, label %900

900:                                              ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit
  %901 = add i32 %855, 2127912214
  %902 = shl i32 %855, 12
  %903 = add i32 %901, %902
  %904 = ashr i32 %903, 19
  %905 = xor i32 %903, %904
  %906 = xor i32 %905, -949894596
  %907 = add i32 %906, 374761393
  %908 = shl i32 %906, 5
  %909 = add i32 %907, %908
  %910 = add i32 %909, -744332180
  %911 = shl i32 %909, 9
  %912 = xor i32 %910, %911
  %913 = add i32 %912, -42973499
  %914 = shl i32 %912, 3
  %915 = add i32 %913, %914
  %916 = ashr i32 %915, 16
  %917 = xor i32 %915, %916
  %918 = xor i32 %917, -1252372727
  %919 = load i32, ptr %50, align 8
  %920 = add i32 %919, -1
  %921 = and i32 %920, %918
  %922 = load ptr, ptr %52, align 8
  %923 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %924 = sext i32 %921 to i64
  %925 = shl nsw i64 %924, 5
  %926 = getelementptr i8, ptr %922, i64 %925
  %927 = load ptr, ptr %926, align 8
  %928 = icmp ne ptr %927, @nil_typ
  %929 = icmp ne ptr %927, null
  %.not44.i579 = and i1 %928, %929
  br i1 %.not44.i579, label %930, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit604

930:                                              ; preds = %900
  %931 = getelementptr i8, ptr %926, i64 8
  %932 = load i64, ptr %931, align 4
  %.sroa_idx.i584 = getelementptr i8, ptr %926, i64 16
  %933 = load i64, ptr %.sroa_idx.i584, align 4
  %934 = inttoptr i64 %932 to ptr
  %935 = inttoptr i64 %933 to ptr
  %hash_coef_ptr.i.i2.i585 = getelementptr i8, ptr %927, i64 8
  %tbl_size_ptr.i.i3.i586 = getelementptr i8, ptr %927, i64 16
  %offset_tbl_ptr.i.i4.i587 = getelementptr i8, ptr %927, i64 40
  %hash_coef.i.i5.i588 = load i64, ptr %hash_coef_ptr.i.i2.i585, align 4, !noalias !48
  %tbl_size.i.i6.i589 = load i64, ptr %tbl_size_ptr.i.i3.i586, align 4, !noalias !48
  %offset_tbl.i.i7.i590 = load ptr, ptr %offset_tbl_ptr.i.i4.i587, align 8, !noalias !48
  %product.i.i.i8.i591 = mul i64 %hash_coef.i.i5.i588, 4015701072841558310
  %shifted.i.i.i9.i592 = lshr i64 %product.i.i.i8.i591, 32
  %xored.i.i.i10.i593 = xor i64 %shifted.i.i.i9.i592, %product.i.i.i8.i591
  %hash.i.i.i11.i594 = and i64 %xored.i.i.i10.i593, %tbl_size.i.i6.i589
  %offset_ptr.i.i12.i595 = getelementptr i32, ptr %offset_tbl.i.i7.i590, i64 %hash.i.i.i11.i594
  %offset.i.i13.i596 = load i32, ptr %offset_ptr.i.i12.i595, align 4, !noalias !48
  %936 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %927, 0
  %937 = insertvalue { ptr, ptr, ptr, i32 } %936, ptr %934, 1
  %938 = insertvalue { ptr, ptr, ptr, i32 } %937, ptr %935, 2
  %939 = insertvalue { ptr, ptr, ptr, i32 } %938, i32 %offset.i.i13.i596, 3
  %940 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %941 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %927) #37
  %942 = sext i32 %offset.i.i13.i596 to i64
  %943 = getelementptr ptr, ptr %927, i64 %942
  %944 = getelementptr i8, ptr %943, i64 64
  %945 = load ptr, ptr %944, align 8
  %result.i.i597 = call ptr %945({ ptr, ptr, ptr, i32 } %939, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %946 = call i32 %result.i.i597({ ptr, ptr, ptr, i32 } %939, { ptr, ptr, ptr, i32 } %939, ptr nonnull align 8 %2) #42
  %947 = icmp eq i32 %946, %855
  br i1 %947, label %._crit_edge.i598, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit604

._crit_edge.i598:                                 ; preds = %930
  %948 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %949 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %927)
  %950 = getelementptr i8, ptr %943, i64 48
  %951 = load ptr, ptr %950, align 8
  %result.i15.i599 = call ptr %951({ ptr, ptr, ptr, i32 } %939, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %952 = call { ptr, i160 } %result.i15.i599({ ptr, ptr, ptr, i32 } %939, { ptr, ptr, ptr, i32 } %939, ptr nonnull align 8 %2) #42
  %953 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %954 = load ptr, ptr %49, align 8
  %955 = call i1 %954({ ptr, i160 } %952, { ptr, i160 } %853) #42
  br i1 %955, label %956, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit604

956:                                              ; preds = %._crit_edge.i598
  %957 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %958 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %927)
  %959 = getelementptr i8, ptr %943, i64 56
  %960 = load ptr, ptr %959, align 8
  %result.i16.i601 = call ptr %960({ ptr, ptr, ptr, i32 } %939, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %961 = call { ptr, i160 } %result.i16.i601({ ptr, ptr, ptr, i32 } %939, { ptr, ptr, ptr, i32 } %939, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i602 = extractvalue { ptr, i160 } %961, 0
  %.fca.1.extract22.i603 = extractvalue { ptr, i160 } %961, 1
  br label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit604

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit604: ; preds = %900, %930, %._crit_edge.i598, %956
  %.reg2mem43.sroa.3.0.i580 = phi i160 [ %.fca.1.extract22.i603, %956 ], [ poison, %._crit_edge.i598 ], [ poison, %900 ], [ poison, %930 ]
  %.reg2mem41.0.i581 = phi ptr [ %.fca.0.extract21.i602, %956 ], [ @nil_typ, %._crit_edge.i598 ], [ @nil_typ, %900 ], [ @nil_typ, %930 ]
  %.reload40.fca.0.insert.i582 = insertvalue { ptr, i160 } poison, ptr %.reg2mem41.0.i581, 0
  %.reload40.fca.1.insert.i583 = insertvalue { ptr, i160 } %.reload40.fca.0.insert.i582, i160 %.reg2mem43.sroa.3.0.i580, 1
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %962 = icmp ne ptr %.reg2mem41.0.i581, @nil_typ
  %963 = icmp ne ptr %.reg2mem41.0.i581, null
  %.not65.not.not.i = and i1 %962, %963
  %cond.fr27.i = freeze i1 %.not65.not.not.i
  %spec.select.i = select i1 %cond.fr27.i, ptr %.reg2mem41.0.i581, ptr @nil_typ
  br label %CuckooMap_get_keyK.exit

CuckooMap_get_keyK.exit:                          ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit604
  %964 = phi ptr [ %spec.select.i, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit604 ], [ %.fca.0.extract21.i, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit ]
  %.pn.i = phi { ptr, i160 } [ %.reload40.fca.1.insert.i583, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit604 ], [ %897, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit ]
  %965 = icmp ne ptr %964, @nil_typ
  %966 = icmp ne ptr %964, null
  %.not143 = and i1 %965, %966
  br i1 %.not143, label %._crit_edge3, label %._crit_edge4

._crit_edge3:                                     ; preds = %CuckooMap_get_keyK.exit
  %967 = extractvalue { ptr, i160 } %.pn.i, 1
  %.sroa.2.8.extract.trunc = trunc i160 %967 to i32
  %.not147 = icmp eq i32 %0, %.sroa.2.8.extract.trunc
  br label %._crit_edge4

._crit_edge4:                                     ; preds = %._crit_edge3, %CuckooMap_get_keyK.exit
  %.3 = phi i1 [ %.not147, %._crit_edge3 ], [ false, %CuckooMap_get_keyK.exit ]
  %968 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %969 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %970 = load i32, ptr %56, align 4
  %.not148 = icmp eq i32 %970, %0
  %971 = select i1 %.not148, i1 %.3, i1 false
  br label %._crit_edge.lr.ph.i

972:                                              ; preds = %1
  %973 = call i64 @clock()
  %974 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %975 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  br label %._crit_edge.lr.ph.i

._crit_edge.lr.ph.i:                              ; preds = %._crit_edge4, %972
  %976 = phi i64 [ %851, %._crit_edge4 ], [ %973, %972 ]
  %.reg2mem15.0.in = phi i1 [ %971, %._crit_edge4 ], [ true, %972 ]
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %977 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %978 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <17 x i8> <i8 73, i8 110, i8 115, i8 101, i8 114, i8 116, i8 32, i8 83, i8 101, i8 113, i8 117, i8 101, i8 110, i8 116, i8 105, i8 97, i8 108>, ptr %result.i.i618.h2s1532, align 32
  %979 = sub i64 %976, %54
  %980 = getelementptr inbounds i8, ptr %result.i.i618.h2s1532, i64 17
  store i8 0, ptr %980, align 1
  %puts.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(18) %result.i.i618.h2s1532) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  store <14 x i8> <i8 32, i8 32, i8 79, i8 112, i8 101, i8 114, i8 97, i8 116, i8 105, i8 111, i8 110, i8 115, i8 58, i8 32>, ptr %result.i.i268.i.h2s1530, align 16
  %puts.i.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(15) %result.i.i268.i.h2s1530) #42
  %981 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %0) #42
  store <14 x i8> <i8 32, i8 32, i8 84, i8 111, i8 116, i8 97, i8 108, i8 32, i8 84, i8 105, i8 109, i8 101, i8 58, i8 32>, ptr %result.i.i282.i.h2s1528, align 16
  %puts.i206.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(15) %result.i.i282.i.h2s1528) #42
  %982 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(6) @i64_string, i64 %979) #42
  store <3 x i8> <i8 32, i8 109, i8 115>, ptr %result.i.i301.i.h2s1526, align 4
  %puts.i226.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(4) %result.i.i301.i.h2s1526) #42
  br i1 %55, label %._crit_edge1.i, label %._crit_edge.lr.ph.i634

._crit_edge1.i:                                   ; preds = %._crit_edge.lr.ph.i
  %983 = icmp sgt i64 %979, 0
  br i1 %983, label %984, label %._crit_edge.lr.ph.i321.i

984:                                              ; preds = %._crit_edge1.i
  %985 = mul i64 %979, 1000000
  %986 = zext nneg i32 %0 to i64
  %987 = sdiv i64 %985, %986
  br label %._crit_edge.lr.ph.i321.i

._crit_edge.lr.ph.i321.i:                         ; preds = %984, %._crit_edge1.i
  %.0.i = phi i64 [ %987, %984 ], [ 0, %._crit_edge1.i ]
  store <15 x i8> <i8 32, i8 32, i8 84, i8 105, i8 109, i8 101, i8 47, i8 79, i8 112, i8 58, i8 32, i8 32, i8 32, i8 32, i8 126>, ptr %result.i.i320.i.h2s1524, align 16
  %puts.i246.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(16) %result.i.i320.i.h2s1524) #42
  %988 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(6) @i64_string, i64 %.0.i) #42
  %989 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  store <3 x i8> <i8 32, i8 110, i8 115>, ptr %result.i.i339.i.h2s1522, align 4
  %990 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %puts.i266.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(4) %result.i.i339.i.h2s1522) #42
  br label %._crit_edge.lr.ph.i634

._crit_edge.lr.ph.i634:                           ; preds = %._crit_edge.lr.ph.i, %._crit_edge.lr.ph.i321.i
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %991 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %992 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <18 x i8> <i8 32, i8 32, i8 32, i8 32, i8 86, i8 101, i8 114, i8 105, i8 102, i8 105, i8 99, i8 97, i8 116, i8 105, i8 111, i8 110, i8 58, i8 32>, ptr %result.i.i633.h2s1520, align 32
  %993 = getelementptr inbounds i8, ptr %result.i.i633.h2s1520, i64 18
  store i8 0, ptr %993, align 2
  %puts.i211 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(19) %result.i.i633.h2s1520) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %. = select i1 %.reg2mem15.0.in, <4 x i8> <i8 80, i8 65, i8 83, i8 83>, <4 x i8> <i8 70, i8 65, i8 73, i8 76>
  %.184 = select i1 %.reg2mem15.0.in, ptr %35, ptr %39
  %.185 = select i1 %.reg2mem15.0.in, ptr %36, ptr %40
  %.186 = select i1 %.reg2mem15.0.in, ptr %37, ptr %41
  %.187 = select i1 %.reg2mem15.0.in, ptr %38, ptr %42
  store ptr @_parameterization_Bufferi8, ptr %.184, align 8
  %.184.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %.reg2mem15.0.in, ptr %35, ptr %39
  %.184.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.184.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 8
  store ptr @_parameterization_i32, ptr %.184.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %.184.sroa.sel196.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %.reg2mem15.0.in, ptr %35, ptr %39
  %.184.sroa.sel196.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.184.sroa.sel196.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 16
  store ptr @_parameterization_i32, ptr %.184.sroa.sel196.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %994 = call ptr @llvm.invariant.start.p0(i64 noundef 9, ptr nocapture nofree noundef nonnull align 8 dereferenceable(24) %.184)
  store ptr @buffer_typ, ptr %.185, align 8
  %.185.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %.reg2mem15.0.in, ptr %36, ptr %40
  %.185.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.185.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 8
  store ptr @i32_typ, ptr %.185.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %.185.sroa.sel191.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %.reg2mem15.0.in, ptr %36, ptr %40
  %.185.sroa.sel191.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.185.sroa.sel191.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 16
  store ptr @i32_typ, ptr %.185.sroa.sel191.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %995 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(24) %.185)
  store ptr @_parameterization_String, ptr %.186, align 8
  %996 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %.186)
  %997 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  store ptr @String, ptr %.187, align 8
  %998 = call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %.187) #37
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %999 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1000 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <4 x i8> %., ptr %result.i.i652.h2s1519, align 4
  %1001 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %1002 = getelementptr inbounds i8, ptr %result.i.i652.h2s1519, i64 4
  store i8 0, ptr %1002, align 4
  %puts.i231 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(5) %result.i.i652.h2s1519) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @anoint_trampoline(ptr nofree %tramp) local_unnamed_addr #15 {
  %oldProtect = alloca i32, align 4
  %result = call i32 @VirtualProtect(ptr nofree %tramp, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect) #42
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.init.trampoline(ptr nocapture writeonly, ptr readnone, ptr readnone) #7

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @adjust_trampoline(ptr nofree readonly %tramp) local_unnamed_addr #2 {
  %ret = call ptr @llvm.adjust.trampoline(ptr nofree readonly %tramp) #48
  ret ptr %ret
}

declare i64 @clock() local_unnamed_addr #10

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare ptr @llvm.adjust.trampoline(ptr) #16

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
declare i32 @VirtualProtect(ptr, i64, i32, ptr) local_unnamed_addr #15

define void @benchmark_insert_random(i32 %0) local_unnamed_addr #10 {
  %2 = alloca {}, align 8
  %result.i.i1413.h2s3115 = alloca [2 x i8], align 2
  store i16 0, ptr %result.i.i1413.h2s3115, align 2
  %result.i.i1394.h2s3116 = alloca [28 x i8], align 32
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 32 dereferenceable(28) %result.i.i1394.h2s3116, i8 0, i64 28, i1 false)
  %result.i.i1375.h2s3118 = alloca [5 x i8], align 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(5) %result.i.i1375.h2s3118, i8 0, i64 5, i1 false)
  %result.i.i1356.h2s3119 = alloca [19 x i8], align 32
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 32 dereferenceable(19) %result.i.i1356.h2s3119, i8 0, i64 19, i1 false)
  %result.i.i339.i.h2s3121 = alloca [4 x i8], align 4
  store i32 0, ptr %result.i.i339.i.h2s3121, align 4
  %result.i.i320.i.h2s3123 = alloca [16 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %result.i.i320.i.h2s3123, i8 0, i64 16, i1 false)
  %result.i.i301.i.h2s3125 = alloca [4 x i8], align 4
  store i32 0, ptr %result.i.i301.i.h2s3125, align 4
  %result.i.i282.i.h2s3127 = alloca [15 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(15) %result.i.i282.i.h2s3127, i8 0, i64 15, i1 false)
  %result.i.i268.i.h2s3129 = alloca [15 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(15) %result.i.i268.i.h2s3129, i8 0, i64 15, i1 false)
  %result.i.i1341.h2s3131 = alloca [14 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(14) %result.i.i1341.h2s3131, i8 0, i64 14, i1 false)
  %result.i35.h2s3133 = alloca [24 x i8], align 8
  %3 = getelementptr inbounds i8, ptr %result.i35.h2s3133, i64 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 16, i1 false)
  %4 = alloca [1 x ptr], align 8
  %5 = alloca { ptr }, align 8
  %6 = alloca [1 x ptr], align 8
  %7 = alloca { ptr }, align 8
  %8 = alloca [1 x ptr], align 8
  %9 = alloca { ptr }, align 8
  %10 = alloca [1 x ptr], align 8
  %11 = alloca { ptr }, align 8
  %12 = alloca [1 x ptr], align 8
  %13 = alloca { ptr }, align 8
  %14 = alloca [1 x ptr], align 8
  %15 = alloca { ptr }, align 8
  %16 = alloca [1 x ptr], align 8
  %17 = alloca { ptr }, align 8
  %18 = alloca [1 x ptr], align 8
  %19 = alloca { ptr }, align 8
  %20 = alloca [1 x ptr], align 8
  %21 = alloca { ptr }, align 8
  %22 = alloca [1 x ptr], align 8
  %23 = alloca { ptr }, align 8
  %24 = alloca [1 x ptr], align 8
  %25 = alloca { ptr }, align 8
  %26 = alloca [1 x ptr], align 8
  %27 = alloca { ptr }, align 8
  %28 = alloca [1 x ptr], align 8
  %29 = alloca { ptr }, align 8
  %30 = alloca [1 x ptr], align 8
  %31 = alloca { ptr }, align 8
  %32 = alloca [1 x ptr], align 8
  %33 = alloca { ptr }, align 8
  %34 = alloca [1 x ptr], align 8
  %35 = alloca { ptr }, align 8
  %36 = alloca [1 x ptr], align 8
  %37 = alloca { ptr }, align 8
  %38 = alloca [1 x ptr], align 8
  %39 = alloca { ptr }, align 8
  %40 = alloca [1 x ptr], align 8
  %41 = alloca { ptr }, align 8
  %42 = alloca [1 x ptr], align 8
  %43 = alloca { ptr }, align 8
  %44 = alloca [1 x ptr], align 8
  %45 = alloca { ptr }, align 8
  %46 = alloca [1 x ptr], align 8
  %47 = alloca { ptr }, align 8
  %48 = alloca [1 x ptr], align 8
  %49 = alloca { ptr }, align 8
  %50 = alloca [1 x ptr], align 8
  %51 = alloca { ptr }, align 8
  %52 = alloca [1 x ptr], align 8
  %53 = alloca { ptr }, align 8
  %54 = alloca [1 x ptr], align 8
  %55 = alloca { ptr }, align 8
  %56 = alloca [1 x ptr], align 8
  %57 = alloca { ptr }, align 8
  %58 = alloca [1 x ptr], align 8
  %59 = alloca { ptr }, align 8
  %60 = alloca [1 x ptr], align 8
  %61 = alloca { ptr }, align 8
  %62 = alloca [1 x ptr], align 8
  %63 = alloca { ptr }, align 8
  %64 = alloca [1 x ptr], align 8
  %65 = alloca { ptr }, align 8
  %66 = alloca [1 x ptr], align 8
  %67 = alloca { ptr }, align 8
  %oldProtect.i58 = alloca i32, align 4
  %oldProtect.i54 = alloca i32, align 4
  %oldProtect.i13 = alloca i32, align 4
  %oldProtect.i = alloca i32, align 4
  %.sroa.0231.sroa.0 = alloca i8, align 8
  %68 = alloca [3 x ptr], align 8
  %69 = alloca { ptr, ptr, ptr }, align 8
  %70 = alloca [1 x ptr], align 8
  %71 = alloca { ptr }, align 8
  %72 = alloca [3 x ptr], align 8
  %73 = alloca { ptr, ptr, ptr }, align 8
  %74 = alloca [1 x ptr], align 8
  %75 = alloca { ptr }, align 8
  %result.i9 = call noalias nonnull align 8 dereferenceable(64) ptr @bump_malloc_inner(i64 noundef 64, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr @_parameterization_i32, ptr %result.i9, align 8
  %76 = getelementptr inbounds i8, ptr %result.i9, i64 8
  store ptr @_parameterization_i32, ptr %76, align 8
  %77 = getelementptr inbounds i8, ptr %result.i9, i64 16
  store ptr @_parameterization_Pairi32._i32, ptr %77, align 8
  %78 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(64) %result.i9) #37
  %result.i10 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i) #37
  %result.i11 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i10, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i10, ptr noalias nofree noundef nonnull readnone @ahwhwlsikh, ptr noalias nofree noundef nonnull readnone @i32_hasher) #37
  %ret.i = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i10) #48
  %79 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i10) #37
  %result.i12 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i13) #37
  %result.i14 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i12, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i13) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i13) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i12, ptr noalias nofree noundef nonnull readnone @rhouwbwlus, ptr noalias nofree noundef nonnull readnone @i32_eq) #37
  %ret.i15 = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i12) #48
  %80 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i12) #37
  %81 = getelementptr inbounds i8, ptr %result.i9, i64 48
  store ptr %ret.i, ptr %81, align 8
  %82 = getelementptr inbounds i8, ptr %result.i9, i64 56
  store ptr %ret.i15, ptr %82, align 8
  %83 = getelementptr inbounds i8, ptr %result.i9, i64 40
  store i32 8, ptr %83, align 8
  %result.i.i = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %84 = getelementptr inbounds i8, ptr %result.i9, i64 24
  store ptr %result.i.i, ptr %84, align 8
  %result.i1.i209 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %85 = getelementptr inbounds i8, ptr %result.i9, i64 32
  store ptr %result.i1.i209, ptr %85, align 8
  %86 = call ptr @llvm.invariant.start.p0(i64 noundef 40, ptr nocapture nofree noundef nonnull align 16 dereferenceable(120) @PRNG) #37
  store ptr @_parameterization_i32, ptr %result.i35.h2s3133, align 8
  %87 = call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(24) %result.i35.h2s3133) #37
  %88 = getelementptr inbounds i8, ptr %result.i35.h2s3133, i64 20
  store i32 %0, ptr %88, align 4
  %89 = sext i32 %0 to i64
  %90 = shl nsw i64 %89, 2
  %result.i2.i = call noalias ptr @bump_malloc_inner(i64 noundef %90, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %91 = getelementptr inbounds i8, ptr %result.i35.h2s3133, i64 8
  store ptr %result.i2.i, ptr %91, align 8
  %92 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 16 dereferenceable(744) @Array) #37
  %result.i52 = call noalias nonnull align 8 dereferenceable(64) ptr @bump_malloc_inner(i64 noundef 64, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr @_parameterization_i32, ptr %result.i52, align 8
  %93 = getelementptr inbounds i8, ptr %result.i52, i64 8
  store ptr @_parameterization_i1, ptr %93, align 8
  %94 = getelementptr inbounds i8, ptr %result.i52, i64 16
  store ptr @_parameterization_Pairi32._i1, ptr %94, align 8
  %95 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(64) %result.i52) #37
  %result.i53 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i54) #37
  %result.i55 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i53, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i54) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i54) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i53, ptr noalias nofree noundef nonnull readnone @ehiwfuzyge, ptr noalias nofree noundef nonnull readnone @i32_hasher) #37
  %ret.i56 = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i53) #48
  %96 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i53) #37
  %result.i57 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i58) #37
  %result.i59 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i57, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i58) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i58) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i57, ptr noalias nofree noundef nonnull readnone @mukskakzok, ptr noalias nofree noundef nonnull readnone @i32_eq) #37
  %ret.i60 = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i57) #48
  %97 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i57) #37
  %98 = getelementptr inbounds i8, ptr %result.i52, i64 48
  store ptr %ret.i56, ptr %98, align 8
  %99 = getelementptr inbounds i8, ptr %result.i52, i64 56
  store ptr %ret.i60, ptr %99, align 8
  %100 = getelementptr inbounds i8, ptr %result.i52, i64 40
  store i32 8, ptr %100, align 8
  %result.i.i250 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %101 = getelementptr inbounds i8, ptr %result.i52, i64 24
  store ptr %result.i.i250, ptr %101, align 8
  %result.i1.i251 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %102 = getelementptr inbounds i8, ptr %result.i52, i64 32
  store ptr %result.i1.i251, ptr %102, align 8
  %103 = add i32 %0, -1
  %104 = icmp sgt i32 %0, 0
  %105 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2) #37
  br i1 %104, label %._crit_edge.lr.ph, label %._crit_edge2._crit_edge.thread

._crit_edge2._crit_edge.thread:                   ; preds = %1
  %106 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %107 = call i64 @clock()
  %108 = call i64 @clock()
  %109 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %110 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  br label %._crit_edge.lr.ph.i

._crit_edge.lr.ph:                                ; preds = %1
  %111 = call ptr @llvm.invariant.start.p0(i64 noundef 40, ptr nocapture nofree noundef nonnull align 16 dereferenceable(120) @PRNG) #37
  %112 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 16 dereferenceable(744) @Array) #50
  %113 = getelementptr inbounds i8, ptr %result.i52, i64 44
  %114 = insertvalue { ptr, ptr, ptr, i32 } { ptr @CuckooMap, ptr undef, ptr undef, i32 undef }, ptr %result.i52, 1
  %115 = insertvalue { ptr, ptr, ptr, i32 } %114, ptr undef, 2
  %116 = insertvalue { ptr, ptr, ptr, i32 } %115, i32 10, 3
  %117 = insertvalue { ptr, ptr, ptr, i32 } %114, i32 10, 3
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.lr.ph, %CuckooMap_insert_keyK_valueV.exit
  %118 = phi i32 [ 123, %._crit_edge.lr.ph ], [ %121, %CuckooMap_insert_keyK_valueV.exit ]
  %.0199 = phi i32 [ -1, %._crit_edge.lr.ph ], [ %spec.select, %CuckooMap_insert_keyK_valueV.exit ]
  %.0247198 = phi i32 [ 0, %._crit_edge.lr.ph ], [ %915, %CuckooMap_insert_keyK_valueV.exit ]
  %119 = mul i32 %118, 1103515245
  %120 = add i32 %119, 12345
  %121 = and i32 %120, 2147483647
  %.sroa.0241.0.insert.ext = zext nneg i32 %121 to i160
  %122 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0241.0.insert.ext, 1
  %123 = load ptr, ptr %91, align 8
  %124 = zext nneg i32 %.0247198 to i64
  %125 = shl nuw nsw i64 %124, 2
  %126 = getelementptr i8, ptr %123, i64 %125
  store i32 %121, ptr %126, align 1
  %127 = icmp eq i32 %.0247198, %103
  %spec.select = select i1 %127, i32 %121, i32 %.0199
  store i1 true, ptr %.sroa.0231.sroa.0, align 8
  %.sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.0. = load i8, ptr %.sroa.0231.sroa.0, align 8
  %.sroa.0231.0.insert.ext = zext i8 %.sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.sroa.0.0..sroa.0231.0. to i160
  %128 = insertvalue { ptr, i160 } { ptr @bool_typ, i160 undef }, i160 %.sroa.0231.0.insert.ext, 1
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %129 = load ptr, ptr %98, align 8
  %130 = call i32 %129({ ptr, i160 } %122) #42
  %131 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %132 = load i32, ptr %100, align 8
  %133 = add i32 %132, -1
  %134 = and i32 %133, %130
  %135 = load ptr, ptr %101, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %136 = sext i32 %134 to i64
  %137 = shl nsw i64 %136, 5
  %138 = getelementptr i8, ptr %135, i64 %137
  %139 = load ptr, ptr %138, align 8
  %140 = getelementptr i8, ptr %138, i64 8
  %141 = icmp ne ptr %139, @nil_typ
  %142 = icmp ne ptr %139, null
  %.not64.i = and i1 %141, %142
  br i1 %.not64.i, label %143, label %241

143:                                              ; preds = %._crit_edge
  %144 = load i64, ptr %140, align 4
  %.sroa_idx.i = getelementptr i8, ptr %138, i64 16
  %145 = load i64, ptr %.sroa_idx.i, align 4
  %146 = inttoptr i64 %144 to ptr
  %147 = inttoptr i64 %145 to ptr
  %hash_coef_ptr.i.i3.i = getelementptr i8, ptr %139, i64 8
  %tbl_size_ptr.i.i4.i = getelementptr i8, ptr %139, i64 16
  %offset_tbl_ptr.i.i5.i = getelementptr i8, ptr %139, i64 40
  %hash_coef.i.i6.i = load i64, ptr %hash_coef_ptr.i.i3.i, align 4, !noalias !51
  %tbl_size.i.i7.i = load i64, ptr %tbl_size_ptr.i.i4.i, align 4, !noalias !51
  %offset_tbl.i.i8.i = load ptr, ptr %offset_tbl_ptr.i.i5.i, align 8, !noalias !51
  %product.i.i.i9.i = mul i64 %hash_coef.i.i6.i, 4015701072841558310
  %shifted.i.i.i10.i = lshr i64 %product.i.i.i9.i, 32
  %xored.i.i.i11.i = xor i64 %shifted.i.i.i10.i, %product.i.i.i9.i
  %hash.i.i.i12.i = and i64 %xored.i.i.i11.i, %tbl_size.i.i7.i
  %offset_ptr.i.i13.i = getelementptr i32, ptr %offset_tbl.i.i8.i, i64 %hash.i.i.i12.i
  %offset.i.i14.i = load i32, ptr %offset_ptr.i.i13.i, align 4, !noalias !51
  %148 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %139, 0
  %149 = insertvalue { ptr, ptr, ptr, i32 } %148, ptr %146, 1
  %150 = insertvalue { ptr, ptr, ptr, i32 } %149, ptr %147, 2
  %151 = insertvalue { ptr, ptr, ptr, i32 } %150, i32 %offset.i.i14.i, 3
  %152 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %153 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %139) #37
  %154 = sext i32 %offset.i.i14.i to i64
  %155 = getelementptr ptr, ptr %139, i64 %154
  %156 = getelementptr i8, ptr %155, i64 64
  %157 = load ptr, ptr %156, align 8
  %result.i.i666 = call ptr %157({ ptr, ptr, ptr, i32 } %151, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %158 = call i32 %result.i.i666({ ptr, ptr, ptr, i32 } %151, { ptr, ptr, ptr, i32 } %151, ptr nonnull align 8 %2) #42
  %159 = icmp eq i32 %158, %130
  br i1 %159, label %._crit_edge.i667, label %241

._crit_edge.i667:                                 ; preds = %143
  %160 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %161 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %139)
  %162 = getelementptr i8, ptr %155, i64 48
  %163 = load ptr, ptr %162, align 8
  %result.i16.i668 = call ptr %163({ ptr, ptr, ptr, i32 } %151, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %164 = call { ptr, i160 } %result.i16.i668({ ptr, ptr, ptr, i32 } %151, { ptr, ptr, ptr, i32 } %151, ptr nonnull align 8 %2) #42
  %165 = load ptr, ptr %99, align 8
  %166 = call i1 %165({ ptr, i160 } %164, { ptr, i160 } %122) #42
  br i1 %166, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, label %241

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit: ; preds = %._crit_edge.i667
  %167 = load ptr, ptr %result.i52, align 8
  %168 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %169 = load ptr, ptr %93, align 8
  %170 = load ptr, ptr %167, align 8, !alias.scope !54
  %171 = getelementptr i8, ptr %170, i64 72
  %172 = load ptr, ptr %171, align 8, !alias.scope !54
  %result.i.i.i669 = call { i64, i64 } %172(ptr nocapture nofree nonnull readonly align 8 %167) #41, !alias.scope !54
  %173 = extractvalue { i64, i64 } %result.i.i.i669, 0
  %174 = extractvalue { i64, i64 } %result.i.i.i669, 1
  %175 = urem i64 20, %174
  %176 = icmp eq i64 %175, 0
  %177 = sub i64 %174, %175
  %178 = select i1 %176, i64 0, i64 %177
  %179 = add i64 %173, 20
  %180 = add i64 %179, %178
  %181 = load ptr, ptr %169, align 8, !alias.scope !54
  %182 = getelementptr i8, ptr %181, i64 72
  %183 = load ptr, ptr %182, align 8, !alias.scope !54
  %result.i1.i.i670 = call { i64, i64 } %183(ptr nocapture nofree nonnull readonly align 8 %169) #41, !alias.scope !54
  %184 = extractvalue { i64, i64 } %result.i1.i.i670, 0
  %185 = extractvalue { i64, i64 } %result.i1.i.i670, 1
  %186 = call i64 @llvm.umax.i64(i64 %174, i64 %185) #38
  %187 = call i64 @llvm.umax.i64(i64 %186, i64 noundef 8) #38, !range !16
  %188 = urem i64 %180, %185
  %189 = icmp eq i64 %188, 0
  %190 = sub i64 %185, %188
  %191 = select i1 %189, i64 0, i64 %190
  %192 = add i64 %184, %180
  %193 = add i64 %192, %191
  %194 = urem i64 %193, %187
  %195 = icmp eq i64 %194, 0
  %196 = sub i64 %187, %194
  %197 = select i1 %195, i64 0, i64 %196
  %198 = add i64 %197, %193
  %result.i20.i671 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %198, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %167, ptr %result.i20.i671, align 8
  %199 = getelementptr inbounds i8, ptr %result.i20.i671, i64 8
  store ptr %169, ptr %199, align 8
  %200 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i671)
  %201 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %202 = load ptr, ptr %167, align 8
  %203 = getelementptr i8, ptr %202, i64 72
  %204 = load ptr, ptr %203, align 8
  %result.i.i54.i = call { i64, i64 } %204(ptr nocapture nofree nonnull readonly align 8 %167) #41
  %205 = extractvalue { i64, i64 } %result.i.i54.i, 1
  %206 = urem i64 20, %205
  %207 = icmp eq i64 %206, 0
  %reass.sub3158 = sub i64 %205, %206
  %208 = add i64 %reass.sub3158, 20
  %209 = select i1 %207, i64 20, i64 %208
  %210 = getelementptr i8, ptr %result.i20.i671, i64 %209
  %211 = getelementptr i8, ptr %202, i64 64
  %212 = load ptr, ptr %211, align 8
  call void %212({ ptr, i160 } %122, ptr nocapture nofree nonnull readonly align 8 %167, ptr nocapture nofree writeonly %210) #49
  %213 = load ptr, ptr %result.i20.i671, align 8
  %214 = load ptr, ptr %213, align 8
  %215 = getelementptr i8, ptr %214, i64 72
  %216 = load ptr, ptr %215, align 8
  %result.i.i55.i = call { i64, i64 } %216(ptr nocapture nofree nonnull readonly align 8 %213) #41
  %217 = extractvalue { i64, i64 } %result.i.i55.i, 0
  %218 = extractvalue { i64, i64 } %result.i.i55.i, 1
  %219 = urem i64 20, %218
  %220 = icmp eq i64 %219, 0
  %221 = sub i64 %218, %219
  %222 = select i1 %220, i64 0, i64 %221
  %223 = add i64 %217, 20
  %224 = add i64 %223, %222
  %225 = load ptr, ptr %199, align 8
  %226 = load ptr, ptr %225, align 8
  %227 = getelementptr i8, ptr %226, i64 72
  %228 = load ptr, ptr %227, align 8
  %result.i1.i56.i = call { i64, i64 } %228(ptr nocapture nofree nonnull readonly align 8 %225) #41
  %229 = extractvalue { i64, i64 } %result.i1.i56.i, 1
  %230 = urem i64 %224, %229
  %231 = icmp eq i64 %230, 0
  %232 = sub i64 %229, %230
  %233 = select i1 %231, i64 0, i64 %232
  %234 = getelementptr i8, ptr %result.i20.i671, i64 %224
  %235 = getelementptr i8, ptr %234, i64 %233
  %236 = getelementptr i8, ptr %226, i64 64
  %237 = load ptr, ptr %236, align 8
  call void %237({ ptr, i160 } %128, ptr nocapture nofree nonnull readonly align 8 %225, ptr nocapture nofree writeonly %235) #49
  %238 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %239 = getelementptr inbounds i8, ptr %result.i20.i671, i64 16
  store i32 %130, ptr %239, align 8
  store ptr @Entry, ptr %138, align 8
  %240 = ptrtoint ptr %result.i20.i671 to i64
  store i64 %240, ptr %140, align 4
  %.sroa_idx28.i = getelementptr i8, ptr %138, i64 24
  store i32 10, ptr %.sroa_idx28.i, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit

241:                                              ; preds = %._crit_edge.i667, %._crit_edge, %143
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %242 = add i32 %130, 2127912214
  %243 = shl i32 %130, 12
  %244 = add i32 %242, %243
  %245 = ashr i32 %244, 19
  %246 = xor i32 %244, %245
  %247 = xor i32 %246, -949894596
  %248 = add i32 %247, 374761393
  %249 = shl i32 %247, 5
  %250 = add i32 %248, %249
  %251 = add i32 %250, -744332180
  %252 = shl i32 %250, 9
  %253 = xor i32 %251, %252
  %254 = add i32 %253, -42973499
  %255 = shl i32 %253, 3
  %256 = add i32 %254, %255
  %257 = ashr i32 %256, 16
  %258 = xor i32 %256, %257
  %259 = xor i32 %258, -1252372727
  %260 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %261 = load i32, ptr %100, align 8
  %262 = add i32 %261, -1
  %263 = and i32 %262, %259
  %264 = load ptr, ptr %102, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %265 = sext i32 %263 to i64
  %266 = shl nsw i64 %265, 5
  %267 = getelementptr i8, ptr %264, i64 %266
  %268 = load ptr, ptr %267, align 8
  %269 = getelementptr i8, ptr %267, i64 8
  %270 = icmp ne ptr %268, @nil_typ
  %271 = icmp ne ptr %268, null
  %.not64.i700 = and i1 %270, %271
  br i1 %.not64.i700, label %272, label %370

272:                                              ; preds = %241
  %273 = load i64, ptr %269, align 4
  %.sroa_idx.i702 = getelementptr i8, ptr %267, i64 16
  %274 = load i64, ptr %.sroa_idx.i702, align 4
  %275 = inttoptr i64 %273 to ptr
  %276 = inttoptr i64 %274 to ptr
  %hash_coef_ptr.i.i3.i703 = getelementptr i8, ptr %268, i64 8
  %tbl_size_ptr.i.i4.i704 = getelementptr i8, ptr %268, i64 16
  %offset_tbl_ptr.i.i5.i705 = getelementptr i8, ptr %268, i64 40
  %hash_coef.i.i6.i706 = load i64, ptr %hash_coef_ptr.i.i3.i703, align 4, !noalias !57
  %tbl_size.i.i7.i707 = load i64, ptr %tbl_size_ptr.i.i4.i704, align 4, !noalias !57
  %offset_tbl.i.i8.i708 = load ptr, ptr %offset_tbl_ptr.i.i5.i705, align 8, !noalias !57
  %product.i.i.i9.i709 = mul i64 %hash_coef.i.i6.i706, 4015701072841558310
  %shifted.i.i.i10.i710 = lshr i64 %product.i.i.i9.i709, 32
  %xored.i.i.i11.i711 = xor i64 %shifted.i.i.i10.i710, %product.i.i.i9.i709
  %hash.i.i.i12.i712 = and i64 %xored.i.i.i11.i711, %tbl_size.i.i7.i707
  %offset_ptr.i.i13.i713 = getelementptr i32, ptr %offset_tbl.i.i8.i708, i64 %hash.i.i.i12.i712
  %offset.i.i14.i714 = load i32, ptr %offset_ptr.i.i13.i713, align 4, !noalias !57
  %277 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %268, 0
  %278 = insertvalue { ptr, ptr, ptr, i32 } %277, ptr %275, 1
  %279 = insertvalue { ptr, ptr, ptr, i32 } %278, ptr %276, 2
  %280 = insertvalue { ptr, ptr, ptr, i32 } %279, i32 %offset.i.i14.i714, 3
  %281 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %282 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %268) #37
  %283 = sext i32 %offset.i.i14.i714 to i64
  %284 = getelementptr ptr, ptr %268, i64 %283
  %285 = getelementptr i8, ptr %284, i64 64
  %286 = load ptr, ptr %285, align 8
  %result.i.i715 = call ptr %286({ ptr, ptr, ptr, i32 } %280, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %287 = call i32 %result.i.i715({ ptr, ptr, ptr, i32 } %280, { ptr, ptr, ptr, i32 } %280, ptr nonnull align 8 %2) #42
  %288 = icmp eq i32 %287, %130
  br i1 %288, label %._crit_edge.i716, label %370

._crit_edge.i716:                                 ; preds = %272
  %289 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %290 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %268)
  %291 = getelementptr i8, ptr %284, i64 48
  %292 = load ptr, ptr %291, align 8
  %result.i16.i717 = call ptr %292({ ptr, ptr, ptr, i32 } %280, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %293 = call { ptr, i160 } %result.i16.i717({ ptr, ptr, ptr, i32 } %280, { ptr, ptr, ptr, i32 } %280, ptr nonnull align 8 %2) #42
  %294 = load ptr, ptr %99, align 8
  %295 = call i1 %294({ ptr, i160 } %293, { ptr, i160 } %122) #42
  br i1 %295, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit729, label %370

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit729: ; preds = %._crit_edge.i716
  %296 = load ptr, ptr %result.i52, align 8
  %297 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %298 = load ptr, ptr %93, align 8
  %299 = load ptr, ptr %296, align 8, !alias.scope !60
  %300 = getelementptr i8, ptr %299, i64 72
  %301 = load ptr, ptr %300, align 8, !alias.scope !60
  %result.i.i.i721 = call { i64, i64 } %301(ptr nocapture nofree nonnull readonly align 8 %296) #41, !alias.scope !60
  %302 = extractvalue { i64, i64 } %result.i.i.i721, 0
  %303 = extractvalue { i64, i64 } %result.i.i.i721, 1
  %304 = urem i64 20, %303
  %305 = icmp eq i64 %304, 0
  %306 = sub i64 %303, %304
  %307 = select i1 %305, i64 0, i64 %306
  %308 = add i64 %302, 20
  %309 = add i64 %308, %307
  %310 = load ptr, ptr %298, align 8, !alias.scope !60
  %311 = getelementptr i8, ptr %310, i64 72
  %312 = load ptr, ptr %311, align 8, !alias.scope !60
  %result.i1.i.i722 = call { i64, i64 } %312(ptr nocapture nofree nonnull readonly align 8 %298) #41, !alias.scope !60
  %313 = extractvalue { i64, i64 } %result.i1.i.i722, 0
  %314 = extractvalue { i64, i64 } %result.i1.i.i722, 1
  %315 = call i64 @llvm.umax.i64(i64 %303, i64 %314) #38
  %316 = call i64 @llvm.umax.i64(i64 %315, i64 noundef 8) #38, !range !16
  %317 = urem i64 %309, %314
  %318 = icmp eq i64 %317, 0
  %319 = sub i64 %314, %317
  %320 = select i1 %318, i64 0, i64 %319
  %321 = add i64 %313, %309
  %322 = add i64 %321, %320
  %323 = urem i64 %322, %316
  %324 = icmp eq i64 %323, 0
  %325 = sub i64 %316, %323
  %326 = select i1 %324, i64 0, i64 %325
  %327 = add i64 %326, %322
  %result.i20.i723 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %327, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %296, ptr %result.i20.i723, align 8
  %328 = getelementptr inbounds i8, ptr %result.i20.i723, i64 8
  store ptr %298, ptr %328, align 8
  %329 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i723)
  %330 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %331 = load ptr, ptr %296, align 8
  %332 = getelementptr i8, ptr %331, i64 72
  %333 = load ptr, ptr %332, align 8
  %result.i.i54.i724 = call { i64, i64 } %333(ptr nocapture nofree nonnull readonly align 8 %296) #41
  %334 = extractvalue { i64, i64 } %result.i.i54.i724, 1
  %335 = urem i64 20, %334
  %336 = icmp eq i64 %335, 0
  %reass.sub3157 = sub i64 %334, %335
  %337 = add i64 %reass.sub3157, 20
  %338 = select i1 %336, i64 20, i64 %337
  %339 = getelementptr i8, ptr %result.i20.i723, i64 %338
  %340 = getelementptr i8, ptr %331, i64 64
  %341 = load ptr, ptr %340, align 8
  call void %341({ ptr, i160 } %122, ptr nocapture nofree nonnull readonly align 8 %296, ptr nocapture nofree writeonly %339) #49
  %342 = load ptr, ptr %result.i20.i723, align 8
  %343 = load ptr, ptr %342, align 8
  %344 = getelementptr i8, ptr %343, i64 72
  %345 = load ptr, ptr %344, align 8
  %result.i.i55.i726 = call { i64, i64 } %345(ptr nocapture nofree nonnull readonly align 8 %342) #41
  %346 = extractvalue { i64, i64 } %result.i.i55.i726, 0
  %347 = extractvalue { i64, i64 } %result.i.i55.i726, 1
  %348 = urem i64 20, %347
  %349 = icmp eq i64 %348, 0
  %350 = sub i64 %347, %348
  %351 = select i1 %349, i64 0, i64 %350
  %352 = add i64 %346, 20
  %353 = add i64 %352, %351
  %354 = load ptr, ptr %328, align 8
  %355 = load ptr, ptr %354, align 8
  %356 = getelementptr i8, ptr %355, i64 72
  %357 = load ptr, ptr %356, align 8
  %result.i1.i56.i727 = call { i64, i64 } %357(ptr nocapture nofree nonnull readonly align 8 %354) #41
  %358 = extractvalue { i64, i64 } %result.i1.i56.i727, 1
  %359 = urem i64 %353, %358
  %360 = icmp eq i64 %359, 0
  %361 = sub i64 %358, %359
  %362 = select i1 %360, i64 0, i64 %361
  %363 = getelementptr i8, ptr %result.i20.i723, i64 %353
  %364 = getelementptr i8, ptr %363, i64 %362
  %365 = getelementptr i8, ptr %355, i64 64
  %366 = load ptr, ptr %365, align 8
  call void %366({ ptr, i160 } %128, ptr nocapture nofree nonnull readonly align 8 %354, ptr nocapture nofree writeonly %364) #49
  %367 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %368 = getelementptr inbounds i8, ptr %result.i20.i723, i64 16
  store i32 %130, ptr %368, align 8
  store ptr @Entry, ptr %267, align 8
  %369 = ptrtoint ptr %result.i20.i723 to i64
  store i64 %369, ptr %269, align 4
  %.sroa_idx28.i728 = getelementptr i8, ptr %267, i64 24
  store i32 10, ptr %.sroa_idx28.i728, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit

370:                                              ; preds = %._crit_edge.i716, %241, %272
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %371 = load i32, ptr %113, align 4
  %372 = load i32, ptr %100, align 8
  %.not.i = icmp slt i32 %371, %372
  br i1 %.not.i, label %._crit_edge.i, label %373

373:                                              ; preds = %370
  %374 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %375 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %376 = load ptr, ptr %101, align 8
  %377 = load ptr, ptr %102, align 8
  %378 = shl i32 %372, 1
  %spec.select.i744 = call i32 @llvm.smax.i32(i32 %378, i32 noundef 16) #37
  store i32 %spec.select.i744, ptr %100, align 8
  %379 = zext nneg i32 %spec.select.i744 to i64
  %380 = shl nuw nsw i64 %379, 5
  %result.i.i745 = call noalias ptr @bump_malloc_inner(i64 noundef %380, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i745, ptr %101, align 8
  %result.i1.i = call noalias ptr @bump_malloc_inner(i64 noundef %380, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i, ptr %102, align 8
  store i32 0, ptr %113, align 4
  %381 = icmp sgt i32 %372, 0
  br i1 %381, label %.lr.ph.i, label %._crit_edge.i

.lr.ph.i:                                         ; preds = %373, %._crit_edge.i1570
  %.045.i = phi i32 [ %438, %._crit_edge.i1570 ], [ 0, %373 ]
  %382 = zext nneg i32 %.045.i to i64
  %383 = shl nuw nsw i64 %382, 5
  %384 = getelementptr i8, ptr %376, i64 %383
  %385 = load ptr, ptr %384, align 8
  %386 = icmp ne ptr %385, @nil_typ
  %387 = icmp ne ptr %385, null
  %.not16.i = and i1 %386, %387
  br i1 %.not16.i, label %388, label %._crit_edge.i1570

388:                                              ; preds = %.lr.ph.i
  %389 = getelementptr i8, ptr %384, i64 8
  %390 = load i64, ptr %389, align 4
  %.sroa_idx.i1571 = getelementptr i8, ptr %384, i64 16
  %391 = load i64, ptr %.sroa_idx.i1571, align 4
  %hash_coef_ptr.i.i3.i1572 = getelementptr i8, ptr %385, i64 8
  %tbl_size_ptr.i.i4.i1573 = getelementptr i8, ptr %385, i64 16
  %offset_tbl_ptr.i.i5.i1574 = getelementptr i8, ptr %385, i64 40
  %392 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %48)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %49)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %50)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %51)
  %hash_coef.i.i17.i = load i64, ptr %hash_coef_ptr.i.i3.i1572, align 4, !noalias !23
  %tbl_size.i.i18.i = load i64, ptr %tbl_size_ptr.i.i4.i1573, align 4, !noalias !23
  %offset_tbl.i.i19.i = load ptr, ptr %offset_tbl_ptr.i.i5.i1574, align 8, !noalias !23
  %product.i.i.i20.i = mul i64 %hash_coef.i.i17.i, 4015701072841558310
  %shifted.i.i.i21.i = lshr i64 %product.i.i.i20.i, 32
  %xored.i.i.i22.i = xor i64 %shifted.i.i.i21.i, %product.i.i.i20.i
  %hash.i.i.i23.i = and i64 %xored.i.i.i22.i, %tbl_size.i.i18.i
  %offset_ptr.i.i24.i = getelementptr i32, ptr %offset_tbl.i.i19.i, i64 %hash.i.i.i23.i
  %offset.i.i39.i = load i32, ptr %offset_ptr.i.i24.i, align 4, !noalias !63
  %393 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %394 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %395 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %396

396:                                              ; preds = %.cont.i2098, %388
  %.0308.i2081 = phi i32 [ 0, %388 ], [ %429, %.cont.i2098 ]
  %.070307.i2082 = phi i1 [ true, %388 ], [ %430, %.cont.i2098 ]
  %.sroa.0.0306.i2083 = phi ptr [ %385, %388 ], [ %419, %.cont.i2098 ]
  %.sroa.6.0305.i2084.in = phi i64 [ %390, %388 ], [ %421, %.cont.i2098 ]
  %.sroa.12.0304.i2085.in = phi i64 [ %391, %388 ], [ %422, %.cont.i2098 ]
  %.sroa.17.0303.i2086 = phi i32 [ %offset.i.i39.i, %388 ], [ %offset.i.i71.i2112, %.cont.i2098 ]
  %.sroa.12.0304.i2085 = inttoptr i64 %.sroa.12.0304.i2085.in to ptr
  %.sroa.6.0305.i2084 = inttoptr i64 %.sroa.6.0305.i2084.in to ptr
  %397 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2083, 0
  %398 = insertvalue { ptr, ptr, ptr, i32 } %397, ptr %.sroa.6.0305.i2084, 1
  %399 = insertvalue { ptr, ptr, ptr, i32 } %398, ptr %.sroa.12.0304.i2085, 2
  %400 = insertvalue { ptr, ptr, ptr, i32 } %399, i32 %.sroa.17.0303.i2086, 3
  %401 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2083)
  %402 = sext i32 %.sroa.17.0303.i2086 to i64
  %403 = getelementptr ptr, ptr %.sroa.0.0306.i2083, i64 %402
  %404 = getelementptr i8, ptr %403, i64 64
  %405 = load ptr, ptr %404, align 8
  %result.i43.i2087 = call ptr %405({ ptr, ptr, ptr, i32 } %400, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %406 = call i32 %result.i43.i2087({ ptr, ptr, ptr, i32 } %400, { ptr, ptr, ptr, i32 } %400, ptr nonnull align 8 %2) #42
  %..i2088 = select i1 %.070307.i2082, ptr %48, ptr %50
  %.184.i2089 = select i1 %.070307.i2082, i64 104, i64 112
  %.185.i2090 = select i1 %.070307.i2082, ptr %49, ptr %51
  %.186.i2091 = select i1 %.070307.i2082, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2088, align 8
  %407 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2088)
  %408 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2089
  %409 = load ptr, ptr %408, align 8
  store ptr @i32_typ, ptr %.185.i2090, align 8
  %result.i44.i2092 = call ptr %409({ ptr, ptr, ptr, i32 } %117, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2090) #45
  %410 = call i32 %result.i44.i2092({ ptr, ptr, ptr, i32 } %117, { ptr, ptr, ptr, i32 } %117, ptr nonnull align 8 dereferenceable(8) %..i2088, i32 %406) #42
  %411 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %412 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2091
  %413 = load ptr, ptr %412, align 8
  %414 = load ptr, ptr %413, align 8
  %415 = call { ptr } %414(ptr nonnull %result.i52) #40
  %.fca.0.extract53.i2093 = extractvalue { ptr } %415, 0
  %416 = sext i32 %410 to i64
  %417 = shl nsw i64 %416, 5
  %418 = getelementptr i8, ptr %.fca.0.extract53.i2093, i64 %417
  %419 = load ptr, ptr %418, align 8
  %420 = getelementptr i8, ptr %418, i64 8
  %421 = load i64, ptr %420, align 4
  %.sroa_idx.i2094 = getelementptr i8, ptr %418, i64 16
  %422 = load i64, ptr %.sroa_idx.i2094, align 4
  %423 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %424 = call { ptr } %414(ptr nonnull %result.i52) #40
  %.fca.0.extract51.i = extractvalue { ptr } %424, 0
  %425 = getelementptr i8, ptr %.fca.0.extract51.i, i64 %417
  store ptr %.sroa.0.0306.i2083, ptr %425, align 8
  %426 = getelementptr i8, ptr %425, i64 8
  store i64 %.sroa.6.0305.i2084.in, ptr %426, align 4
  %.sroa_idx100.i2095 = getelementptr i8, ptr %425, i64 16
  store i64 %.sroa.12.0304.i2085.in, ptr %.sroa_idx100.i2095, align 4
  %.sroa_idx101.i2096 = getelementptr i8, ptr %425, i64 24
  store i32 %.sroa.17.0303.i2086, ptr %.sroa_idx101.i2096, align 4
  %427 = icmp ne ptr %419, @nil_typ
  %428 = icmp ne ptr %419, null
  %.not90.i2097 = and i1 %427, %428
  br i1 %.not90.i2097, label %.cont.i2098, label %434

.cont.i2098:                                      ; preds = %396
  %429 = add nuw nsw i32 %.0308.i2081, 1
  %430 = xor i1 %.070307.i2082, true
  %hash_coef_ptr.i.i60.i2101 = getelementptr i8, ptr %419, i64 8
  %tbl_size_ptr.i.i61.i2102 = getelementptr i8, ptr %419, i64 16
  %offset_tbl_ptr.i.i62.i2103 = getelementptr i8, ptr %419, i64 40
  %hash_coef.i.i63.i2104 = load i64, ptr %hash_coef_ptr.i.i60.i2101, align 4
  %tbl_size.i.i64.i2105 = load i64, ptr %tbl_size_ptr.i.i61.i2102, align 4
  %offset_tbl.i.i65.i2106 = load ptr, ptr %offset_tbl_ptr.i.i62.i2103, align 8
  %product.i.i.i66.i2107 = mul i64 %hash_coef.i.i63.i2104, 4015701072841558310
  %shifted.i.i.i67.i2108 = lshr i64 %product.i.i.i66.i2107, 32
  %xored.i.i.i68.i2109 = xor i64 %shifted.i.i.i67.i2108, %product.i.i.i66.i2107
  %hash.i.i.i69.i2110 = and i64 %xored.i.i.i68.i2109, %tbl_size.i.i64.i2105
  %offset_ptr.i.i70.i2111 = getelementptr i32, ptr %offset_tbl.i.i65.i2106, i64 %hash.i.i.i69.i2110
  %offset.i.i71.i2112 = load i32, ptr %offset_ptr.i.i70.i2111, align 4
  %431 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %432 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %433 = icmp ult i32 %.0308.i2081, 99
  br i1 %433, label %396, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2114

434:                                              ; preds = %396
  %435 = load i32, ptr %113, align 4
  %436 = add i32 %435, 1
  %437 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %436, ptr %113, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2114

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2114: ; preds = %.cont.i2098, %434
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %48)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %49)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %50)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %51)
  br label %._crit_edge.i1570

._crit_edge.i1570:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2114, %.lr.ph.i
  %438 = add nuw nsw i32 %.045.i, 1
  %439 = icmp slt i32 %438, %372
  br i1 %439, label %.lr.ph.i, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit: ; preds = %._crit_edge.i1570, %._crit_edge.i1600
  %.045.i1598 = phi i32 [ %496, %._crit_edge.i1600 ], [ 0, %._crit_edge.i1570 ]
  %440 = zext nneg i32 %.045.i1598 to i64
  %441 = shl nuw nsw i64 %440, 5
  %442 = getelementptr i8, ptr %377, i64 %441
  %443 = load ptr, ptr %442, align 8
  %444 = icmp ne ptr %443, @nil_typ
  %445 = icmp ne ptr %443, null
  %.not16.i1599 = and i1 %444, %445
  br i1 %.not16.i1599, label %446, label %._crit_edge.i1600

446:                                              ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit
  %447 = getelementptr i8, ptr %442, i64 8
  %448 = load i64, ptr %447, align 4
  %.sroa_idx.i1601 = getelementptr i8, ptr %442, i64 16
  %449 = load i64, ptr %.sroa_idx.i1601, align 4
  %hash_coef_ptr.i.i3.i1602 = getelementptr i8, ptr %443, i64 8
  %tbl_size_ptr.i.i4.i1603 = getelementptr i8, ptr %443, i64 16
  %offset_tbl_ptr.i.i5.i1604 = getelementptr i8, ptr %443, i64 40
  %450 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %44)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %45)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %46)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %47)
  %hash_coef.i.i17.i2132 = load i64, ptr %hash_coef_ptr.i.i3.i1602, align 4, !noalias !23
  %tbl_size.i.i18.i2133 = load i64, ptr %tbl_size_ptr.i.i4.i1603, align 4, !noalias !23
  %offset_tbl.i.i19.i2134 = load ptr, ptr %offset_tbl_ptr.i.i5.i1604, align 8, !noalias !23
  %product.i.i.i20.i2135 = mul i64 %hash_coef.i.i17.i2132, 4015701072841558310
  %shifted.i.i.i21.i2136 = lshr i64 %product.i.i.i20.i2135, 32
  %xored.i.i.i22.i2137 = xor i64 %shifted.i.i.i21.i2136, %product.i.i.i20.i2135
  %hash.i.i.i23.i2138 = and i64 %xored.i.i.i22.i2137, %tbl_size.i.i18.i2133
  %offset_ptr.i.i24.i2139 = getelementptr i32, ptr %offset_tbl.i.i19.i2134, i64 %hash.i.i.i23.i2138
  %offset.i.i39.i2140 = load i32, ptr %offset_ptr.i.i24.i2139, align 4, !noalias !66
  %451 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %452 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %453 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %454

454:                                              ; preds = %.cont.i2163, %446
  %.0308.i2141 = phi i32 [ 0, %446 ], [ %487, %.cont.i2163 ]
  %.070307.i2142 = phi i1 [ true, %446 ], [ %488, %.cont.i2163 ]
  %.sroa.0.0306.i2143 = phi ptr [ %443, %446 ], [ %477, %.cont.i2163 ]
  %.sroa.6.0305.i2144.in = phi i64 [ %448, %446 ], [ %479, %.cont.i2163 ]
  %.sroa.12.0304.i2145.in = phi i64 [ %449, %446 ], [ %480, %.cont.i2163 ]
  %.sroa.17.0303.i2146 = phi i32 [ %offset.i.i39.i2140, %446 ], [ %offset.i.i71.i2177, %.cont.i2163 ]
  %.sroa.12.0304.i2145 = inttoptr i64 %.sroa.12.0304.i2145.in to ptr
  %.sroa.6.0305.i2144 = inttoptr i64 %.sroa.6.0305.i2144.in to ptr
  %455 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2143, 0
  %456 = insertvalue { ptr, ptr, ptr, i32 } %455, ptr %.sroa.6.0305.i2144, 1
  %457 = insertvalue { ptr, ptr, ptr, i32 } %456, ptr %.sroa.12.0304.i2145, 2
  %458 = insertvalue { ptr, ptr, ptr, i32 } %457, i32 %.sroa.17.0303.i2146, 3
  %459 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2143)
  %460 = sext i32 %.sroa.17.0303.i2146 to i64
  %461 = getelementptr ptr, ptr %.sroa.0.0306.i2143, i64 %460
  %462 = getelementptr i8, ptr %461, i64 64
  %463 = load ptr, ptr %462, align 8
  %result.i43.i2147 = call ptr %463({ ptr, ptr, ptr, i32 } %458, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %464 = call i32 %result.i43.i2147({ ptr, ptr, ptr, i32 } %458, { ptr, ptr, ptr, i32 } %458, ptr nonnull align 8 %2) #42
  %..i2148 = select i1 %.070307.i2142, ptr %44, ptr %46
  %.184.i2149 = select i1 %.070307.i2142, i64 104, i64 112
  %.185.i2150 = select i1 %.070307.i2142, ptr %45, ptr %47
  %.186.i2151 = select i1 %.070307.i2142, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2148, align 8
  %465 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2148)
  %466 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2149
  %467 = load ptr, ptr %466, align 8
  store ptr @i32_typ, ptr %.185.i2150, align 8
  %result.i44.i2152 = call ptr %467({ ptr, ptr, ptr, i32 } %117, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2150) #45
  %468 = call i32 %result.i44.i2152({ ptr, ptr, ptr, i32 } %117, { ptr, ptr, ptr, i32 } %117, ptr nonnull align 8 dereferenceable(8) %..i2148, i32 %464) #42
  %469 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %470 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2151
  %471 = load ptr, ptr %470, align 8
  %472 = load ptr, ptr %471, align 8
  %473 = call { ptr } %472(ptr nonnull %result.i52) #40
  %.fca.0.extract53.i2153 = extractvalue { ptr } %473, 0
  %474 = sext i32 %468 to i64
  %475 = shl nsw i64 %474, 5
  %476 = getelementptr i8, ptr %.fca.0.extract53.i2153, i64 %475
  %477 = load ptr, ptr %476, align 8
  %478 = getelementptr i8, ptr %476, i64 8
  %479 = load i64, ptr %478, align 4
  %.sroa_idx.i2154 = getelementptr i8, ptr %476, i64 16
  %480 = load i64, ptr %.sroa_idx.i2154, align 4
  %481 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %482 = call { ptr } %472(ptr nonnull %result.i52) #40
  %.fca.0.extract51.i2155 = extractvalue { ptr } %482, 0
  %483 = getelementptr i8, ptr %.fca.0.extract51.i2155, i64 %475
  store ptr %.sroa.0.0306.i2143, ptr %483, align 8
  %484 = getelementptr i8, ptr %483, i64 8
  store i64 %.sroa.6.0305.i2144.in, ptr %484, align 4
  %.sroa_idx100.i2156 = getelementptr i8, ptr %483, i64 16
  store i64 %.sroa.12.0304.i2145.in, ptr %.sroa_idx100.i2156, align 4
  %.sroa_idx101.i2157 = getelementptr i8, ptr %483, i64 24
  store i32 %.sroa.17.0303.i2146, ptr %.sroa_idx101.i2157, align 4
  %485 = icmp ne ptr %477, @nil_typ
  %486 = icmp ne ptr %477, null
  %.not90.i2158 = and i1 %485, %486
  br i1 %.not90.i2158, label %.cont.i2163, label %492

.cont.i2163:                                      ; preds = %454
  %487 = add nuw nsw i32 %.0308.i2141, 1
  %488 = xor i1 %.070307.i2142, true
  %hash_coef_ptr.i.i60.i2166 = getelementptr i8, ptr %477, i64 8
  %tbl_size_ptr.i.i61.i2167 = getelementptr i8, ptr %477, i64 16
  %offset_tbl_ptr.i.i62.i2168 = getelementptr i8, ptr %477, i64 40
  %hash_coef.i.i63.i2169 = load i64, ptr %hash_coef_ptr.i.i60.i2166, align 4
  %tbl_size.i.i64.i2170 = load i64, ptr %tbl_size_ptr.i.i61.i2167, align 4
  %offset_tbl.i.i65.i2171 = load ptr, ptr %offset_tbl_ptr.i.i62.i2168, align 8
  %product.i.i.i66.i2172 = mul i64 %hash_coef.i.i63.i2169, 4015701072841558310
  %shifted.i.i.i67.i2173 = lshr i64 %product.i.i.i66.i2172, 32
  %xored.i.i.i68.i2174 = xor i64 %shifted.i.i.i67.i2173, %product.i.i.i66.i2172
  %hash.i.i.i69.i2175 = and i64 %xored.i.i.i68.i2174, %tbl_size.i.i64.i2170
  %offset_ptr.i.i70.i2176 = getelementptr i32, ptr %offset_tbl.i.i65.i2171, i64 %hash.i.i.i69.i2175
  %offset.i.i71.i2177 = load i32, ptr %offset_ptr.i.i70.i2176, align 4
  %489 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %490 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %491 = icmp ult i32 %.0308.i2141, 99
  br i1 %491, label %454, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2186

492:                                              ; preds = %454
  %493 = load i32, ptr %113, align 4
  %494 = add i32 %493, 1
  %495 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %494, ptr %113, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2186

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2186: ; preds = %.cont.i2163, %492
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %44)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %45)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %46)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %47)
  br label %._crit_edge.i1600

._crit_edge.i1600:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2186, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit
  %496 = add nuw nsw i32 %.045.i1598, 1
  %497 = icmp slt i32 %496, %372
  br i1 %497, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %._crit_edge.i1600, %373, %370
  %498 = load ptr, ptr %result.i52, align 8
  %499 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %500 = load ptr, ptr %93, align 8
  %501 = load ptr, ptr %498, align 8
  %502 = getelementptr i8, ptr %501, i64 72
  %503 = load ptr, ptr %502, align 8
  %result.i.i.i = call { i64, i64 } %503(ptr nocapture nofree nonnull readonly align 8 %498) #41
  %504 = extractvalue { i64, i64 } %result.i.i.i, 0
  %505 = extractvalue { i64, i64 } %result.i.i.i, 1
  %506 = urem i64 20, %505
  %507 = icmp eq i64 %506, 0
  %508 = sub i64 %505, %506
  %509 = select i1 %507, i64 0, i64 %508
  %510 = add i64 %504, 20
  %511 = add i64 %510, %509
  %512 = load ptr, ptr %500, align 8
  %513 = getelementptr i8, ptr %512, i64 72
  %514 = load ptr, ptr %513, align 8
  %result.i1.i.i = call { i64, i64 } %514(ptr nocapture nofree nonnull readonly align 8 %500) #41
  %515 = extractvalue { i64, i64 } %result.i1.i.i, 0
  %516 = extractvalue { i64, i64 } %result.i1.i.i, 1
  %517 = call i64 @llvm.umax.i64(i64 %505, i64 %516) #38
  %518 = call i64 @llvm.umax.i64(i64 %517, i64 noundef 8) #38, !range !16
  %519 = urem i64 %511, %516
  %520 = icmp eq i64 %519, 0
  %521 = sub i64 %516, %519
  %522 = select i1 %520, i64 0, i64 %521
  %523 = add i64 %515, %511
  %524 = add i64 %523, %522
  %525 = urem i64 %524, %518
  %526 = icmp eq i64 %525, 0
  %527 = sub i64 %518, %525
  %528 = select i1 %526, i64 0, i64 %527
  %529 = add i64 %528, %524
  %result.i16.i = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %529, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %498, ptr %result.i16.i, align 8
  %530 = getelementptr inbounds i8, ptr %result.i16.i, i64 8
  store ptr %500, ptr %530, align 8
  %531 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i16.i)
  %532 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %533 = load ptr, ptr %498, align 8
  %534 = getelementptr i8, ptr %533, i64 72
  %535 = load ptr, ptr %534, align 8
  %result.i.i110.i = call { i64, i64 } %535(ptr nocapture nofree nonnull readonly align 8 %498) #41
  %536 = extractvalue { i64, i64 } %result.i.i110.i, 1
  %537 = urem i64 20, %536
  %538 = icmp eq i64 %537, 0
  %reass.sub3156 = sub i64 %536, %537
  %539 = add i64 %reass.sub3156, 20
  %540 = select i1 %538, i64 20, i64 %539
  %541 = getelementptr i8, ptr %result.i16.i, i64 %540
  %542 = getelementptr i8, ptr %533, i64 64
  %543 = load ptr, ptr %542, align 8
  call void %543({ ptr, i160 } %122, ptr nocapture nofree nonnull readonly align 8 %498, ptr nocapture nofree writeonly %541) #49
  %544 = load ptr, ptr %result.i16.i, align 8
  %545 = load ptr, ptr %544, align 8
  %546 = getelementptr i8, ptr %545, i64 72
  %547 = load ptr, ptr %546, align 8
  %result.i.i111.i = call { i64, i64 } %547(ptr nocapture nofree nonnull readonly align 8 %544) #41
  %548 = extractvalue { i64, i64 } %result.i.i111.i, 0
  %549 = extractvalue { i64, i64 } %result.i.i111.i, 1
  %550 = urem i64 20, %549
  %551 = icmp eq i64 %550, 0
  %552 = sub i64 %549, %550
  %553 = select i1 %551, i64 0, i64 %552
  %554 = add i64 %548, 20
  %555 = add i64 %554, %553
  %556 = load ptr, ptr %530, align 8
  %557 = load ptr, ptr %556, align 8
  %558 = getelementptr i8, ptr %557, i64 72
  %559 = load ptr, ptr %558, align 8
  %result.i1.i112.i = call { i64, i64 } %559(ptr nocapture nofree nonnull readonly align 8 %556) #41
  %560 = extractvalue { i64, i64 } %result.i1.i112.i, 1
  %561 = urem i64 %555, %560
  %562 = icmp eq i64 %561, 0
  %563 = sub i64 %560, %561
  %564 = select i1 %562, i64 0, i64 %563
  %565 = getelementptr i8, ptr %result.i16.i, i64 %555
  %566 = getelementptr i8, ptr %565, i64 %564
  %567 = getelementptr i8, ptr %557, i64 64
  %568 = load ptr, ptr %567, align 8
  call void %568({ ptr, i160 } %128, ptr nocapture nofree nonnull readonly align 8 %556, ptr nocapture nofree writeonly %566) #49
  %569 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %570 = getelementptr inbounds i8, ptr %result.i16.i, i64 16
  store i32 %130, ptr %570, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %64)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %65)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %66)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %67)
  %571 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %572 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %573 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %574

574:                                              ; preds = %.cont.i, %._crit_edge.i
  %.0308.i = phi i32 [ 0, %._crit_edge.i ], [ %609, %.cont.i ]
  %.070307.i = phi i1 [ true, %._crit_edge.i ], [ %610, %.cont.i ]
  %.sroa.0.0306.i = phi ptr [ @Entry, %._crit_edge.i ], [ %597, %.cont.i ]
  %.sroa.6.0305.i = phi ptr [ %result.i16.i, %._crit_edge.i ], [ %.sroa.speculated111.i, %.cont.i ]
  %.sroa.12.0304.i = phi ptr [ undef, %._crit_edge.i ], [ %.sroa.speculated105.i, %.cont.i ]
  %.sroa.17.0303.i = phi i32 [ 10, %._crit_edge.i ], [ %offset.i.i71.i, %.cont.i ]
  %575 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i, 0
  %576 = insertvalue { ptr, ptr, ptr, i32 } %575, ptr %.sroa.6.0305.i, 1
  %577 = insertvalue { ptr, ptr, ptr, i32 } %576, ptr %.sroa.12.0304.i, 2
  %578 = insertvalue { ptr, ptr, ptr, i32 } %577, i32 %.sroa.17.0303.i, 3
  %579 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i)
  %580 = sext i32 %.sroa.17.0303.i to i64
  %581 = getelementptr ptr, ptr %.sroa.0.0306.i, i64 %580
  %582 = getelementptr i8, ptr %581, i64 64
  %583 = load ptr, ptr %582, align 8
  %result.i43.i = call ptr %583({ ptr, ptr, ptr, i32 } %578, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %584 = call i32 %result.i43.i({ ptr, ptr, ptr, i32 } %578, { ptr, ptr, ptr, i32 } %578, ptr nonnull align 8 %2) #42
  %..i = select i1 %.070307.i, ptr %64, ptr %66
  %.184.i = select i1 %.070307.i, i64 104, i64 112
  %.185.i = select i1 %.070307.i, ptr %65, ptr %67
  %.186.i = select i1 %.070307.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i, align 8
  %585 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i)
  %586 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i
  %587 = load ptr, ptr %586, align 8
  store ptr @i32_typ, ptr %.185.i, align 8
  %result.i44.i = call ptr %587({ ptr, ptr, ptr, i32 } %116, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i) #45
  %588 = call i32 %result.i44.i({ ptr, ptr, ptr, i32 } %116, { ptr, ptr, ptr, i32 } %116, ptr nonnull align 8 dereferenceable(8) %..i, i32 %584) #42
  %589 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %590 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i
  %591 = load ptr, ptr %590, align 8
  %592 = load ptr, ptr %591, align 8
  %593 = call { ptr } %592(ptr nonnull %result.i52) #40
  %.fca.0.extract53.i = extractvalue { ptr } %593, 0
  %594 = sext i32 %588 to i64
  %595 = shl nsw i64 %594, 5
  %596 = getelementptr i8, ptr %.fca.0.extract53.i, i64 %595
  %597 = load ptr, ptr %596, align 8
  %598 = getelementptr i8, ptr %596, i64 8
  %599 = load i64, ptr %598, align 4
  %.sroa_idx.i763 = getelementptr i8, ptr %596, i64 16
  %600 = load i64, ptr %.sroa_idx.i763, align 4
  %601 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %602 = call { ptr } %592(ptr nonnull %result.i52) #40
  %.fca.0.extract51.i764 = extractvalue { ptr } %602, 0
  %603 = getelementptr i8, ptr %.fca.0.extract51.i764, i64 %595
  store ptr %.sroa.0.0306.i, ptr %603, align 8
  %604 = getelementptr i8, ptr %603, i64 8
  %605 = ptrtoint ptr %.sroa.6.0305.i to i64
  %606 = ptrtoint ptr %.sroa.12.0304.i to i64
  store i64 %605, ptr %604, align 4
  %.sroa_idx100.i = getelementptr i8, ptr %603, i64 16
  store i64 %606, ptr %.sroa_idx100.i, align 4
  %.sroa_idx101.i = getelementptr i8, ptr %603, i64 24
  store i32 %.sroa.17.0303.i, ptr %.sroa_idx101.i, align 4
  %607 = icmp ne ptr %597, @nil_typ
  %608 = icmp ne ptr %597, null
  %.not90.i = and i1 %607, %608
  br i1 %.not90.i, label %.cont.i, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit

.cont.i:                                          ; preds = %574
  %609 = add nuw nsw i32 %.0308.i, 1
  %610 = xor i1 %.070307.i, true
  %.sroa.speculated111.i = inttoptr i64 %599 to ptr
  %.sroa.speculated105.i = inttoptr i64 %600 to ptr
  %hash_coef_ptr.i.i60.i = getelementptr i8, ptr %597, i64 8
  %tbl_size_ptr.i.i61.i = getelementptr i8, ptr %597, i64 16
  %offset_tbl_ptr.i.i62.i = getelementptr i8, ptr %597, i64 40
  %hash_coef.i.i63.i = load i64, ptr %hash_coef_ptr.i.i60.i, align 4
  %tbl_size.i.i64.i = load i64, ptr %tbl_size_ptr.i.i61.i, align 4
  %offset_tbl.i.i65.i = load ptr, ptr %offset_tbl_ptr.i.i62.i, align 8
  %product.i.i.i66.i = mul i64 %hash_coef.i.i63.i, 4015701072841558310
  %shifted.i.i.i67.i = lshr i64 %product.i.i.i66.i, 32
  %xored.i.i.i68.i = xor i64 %shifted.i.i.i67.i, %product.i.i.i66.i
  %hash.i.i.i69.i = and i64 %xored.i.i.i68.i, %tbl_size.i.i64.i
  %offset_ptr.i.i70.i = getelementptr i32, ptr %offset_tbl.i.i65.i, i64 %hash.i.i.i69.i
  %offset.i.i71.i = load i32, ptr %offset_ptr.i.i70.i, align 4
  %611 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %612 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %613 = icmp ult i32 %.0308.i, 99
  br i1 %613, label %574, label %617

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit: ; preds = %574
  %614 = load i32, ptr %113, align 4
  %615 = add i32 %614, 1
  %616 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %615, ptr %113, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %64)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %65)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %66)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %67)
  br label %CuckooMap_insert_keyK_valueV.exit

617:                                              ; preds = %.cont.i
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %64)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %65)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %66)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %67)
  %618 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %619 = load ptr, ptr %101, align 8
  %620 = load ptr, ptr %102, align 8
  %621 = load i32, ptr %100, align 8
  %622 = shl i32 %621, 1
  %spec.select.i781 = call i32 @llvm.smax.i32(i32 %622, i32 noundef 16) #37
  store i32 %spec.select.i781, ptr %100, align 8
  %623 = zext nneg i32 %spec.select.i781 to i64
  %624 = shl nuw nsw i64 %623, 5
  %result.i.i782 = call noalias ptr @bump_malloc_inner(i64 noundef %624, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i782, ptr %101, align 8
  %result.i1.i783 = call noalias ptr @bump_malloc_inner(i64 noundef %624, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i783, ptr %102, align 8
  store i32 0, ptr %113, align 4
  %625 = icmp sgt i32 %621, 0
  br i1 %625, label %.lr.ph.i1620, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1688

.lr.ph.i1620:                                     ; preds = %617, %._crit_edge.i1635
  %.045.i1633 = phi i32 [ %682, %._crit_edge.i1635 ], [ 0, %617 ]
  %626 = zext nneg i32 %.045.i1633 to i64
  %627 = shl nuw nsw i64 %626, 5
  %628 = getelementptr i8, ptr %619, i64 %627
  %629 = load ptr, ptr %628, align 8
  %630 = icmp ne ptr %629, @nil_typ
  %631 = icmp ne ptr %629, null
  %.not16.i1634 = and i1 %630, %631
  br i1 %.not16.i1634, label %632, label %._crit_edge.i1635

632:                                              ; preds = %.lr.ph.i1620
  %633 = getelementptr i8, ptr %628, i64 8
  %634 = load i64, ptr %633, align 4
  %.sroa_idx.i1636 = getelementptr i8, ptr %628, i64 16
  %635 = load i64, ptr %.sroa_idx.i1636, align 4
  %hash_coef_ptr.i.i3.i1637 = getelementptr i8, ptr %629, i64 8
  %tbl_size_ptr.i.i4.i1638 = getelementptr i8, ptr %629, i64 16
  %offset_tbl_ptr.i.i5.i1639 = getelementptr i8, ptr %629, i64 40
  %636 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %40)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %41)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %42)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %43)
  %hash_coef.i.i17.i2204 = load i64, ptr %hash_coef_ptr.i.i3.i1637, align 4, !noalias !23
  %tbl_size.i.i18.i2205 = load i64, ptr %tbl_size_ptr.i.i4.i1638, align 4, !noalias !23
  %offset_tbl.i.i19.i2206 = load ptr, ptr %offset_tbl_ptr.i.i5.i1639, align 8, !noalias !23
  %product.i.i.i20.i2207 = mul i64 %hash_coef.i.i17.i2204, 4015701072841558310
  %shifted.i.i.i21.i2208 = lshr i64 %product.i.i.i20.i2207, 32
  %xored.i.i.i22.i2209 = xor i64 %shifted.i.i.i21.i2208, %product.i.i.i20.i2207
  %hash.i.i.i23.i2210 = and i64 %xored.i.i.i22.i2209, %tbl_size.i.i18.i2205
  %offset_ptr.i.i24.i2211 = getelementptr i32, ptr %offset_tbl.i.i19.i2206, i64 %hash.i.i.i23.i2210
  %offset.i.i39.i2212 = load i32, ptr %offset_ptr.i.i24.i2211, align 4, !noalias !69
  %637 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %638 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %639 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %640

640:                                              ; preds = %.cont.i2235, %632
  %.0308.i2213 = phi i32 [ 0, %632 ], [ %673, %.cont.i2235 ]
  %.070307.i2214 = phi i1 [ true, %632 ], [ %674, %.cont.i2235 ]
  %.sroa.0.0306.i2215 = phi ptr [ %629, %632 ], [ %663, %.cont.i2235 ]
  %.sroa.6.0305.i2216.in = phi i64 [ %634, %632 ], [ %665, %.cont.i2235 ]
  %.sroa.12.0304.i2217.in = phi i64 [ %635, %632 ], [ %666, %.cont.i2235 ]
  %.sroa.17.0303.i2218 = phi i32 [ %offset.i.i39.i2212, %632 ], [ %offset.i.i71.i2249, %.cont.i2235 ]
  %.sroa.12.0304.i2217 = inttoptr i64 %.sroa.12.0304.i2217.in to ptr
  %.sroa.6.0305.i2216 = inttoptr i64 %.sroa.6.0305.i2216.in to ptr
  %641 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2215, 0
  %642 = insertvalue { ptr, ptr, ptr, i32 } %641, ptr %.sroa.6.0305.i2216, 1
  %643 = insertvalue { ptr, ptr, ptr, i32 } %642, ptr %.sroa.12.0304.i2217, 2
  %644 = insertvalue { ptr, ptr, ptr, i32 } %643, i32 %.sroa.17.0303.i2218, 3
  %645 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2215)
  %646 = sext i32 %.sroa.17.0303.i2218 to i64
  %647 = getelementptr ptr, ptr %.sroa.0.0306.i2215, i64 %646
  %648 = getelementptr i8, ptr %647, i64 64
  %649 = load ptr, ptr %648, align 8
  %result.i43.i2219 = call ptr %649({ ptr, ptr, ptr, i32 } %644, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %650 = call i32 %result.i43.i2219({ ptr, ptr, ptr, i32 } %644, { ptr, ptr, ptr, i32 } %644, ptr nonnull align 8 %2) #42
  %..i2220 = select i1 %.070307.i2214, ptr %40, ptr %42
  %.184.i2221 = select i1 %.070307.i2214, i64 104, i64 112
  %.185.i2222 = select i1 %.070307.i2214, ptr %41, ptr %43
  %.186.i2223 = select i1 %.070307.i2214, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2220, align 8
  %651 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2220)
  %652 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2221
  %653 = load ptr, ptr %652, align 8
  store ptr @i32_typ, ptr %.185.i2222, align 8
  %result.i44.i2224 = call ptr %653({ ptr, ptr, ptr, i32 } %117, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2222) #45
  %654 = call i32 %result.i44.i2224({ ptr, ptr, ptr, i32 } %117, { ptr, ptr, ptr, i32 } %117, ptr nonnull align 8 dereferenceable(8) %..i2220, i32 %650) #42
  %655 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %656 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2223
  %657 = load ptr, ptr %656, align 8
  %658 = load ptr, ptr %657, align 8
  %659 = call { ptr } %658(ptr nonnull %result.i52) #40
  %.fca.0.extract53.i2225 = extractvalue { ptr } %659, 0
  %660 = sext i32 %654 to i64
  %661 = shl nsw i64 %660, 5
  %662 = getelementptr i8, ptr %.fca.0.extract53.i2225, i64 %661
  %663 = load ptr, ptr %662, align 8
  %664 = getelementptr i8, ptr %662, i64 8
  %665 = load i64, ptr %664, align 4
  %.sroa_idx.i2226 = getelementptr i8, ptr %662, i64 16
  %666 = load i64, ptr %.sroa_idx.i2226, align 4
  %667 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %668 = call { ptr } %658(ptr nonnull %result.i52) #40
  %.fca.0.extract51.i2227 = extractvalue { ptr } %668, 0
  %669 = getelementptr i8, ptr %.fca.0.extract51.i2227, i64 %661
  store ptr %.sroa.0.0306.i2215, ptr %669, align 8
  %670 = getelementptr i8, ptr %669, i64 8
  store i64 %.sroa.6.0305.i2216.in, ptr %670, align 4
  %.sroa_idx100.i2228 = getelementptr i8, ptr %669, i64 16
  store i64 %.sroa.12.0304.i2217.in, ptr %.sroa_idx100.i2228, align 4
  %.sroa_idx101.i2229 = getelementptr i8, ptr %669, i64 24
  store i32 %.sroa.17.0303.i2218, ptr %.sroa_idx101.i2229, align 4
  %671 = icmp ne ptr %663, @nil_typ
  %672 = icmp ne ptr %663, null
  %.not90.i2230 = and i1 %671, %672
  br i1 %.not90.i2230, label %.cont.i2235, label %678

.cont.i2235:                                      ; preds = %640
  %673 = add nuw nsw i32 %.0308.i2213, 1
  %674 = xor i1 %.070307.i2214, true
  %hash_coef_ptr.i.i60.i2238 = getelementptr i8, ptr %663, i64 8
  %tbl_size_ptr.i.i61.i2239 = getelementptr i8, ptr %663, i64 16
  %offset_tbl_ptr.i.i62.i2240 = getelementptr i8, ptr %663, i64 40
  %hash_coef.i.i63.i2241 = load i64, ptr %hash_coef_ptr.i.i60.i2238, align 4
  %tbl_size.i.i64.i2242 = load i64, ptr %tbl_size_ptr.i.i61.i2239, align 4
  %offset_tbl.i.i65.i2243 = load ptr, ptr %offset_tbl_ptr.i.i62.i2240, align 8
  %product.i.i.i66.i2244 = mul i64 %hash_coef.i.i63.i2241, 4015701072841558310
  %shifted.i.i.i67.i2245 = lshr i64 %product.i.i.i66.i2244, 32
  %xored.i.i.i68.i2246 = xor i64 %shifted.i.i.i67.i2245, %product.i.i.i66.i2244
  %hash.i.i.i69.i2247 = and i64 %xored.i.i.i68.i2246, %tbl_size.i.i64.i2242
  %offset_ptr.i.i70.i2248 = getelementptr i32, ptr %offset_tbl.i.i65.i2243, i64 %hash.i.i.i69.i2247
  %offset.i.i71.i2249 = load i32, ptr %offset_ptr.i.i70.i2248, align 4
  %675 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %676 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %677 = icmp ult i32 %.0308.i2213, 99
  br i1 %677, label %640, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2258

678:                                              ; preds = %640
  %679 = load i32, ptr %113, align 4
  %680 = add i32 %679, 1
  %681 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %680, ptr %113, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2258

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2258: ; preds = %.cont.i2235, %678
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %40)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %41)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %42)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %43)
  br label %._crit_edge.i1635

._crit_edge.i1635:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2258, %.lr.ph.i1620
  %682 = add nuw nsw i32 %.045.i1633, 1
  %683 = icmp slt i32 %682, %621
  br i1 %683, label %.lr.ph.i1620, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1653

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1653: ; preds = %._crit_edge.i1635, %._crit_edge.i1670
  %.045.i1668 = phi i32 [ %740, %._crit_edge.i1670 ], [ 0, %._crit_edge.i1635 ]
  %684 = zext nneg i32 %.045.i1668 to i64
  %685 = shl nuw nsw i64 %684, 5
  %686 = getelementptr i8, ptr %620, i64 %685
  %687 = load ptr, ptr %686, align 8
  %688 = icmp ne ptr %687, @nil_typ
  %689 = icmp ne ptr %687, null
  %.not16.i1669 = and i1 %688, %689
  br i1 %.not16.i1669, label %690, label %._crit_edge.i1670

690:                                              ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1653
  %691 = getelementptr i8, ptr %686, i64 8
  %692 = load i64, ptr %691, align 4
  %.sroa_idx.i1671 = getelementptr i8, ptr %686, i64 16
  %693 = load i64, ptr %.sroa_idx.i1671, align 4
  %hash_coef_ptr.i.i3.i1672 = getelementptr i8, ptr %687, i64 8
  %tbl_size_ptr.i.i4.i1673 = getelementptr i8, ptr %687, i64 16
  %offset_tbl_ptr.i.i5.i1674 = getelementptr i8, ptr %687, i64 40
  %694 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %36)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %37)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %38)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %39)
  %hash_coef.i.i17.i2276 = load i64, ptr %hash_coef_ptr.i.i3.i1672, align 4, !noalias !23
  %tbl_size.i.i18.i2277 = load i64, ptr %tbl_size_ptr.i.i4.i1673, align 4, !noalias !23
  %offset_tbl.i.i19.i2278 = load ptr, ptr %offset_tbl_ptr.i.i5.i1674, align 8, !noalias !23
  %product.i.i.i20.i2279 = mul i64 %hash_coef.i.i17.i2276, 4015701072841558310
  %shifted.i.i.i21.i2280 = lshr i64 %product.i.i.i20.i2279, 32
  %xored.i.i.i22.i2281 = xor i64 %shifted.i.i.i21.i2280, %product.i.i.i20.i2279
  %hash.i.i.i23.i2282 = and i64 %xored.i.i.i22.i2281, %tbl_size.i.i18.i2277
  %offset_ptr.i.i24.i2283 = getelementptr i32, ptr %offset_tbl.i.i19.i2278, i64 %hash.i.i.i23.i2282
  %offset.i.i39.i2284 = load i32, ptr %offset_ptr.i.i24.i2283, align 4, !noalias !72
  %695 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %696 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %697 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %698

698:                                              ; preds = %.cont.i2307, %690
  %.0308.i2285 = phi i32 [ 0, %690 ], [ %731, %.cont.i2307 ]
  %.070307.i2286 = phi i1 [ true, %690 ], [ %732, %.cont.i2307 ]
  %.sroa.0.0306.i2287 = phi ptr [ %687, %690 ], [ %721, %.cont.i2307 ]
  %.sroa.6.0305.i2288.in = phi i64 [ %692, %690 ], [ %723, %.cont.i2307 ]
  %.sroa.12.0304.i2289.in = phi i64 [ %693, %690 ], [ %724, %.cont.i2307 ]
  %.sroa.17.0303.i2290 = phi i32 [ %offset.i.i39.i2284, %690 ], [ %offset.i.i71.i2321, %.cont.i2307 ]
  %.sroa.12.0304.i2289 = inttoptr i64 %.sroa.12.0304.i2289.in to ptr
  %.sroa.6.0305.i2288 = inttoptr i64 %.sroa.6.0305.i2288.in to ptr
  %699 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2287, 0
  %700 = insertvalue { ptr, ptr, ptr, i32 } %699, ptr %.sroa.6.0305.i2288, 1
  %701 = insertvalue { ptr, ptr, ptr, i32 } %700, ptr %.sroa.12.0304.i2289, 2
  %702 = insertvalue { ptr, ptr, ptr, i32 } %701, i32 %.sroa.17.0303.i2290, 3
  %703 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2287)
  %704 = sext i32 %.sroa.17.0303.i2290 to i64
  %705 = getelementptr ptr, ptr %.sroa.0.0306.i2287, i64 %704
  %706 = getelementptr i8, ptr %705, i64 64
  %707 = load ptr, ptr %706, align 8
  %result.i43.i2291 = call ptr %707({ ptr, ptr, ptr, i32 } %702, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %708 = call i32 %result.i43.i2291({ ptr, ptr, ptr, i32 } %702, { ptr, ptr, ptr, i32 } %702, ptr nonnull align 8 %2) #42
  %..i2292 = select i1 %.070307.i2286, ptr %36, ptr %38
  %.184.i2293 = select i1 %.070307.i2286, i64 104, i64 112
  %.185.i2294 = select i1 %.070307.i2286, ptr %37, ptr %39
  %.186.i2295 = select i1 %.070307.i2286, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2292, align 8
  %709 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2292)
  %710 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2293
  %711 = load ptr, ptr %710, align 8
  store ptr @i32_typ, ptr %.185.i2294, align 8
  %result.i44.i2296 = call ptr %711({ ptr, ptr, ptr, i32 } %117, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2294) #45
  %712 = call i32 %result.i44.i2296({ ptr, ptr, ptr, i32 } %117, { ptr, ptr, ptr, i32 } %117, ptr nonnull align 8 dereferenceable(8) %..i2292, i32 %708) #42
  %713 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %714 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2295
  %715 = load ptr, ptr %714, align 8
  %716 = load ptr, ptr %715, align 8
  %717 = call { ptr } %716(ptr nonnull %result.i52) #40
  %.fca.0.extract53.i2297 = extractvalue { ptr } %717, 0
  %718 = sext i32 %712 to i64
  %719 = shl nsw i64 %718, 5
  %720 = getelementptr i8, ptr %.fca.0.extract53.i2297, i64 %719
  %721 = load ptr, ptr %720, align 8
  %722 = getelementptr i8, ptr %720, i64 8
  %723 = load i64, ptr %722, align 4
  %.sroa_idx.i2298 = getelementptr i8, ptr %720, i64 16
  %724 = load i64, ptr %.sroa_idx.i2298, align 4
  %725 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %726 = call { ptr } %716(ptr nonnull %result.i52) #40
  %.fca.0.extract51.i2299 = extractvalue { ptr } %726, 0
  %727 = getelementptr i8, ptr %.fca.0.extract51.i2299, i64 %719
  store ptr %.sroa.0.0306.i2287, ptr %727, align 8
  %728 = getelementptr i8, ptr %727, i64 8
  store i64 %.sroa.6.0305.i2288.in, ptr %728, align 4
  %.sroa_idx100.i2300 = getelementptr i8, ptr %727, i64 16
  store i64 %.sroa.12.0304.i2289.in, ptr %.sroa_idx100.i2300, align 4
  %.sroa_idx101.i2301 = getelementptr i8, ptr %727, i64 24
  store i32 %.sroa.17.0303.i2290, ptr %.sroa_idx101.i2301, align 4
  %729 = icmp ne ptr %721, @nil_typ
  %730 = icmp ne ptr %721, null
  %.not90.i2302 = and i1 %729, %730
  br i1 %.not90.i2302, label %.cont.i2307, label %736

.cont.i2307:                                      ; preds = %698
  %731 = add nuw nsw i32 %.0308.i2285, 1
  %732 = xor i1 %.070307.i2286, true
  %hash_coef_ptr.i.i60.i2310 = getelementptr i8, ptr %721, i64 8
  %tbl_size_ptr.i.i61.i2311 = getelementptr i8, ptr %721, i64 16
  %offset_tbl_ptr.i.i62.i2312 = getelementptr i8, ptr %721, i64 40
  %hash_coef.i.i63.i2313 = load i64, ptr %hash_coef_ptr.i.i60.i2310, align 4
  %tbl_size.i.i64.i2314 = load i64, ptr %tbl_size_ptr.i.i61.i2311, align 4
  %offset_tbl.i.i65.i2315 = load ptr, ptr %offset_tbl_ptr.i.i62.i2312, align 8
  %product.i.i.i66.i2316 = mul i64 %hash_coef.i.i63.i2313, 4015701072841558310
  %shifted.i.i.i67.i2317 = lshr i64 %product.i.i.i66.i2316, 32
  %xored.i.i.i68.i2318 = xor i64 %shifted.i.i.i67.i2317, %product.i.i.i66.i2316
  %hash.i.i.i69.i2319 = and i64 %xored.i.i.i68.i2318, %tbl_size.i.i64.i2314
  %offset_ptr.i.i70.i2320 = getelementptr i32, ptr %offset_tbl.i.i65.i2315, i64 %hash.i.i.i69.i2319
  %offset.i.i71.i2321 = load i32, ptr %offset_ptr.i.i70.i2320, align 4
  %733 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %734 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %735 = icmp ult i32 %.0308.i2285, 99
  br i1 %735, label %698, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2330

736:                                              ; preds = %698
  %737 = load i32, ptr %113, align 4
  %738 = add i32 %737, 1
  %739 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %738, ptr %113, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2330

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2330: ; preds = %.cont.i2307, %736
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %36)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %37)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %38)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %39)
  br label %._crit_edge.i1670

._crit_edge.i1670:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2330, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1653
  %740 = add nuw nsw i32 %.045.i1668, 1
  %741 = icmp slt i32 %740, %621
  br i1 %741, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1653, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1688

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1688: ; preds = %._crit_edge.i1670, %617
  %742 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %60)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %61)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %62)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %63)
  %hash_coef.i.i17.i806 = load i64, ptr %hash_coef_ptr.i.i60.i, align 4, !noalias !23
  %tbl_size.i.i18.i807 = load i64, ptr %tbl_size_ptr.i.i61.i, align 4, !noalias !23
  %offset_tbl.i.i19.i808 = load ptr, ptr %offset_tbl_ptr.i.i62.i, align 8, !noalias !23
  %product.i.i.i20.i809 = mul i64 %hash_coef.i.i17.i806, 4015701072841558310
  %shifted.i.i.i21.i810 = lshr i64 %product.i.i.i20.i809, 32
  %xored.i.i.i22.i811 = xor i64 %shifted.i.i.i21.i810, %product.i.i.i20.i809
  %hash.i.i.i23.i812 = and i64 %xored.i.i.i22.i811, %tbl_size.i.i18.i807
  %offset_ptr.i.i24.i813 = getelementptr i32, ptr %offset_tbl.i.i19.i808, i64 %hash.i.i.i23.i812
  %offset.i.i39.i814 = load i32, ptr %offset_ptr.i.i24.i813, align 4, !noalias !75
  %743 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %744 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %745 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %746

746:                                              ; preds = %.cont.i838, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1688
  %.0308.i816 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1688 ], [ %779, %.cont.i838 ]
  %.070307.i817 = phi i1 [ true, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1688 ], [ %780, %.cont.i838 ]
  %.sroa.0.0306.i818 = phi ptr [ %597, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1688 ], [ %769, %.cont.i838 ]
  %.sroa.6.0305.i819.in = phi i64 [ %599, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1688 ], [ %771, %.cont.i838 ]
  %.sroa.12.0304.i820.in = phi i64 [ %600, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1688 ], [ %772, %.cont.i838 ]
  %.sroa.17.0303.i821 = phi i32 [ %offset.i.i39.i814, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1688 ], [ %offset.i.i71.i852, %.cont.i838 ]
  %.sroa.12.0304.i820 = inttoptr i64 %.sroa.12.0304.i820.in to ptr
  %.sroa.6.0305.i819 = inttoptr i64 %.sroa.6.0305.i819.in to ptr
  %747 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i818, 0
  %748 = insertvalue { ptr, ptr, ptr, i32 } %747, ptr %.sroa.6.0305.i819, 1
  %749 = insertvalue { ptr, ptr, ptr, i32 } %748, ptr %.sroa.12.0304.i820, 2
  %750 = insertvalue { ptr, ptr, ptr, i32 } %749, i32 %.sroa.17.0303.i821, 3
  %751 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i818)
  %752 = sext i32 %.sroa.17.0303.i821 to i64
  %753 = getelementptr ptr, ptr %.sroa.0.0306.i818, i64 %752
  %754 = getelementptr i8, ptr %753, i64 64
  %755 = load ptr, ptr %754, align 8
  %result.i43.i822 = call ptr %755({ ptr, ptr, ptr, i32 } %750, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %756 = call i32 %result.i43.i822({ ptr, ptr, ptr, i32 } %750, { ptr, ptr, ptr, i32 } %750, ptr nonnull align 8 %2) #42
  %..i823 = select i1 %.070307.i817, ptr %60, ptr %62
  %.184.i824 = select i1 %.070307.i817, i64 104, i64 112
  %.185.i825 = select i1 %.070307.i817, ptr %61, ptr %63
  %.186.i826 = select i1 %.070307.i817, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i823, align 8
  %757 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i823)
  %758 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i824
  %759 = load ptr, ptr %758, align 8
  store ptr @i32_typ, ptr %.185.i825, align 8
  %result.i44.i827 = call ptr %759({ ptr, ptr, ptr, i32 } %116, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i825) #45
  %760 = call i32 %result.i44.i827({ ptr, ptr, ptr, i32 } %116, { ptr, ptr, ptr, i32 } %116, ptr nonnull align 8 dereferenceable(8) %..i823, i32 %756) #42
  %761 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %762 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i826
  %763 = load ptr, ptr %762, align 8
  %764 = load ptr, ptr %763, align 8
  %765 = call { ptr } %764(ptr nonnull %result.i52) #40
  %.fca.0.extract53.i828 = extractvalue { ptr } %765, 0
  %766 = sext i32 %760 to i64
  %767 = shl nsw i64 %766, 5
  %768 = getelementptr i8, ptr %.fca.0.extract53.i828, i64 %767
  %769 = load ptr, ptr %768, align 8
  %770 = getelementptr i8, ptr %768, i64 8
  %771 = load i64, ptr %770, align 4
  %.sroa_idx.i829 = getelementptr i8, ptr %768, i64 16
  %772 = load i64, ptr %.sroa_idx.i829, align 4
  %773 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %774 = call { ptr } %764(ptr nonnull %result.i52) #40
  %.fca.0.extract51.i830 = extractvalue { ptr } %774, 0
  %775 = getelementptr i8, ptr %.fca.0.extract51.i830, i64 %767
  store ptr %.sroa.0.0306.i818, ptr %775, align 8
  %776 = getelementptr i8, ptr %775, i64 8
  store i64 %.sroa.6.0305.i819.in, ptr %776, align 4
  %.sroa_idx100.i831 = getelementptr i8, ptr %775, i64 16
  store i64 %.sroa.12.0304.i820.in, ptr %.sroa_idx100.i831, align 4
  %.sroa_idx101.i832 = getelementptr i8, ptr %775, i64 24
  store i32 %.sroa.17.0303.i821, ptr %.sroa_idx101.i832, align 4
  %777 = icmp ne ptr %769, @nil_typ
  %778 = icmp ne ptr %769, null
  %.not90.i833 = and i1 %777, %778
  br i1 %.not90.i833, label %.cont.i838, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit861

.cont.i838:                                       ; preds = %746
  %779 = add nuw nsw i32 %.0308.i816, 1
  %780 = xor i1 %.070307.i817, true
  %hash_coef_ptr.i.i60.i841 = getelementptr i8, ptr %769, i64 8
  %tbl_size_ptr.i.i61.i842 = getelementptr i8, ptr %769, i64 16
  %offset_tbl_ptr.i.i62.i843 = getelementptr i8, ptr %769, i64 40
  %hash_coef.i.i63.i844 = load i64, ptr %hash_coef_ptr.i.i60.i841, align 4
  %tbl_size.i.i64.i845 = load i64, ptr %tbl_size_ptr.i.i61.i842, align 4
  %offset_tbl.i.i65.i846 = load ptr, ptr %offset_tbl_ptr.i.i62.i843, align 8
  %product.i.i.i66.i847 = mul i64 %hash_coef.i.i63.i844, 4015701072841558310
  %shifted.i.i.i67.i848 = lshr i64 %product.i.i.i66.i847, 32
  %xored.i.i.i68.i849 = xor i64 %shifted.i.i.i67.i848, %product.i.i.i66.i847
  %hash.i.i.i69.i850 = and i64 %xored.i.i.i68.i849, %tbl_size.i.i64.i845
  %offset_ptr.i.i70.i851 = getelementptr i32, ptr %offset_tbl.i.i65.i846, i64 %hash.i.i.i69.i850
  %offset.i.i71.i852 = load i32, ptr %offset_ptr.i.i70.i851, align 4
  %781 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %782 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %783 = icmp ult i32 %.0308.i816, 99
  br i1 %783, label %746, label %787

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit861: ; preds = %746
  %784 = load i32, ptr %113, align 4
  %785 = add i32 %784, 1
  %786 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %785, ptr %113, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %60)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %61)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %62)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %63)
  br label %CuckooMap_insert_keyK_valueV.exit

787:                                              ; preds = %.cont.i838
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %60)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %61)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %62)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %63)
  %788 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %789 = load ptr, ptr %101, align 8
  %790 = load ptr, ptr %102, align 8
  %791 = load i32, ptr %100, align 8
  %792 = shl i32 %791, 1
  %spec.select.i877 = call i32 @llvm.smax.i32(i32 %792, i32 noundef 16) #37
  store i32 %spec.select.i877, ptr %100, align 8
  %793 = zext nneg i32 %spec.select.i877 to i64
  %794 = shl nuw nsw i64 %793, 5
  %result.i.i878 = call noalias ptr @bump_malloc_inner(i64 noundef %794, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i878, ptr %101, align 8
  %result.i1.i879 = call noalias ptr @bump_malloc_inner(i64 noundef %794, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i879, ptr %102, align 8
  store i32 0, ptr %113, align 4
  %795 = icmp sgt i32 %791, 0
  br i1 %795, label %.lr.ph.i1690, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1723.thread

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1723.thread: ; preds = %787
  %796 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %CuckooMap_insert_keyK_valueV.exit

.lr.ph.i1690:                                     ; preds = %787, %._crit_edge.i1705
  %.045.i1703 = phi i32 [ %853, %._crit_edge.i1705 ], [ 0, %787 ]
  %797 = zext nneg i32 %.045.i1703 to i64
  %798 = shl nuw nsw i64 %797, 5
  %799 = getelementptr i8, ptr %789, i64 %798
  %800 = load ptr, ptr %799, align 8
  %801 = icmp ne ptr %800, @nil_typ
  %802 = icmp ne ptr %800, null
  %.not16.i1704 = and i1 %801, %802
  br i1 %.not16.i1704, label %803, label %._crit_edge.i1705

803:                                              ; preds = %.lr.ph.i1690
  %804 = getelementptr i8, ptr %799, i64 8
  %805 = load i64, ptr %804, align 4
  %.sroa_idx.i1706 = getelementptr i8, ptr %799, i64 16
  %806 = load i64, ptr %.sroa_idx.i1706, align 4
  %hash_coef_ptr.i.i3.i1707 = getelementptr i8, ptr %800, i64 8
  %tbl_size_ptr.i.i4.i1708 = getelementptr i8, ptr %800, i64 16
  %offset_tbl_ptr.i.i5.i1709 = getelementptr i8, ptr %800, i64 40
  %807 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %32)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %33)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %34)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %35)
  %hash_coef.i.i17.i2348 = load i64, ptr %hash_coef_ptr.i.i3.i1707, align 4, !noalias !23
  %tbl_size.i.i18.i2349 = load i64, ptr %tbl_size_ptr.i.i4.i1708, align 4, !noalias !23
  %offset_tbl.i.i19.i2350 = load ptr, ptr %offset_tbl_ptr.i.i5.i1709, align 8, !noalias !23
  %product.i.i.i20.i2351 = mul i64 %hash_coef.i.i17.i2348, 4015701072841558310
  %shifted.i.i.i21.i2352 = lshr i64 %product.i.i.i20.i2351, 32
  %xored.i.i.i22.i2353 = xor i64 %shifted.i.i.i21.i2352, %product.i.i.i20.i2351
  %hash.i.i.i23.i2354 = and i64 %xored.i.i.i22.i2353, %tbl_size.i.i18.i2349
  %offset_ptr.i.i24.i2355 = getelementptr i32, ptr %offset_tbl.i.i19.i2350, i64 %hash.i.i.i23.i2354
  %offset.i.i39.i2356 = load i32, ptr %offset_ptr.i.i24.i2355, align 4, !noalias !78
  %808 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %809 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %810 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %811

811:                                              ; preds = %.cont.i2379, %803
  %.0308.i2357 = phi i32 [ 0, %803 ], [ %844, %.cont.i2379 ]
  %.070307.i2358 = phi i1 [ true, %803 ], [ %845, %.cont.i2379 ]
  %.sroa.0.0306.i2359 = phi ptr [ %800, %803 ], [ %834, %.cont.i2379 ]
  %.sroa.6.0305.i2360.in = phi i64 [ %805, %803 ], [ %836, %.cont.i2379 ]
  %.sroa.12.0304.i2361.in = phi i64 [ %806, %803 ], [ %837, %.cont.i2379 ]
  %.sroa.17.0303.i2362 = phi i32 [ %offset.i.i39.i2356, %803 ], [ %offset.i.i71.i2393, %.cont.i2379 ]
  %.sroa.12.0304.i2361 = inttoptr i64 %.sroa.12.0304.i2361.in to ptr
  %.sroa.6.0305.i2360 = inttoptr i64 %.sroa.6.0305.i2360.in to ptr
  %812 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2359, 0
  %813 = insertvalue { ptr, ptr, ptr, i32 } %812, ptr %.sroa.6.0305.i2360, 1
  %814 = insertvalue { ptr, ptr, ptr, i32 } %813, ptr %.sroa.12.0304.i2361, 2
  %815 = insertvalue { ptr, ptr, ptr, i32 } %814, i32 %.sroa.17.0303.i2362, 3
  %816 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2359)
  %817 = sext i32 %.sroa.17.0303.i2362 to i64
  %818 = getelementptr ptr, ptr %.sroa.0.0306.i2359, i64 %817
  %819 = getelementptr i8, ptr %818, i64 64
  %820 = load ptr, ptr %819, align 8
  %result.i43.i2363 = call ptr %820({ ptr, ptr, ptr, i32 } %815, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %821 = call i32 %result.i43.i2363({ ptr, ptr, ptr, i32 } %815, { ptr, ptr, ptr, i32 } %815, ptr nonnull align 8 %2) #42
  %..i2364 = select i1 %.070307.i2358, ptr %32, ptr %34
  %.184.i2365 = select i1 %.070307.i2358, i64 104, i64 112
  %.185.i2366 = select i1 %.070307.i2358, ptr %33, ptr %35
  %.186.i2367 = select i1 %.070307.i2358, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2364, align 8
  %822 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2364)
  %823 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2365
  %824 = load ptr, ptr %823, align 8
  store ptr @i32_typ, ptr %.185.i2366, align 8
  %result.i44.i2368 = call ptr %824({ ptr, ptr, ptr, i32 } %117, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2366) #45
  %825 = call i32 %result.i44.i2368({ ptr, ptr, ptr, i32 } %117, { ptr, ptr, ptr, i32 } %117, ptr nonnull align 8 dereferenceable(8) %..i2364, i32 %821) #42
  %826 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %827 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2367
  %828 = load ptr, ptr %827, align 8
  %829 = load ptr, ptr %828, align 8
  %830 = call { ptr } %829(ptr nonnull %result.i52) #40
  %.fca.0.extract53.i2369 = extractvalue { ptr } %830, 0
  %831 = sext i32 %825 to i64
  %832 = shl nsw i64 %831, 5
  %833 = getelementptr i8, ptr %.fca.0.extract53.i2369, i64 %832
  %834 = load ptr, ptr %833, align 8
  %835 = getelementptr i8, ptr %833, i64 8
  %836 = load i64, ptr %835, align 4
  %.sroa_idx.i2370 = getelementptr i8, ptr %833, i64 16
  %837 = load i64, ptr %.sroa_idx.i2370, align 4
  %838 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %839 = call { ptr } %829(ptr nonnull %result.i52) #40
  %.fca.0.extract51.i2371 = extractvalue { ptr } %839, 0
  %840 = getelementptr i8, ptr %.fca.0.extract51.i2371, i64 %832
  store ptr %.sroa.0.0306.i2359, ptr %840, align 8
  %841 = getelementptr i8, ptr %840, i64 8
  store i64 %.sroa.6.0305.i2360.in, ptr %841, align 4
  %.sroa_idx100.i2372 = getelementptr i8, ptr %840, i64 16
  store i64 %.sroa.12.0304.i2361.in, ptr %.sroa_idx100.i2372, align 4
  %.sroa_idx101.i2373 = getelementptr i8, ptr %840, i64 24
  store i32 %.sroa.17.0303.i2362, ptr %.sroa_idx101.i2373, align 4
  %842 = icmp ne ptr %834, @nil_typ
  %843 = icmp ne ptr %834, null
  %.not90.i2374 = and i1 %842, %843
  br i1 %.not90.i2374, label %.cont.i2379, label %849

.cont.i2379:                                      ; preds = %811
  %844 = add nuw nsw i32 %.0308.i2357, 1
  %845 = xor i1 %.070307.i2358, true
  %hash_coef_ptr.i.i60.i2382 = getelementptr i8, ptr %834, i64 8
  %tbl_size_ptr.i.i61.i2383 = getelementptr i8, ptr %834, i64 16
  %offset_tbl_ptr.i.i62.i2384 = getelementptr i8, ptr %834, i64 40
  %hash_coef.i.i63.i2385 = load i64, ptr %hash_coef_ptr.i.i60.i2382, align 4
  %tbl_size.i.i64.i2386 = load i64, ptr %tbl_size_ptr.i.i61.i2383, align 4
  %offset_tbl.i.i65.i2387 = load ptr, ptr %offset_tbl_ptr.i.i62.i2384, align 8
  %product.i.i.i66.i2388 = mul i64 %hash_coef.i.i63.i2385, 4015701072841558310
  %shifted.i.i.i67.i2389 = lshr i64 %product.i.i.i66.i2388, 32
  %xored.i.i.i68.i2390 = xor i64 %shifted.i.i.i67.i2389, %product.i.i.i66.i2388
  %hash.i.i.i69.i2391 = and i64 %xored.i.i.i68.i2390, %tbl_size.i.i64.i2386
  %offset_ptr.i.i70.i2392 = getelementptr i32, ptr %offset_tbl.i.i65.i2387, i64 %hash.i.i.i69.i2391
  %offset.i.i71.i2393 = load i32, ptr %offset_ptr.i.i70.i2392, align 4
  %846 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %847 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %848 = icmp ult i32 %.0308.i2357, 99
  br i1 %848, label %811, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2402

849:                                              ; preds = %811
  %850 = load i32, ptr %113, align 4
  %851 = add i32 %850, 1
  %852 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %851, ptr %113, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2402

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2402: ; preds = %.cont.i2379, %849
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %32)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %33)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %34)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %35)
  br label %._crit_edge.i1705

._crit_edge.i1705:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2402, %.lr.ph.i1690
  %853 = add nuw nsw i32 %.045.i1703, 1
  %854 = icmp slt i32 %853, %791
  br i1 %854, label %.lr.ph.i1690, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1723

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1723: ; preds = %._crit_edge.i1705
  %855 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %856

856:                                              ; preds = %._crit_edge.i1740, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1723
  %.045.i1738 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1723 ], [ %913, %._crit_edge.i1740 ]
  %857 = zext nneg i32 %.045.i1738 to i64
  %858 = shl nuw nsw i64 %857, 5
  %859 = getelementptr i8, ptr %790, i64 %858
  %860 = load ptr, ptr %859, align 8
  %861 = icmp ne ptr %860, @nil_typ
  %862 = icmp ne ptr %860, null
  %.not16.i1739 = and i1 %861, %862
  br i1 %.not16.i1739, label %863, label %._crit_edge.i1740

863:                                              ; preds = %856
  %864 = getelementptr i8, ptr %859, i64 8
  %865 = load i64, ptr %864, align 4
  %.sroa_idx.i1741 = getelementptr i8, ptr %859, i64 16
  %866 = load i64, ptr %.sroa_idx.i1741, align 4
  %hash_coef_ptr.i.i3.i1742 = getelementptr i8, ptr %860, i64 8
  %tbl_size_ptr.i.i4.i1743 = getelementptr i8, ptr %860, i64 16
  %offset_tbl_ptr.i.i5.i1744 = getelementptr i8, ptr %860, i64 40
  %867 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %28)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %29)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %30)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %31)
  %hash_coef.i.i17.i2420 = load i64, ptr %hash_coef_ptr.i.i3.i1742, align 4, !noalias !23
  %tbl_size.i.i18.i2421 = load i64, ptr %tbl_size_ptr.i.i4.i1743, align 4, !noalias !23
  %offset_tbl.i.i19.i2422 = load ptr, ptr %offset_tbl_ptr.i.i5.i1744, align 8, !noalias !23
  %product.i.i.i20.i2423 = mul i64 %hash_coef.i.i17.i2420, 4015701072841558310
  %shifted.i.i.i21.i2424 = lshr i64 %product.i.i.i20.i2423, 32
  %xored.i.i.i22.i2425 = xor i64 %shifted.i.i.i21.i2424, %product.i.i.i20.i2423
  %hash.i.i.i23.i2426 = and i64 %xored.i.i.i22.i2425, %tbl_size.i.i18.i2421
  %offset_ptr.i.i24.i2427 = getelementptr i32, ptr %offset_tbl.i.i19.i2422, i64 %hash.i.i.i23.i2426
  %offset.i.i39.i2428 = load i32, ptr %offset_ptr.i.i24.i2427, align 4, !noalias !81
  %868 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %869 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %870 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %871

871:                                              ; preds = %.cont.i2451, %863
  %.0308.i2429 = phi i32 [ 0, %863 ], [ %904, %.cont.i2451 ]
  %.070307.i2430 = phi i1 [ true, %863 ], [ %905, %.cont.i2451 ]
  %.sroa.0.0306.i2431 = phi ptr [ %860, %863 ], [ %894, %.cont.i2451 ]
  %.sroa.6.0305.i2432.in = phi i64 [ %865, %863 ], [ %896, %.cont.i2451 ]
  %.sroa.12.0304.i2433.in = phi i64 [ %866, %863 ], [ %897, %.cont.i2451 ]
  %.sroa.17.0303.i2434 = phi i32 [ %offset.i.i39.i2428, %863 ], [ %offset.i.i71.i2465, %.cont.i2451 ]
  %.sroa.12.0304.i2433 = inttoptr i64 %.sroa.12.0304.i2433.in to ptr
  %.sroa.6.0305.i2432 = inttoptr i64 %.sroa.6.0305.i2432.in to ptr
  %872 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2431, 0
  %873 = insertvalue { ptr, ptr, ptr, i32 } %872, ptr %.sroa.6.0305.i2432, 1
  %874 = insertvalue { ptr, ptr, ptr, i32 } %873, ptr %.sroa.12.0304.i2433, 2
  %875 = insertvalue { ptr, ptr, ptr, i32 } %874, i32 %.sroa.17.0303.i2434, 3
  %876 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2431)
  %877 = sext i32 %.sroa.17.0303.i2434 to i64
  %878 = getelementptr ptr, ptr %.sroa.0.0306.i2431, i64 %877
  %879 = getelementptr i8, ptr %878, i64 64
  %880 = load ptr, ptr %879, align 8
  %result.i43.i2435 = call ptr %880({ ptr, ptr, ptr, i32 } %875, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %881 = call i32 %result.i43.i2435({ ptr, ptr, ptr, i32 } %875, { ptr, ptr, ptr, i32 } %875, ptr nonnull align 8 %2) #42
  %..i2436 = select i1 %.070307.i2430, ptr %28, ptr %30
  %.184.i2437 = select i1 %.070307.i2430, i64 104, i64 112
  %.185.i2438 = select i1 %.070307.i2430, ptr %29, ptr %31
  %.186.i2439 = select i1 %.070307.i2430, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2436, align 8
  %882 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2436)
  %883 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2437
  %884 = load ptr, ptr %883, align 8
  store ptr @i32_typ, ptr %.185.i2438, align 8
  %result.i44.i2440 = call ptr %884({ ptr, ptr, ptr, i32 } %117, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2438) #45
  %885 = call i32 %result.i44.i2440({ ptr, ptr, ptr, i32 } %117, { ptr, ptr, ptr, i32 } %117, ptr nonnull align 8 dereferenceable(8) %..i2436, i32 %881) #42
  %886 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %887 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2439
  %888 = load ptr, ptr %887, align 8
  %889 = load ptr, ptr %888, align 8
  %890 = call { ptr } %889(ptr nonnull %result.i52) #40
  %.fca.0.extract53.i2441 = extractvalue { ptr } %890, 0
  %891 = sext i32 %885 to i64
  %892 = shl nsw i64 %891, 5
  %893 = getelementptr i8, ptr %.fca.0.extract53.i2441, i64 %892
  %894 = load ptr, ptr %893, align 8
  %895 = getelementptr i8, ptr %893, i64 8
  %896 = load i64, ptr %895, align 4
  %.sroa_idx.i2442 = getelementptr i8, ptr %893, i64 16
  %897 = load i64, ptr %.sroa_idx.i2442, align 4
  %898 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %899 = call { ptr } %889(ptr nonnull %result.i52) #40
  %.fca.0.extract51.i2443 = extractvalue { ptr } %899, 0
  %900 = getelementptr i8, ptr %.fca.0.extract51.i2443, i64 %892
  store ptr %.sroa.0.0306.i2431, ptr %900, align 8
  %901 = getelementptr i8, ptr %900, i64 8
  store i64 %.sroa.6.0305.i2432.in, ptr %901, align 4
  %.sroa_idx100.i2444 = getelementptr i8, ptr %900, i64 16
  store i64 %.sroa.12.0304.i2433.in, ptr %.sroa_idx100.i2444, align 4
  %.sroa_idx101.i2445 = getelementptr i8, ptr %900, i64 24
  store i32 %.sroa.17.0303.i2434, ptr %.sroa_idx101.i2445, align 4
  %902 = icmp ne ptr %894, @nil_typ
  %903 = icmp ne ptr %894, null
  %.not90.i2446 = and i1 %902, %903
  br i1 %.not90.i2446, label %.cont.i2451, label %909

.cont.i2451:                                      ; preds = %871
  %904 = add nuw nsw i32 %.0308.i2429, 1
  %905 = xor i1 %.070307.i2430, true
  %hash_coef_ptr.i.i60.i2454 = getelementptr i8, ptr %894, i64 8
  %tbl_size_ptr.i.i61.i2455 = getelementptr i8, ptr %894, i64 16
  %offset_tbl_ptr.i.i62.i2456 = getelementptr i8, ptr %894, i64 40
  %hash_coef.i.i63.i2457 = load i64, ptr %hash_coef_ptr.i.i60.i2454, align 4
  %tbl_size.i.i64.i2458 = load i64, ptr %tbl_size_ptr.i.i61.i2455, align 4
  %offset_tbl.i.i65.i2459 = load ptr, ptr %offset_tbl_ptr.i.i62.i2456, align 8
  %product.i.i.i66.i2460 = mul i64 %hash_coef.i.i63.i2457, 4015701072841558310
  %shifted.i.i.i67.i2461 = lshr i64 %product.i.i.i66.i2460, 32
  %xored.i.i.i68.i2462 = xor i64 %shifted.i.i.i67.i2461, %product.i.i.i66.i2460
  %hash.i.i.i69.i2463 = and i64 %xored.i.i.i68.i2462, %tbl_size.i.i64.i2458
  %offset_ptr.i.i70.i2464 = getelementptr i32, ptr %offset_tbl.i.i65.i2459, i64 %hash.i.i.i69.i2463
  %offset.i.i71.i2465 = load i32, ptr %offset_ptr.i.i70.i2464, align 4
  %906 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %907 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %908 = icmp ult i32 %.0308.i2429, 99
  br i1 %908, label %871, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2474

909:                                              ; preds = %871
  %910 = load i32, ptr %113, align 4
  %911 = add i32 %910, 1
  %912 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %911, ptr %113, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2474

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2474: ; preds = %.cont.i2451, %909
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %28)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %29)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %30)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %31)
  br label %._crit_edge.i1740

._crit_edge.i1740:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2474, %856
  %913 = add nuw nsw i32 %.045.i1738, 1
  %914 = icmp slt i32 %913, %791
  br i1 %914, label %856, label %CuckooMap_insert_keyK_valueV.exit

CuckooMap_insert_keyK_valueV.exit:                ; preds = %._crit_edge.i1740, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1723.thread, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit861, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit729, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %915 = add nuw nsw i32 %.0247198, 1
  %916 = icmp slt i32 %915, %0
  br i1 %916, label %._crit_edge, label %._crit_edge2._crit_edge

._crit_edge2._crit_edge:                          ; preds = %CuckooMap_insert_keyK_valueV.exit
  %917 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %918 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %919 = load i32, ptr %113, align 4
  %920 = call i64 @clock()
  %921 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 16 dereferenceable(744) @Array) #50
  %922 = getelementptr inbounds i8, ptr %result.i9, i64 44
  %923 = insertvalue { ptr, ptr, ptr, i32 } { ptr @CuckooMap, ptr undef, ptr undef, i32 undef }, ptr %result.i9, 1
  %924 = insertvalue { ptr, ptr, ptr, i32 } %923, ptr undef, 2
  %925 = insertvalue { ptr, ptr, ptr, i32 } %924, i32 10, 3
  %926 = insertvalue { ptr, ptr, ptr, i32 } %923, i32 10, 3
  br label %._crit_edge3

._crit_edge3:                                     ; preds = %._crit_edge2._crit_edge, %CuckooMap_insert_keyK_valueV.exit460
  %.2249200 = phi i32 [ %1721, %CuckooMap_insert_keyK_valueV.exit460 ], [ 0, %._crit_edge2._crit_edge ]
  %927 = load ptr, ptr %91, align 8
  %928 = zext nneg i32 %.2249200 to i64
  %929 = shl nuw nsw i64 %928, 2
  %930 = getelementptr i8, ptr %927, i64 %929
  %931 = load i32, ptr %930, align 1
  %.sroa.2.sroa.0.0.insert.ext.i = zext i32 %931 to i160
  %932 = add i32 %931, 1
  %933 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.2.sroa.0.0.insert.ext.i, 1
  %.sroa.0211.0.insert.ext = zext i32 %932 to i160
  %934 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0211.0.insert.ext, 1
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %935 = load ptr, ptr %81, align 8
  %936 = call i32 %935({ ptr, i160 } %933) #42
  %937 = load i32, ptr %83, align 8
  %938 = add i32 %937, -1
  %939 = and i32 %938, %936
  %940 = load ptr, ptr %84, align 8
  %941 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %942 = sext i32 %939 to i64
  %943 = shl nsw i64 %942, 5
  %944 = getelementptr i8, ptr %940, i64 %943
  %945 = load ptr, ptr %944, align 8
  %946 = getelementptr i8, ptr %944, i64 8
  %947 = icmp ne ptr %945, @nil_typ
  %948 = icmp ne ptr %945, null
  %.not64.i925 = and i1 %947, %948
  br i1 %.not64.i925, label %949, label %1047

949:                                              ; preds = %._crit_edge3
  %950 = load i64, ptr %946, align 4
  %.sroa_idx.i927 = getelementptr i8, ptr %944, i64 16
  %951 = load i64, ptr %.sroa_idx.i927, align 4
  %952 = inttoptr i64 %950 to ptr
  %953 = inttoptr i64 %951 to ptr
  %hash_coef_ptr.i.i3.i928 = getelementptr i8, ptr %945, i64 8
  %tbl_size_ptr.i.i4.i929 = getelementptr i8, ptr %945, i64 16
  %offset_tbl_ptr.i.i5.i930 = getelementptr i8, ptr %945, i64 40
  %hash_coef.i.i6.i931 = load i64, ptr %hash_coef_ptr.i.i3.i928, align 4, !noalias !84
  %tbl_size.i.i7.i932 = load i64, ptr %tbl_size_ptr.i.i4.i929, align 4, !noalias !84
  %offset_tbl.i.i8.i933 = load ptr, ptr %offset_tbl_ptr.i.i5.i930, align 8, !noalias !84
  %product.i.i.i9.i934 = mul i64 %hash_coef.i.i6.i931, 4015701072841558310
  %shifted.i.i.i10.i935 = lshr i64 %product.i.i.i9.i934, 32
  %xored.i.i.i11.i936 = xor i64 %shifted.i.i.i10.i935, %product.i.i.i9.i934
  %hash.i.i.i12.i937 = and i64 %xored.i.i.i11.i936, %tbl_size.i.i7.i932
  %offset_ptr.i.i13.i938 = getelementptr i32, ptr %offset_tbl.i.i8.i933, i64 %hash.i.i.i12.i937
  %offset.i.i14.i939 = load i32, ptr %offset_ptr.i.i13.i938, align 4, !noalias !84
  %954 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %945, 0
  %955 = insertvalue { ptr, ptr, ptr, i32 } %954, ptr %952, 1
  %956 = insertvalue { ptr, ptr, ptr, i32 } %955, ptr %953, 2
  %957 = insertvalue { ptr, ptr, ptr, i32 } %956, i32 %offset.i.i14.i939, 3
  %958 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %959 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %945) #37
  %960 = sext i32 %offset.i.i14.i939 to i64
  %961 = getelementptr ptr, ptr %945, i64 %960
  %962 = getelementptr i8, ptr %961, i64 64
  %963 = load ptr, ptr %962, align 8
  %result.i.i940 = call ptr %963({ ptr, ptr, ptr, i32 } %957, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %964 = call i32 %result.i.i940({ ptr, ptr, ptr, i32 } %957, { ptr, ptr, ptr, i32 } %957, ptr nonnull align 8 %2) #42
  %965 = icmp eq i32 %964, %936
  br i1 %965, label %._crit_edge.i941, label %1047

._crit_edge.i941:                                 ; preds = %949
  %966 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %967 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %945)
  %968 = getelementptr i8, ptr %961, i64 48
  %969 = load ptr, ptr %968, align 8
  %result.i16.i942 = call ptr %969({ ptr, ptr, ptr, i32 } %957, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %970 = call { ptr, i160 } %result.i16.i942({ ptr, ptr, ptr, i32 } %957, { ptr, ptr, ptr, i32 } %957, ptr nonnull align 8 %2) #42
  %971 = load ptr, ptr %82, align 8
  %972 = call i1 %971({ ptr, i160 } %970, { ptr, i160 } %933) #42
  br i1 %972, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit954, label %1047

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit954: ; preds = %._crit_edge.i941
  %973 = load ptr, ptr %result.i9, align 8
  %974 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %975 = load ptr, ptr %76, align 8
  %976 = load ptr, ptr %973, align 8, !alias.scope !87
  %977 = getelementptr i8, ptr %976, i64 72
  %978 = load ptr, ptr %977, align 8, !alias.scope !87
  %result.i.i.i946 = call { i64, i64 } %978(ptr nocapture nofree nonnull readonly align 8 %973) #41, !alias.scope !87
  %979 = extractvalue { i64, i64 } %result.i.i.i946, 0
  %980 = extractvalue { i64, i64 } %result.i.i.i946, 1
  %981 = urem i64 20, %980
  %982 = icmp eq i64 %981, 0
  %983 = sub i64 %980, %981
  %984 = select i1 %982, i64 0, i64 %983
  %985 = add i64 %979, 20
  %986 = add i64 %985, %984
  %987 = load ptr, ptr %975, align 8, !alias.scope !87
  %988 = getelementptr i8, ptr %987, i64 72
  %989 = load ptr, ptr %988, align 8, !alias.scope !87
  %result.i1.i.i947 = call { i64, i64 } %989(ptr nocapture nofree nonnull readonly align 8 %975) #41, !alias.scope !87
  %990 = extractvalue { i64, i64 } %result.i1.i.i947, 0
  %991 = extractvalue { i64, i64 } %result.i1.i.i947, 1
  %992 = call i64 @llvm.umax.i64(i64 %980, i64 %991) #38
  %993 = call i64 @llvm.umax.i64(i64 %992, i64 noundef 8) #38, !range !16
  %994 = urem i64 %986, %991
  %995 = icmp eq i64 %994, 0
  %996 = sub i64 %991, %994
  %997 = select i1 %995, i64 0, i64 %996
  %998 = add i64 %990, %986
  %999 = add i64 %998, %997
  %1000 = urem i64 %999, %993
  %1001 = icmp eq i64 %1000, 0
  %1002 = sub i64 %993, %1000
  %1003 = select i1 %1001, i64 0, i64 %1002
  %1004 = add i64 %1003, %999
  %result.i20.i948 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %1004, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %973, ptr %result.i20.i948, align 8
  %1005 = getelementptr inbounds i8, ptr %result.i20.i948, i64 8
  store ptr %975, ptr %1005, align 8
  %1006 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i948)
  %1007 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1008 = load ptr, ptr %973, align 8
  %1009 = getelementptr i8, ptr %1008, i64 72
  %1010 = load ptr, ptr %1009, align 8
  %result.i.i54.i949 = call { i64, i64 } %1010(ptr nocapture nofree nonnull readonly align 8 %973) #41
  %1011 = extractvalue { i64, i64 } %result.i.i54.i949, 1
  %1012 = urem i64 20, %1011
  %1013 = icmp eq i64 %1012, 0
  %reass.sub3160 = sub i64 %1011, %1012
  %1014 = add i64 %reass.sub3160, 20
  %1015 = select i1 %1013, i64 20, i64 %1014
  %1016 = getelementptr i8, ptr %result.i20.i948, i64 %1015
  %1017 = getelementptr i8, ptr %1008, i64 64
  %1018 = load ptr, ptr %1017, align 8
  call void %1018({ ptr, i160 } %933, ptr nocapture nofree nonnull readonly align 8 %973, ptr nocapture nofree writeonly %1016) #49
  %1019 = load ptr, ptr %result.i20.i948, align 8
  %1020 = load ptr, ptr %1019, align 8
  %1021 = getelementptr i8, ptr %1020, i64 72
  %1022 = load ptr, ptr %1021, align 8
  %result.i.i55.i951 = call { i64, i64 } %1022(ptr nocapture nofree nonnull readonly align 8 %1019) #41
  %1023 = extractvalue { i64, i64 } %result.i.i55.i951, 0
  %1024 = extractvalue { i64, i64 } %result.i.i55.i951, 1
  %1025 = urem i64 20, %1024
  %1026 = icmp eq i64 %1025, 0
  %1027 = sub i64 %1024, %1025
  %1028 = select i1 %1026, i64 0, i64 %1027
  %1029 = add i64 %1023, 20
  %1030 = add i64 %1029, %1028
  %1031 = load ptr, ptr %1005, align 8
  %1032 = load ptr, ptr %1031, align 8
  %1033 = getelementptr i8, ptr %1032, i64 72
  %1034 = load ptr, ptr %1033, align 8
  %result.i1.i56.i952 = call { i64, i64 } %1034(ptr nocapture nofree nonnull readonly align 8 %1031) #41
  %1035 = extractvalue { i64, i64 } %result.i1.i56.i952, 1
  %1036 = urem i64 %1030, %1035
  %1037 = icmp eq i64 %1036, 0
  %1038 = sub i64 %1035, %1036
  %1039 = select i1 %1037, i64 0, i64 %1038
  %1040 = getelementptr i8, ptr %result.i20.i948, i64 %1030
  %1041 = getelementptr i8, ptr %1040, i64 %1039
  %1042 = getelementptr i8, ptr %1032, i64 64
  %1043 = load ptr, ptr %1042, align 8
  call void %1043({ ptr, i160 } %934, ptr nocapture nofree nonnull readonly align 8 %1031, ptr nocapture nofree writeonly %1041) #49
  %1044 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %1045 = getelementptr inbounds i8, ptr %result.i20.i948, i64 16
  store i32 %936, ptr %1045, align 8
  store ptr @Entry, ptr %944, align 8
  %1046 = ptrtoint ptr %result.i20.i948 to i64
  store i64 %1046, ptr %946, align 4
  %.sroa_idx28.i953 = getelementptr i8, ptr %944, i64 24
  store i32 10, ptr %.sroa_idx28.i953, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit460

1047:                                             ; preds = %._crit_edge.i941, %._crit_edge3, %949
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1048 = add i32 %936, 2127912214
  %1049 = shl i32 %936, 12
  %1050 = add i32 %1048, %1049
  %1051 = ashr i32 %1050, 19
  %1052 = xor i32 %1050, %1051
  %1053 = xor i32 %1052, -949894596
  %1054 = add i32 %1053, 374761393
  %1055 = shl i32 %1053, 5
  %1056 = add i32 %1054, %1055
  %1057 = add i32 %1056, -744332180
  %1058 = shl i32 %1056, 9
  %1059 = xor i32 %1057, %1058
  %1060 = add i32 %1059, -42973499
  %1061 = shl i32 %1059, 3
  %1062 = add i32 %1060, %1061
  %1063 = ashr i32 %1062, 16
  %1064 = xor i32 %1062, %1063
  %1065 = xor i32 %1064, -1252372727
  %1066 = load i32, ptr %83, align 8
  %1067 = add i32 %1066, -1
  %1068 = and i32 %1067, %1065
  %1069 = load ptr, ptr %85, align 8
  %1070 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1071 = sext i32 %1068 to i64
  %1072 = shl nsw i64 %1071, 5
  %1073 = getelementptr i8, ptr %1069, i64 %1072
  %1074 = load ptr, ptr %1073, align 8
  %1075 = getelementptr i8, ptr %1073, i64 8
  %1076 = icmp ne ptr %1074, @nil_typ
  %1077 = icmp ne ptr %1074, null
  %.not64.i984 = and i1 %1076, %1077
  br i1 %.not64.i984, label %1078, label %1176

1078:                                             ; preds = %1047
  %1079 = load i64, ptr %1075, align 4
  %.sroa_idx.i986 = getelementptr i8, ptr %1073, i64 16
  %1080 = load i64, ptr %.sroa_idx.i986, align 4
  %1081 = inttoptr i64 %1079 to ptr
  %1082 = inttoptr i64 %1080 to ptr
  %hash_coef_ptr.i.i3.i987 = getelementptr i8, ptr %1074, i64 8
  %tbl_size_ptr.i.i4.i988 = getelementptr i8, ptr %1074, i64 16
  %offset_tbl_ptr.i.i5.i989 = getelementptr i8, ptr %1074, i64 40
  %hash_coef.i.i6.i990 = load i64, ptr %hash_coef_ptr.i.i3.i987, align 4, !noalias !90
  %tbl_size.i.i7.i991 = load i64, ptr %tbl_size_ptr.i.i4.i988, align 4, !noalias !90
  %offset_tbl.i.i8.i992 = load ptr, ptr %offset_tbl_ptr.i.i5.i989, align 8, !noalias !90
  %product.i.i.i9.i993 = mul i64 %hash_coef.i.i6.i990, 4015701072841558310
  %shifted.i.i.i10.i994 = lshr i64 %product.i.i.i9.i993, 32
  %xored.i.i.i11.i995 = xor i64 %shifted.i.i.i10.i994, %product.i.i.i9.i993
  %hash.i.i.i12.i996 = and i64 %xored.i.i.i11.i995, %tbl_size.i.i7.i991
  %offset_ptr.i.i13.i997 = getelementptr i32, ptr %offset_tbl.i.i8.i992, i64 %hash.i.i.i12.i996
  %offset.i.i14.i998 = load i32, ptr %offset_ptr.i.i13.i997, align 4, !noalias !90
  %1083 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1074, 0
  %1084 = insertvalue { ptr, ptr, ptr, i32 } %1083, ptr %1081, 1
  %1085 = insertvalue { ptr, ptr, ptr, i32 } %1084, ptr %1082, 2
  %1086 = insertvalue { ptr, ptr, ptr, i32 } %1085, i32 %offset.i.i14.i998, 3
  %1087 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1088 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1074) #37
  %1089 = sext i32 %offset.i.i14.i998 to i64
  %1090 = getelementptr ptr, ptr %1074, i64 %1089
  %1091 = getelementptr i8, ptr %1090, i64 64
  %1092 = load ptr, ptr %1091, align 8
  %result.i.i999 = call ptr %1092({ ptr, ptr, ptr, i32 } %1086, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1093 = call i32 %result.i.i999({ ptr, ptr, ptr, i32 } %1086, { ptr, ptr, ptr, i32 } %1086, ptr nonnull align 8 %2) #42
  %1094 = icmp eq i32 %1093, %936
  br i1 %1094, label %._crit_edge.i1000, label %1176

._crit_edge.i1000:                                ; preds = %1078
  %1095 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1096 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1074)
  %1097 = getelementptr i8, ptr %1090, i64 48
  %1098 = load ptr, ptr %1097, align 8
  %result.i16.i1001 = call ptr %1098({ ptr, ptr, ptr, i32 } %1086, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1099 = call { ptr, i160 } %result.i16.i1001({ ptr, ptr, ptr, i32 } %1086, { ptr, ptr, ptr, i32 } %1086, ptr nonnull align 8 %2) #42
  %1100 = load ptr, ptr %82, align 8
  %1101 = call i1 %1100({ ptr, i160 } %1099, { ptr, i160 } %933) #42
  br i1 %1101, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1013, label %1176

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1013: ; preds = %._crit_edge.i1000
  %1102 = load ptr, ptr %result.i9, align 8
  %1103 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1104 = load ptr, ptr %76, align 8
  %1105 = load ptr, ptr %1102, align 8, !alias.scope !93
  %1106 = getelementptr i8, ptr %1105, i64 72
  %1107 = load ptr, ptr %1106, align 8, !alias.scope !93
  %result.i.i.i1005 = call { i64, i64 } %1107(ptr nocapture nofree nonnull readonly align 8 %1102) #41, !alias.scope !93
  %1108 = extractvalue { i64, i64 } %result.i.i.i1005, 0
  %1109 = extractvalue { i64, i64 } %result.i.i.i1005, 1
  %1110 = urem i64 20, %1109
  %1111 = icmp eq i64 %1110, 0
  %1112 = sub i64 %1109, %1110
  %1113 = select i1 %1111, i64 0, i64 %1112
  %1114 = add i64 %1108, 20
  %1115 = add i64 %1114, %1113
  %1116 = load ptr, ptr %1104, align 8, !alias.scope !93
  %1117 = getelementptr i8, ptr %1116, i64 72
  %1118 = load ptr, ptr %1117, align 8, !alias.scope !93
  %result.i1.i.i1006 = call { i64, i64 } %1118(ptr nocapture nofree nonnull readonly align 8 %1104) #41, !alias.scope !93
  %1119 = extractvalue { i64, i64 } %result.i1.i.i1006, 0
  %1120 = extractvalue { i64, i64 } %result.i1.i.i1006, 1
  %1121 = call i64 @llvm.umax.i64(i64 %1109, i64 %1120) #38
  %1122 = call i64 @llvm.umax.i64(i64 %1121, i64 noundef 8) #38, !range !16
  %1123 = urem i64 %1115, %1120
  %1124 = icmp eq i64 %1123, 0
  %1125 = sub i64 %1120, %1123
  %1126 = select i1 %1124, i64 0, i64 %1125
  %1127 = add i64 %1119, %1115
  %1128 = add i64 %1127, %1126
  %1129 = urem i64 %1128, %1122
  %1130 = icmp eq i64 %1129, 0
  %1131 = sub i64 %1122, %1129
  %1132 = select i1 %1130, i64 0, i64 %1131
  %1133 = add i64 %1132, %1128
  %result.i20.i1007 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %1133, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %1102, ptr %result.i20.i1007, align 8
  %1134 = getelementptr inbounds i8, ptr %result.i20.i1007, i64 8
  store ptr %1104, ptr %1134, align 8
  %1135 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i1007)
  %1136 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1137 = load ptr, ptr %1102, align 8
  %1138 = getelementptr i8, ptr %1137, i64 72
  %1139 = load ptr, ptr %1138, align 8
  %result.i.i54.i1008 = call { i64, i64 } %1139(ptr nocapture nofree nonnull readonly align 8 %1102) #41
  %1140 = extractvalue { i64, i64 } %result.i.i54.i1008, 1
  %1141 = urem i64 20, %1140
  %1142 = icmp eq i64 %1141, 0
  %reass.sub3159 = sub i64 %1140, %1141
  %1143 = add i64 %reass.sub3159, 20
  %1144 = select i1 %1142, i64 20, i64 %1143
  %1145 = getelementptr i8, ptr %result.i20.i1007, i64 %1144
  %1146 = getelementptr i8, ptr %1137, i64 64
  %1147 = load ptr, ptr %1146, align 8
  call void %1147({ ptr, i160 } %933, ptr nocapture nofree nonnull readonly align 8 %1102, ptr nocapture nofree writeonly %1145) #49
  %1148 = load ptr, ptr %result.i20.i1007, align 8
  %1149 = load ptr, ptr %1148, align 8
  %1150 = getelementptr i8, ptr %1149, i64 72
  %1151 = load ptr, ptr %1150, align 8
  %result.i.i55.i1010 = call { i64, i64 } %1151(ptr nocapture nofree nonnull readonly align 8 %1148) #41
  %1152 = extractvalue { i64, i64 } %result.i.i55.i1010, 0
  %1153 = extractvalue { i64, i64 } %result.i.i55.i1010, 1
  %1154 = urem i64 20, %1153
  %1155 = icmp eq i64 %1154, 0
  %1156 = sub i64 %1153, %1154
  %1157 = select i1 %1155, i64 0, i64 %1156
  %1158 = add i64 %1152, 20
  %1159 = add i64 %1158, %1157
  %1160 = load ptr, ptr %1134, align 8
  %1161 = load ptr, ptr %1160, align 8
  %1162 = getelementptr i8, ptr %1161, i64 72
  %1163 = load ptr, ptr %1162, align 8
  %result.i1.i56.i1011 = call { i64, i64 } %1163(ptr nocapture nofree nonnull readonly align 8 %1160) #41
  %1164 = extractvalue { i64, i64 } %result.i1.i56.i1011, 1
  %1165 = urem i64 %1159, %1164
  %1166 = icmp eq i64 %1165, 0
  %1167 = sub i64 %1164, %1165
  %1168 = select i1 %1166, i64 0, i64 %1167
  %1169 = getelementptr i8, ptr %result.i20.i1007, i64 %1159
  %1170 = getelementptr i8, ptr %1169, i64 %1168
  %1171 = getelementptr i8, ptr %1161, i64 64
  %1172 = load ptr, ptr %1171, align 8
  call void %1172({ ptr, i160 } %934, ptr nocapture nofree nonnull readonly align 8 %1160, ptr nocapture nofree writeonly %1170) #49
  %1173 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %1174 = getelementptr inbounds i8, ptr %result.i20.i1007, i64 16
  store i32 %936, ptr %1174, align 8
  store ptr @Entry, ptr %1073, align 8
  %1175 = ptrtoint ptr %result.i20.i1007 to i64
  store i64 %1175, ptr %1075, align 4
  %.sroa_idx28.i1012 = getelementptr i8, ptr %1073, i64 24
  store i32 10, ptr %.sroa_idx28.i1012, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit460

1176:                                             ; preds = %._crit_edge.i1000, %1047, %1078
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1177 = load i32, ptr %922, align 4
  %1178 = load i32, ptr %83, align 8
  %.not.i416 = icmp slt i32 %1177, %1178
  br i1 %.not.i416, label %._crit_edge.i418, label %1179

1179:                                             ; preds = %1176
  %1180 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1181 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1182 = load ptr, ptr %84, align 8
  %1183 = load ptr, ptr %85, align 8
  %1184 = shl i32 %1178, 1
  %spec.select.i1029 = call i32 @llvm.smax.i32(i32 %1184, i32 noundef 16) #37
  store i32 %spec.select.i1029, ptr %83, align 8
  %1185 = zext nneg i32 %spec.select.i1029 to i64
  %1186 = shl nuw nsw i64 %1185, 5
  %result.i.i1030 = call noalias ptr @bump_malloc_inner(i64 noundef %1186, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i1030, ptr %84, align 8
  %result.i1.i1031 = call noalias ptr @bump_malloc_inner(i64 noundef %1186, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i1031, ptr %85, align 8
  store i32 0, ptr %922, align 4
  %1187 = icmp sgt i32 %1178, 0
  br i1 %1187, label %.lr.ph.i1760, label %._crit_edge.i418

.lr.ph.i1760:                                     ; preds = %1179, %._crit_edge.i1775
  %.045.i1773 = phi i32 [ %1244, %._crit_edge.i1775 ], [ 0, %1179 ]
  %1188 = zext nneg i32 %.045.i1773 to i64
  %1189 = shl nuw nsw i64 %1188, 5
  %1190 = getelementptr i8, ptr %1182, i64 %1189
  %1191 = load ptr, ptr %1190, align 8
  %1192 = icmp ne ptr %1191, @nil_typ
  %1193 = icmp ne ptr %1191, null
  %.not16.i1774 = and i1 %1192, %1193
  br i1 %.not16.i1774, label %1194, label %._crit_edge.i1775

1194:                                             ; preds = %.lr.ph.i1760
  %1195 = getelementptr i8, ptr %1190, i64 8
  %1196 = load i64, ptr %1195, align 4
  %.sroa_idx.i1776 = getelementptr i8, ptr %1190, i64 16
  %1197 = load i64, ptr %.sroa_idx.i1776, align 4
  %hash_coef_ptr.i.i3.i1777 = getelementptr i8, ptr %1191, i64 8
  %tbl_size_ptr.i.i4.i1778 = getelementptr i8, ptr %1191, i64 16
  %offset_tbl_ptr.i.i5.i1779 = getelementptr i8, ptr %1191, i64 40
  %1198 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %24)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %25)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %26)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %27)
  %hash_coef.i.i17.i2492 = load i64, ptr %hash_coef_ptr.i.i3.i1777, align 4, !noalias !23
  %tbl_size.i.i18.i2493 = load i64, ptr %tbl_size_ptr.i.i4.i1778, align 4, !noalias !23
  %offset_tbl.i.i19.i2494 = load ptr, ptr %offset_tbl_ptr.i.i5.i1779, align 8, !noalias !23
  %product.i.i.i20.i2495 = mul i64 %hash_coef.i.i17.i2492, 4015701072841558310
  %shifted.i.i.i21.i2496 = lshr i64 %product.i.i.i20.i2495, 32
  %xored.i.i.i22.i2497 = xor i64 %shifted.i.i.i21.i2496, %product.i.i.i20.i2495
  %hash.i.i.i23.i2498 = and i64 %xored.i.i.i22.i2497, %tbl_size.i.i18.i2493
  %offset_ptr.i.i24.i2499 = getelementptr i32, ptr %offset_tbl.i.i19.i2494, i64 %hash.i.i.i23.i2498
  %offset.i.i39.i2500 = load i32, ptr %offset_ptr.i.i24.i2499, align 4, !noalias !96
  %1199 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1200 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1201 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1202

1202:                                             ; preds = %.cont.i2523, %1194
  %.0308.i2501 = phi i32 [ 0, %1194 ], [ %1235, %.cont.i2523 ]
  %.070307.i2502 = phi i1 [ true, %1194 ], [ %1236, %.cont.i2523 ]
  %.sroa.0.0306.i2503 = phi ptr [ %1191, %1194 ], [ %1225, %.cont.i2523 ]
  %.sroa.6.0305.i2504.in = phi i64 [ %1196, %1194 ], [ %1227, %.cont.i2523 ]
  %.sroa.12.0304.i2505.in = phi i64 [ %1197, %1194 ], [ %1228, %.cont.i2523 ]
  %.sroa.17.0303.i2506 = phi i32 [ %offset.i.i39.i2500, %1194 ], [ %offset.i.i71.i2537, %.cont.i2523 ]
  %.sroa.12.0304.i2505 = inttoptr i64 %.sroa.12.0304.i2505.in to ptr
  %.sroa.6.0305.i2504 = inttoptr i64 %.sroa.6.0305.i2504.in to ptr
  %1203 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2503, 0
  %1204 = insertvalue { ptr, ptr, ptr, i32 } %1203, ptr %.sroa.6.0305.i2504, 1
  %1205 = insertvalue { ptr, ptr, ptr, i32 } %1204, ptr %.sroa.12.0304.i2505, 2
  %1206 = insertvalue { ptr, ptr, ptr, i32 } %1205, i32 %.sroa.17.0303.i2506, 3
  %1207 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2503)
  %1208 = sext i32 %.sroa.17.0303.i2506 to i64
  %1209 = getelementptr ptr, ptr %.sroa.0.0306.i2503, i64 %1208
  %1210 = getelementptr i8, ptr %1209, i64 64
  %1211 = load ptr, ptr %1210, align 8
  %result.i43.i2507 = call ptr %1211({ ptr, ptr, ptr, i32 } %1206, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1212 = call i32 %result.i43.i2507({ ptr, ptr, ptr, i32 } %1206, { ptr, ptr, ptr, i32 } %1206, ptr nonnull align 8 %2) #42
  %..i2508 = select i1 %.070307.i2502, ptr %24, ptr %26
  %.184.i2509 = select i1 %.070307.i2502, i64 104, i64 112
  %.185.i2510 = select i1 %.070307.i2502, ptr %25, ptr %27
  %.186.i2511 = select i1 %.070307.i2502, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2508, align 8
  %1213 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2508)
  %1214 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2509
  %1215 = load ptr, ptr %1214, align 8
  store ptr @i32_typ, ptr %.185.i2510, align 8
  %result.i44.i2512 = call ptr %1215({ ptr, ptr, ptr, i32 } %926, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2510) #45
  %1216 = call i32 %result.i44.i2512({ ptr, ptr, ptr, i32 } %926, { ptr, ptr, ptr, i32 } %926, ptr nonnull align 8 dereferenceable(8) %..i2508, i32 %1212) #42
  %1217 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1218 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2511
  %1219 = load ptr, ptr %1218, align 8
  %1220 = load ptr, ptr %1219, align 8
  %1221 = call { ptr } %1220(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i2513 = extractvalue { ptr } %1221, 0
  %1222 = sext i32 %1216 to i64
  %1223 = shl nsw i64 %1222, 5
  %1224 = getelementptr i8, ptr %.fca.0.extract53.i2513, i64 %1223
  %1225 = load ptr, ptr %1224, align 8
  %1226 = getelementptr i8, ptr %1224, i64 8
  %1227 = load i64, ptr %1226, align 4
  %.sroa_idx.i2514 = getelementptr i8, ptr %1224, i64 16
  %1228 = load i64, ptr %.sroa_idx.i2514, align 4
  %1229 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1230 = call { ptr } %1220(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i2515 = extractvalue { ptr } %1230, 0
  %1231 = getelementptr i8, ptr %.fca.0.extract51.i2515, i64 %1223
  store ptr %.sroa.0.0306.i2503, ptr %1231, align 8
  %1232 = getelementptr i8, ptr %1231, i64 8
  store i64 %.sroa.6.0305.i2504.in, ptr %1232, align 4
  %.sroa_idx100.i2516 = getelementptr i8, ptr %1231, i64 16
  store i64 %.sroa.12.0304.i2505.in, ptr %.sroa_idx100.i2516, align 4
  %.sroa_idx101.i2517 = getelementptr i8, ptr %1231, i64 24
  store i32 %.sroa.17.0303.i2506, ptr %.sroa_idx101.i2517, align 4
  %1233 = icmp ne ptr %1225, @nil_typ
  %1234 = icmp ne ptr %1225, null
  %.not90.i2518 = and i1 %1233, %1234
  br i1 %.not90.i2518, label %.cont.i2523, label %1240

.cont.i2523:                                      ; preds = %1202
  %1235 = add nuw nsw i32 %.0308.i2501, 1
  %1236 = xor i1 %.070307.i2502, true
  %hash_coef_ptr.i.i60.i2526 = getelementptr i8, ptr %1225, i64 8
  %tbl_size_ptr.i.i61.i2527 = getelementptr i8, ptr %1225, i64 16
  %offset_tbl_ptr.i.i62.i2528 = getelementptr i8, ptr %1225, i64 40
  %hash_coef.i.i63.i2529 = load i64, ptr %hash_coef_ptr.i.i60.i2526, align 4
  %tbl_size.i.i64.i2530 = load i64, ptr %tbl_size_ptr.i.i61.i2527, align 4
  %offset_tbl.i.i65.i2531 = load ptr, ptr %offset_tbl_ptr.i.i62.i2528, align 8
  %product.i.i.i66.i2532 = mul i64 %hash_coef.i.i63.i2529, 4015701072841558310
  %shifted.i.i.i67.i2533 = lshr i64 %product.i.i.i66.i2532, 32
  %xored.i.i.i68.i2534 = xor i64 %shifted.i.i.i67.i2533, %product.i.i.i66.i2532
  %hash.i.i.i69.i2535 = and i64 %xored.i.i.i68.i2534, %tbl_size.i.i64.i2530
  %offset_ptr.i.i70.i2536 = getelementptr i32, ptr %offset_tbl.i.i65.i2531, i64 %hash.i.i.i69.i2535
  %offset.i.i71.i2537 = load i32, ptr %offset_ptr.i.i70.i2536, align 4
  %1237 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1238 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1239 = icmp ult i32 %.0308.i2501, 99
  br i1 %1239, label %1202, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2546

1240:                                             ; preds = %1202
  %1241 = load i32, ptr %922, align 4
  %1242 = add i32 %1241, 1
  %1243 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1242, ptr %922, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2546

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2546: ; preds = %.cont.i2523, %1240
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %24)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %25)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %26)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %27)
  br label %._crit_edge.i1775

._crit_edge.i1775:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2546, %.lr.ph.i1760
  %1244 = add nuw nsw i32 %.045.i1773, 1
  %1245 = icmp slt i32 %1244, %1178
  br i1 %1245, label %.lr.ph.i1760, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1793

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1793: ; preds = %._crit_edge.i1775, %._crit_edge.i1810
  %.045.i1808 = phi i32 [ %1302, %._crit_edge.i1810 ], [ 0, %._crit_edge.i1775 ]
  %1246 = zext nneg i32 %.045.i1808 to i64
  %1247 = shl nuw nsw i64 %1246, 5
  %1248 = getelementptr i8, ptr %1183, i64 %1247
  %1249 = load ptr, ptr %1248, align 8
  %1250 = icmp ne ptr %1249, @nil_typ
  %1251 = icmp ne ptr %1249, null
  %.not16.i1809 = and i1 %1250, %1251
  br i1 %.not16.i1809, label %1252, label %._crit_edge.i1810

1252:                                             ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1793
  %1253 = getelementptr i8, ptr %1248, i64 8
  %1254 = load i64, ptr %1253, align 4
  %.sroa_idx.i1811 = getelementptr i8, ptr %1248, i64 16
  %1255 = load i64, ptr %.sroa_idx.i1811, align 4
  %hash_coef_ptr.i.i3.i1812 = getelementptr i8, ptr %1249, i64 8
  %tbl_size_ptr.i.i4.i1813 = getelementptr i8, ptr %1249, i64 16
  %offset_tbl_ptr.i.i5.i1814 = getelementptr i8, ptr %1249, i64 40
  %1256 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %20)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %21)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %22)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %23)
  %hash_coef.i.i17.i2564 = load i64, ptr %hash_coef_ptr.i.i3.i1812, align 4, !noalias !23
  %tbl_size.i.i18.i2565 = load i64, ptr %tbl_size_ptr.i.i4.i1813, align 4, !noalias !23
  %offset_tbl.i.i19.i2566 = load ptr, ptr %offset_tbl_ptr.i.i5.i1814, align 8, !noalias !23
  %product.i.i.i20.i2567 = mul i64 %hash_coef.i.i17.i2564, 4015701072841558310
  %shifted.i.i.i21.i2568 = lshr i64 %product.i.i.i20.i2567, 32
  %xored.i.i.i22.i2569 = xor i64 %shifted.i.i.i21.i2568, %product.i.i.i20.i2567
  %hash.i.i.i23.i2570 = and i64 %xored.i.i.i22.i2569, %tbl_size.i.i18.i2565
  %offset_ptr.i.i24.i2571 = getelementptr i32, ptr %offset_tbl.i.i19.i2566, i64 %hash.i.i.i23.i2570
  %offset.i.i39.i2572 = load i32, ptr %offset_ptr.i.i24.i2571, align 4, !noalias !99
  %1257 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1258 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1259 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1260

1260:                                             ; preds = %.cont.i2595, %1252
  %.0308.i2573 = phi i32 [ 0, %1252 ], [ %1293, %.cont.i2595 ]
  %.070307.i2574 = phi i1 [ true, %1252 ], [ %1294, %.cont.i2595 ]
  %.sroa.0.0306.i2575 = phi ptr [ %1249, %1252 ], [ %1283, %.cont.i2595 ]
  %.sroa.6.0305.i2576.in = phi i64 [ %1254, %1252 ], [ %1285, %.cont.i2595 ]
  %.sroa.12.0304.i2577.in = phi i64 [ %1255, %1252 ], [ %1286, %.cont.i2595 ]
  %.sroa.17.0303.i2578 = phi i32 [ %offset.i.i39.i2572, %1252 ], [ %offset.i.i71.i2609, %.cont.i2595 ]
  %.sroa.12.0304.i2577 = inttoptr i64 %.sroa.12.0304.i2577.in to ptr
  %.sroa.6.0305.i2576 = inttoptr i64 %.sroa.6.0305.i2576.in to ptr
  %1261 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2575, 0
  %1262 = insertvalue { ptr, ptr, ptr, i32 } %1261, ptr %.sroa.6.0305.i2576, 1
  %1263 = insertvalue { ptr, ptr, ptr, i32 } %1262, ptr %.sroa.12.0304.i2577, 2
  %1264 = insertvalue { ptr, ptr, ptr, i32 } %1263, i32 %.sroa.17.0303.i2578, 3
  %1265 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2575)
  %1266 = sext i32 %.sroa.17.0303.i2578 to i64
  %1267 = getelementptr ptr, ptr %.sroa.0.0306.i2575, i64 %1266
  %1268 = getelementptr i8, ptr %1267, i64 64
  %1269 = load ptr, ptr %1268, align 8
  %result.i43.i2579 = call ptr %1269({ ptr, ptr, ptr, i32 } %1264, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1270 = call i32 %result.i43.i2579({ ptr, ptr, ptr, i32 } %1264, { ptr, ptr, ptr, i32 } %1264, ptr nonnull align 8 %2) #42
  %..i2580 = select i1 %.070307.i2574, ptr %20, ptr %22
  %.184.i2581 = select i1 %.070307.i2574, i64 104, i64 112
  %.185.i2582 = select i1 %.070307.i2574, ptr %21, ptr %23
  %.186.i2583 = select i1 %.070307.i2574, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2580, align 8
  %1271 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2580)
  %1272 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2581
  %1273 = load ptr, ptr %1272, align 8
  store ptr @i32_typ, ptr %.185.i2582, align 8
  %result.i44.i2584 = call ptr %1273({ ptr, ptr, ptr, i32 } %926, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2582) #45
  %1274 = call i32 %result.i44.i2584({ ptr, ptr, ptr, i32 } %926, { ptr, ptr, ptr, i32 } %926, ptr nonnull align 8 dereferenceable(8) %..i2580, i32 %1270) #42
  %1275 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1276 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2583
  %1277 = load ptr, ptr %1276, align 8
  %1278 = load ptr, ptr %1277, align 8
  %1279 = call { ptr } %1278(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i2585 = extractvalue { ptr } %1279, 0
  %1280 = sext i32 %1274 to i64
  %1281 = shl nsw i64 %1280, 5
  %1282 = getelementptr i8, ptr %.fca.0.extract53.i2585, i64 %1281
  %1283 = load ptr, ptr %1282, align 8
  %1284 = getelementptr i8, ptr %1282, i64 8
  %1285 = load i64, ptr %1284, align 4
  %.sroa_idx.i2586 = getelementptr i8, ptr %1282, i64 16
  %1286 = load i64, ptr %.sroa_idx.i2586, align 4
  %1287 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1288 = call { ptr } %1278(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i2587 = extractvalue { ptr } %1288, 0
  %1289 = getelementptr i8, ptr %.fca.0.extract51.i2587, i64 %1281
  store ptr %.sroa.0.0306.i2575, ptr %1289, align 8
  %1290 = getelementptr i8, ptr %1289, i64 8
  store i64 %.sroa.6.0305.i2576.in, ptr %1290, align 4
  %.sroa_idx100.i2588 = getelementptr i8, ptr %1289, i64 16
  store i64 %.sroa.12.0304.i2577.in, ptr %.sroa_idx100.i2588, align 4
  %.sroa_idx101.i2589 = getelementptr i8, ptr %1289, i64 24
  store i32 %.sroa.17.0303.i2578, ptr %.sroa_idx101.i2589, align 4
  %1291 = icmp ne ptr %1283, @nil_typ
  %1292 = icmp ne ptr %1283, null
  %.not90.i2590 = and i1 %1291, %1292
  br i1 %.not90.i2590, label %.cont.i2595, label %1298

.cont.i2595:                                      ; preds = %1260
  %1293 = add nuw nsw i32 %.0308.i2573, 1
  %1294 = xor i1 %.070307.i2574, true
  %hash_coef_ptr.i.i60.i2598 = getelementptr i8, ptr %1283, i64 8
  %tbl_size_ptr.i.i61.i2599 = getelementptr i8, ptr %1283, i64 16
  %offset_tbl_ptr.i.i62.i2600 = getelementptr i8, ptr %1283, i64 40
  %hash_coef.i.i63.i2601 = load i64, ptr %hash_coef_ptr.i.i60.i2598, align 4
  %tbl_size.i.i64.i2602 = load i64, ptr %tbl_size_ptr.i.i61.i2599, align 4
  %offset_tbl.i.i65.i2603 = load ptr, ptr %offset_tbl_ptr.i.i62.i2600, align 8
  %product.i.i.i66.i2604 = mul i64 %hash_coef.i.i63.i2601, 4015701072841558310
  %shifted.i.i.i67.i2605 = lshr i64 %product.i.i.i66.i2604, 32
  %xored.i.i.i68.i2606 = xor i64 %shifted.i.i.i67.i2605, %product.i.i.i66.i2604
  %hash.i.i.i69.i2607 = and i64 %xored.i.i.i68.i2606, %tbl_size.i.i64.i2602
  %offset_ptr.i.i70.i2608 = getelementptr i32, ptr %offset_tbl.i.i65.i2603, i64 %hash.i.i.i69.i2607
  %offset.i.i71.i2609 = load i32, ptr %offset_ptr.i.i70.i2608, align 4
  %1295 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1296 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1297 = icmp ult i32 %.0308.i2573, 99
  br i1 %1297, label %1260, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2618

1298:                                             ; preds = %1260
  %1299 = load i32, ptr %922, align 4
  %1300 = add i32 %1299, 1
  %1301 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1300, ptr %922, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2618

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2618: ; preds = %.cont.i2595, %1298
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %20)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %21)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %22)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %23)
  br label %._crit_edge.i1810

._crit_edge.i1810:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2618, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1793
  %1302 = add nuw nsw i32 %.045.i1808, 1
  %1303 = icmp slt i32 %1302, %1178
  br i1 %1303, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1793, label %._crit_edge.i418

._crit_edge.i418:                                 ; preds = %._crit_edge.i1810, %1179, %1176
  %1304 = load ptr, ptr %result.i9, align 8
  %1305 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1306 = load ptr, ptr %76, align 8
  %1307 = load ptr, ptr %1304, align 8
  %1308 = getelementptr i8, ptr %1307, i64 72
  %1309 = load ptr, ptr %1308, align 8
  %result.i.i.i421 = call { i64, i64 } %1309(ptr nocapture nofree nonnull readonly align 8 %1304) #41
  %1310 = extractvalue { i64, i64 } %result.i.i.i421, 0
  %1311 = extractvalue { i64, i64 } %result.i.i.i421, 1
  %1312 = urem i64 20, %1311
  %1313 = icmp eq i64 %1312, 0
  %1314 = sub i64 %1311, %1312
  %1315 = select i1 %1313, i64 0, i64 %1314
  %1316 = add i64 %1310, 20
  %1317 = add i64 %1316, %1315
  %1318 = load ptr, ptr %1306, align 8
  %1319 = getelementptr i8, ptr %1318, i64 72
  %1320 = load ptr, ptr %1319, align 8
  %result.i1.i.i422 = call { i64, i64 } %1320(ptr nocapture nofree nonnull readonly align 8 %1306) #41
  %1321 = extractvalue { i64, i64 } %result.i1.i.i422, 0
  %1322 = extractvalue { i64, i64 } %result.i1.i.i422, 1
  %1323 = call i64 @llvm.umax.i64(i64 %1311, i64 %1322) #38
  %1324 = call i64 @llvm.umax.i64(i64 %1323, i64 noundef 8) #38, !range !16
  %1325 = urem i64 %1317, %1322
  %1326 = icmp eq i64 %1325, 0
  %1327 = sub i64 %1322, %1325
  %1328 = select i1 %1326, i64 0, i64 %1327
  %1329 = add i64 %1321, %1317
  %1330 = add i64 %1329, %1328
  %1331 = urem i64 %1330, %1324
  %1332 = icmp eq i64 %1331, 0
  %1333 = sub i64 %1324, %1331
  %1334 = select i1 %1332, i64 0, i64 %1333
  %1335 = add i64 %1334, %1330
  %result.i16.i423 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %1335, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %1304, ptr %result.i16.i423, align 8
  %1336 = getelementptr inbounds i8, ptr %result.i16.i423, i64 8
  store ptr %1306, ptr %1336, align 8
  %1337 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i16.i423)
  %1338 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1339 = load ptr, ptr %1304, align 8
  %1340 = getelementptr i8, ptr %1339, i64 72
  %1341 = load ptr, ptr %1340, align 8
  %result.i.i110.i424 = call { i64, i64 } %1341(ptr nocapture nofree nonnull readonly align 8 %1304) #41
  %1342 = extractvalue { i64, i64 } %result.i.i110.i424, 1
  %1343 = urem i64 20, %1342
  %1344 = icmp eq i64 %1343, 0
  %reass.sub = sub i64 %1342, %1343
  %1345 = add i64 %reass.sub, 20
  %1346 = select i1 %1344, i64 20, i64 %1345
  %1347 = getelementptr i8, ptr %result.i16.i423, i64 %1346
  %1348 = getelementptr i8, ptr %1339, i64 64
  %1349 = load ptr, ptr %1348, align 8
  call void %1349({ ptr, i160 } %933, ptr nocapture nofree nonnull readonly align 8 %1304, ptr nocapture nofree writeonly %1347) #49
  %1350 = load ptr, ptr %result.i16.i423, align 8
  %1351 = load ptr, ptr %1350, align 8
  %1352 = getelementptr i8, ptr %1351, i64 72
  %1353 = load ptr, ptr %1352, align 8
  %result.i.i111.i426 = call { i64, i64 } %1353(ptr nocapture nofree nonnull readonly align 8 %1350) #41
  %1354 = extractvalue { i64, i64 } %result.i.i111.i426, 0
  %1355 = extractvalue { i64, i64 } %result.i.i111.i426, 1
  %1356 = urem i64 20, %1355
  %1357 = icmp eq i64 %1356, 0
  %1358 = sub i64 %1355, %1356
  %1359 = select i1 %1357, i64 0, i64 %1358
  %1360 = add i64 %1354, 20
  %1361 = add i64 %1360, %1359
  %1362 = load ptr, ptr %1336, align 8
  %1363 = load ptr, ptr %1362, align 8
  %1364 = getelementptr i8, ptr %1363, i64 72
  %1365 = load ptr, ptr %1364, align 8
  %result.i1.i112.i427 = call { i64, i64 } %1365(ptr nocapture nofree nonnull readonly align 8 %1362) #41
  %1366 = extractvalue { i64, i64 } %result.i1.i112.i427, 1
  %1367 = urem i64 %1361, %1366
  %1368 = icmp eq i64 %1367, 0
  %1369 = sub i64 %1366, %1367
  %1370 = select i1 %1368, i64 0, i64 %1369
  %1371 = getelementptr i8, ptr %result.i16.i423, i64 %1361
  %1372 = getelementptr i8, ptr %1371, i64 %1370
  %1373 = getelementptr i8, ptr %1363, i64 64
  %1374 = load ptr, ptr %1373, align 8
  call void %1374({ ptr, i160 } %934, ptr nocapture nofree nonnull readonly align 8 %1362, ptr nocapture nofree writeonly %1372) #49
  %1375 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %1376 = getelementptr inbounds i8, ptr %result.i16.i423, i64 16
  store i32 %936, ptr %1376, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %56)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %57)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %58)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %59)
  %1377 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1378 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1379 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1380

1380:                                             ; preds = %.cont.i1086, %._crit_edge.i418
  %.0308.i1064 = phi i32 [ 0, %._crit_edge.i418 ], [ %1415, %.cont.i1086 ]
  %.070307.i1065 = phi i1 [ true, %._crit_edge.i418 ], [ %1416, %.cont.i1086 ]
  %.sroa.0.0306.i1066 = phi ptr [ @Entry, %._crit_edge.i418 ], [ %1403, %.cont.i1086 ]
  %.sroa.6.0305.i1067 = phi ptr [ %result.i16.i423, %._crit_edge.i418 ], [ %.sroa.speculated111.i1087, %.cont.i1086 ]
  %.sroa.12.0304.i1068 = phi ptr [ undef, %._crit_edge.i418 ], [ %.sroa.speculated105.i1088, %.cont.i1086 ]
  %.sroa.17.0303.i1069 = phi i32 [ 10, %._crit_edge.i418 ], [ %offset.i.i71.i1100, %.cont.i1086 ]
  %1381 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1066, 0
  %1382 = insertvalue { ptr, ptr, ptr, i32 } %1381, ptr %.sroa.6.0305.i1067, 1
  %1383 = insertvalue { ptr, ptr, ptr, i32 } %1382, ptr %.sroa.12.0304.i1068, 2
  %1384 = insertvalue { ptr, ptr, ptr, i32 } %1383, i32 %.sroa.17.0303.i1069, 3
  %1385 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1066)
  %1386 = sext i32 %.sroa.17.0303.i1069 to i64
  %1387 = getelementptr ptr, ptr %.sroa.0.0306.i1066, i64 %1386
  %1388 = getelementptr i8, ptr %1387, i64 64
  %1389 = load ptr, ptr %1388, align 8
  %result.i43.i1070 = call ptr %1389({ ptr, ptr, ptr, i32 } %1384, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1390 = call i32 %result.i43.i1070({ ptr, ptr, ptr, i32 } %1384, { ptr, ptr, ptr, i32 } %1384, ptr nonnull align 8 %2) #42
  %..i1071 = select i1 %.070307.i1065, ptr %56, ptr %58
  %.184.i1072 = select i1 %.070307.i1065, i64 104, i64 112
  %.185.i1073 = select i1 %.070307.i1065, ptr %57, ptr %59
  %.186.i1074 = select i1 %.070307.i1065, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1071, align 8
  %1391 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1071)
  %1392 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1072
  %1393 = load ptr, ptr %1392, align 8
  store ptr @i32_typ, ptr %.185.i1073, align 8
  %result.i44.i1075 = call ptr %1393({ ptr, ptr, ptr, i32 } %925, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1073) #45
  %1394 = call i32 %result.i44.i1075({ ptr, ptr, ptr, i32 } %925, { ptr, ptr, ptr, i32 } %925, ptr nonnull align 8 dereferenceable(8) %..i1071, i32 %1390) #42
  %1395 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1396 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1074
  %1397 = load ptr, ptr %1396, align 8
  %1398 = load ptr, ptr %1397, align 8
  %1399 = call { ptr } %1398(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i1076 = extractvalue { ptr } %1399, 0
  %1400 = sext i32 %1394 to i64
  %1401 = shl nsw i64 %1400, 5
  %1402 = getelementptr i8, ptr %.fca.0.extract53.i1076, i64 %1401
  %1403 = load ptr, ptr %1402, align 8
  %1404 = getelementptr i8, ptr %1402, i64 8
  %1405 = load i64, ptr %1404, align 4
  %.sroa_idx.i1077 = getelementptr i8, ptr %1402, i64 16
  %1406 = load i64, ptr %.sroa_idx.i1077, align 4
  %1407 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1408 = call { ptr } %1398(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i1078 = extractvalue { ptr } %1408, 0
  %1409 = getelementptr i8, ptr %.fca.0.extract51.i1078, i64 %1401
  store ptr %.sroa.0.0306.i1066, ptr %1409, align 8
  %1410 = getelementptr i8, ptr %1409, i64 8
  %1411 = ptrtoint ptr %.sroa.6.0305.i1067 to i64
  %1412 = ptrtoint ptr %.sroa.12.0304.i1068 to i64
  store i64 %1411, ptr %1410, align 4
  %.sroa_idx100.i1079 = getelementptr i8, ptr %1409, i64 16
  store i64 %1412, ptr %.sroa_idx100.i1079, align 4
  %.sroa_idx101.i1080 = getelementptr i8, ptr %1409, i64 24
  store i32 %.sroa.17.0303.i1069, ptr %.sroa_idx101.i1080, align 4
  %1413 = icmp ne ptr %1403, @nil_typ
  %1414 = icmp ne ptr %1403, null
  %.not90.i1081 = and i1 %1413, %1414
  br i1 %.not90.i1081, label %.cont.i1086, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1109

.cont.i1086:                                      ; preds = %1380
  %1415 = add nuw nsw i32 %.0308.i1064, 1
  %1416 = xor i1 %.070307.i1065, true
  %.sroa.speculated111.i1087 = inttoptr i64 %1405 to ptr
  %.sroa.speculated105.i1088 = inttoptr i64 %1406 to ptr
  %hash_coef_ptr.i.i60.i1089 = getelementptr i8, ptr %1403, i64 8
  %tbl_size_ptr.i.i61.i1090 = getelementptr i8, ptr %1403, i64 16
  %offset_tbl_ptr.i.i62.i1091 = getelementptr i8, ptr %1403, i64 40
  %hash_coef.i.i63.i1092 = load i64, ptr %hash_coef_ptr.i.i60.i1089, align 4
  %tbl_size.i.i64.i1093 = load i64, ptr %tbl_size_ptr.i.i61.i1090, align 4
  %offset_tbl.i.i65.i1094 = load ptr, ptr %offset_tbl_ptr.i.i62.i1091, align 8
  %product.i.i.i66.i1095 = mul i64 %hash_coef.i.i63.i1092, 4015701072841558310
  %shifted.i.i.i67.i1096 = lshr i64 %product.i.i.i66.i1095, 32
  %xored.i.i.i68.i1097 = xor i64 %shifted.i.i.i67.i1096, %product.i.i.i66.i1095
  %hash.i.i.i69.i1098 = and i64 %xored.i.i.i68.i1097, %tbl_size.i.i64.i1093
  %offset_ptr.i.i70.i1099 = getelementptr i32, ptr %offset_tbl.i.i65.i1094, i64 %hash.i.i.i69.i1098
  %offset.i.i71.i1100 = load i32, ptr %offset_ptr.i.i70.i1099, align 4
  %1417 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1418 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1419 = icmp ult i32 %.0308.i1064, 99
  br i1 %1419, label %1380, label %1423

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1109: ; preds = %1380
  %1420 = load i32, ptr %922, align 4
  %1421 = add i32 %1420, 1
  %1422 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1421, ptr %922, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %56)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %57)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %58)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %59)
  br label %CuckooMap_insert_keyK_valueV.exit460

1423:                                             ; preds = %.cont.i1086
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %56)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %57)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %58)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %59)
  %1424 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1425 = load ptr, ptr %84, align 8
  %1426 = load ptr, ptr %85, align 8
  %1427 = load i32, ptr %83, align 8
  %1428 = shl i32 %1427, 1
  %spec.select.i1125 = call i32 @llvm.smax.i32(i32 %1428, i32 noundef 16) #37
  store i32 %spec.select.i1125, ptr %83, align 8
  %1429 = zext nneg i32 %spec.select.i1125 to i64
  %1430 = shl nuw nsw i64 %1429, 5
  %result.i.i1126 = call noalias ptr @bump_malloc_inner(i64 noundef %1430, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i1126, ptr %84, align 8
  %result.i1.i1127 = call noalias ptr @bump_malloc_inner(i64 noundef %1430, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i1127, ptr %85, align 8
  store i32 0, ptr %922, align 4
  %1431 = icmp sgt i32 %1427, 0
  br i1 %1431, label %.lr.ph.i1830, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1898

.lr.ph.i1830:                                     ; preds = %1423, %._crit_edge.i1845
  %.045.i1843 = phi i32 [ %1488, %._crit_edge.i1845 ], [ 0, %1423 ]
  %1432 = zext nneg i32 %.045.i1843 to i64
  %1433 = shl nuw nsw i64 %1432, 5
  %1434 = getelementptr i8, ptr %1425, i64 %1433
  %1435 = load ptr, ptr %1434, align 8
  %1436 = icmp ne ptr %1435, @nil_typ
  %1437 = icmp ne ptr %1435, null
  %.not16.i1844 = and i1 %1436, %1437
  br i1 %.not16.i1844, label %1438, label %._crit_edge.i1845

1438:                                             ; preds = %.lr.ph.i1830
  %1439 = getelementptr i8, ptr %1434, i64 8
  %1440 = load i64, ptr %1439, align 4
  %.sroa_idx.i1846 = getelementptr i8, ptr %1434, i64 16
  %1441 = load i64, ptr %.sroa_idx.i1846, align 4
  %hash_coef_ptr.i.i3.i1847 = getelementptr i8, ptr %1435, i64 8
  %tbl_size_ptr.i.i4.i1848 = getelementptr i8, ptr %1435, i64 16
  %offset_tbl_ptr.i.i5.i1849 = getelementptr i8, ptr %1435, i64 40
  %1442 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %16)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %17)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %18)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %19)
  %hash_coef.i.i17.i2636 = load i64, ptr %hash_coef_ptr.i.i3.i1847, align 4, !noalias !23
  %tbl_size.i.i18.i2637 = load i64, ptr %tbl_size_ptr.i.i4.i1848, align 4, !noalias !23
  %offset_tbl.i.i19.i2638 = load ptr, ptr %offset_tbl_ptr.i.i5.i1849, align 8, !noalias !23
  %product.i.i.i20.i2639 = mul i64 %hash_coef.i.i17.i2636, 4015701072841558310
  %shifted.i.i.i21.i2640 = lshr i64 %product.i.i.i20.i2639, 32
  %xored.i.i.i22.i2641 = xor i64 %shifted.i.i.i21.i2640, %product.i.i.i20.i2639
  %hash.i.i.i23.i2642 = and i64 %xored.i.i.i22.i2641, %tbl_size.i.i18.i2637
  %offset_ptr.i.i24.i2643 = getelementptr i32, ptr %offset_tbl.i.i19.i2638, i64 %hash.i.i.i23.i2642
  %offset.i.i39.i2644 = load i32, ptr %offset_ptr.i.i24.i2643, align 4, !noalias !102
  %1443 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1444 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1445 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1446

1446:                                             ; preds = %.cont.i2667, %1438
  %.0308.i2645 = phi i32 [ 0, %1438 ], [ %1479, %.cont.i2667 ]
  %.070307.i2646 = phi i1 [ true, %1438 ], [ %1480, %.cont.i2667 ]
  %.sroa.0.0306.i2647 = phi ptr [ %1435, %1438 ], [ %1469, %.cont.i2667 ]
  %.sroa.6.0305.i2648.in = phi i64 [ %1440, %1438 ], [ %1471, %.cont.i2667 ]
  %.sroa.12.0304.i2649.in = phi i64 [ %1441, %1438 ], [ %1472, %.cont.i2667 ]
  %.sroa.17.0303.i2650 = phi i32 [ %offset.i.i39.i2644, %1438 ], [ %offset.i.i71.i2681, %.cont.i2667 ]
  %.sroa.12.0304.i2649 = inttoptr i64 %.sroa.12.0304.i2649.in to ptr
  %.sroa.6.0305.i2648 = inttoptr i64 %.sroa.6.0305.i2648.in to ptr
  %1447 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2647, 0
  %1448 = insertvalue { ptr, ptr, ptr, i32 } %1447, ptr %.sroa.6.0305.i2648, 1
  %1449 = insertvalue { ptr, ptr, ptr, i32 } %1448, ptr %.sroa.12.0304.i2649, 2
  %1450 = insertvalue { ptr, ptr, ptr, i32 } %1449, i32 %.sroa.17.0303.i2650, 3
  %1451 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2647)
  %1452 = sext i32 %.sroa.17.0303.i2650 to i64
  %1453 = getelementptr ptr, ptr %.sroa.0.0306.i2647, i64 %1452
  %1454 = getelementptr i8, ptr %1453, i64 64
  %1455 = load ptr, ptr %1454, align 8
  %result.i43.i2651 = call ptr %1455({ ptr, ptr, ptr, i32 } %1450, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1456 = call i32 %result.i43.i2651({ ptr, ptr, ptr, i32 } %1450, { ptr, ptr, ptr, i32 } %1450, ptr nonnull align 8 %2) #42
  %..i2652 = select i1 %.070307.i2646, ptr %16, ptr %18
  %.184.i2653 = select i1 %.070307.i2646, i64 104, i64 112
  %.185.i2654 = select i1 %.070307.i2646, ptr %17, ptr %19
  %.186.i2655 = select i1 %.070307.i2646, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2652, align 8
  %1457 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2652)
  %1458 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2653
  %1459 = load ptr, ptr %1458, align 8
  store ptr @i32_typ, ptr %.185.i2654, align 8
  %result.i44.i2656 = call ptr %1459({ ptr, ptr, ptr, i32 } %926, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2654) #45
  %1460 = call i32 %result.i44.i2656({ ptr, ptr, ptr, i32 } %926, { ptr, ptr, ptr, i32 } %926, ptr nonnull align 8 dereferenceable(8) %..i2652, i32 %1456) #42
  %1461 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1462 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2655
  %1463 = load ptr, ptr %1462, align 8
  %1464 = load ptr, ptr %1463, align 8
  %1465 = call { ptr } %1464(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i2657 = extractvalue { ptr } %1465, 0
  %1466 = sext i32 %1460 to i64
  %1467 = shl nsw i64 %1466, 5
  %1468 = getelementptr i8, ptr %.fca.0.extract53.i2657, i64 %1467
  %1469 = load ptr, ptr %1468, align 8
  %1470 = getelementptr i8, ptr %1468, i64 8
  %1471 = load i64, ptr %1470, align 4
  %.sroa_idx.i2658 = getelementptr i8, ptr %1468, i64 16
  %1472 = load i64, ptr %.sroa_idx.i2658, align 4
  %1473 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1474 = call { ptr } %1464(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i2659 = extractvalue { ptr } %1474, 0
  %1475 = getelementptr i8, ptr %.fca.0.extract51.i2659, i64 %1467
  store ptr %.sroa.0.0306.i2647, ptr %1475, align 8
  %1476 = getelementptr i8, ptr %1475, i64 8
  store i64 %.sroa.6.0305.i2648.in, ptr %1476, align 4
  %.sroa_idx100.i2660 = getelementptr i8, ptr %1475, i64 16
  store i64 %.sroa.12.0304.i2649.in, ptr %.sroa_idx100.i2660, align 4
  %.sroa_idx101.i2661 = getelementptr i8, ptr %1475, i64 24
  store i32 %.sroa.17.0303.i2650, ptr %.sroa_idx101.i2661, align 4
  %1477 = icmp ne ptr %1469, @nil_typ
  %1478 = icmp ne ptr %1469, null
  %.not90.i2662 = and i1 %1477, %1478
  br i1 %.not90.i2662, label %.cont.i2667, label %1484

.cont.i2667:                                      ; preds = %1446
  %1479 = add nuw nsw i32 %.0308.i2645, 1
  %1480 = xor i1 %.070307.i2646, true
  %hash_coef_ptr.i.i60.i2670 = getelementptr i8, ptr %1469, i64 8
  %tbl_size_ptr.i.i61.i2671 = getelementptr i8, ptr %1469, i64 16
  %offset_tbl_ptr.i.i62.i2672 = getelementptr i8, ptr %1469, i64 40
  %hash_coef.i.i63.i2673 = load i64, ptr %hash_coef_ptr.i.i60.i2670, align 4
  %tbl_size.i.i64.i2674 = load i64, ptr %tbl_size_ptr.i.i61.i2671, align 4
  %offset_tbl.i.i65.i2675 = load ptr, ptr %offset_tbl_ptr.i.i62.i2672, align 8
  %product.i.i.i66.i2676 = mul i64 %hash_coef.i.i63.i2673, 4015701072841558310
  %shifted.i.i.i67.i2677 = lshr i64 %product.i.i.i66.i2676, 32
  %xored.i.i.i68.i2678 = xor i64 %shifted.i.i.i67.i2677, %product.i.i.i66.i2676
  %hash.i.i.i69.i2679 = and i64 %xored.i.i.i68.i2678, %tbl_size.i.i64.i2674
  %offset_ptr.i.i70.i2680 = getelementptr i32, ptr %offset_tbl.i.i65.i2675, i64 %hash.i.i.i69.i2679
  %offset.i.i71.i2681 = load i32, ptr %offset_ptr.i.i70.i2680, align 4
  %1481 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1482 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1483 = icmp ult i32 %.0308.i2645, 99
  br i1 %1483, label %1446, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2690

1484:                                             ; preds = %1446
  %1485 = load i32, ptr %922, align 4
  %1486 = add i32 %1485, 1
  %1487 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1486, ptr %922, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2690

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2690: ; preds = %.cont.i2667, %1484
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %16)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %17)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %18)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %19)
  br label %._crit_edge.i1845

._crit_edge.i1845:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2690, %.lr.ph.i1830
  %1488 = add nuw nsw i32 %.045.i1843, 1
  %1489 = icmp slt i32 %1488, %1427
  br i1 %1489, label %.lr.ph.i1830, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1863

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1863: ; preds = %._crit_edge.i1845, %._crit_edge.i1880
  %.045.i1878 = phi i32 [ %1546, %._crit_edge.i1880 ], [ 0, %._crit_edge.i1845 ]
  %1490 = zext nneg i32 %.045.i1878 to i64
  %1491 = shl nuw nsw i64 %1490, 5
  %1492 = getelementptr i8, ptr %1426, i64 %1491
  %1493 = load ptr, ptr %1492, align 8
  %1494 = icmp ne ptr %1493, @nil_typ
  %1495 = icmp ne ptr %1493, null
  %.not16.i1879 = and i1 %1494, %1495
  br i1 %.not16.i1879, label %1496, label %._crit_edge.i1880

1496:                                             ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1863
  %1497 = getelementptr i8, ptr %1492, i64 8
  %1498 = load i64, ptr %1497, align 4
  %.sroa_idx.i1881 = getelementptr i8, ptr %1492, i64 16
  %1499 = load i64, ptr %.sroa_idx.i1881, align 4
  %hash_coef_ptr.i.i3.i1882 = getelementptr i8, ptr %1493, i64 8
  %tbl_size_ptr.i.i4.i1883 = getelementptr i8, ptr %1493, i64 16
  %offset_tbl_ptr.i.i5.i1884 = getelementptr i8, ptr %1493, i64 40
  %1500 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %12)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %13)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %14)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %15)
  %hash_coef.i.i17.i2708 = load i64, ptr %hash_coef_ptr.i.i3.i1882, align 4, !noalias !23
  %tbl_size.i.i18.i2709 = load i64, ptr %tbl_size_ptr.i.i4.i1883, align 4, !noalias !23
  %offset_tbl.i.i19.i2710 = load ptr, ptr %offset_tbl_ptr.i.i5.i1884, align 8, !noalias !23
  %product.i.i.i20.i2711 = mul i64 %hash_coef.i.i17.i2708, 4015701072841558310
  %shifted.i.i.i21.i2712 = lshr i64 %product.i.i.i20.i2711, 32
  %xored.i.i.i22.i2713 = xor i64 %shifted.i.i.i21.i2712, %product.i.i.i20.i2711
  %hash.i.i.i23.i2714 = and i64 %xored.i.i.i22.i2713, %tbl_size.i.i18.i2709
  %offset_ptr.i.i24.i2715 = getelementptr i32, ptr %offset_tbl.i.i19.i2710, i64 %hash.i.i.i23.i2714
  %offset.i.i39.i2716 = load i32, ptr %offset_ptr.i.i24.i2715, align 4, !noalias !105
  %1501 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1502 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1503 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1504

1504:                                             ; preds = %.cont.i2739, %1496
  %.0308.i2717 = phi i32 [ 0, %1496 ], [ %1537, %.cont.i2739 ]
  %.070307.i2718 = phi i1 [ true, %1496 ], [ %1538, %.cont.i2739 ]
  %.sroa.0.0306.i2719 = phi ptr [ %1493, %1496 ], [ %1527, %.cont.i2739 ]
  %.sroa.6.0305.i2720.in = phi i64 [ %1498, %1496 ], [ %1529, %.cont.i2739 ]
  %.sroa.12.0304.i2721.in = phi i64 [ %1499, %1496 ], [ %1530, %.cont.i2739 ]
  %.sroa.17.0303.i2722 = phi i32 [ %offset.i.i39.i2716, %1496 ], [ %offset.i.i71.i2753, %.cont.i2739 ]
  %.sroa.12.0304.i2721 = inttoptr i64 %.sroa.12.0304.i2721.in to ptr
  %.sroa.6.0305.i2720 = inttoptr i64 %.sroa.6.0305.i2720.in to ptr
  %1505 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2719, 0
  %1506 = insertvalue { ptr, ptr, ptr, i32 } %1505, ptr %.sroa.6.0305.i2720, 1
  %1507 = insertvalue { ptr, ptr, ptr, i32 } %1506, ptr %.sroa.12.0304.i2721, 2
  %1508 = insertvalue { ptr, ptr, ptr, i32 } %1507, i32 %.sroa.17.0303.i2722, 3
  %1509 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2719)
  %1510 = sext i32 %.sroa.17.0303.i2722 to i64
  %1511 = getelementptr ptr, ptr %.sroa.0.0306.i2719, i64 %1510
  %1512 = getelementptr i8, ptr %1511, i64 64
  %1513 = load ptr, ptr %1512, align 8
  %result.i43.i2723 = call ptr %1513({ ptr, ptr, ptr, i32 } %1508, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1514 = call i32 %result.i43.i2723({ ptr, ptr, ptr, i32 } %1508, { ptr, ptr, ptr, i32 } %1508, ptr nonnull align 8 %2) #42
  %..i2724 = select i1 %.070307.i2718, ptr %12, ptr %14
  %.184.i2725 = select i1 %.070307.i2718, i64 104, i64 112
  %.185.i2726 = select i1 %.070307.i2718, ptr %13, ptr %15
  %.186.i2727 = select i1 %.070307.i2718, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2724, align 8
  %1515 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2724)
  %1516 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2725
  %1517 = load ptr, ptr %1516, align 8
  store ptr @i32_typ, ptr %.185.i2726, align 8
  %result.i44.i2728 = call ptr %1517({ ptr, ptr, ptr, i32 } %926, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2726) #45
  %1518 = call i32 %result.i44.i2728({ ptr, ptr, ptr, i32 } %926, { ptr, ptr, ptr, i32 } %926, ptr nonnull align 8 dereferenceable(8) %..i2724, i32 %1514) #42
  %1519 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1520 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2727
  %1521 = load ptr, ptr %1520, align 8
  %1522 = load ptr, ptr %1521, align 8
  %1523 = call { ptr } %1522(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i2729 = extractvalue { ptr } %1523, 0
  %1524 = sext i32 %1518 to i64
  %1525 = shl nsw i64 %1524, 5
  %1526 = getelementptr i8, ptr %.fca.0.extract53.i2729, i64 %1525
  %1527 = load ptr, ptr %1526, align 8
  %1528 = getelementptr i8, ptr %1526, i64 8
  %1529 = load i64, ptr %1528, align 4
  %.sroa_idx.i2730 = getelementptr i8, ptr %1526, i64 16
  %1530 = load i64, ptr %.sroa_idx.i2730, align 4
  %1531 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1532 = call { ptr } %1522(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i2731 = extractvalue { ptr } %1532, 0
  %1533 = getelementptr i8, ptr %.fca.0.extract51.i2731, i64 %1525
  store ptr %.sroa.0.0306.i2719, ptr %1533, align 8
  %1534 = getelementptr i8, ptr %1533, i64 8
  store i64 %.sroa.6.0305.i2720.in, ptr %1534, align 4
  %.sroa_idx100.i2732 = getelementptr i8, ptr %1533, i64 16
  store i64 %.sroa.12.0304.i2721.in, ptr %.sroa_idx100.i2732, align 4
  %.sroa_idx101.i2733 = getelementptr i8, ptr %1533, i64 24
  store i32 %.sroa.17.0303.i2722, ptr %.sroa_idx101.i2733, align 4
  %1535 = icmp ne ptr %1527, @nil_typ
  %1536 = icmp ne ptr %1527, null
  %.not90.i2734 = and i1 %1535, %1536
  br i1 %.not90.i2734, label %.cont.i2739, label %1542

.cont.i2739:                                      ; preds = %1504
  %1537 = add nuw nsw i32 %.0308.i2717, 1
  %1538 = xor i1 %.070307.i2718, true
  %hash_coef_ptr.i.i60.i2742 = getelementptr i8, ptr %1527, i64 8
  %tbl_size_ptr.i.i61.i2743 = getelementptr i8, ptr %1527, i64 16
  %offset_tbl_ptr.i.i62.i2744 = getelementptr i8, ptr %1527, i64 40
  %hash_coef.i.i63.i2745 = load i64, ptr %hash_coef_ptr.i.i60.i2742, align 4
  %tbl_size.i.i64.i2746 = load i64, ptr %tbl_size_ptr.i.i61.i2743, align 4
  %offset_tbl.i.i65.i2747 = load ptr, ptr %offset_tbl_ptr.i.i62.i2744, align 8
  %product.i.i.i66.i2748 = mul i64 %hash_coef.i.i63.i2745, 4015701072841558310
  %shifted.i.i.i67.i2749 = lshr i64 %product.i.i.i66.i2748, 32
  %xored.i.i.i68.i2750 = xor i64 %shifted.i.i.i67.i2749, %product.i.i.i66.i2748
  %hash.i.i.i69.i2751 = and i64 %xored.i.i.i68.i2750, %tbl_size.i.i64.i2746
  %offset_ptr.i.i70.i2752 = getelementptr i32, ptr %offset_tbl.i.i65.i2747, i64 %hash.i.i.i69.i2751
  %offset.i.i71.i2753 = load i32, ptr %offset_ptr.i.i70.i2752, align 4
  %1539 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1540 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1541 = icmp ult i32 %.0308.i2717, 99
  br i1 %1541, label %1504, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2762

1542:                                             ; preds = %1504
  %1543 = load i32, ptr %922, align 4
  %1544 = add i32 %1543, 1
  %1545 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1544, ptr %922, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2762

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2762: ; preds = %.cont.i2739, %1542
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %12)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %13)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %14)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %15)
  br label %._crit_edge.i1880

._crit_edge.i1880:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2762, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1863
  %1546 = add nuw nsw i32 %.045.i1878, 1
  %1547 = icmp slt i32 %1546, %1427
  br i1 %1547, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1863, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1898

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1898: ; preds = %._crit_edge.i1880, %1423
  %1548 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %52)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %53)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %54)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %55)
  %hash_coef.i.i17.i1150 = load i64, ptr %hash_coef_ptr.i.i60.i1089, align 4, !noalias !23
  %tbl_size.i.i18.i1151 = load i64, ptr %tbl_size_ptr.i.i61.i1090, align 4, !noalias !23
  %offset_tbl.i.i19.i1152 = load ptr, ptr %offset_tbl_ptr.i.i62.i1091, align 8, !noalias !23
  %product.i.i.i20.i1153 = mul i64 %hash_coef.i.i17.i1150, 4015701072841558310
  %shifted.i.i.i21.i1154 = lshr i64 %product.i.i.i20.i1153, 32
  %xored.i.i.i22.i1155 = xor i64 %shifted.i.i.i21.i1154, %product.i.i.i20.i1153
  %hash.i.i.i23.i1156 = and i64 %xored.i.i.i22.i1155, %tbl_size.i.i18.i1151
  %offset_ptr.i.i24.i1157 = getelementptr i32, ptr %offset_tbl.i.i19.i1152, i64 %hash.i.i.i23.i1156
  %offset.i.i39.i1158 = load i32, ptr %offset_ptr.i.i24.i1157, align 4, !noalias !108
  %1549 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1550 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1551 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1552

1552:                                             ; preds = %.cont.i1182, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1898
  %.0308.i1160 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1898 ], [ %1585, %.cont.i1182 ]
  %.070307.i1161 = phi i1 [ true, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1898 ], [ %1586, %.cont.i1182 ]
  %.sroa.0.0306.i1162 = phi ptr [ %1403, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1898 ], [ %1575, %.cont.i1182 ]
  %.sroa.6.0305.i1163.in = phi i64 [ %1405, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1898 ], [ %1577, %.cont.i1182 ]
  %.sroa.12.0304.i1164.in = phi i64 [ %1406, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1898 ], [ %1578, %.cont.i1182 ]
  %.sroa.17.0303.i1165 = phi i32 [ %offset.i.i39.i1158, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1898 ], [ %offset.i.i71.i1196, %.cont.i1182 ]
  %.sroa.12.0304.i1164 = inttoptr i64 %.sroa.12.0304.i1164.in to ptr
  %.sroa.6.0305.i1163 = inttoptr i64 %.sroa.6.0305.i1163.in to ptr
  %1553 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1162, 0
  %1554 = insertvalue { ptr, ptr, ptr, i32 } %1553, ptr %.sroa.6.0305.i1163, 1
  %1555 = insertvalue { ptr, ptr, ptr, i32 } %1554, ptr %.sroa.12.0304.i1164, 2
  %1556 = insertvalue { ptr, ptr, ptr, i32 } %1555, i32 %.sroa.17.0303.i1165, 3
  %1557 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1162)
  %1558 = sext i32 %.sroa.17.0303.i1165 to i64
  %1559 = getelementptr ptr, ptr %.sroa.0.0306.i1162, i64 %1558
  %1560 = getelementptr i8, ptr %1559, i64 64
  %1561 = load ptr, ptr %1560, align 8
  %result.i43.i1166 = call ptr %1561({ ptr, ptr, ptr, i32 } %1556, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1562 = call i32 %result.i43.i1166({ ptr, ptr, ptr, i32 } %1556, { ptr, ptr, ptr, i32 } %1556, ptr nonnull align 8 %2) #42
  %..i1167 = select i1 %.070307.i1161, ptr %52, ptr %54
  %.184.i1168 = select i1 %.070307.i1161, i64 104, i64 112
  %.185.i1169 = select i1 %.070307.i1161, ptr %53, ptr %55
  %.186.i1170 = select i1 %.070307.i1161, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1167, align 8
  %1563 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1167)
  %1564 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1168
  %1565 = load ptr, ptr %1564, align 8
  store ptr @i32_typ, ptr %.185.i1169, align 8
  %result.i44.i1171 = call ptr %1565({ ptr, ptr, ptr, i32 } %925, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1169) #45
  %1566 = call i32 %result.i44.i1171({ ptr, ptr, ptr, i32 } %925, { ptr, ptr, ptr, i32 } %925, ptr nonnull align 8 dereferenceable(8) %..i1167, i32 %1562) #42
  %1567 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1568 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1170
  %1569 = load ptr, ptr %1568, align 8
  %1570 = load ptr, ptr %1569, align 8
  %1571 = call { ptr } %1570(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i1172 = extractvalue { ptr } %1571, 0
  %1572 = sext i32 %1566 to i64
  %1573 = shl nsw i64 %1572, 5
  %1574 = getelementptr i8, ptr %.fca.0.extract53.i1172, i64 %1573
  %1575 = load ptr, ptr %1574, align 8
  %1576 = getelementptr i8, ptr %1574, i64 8
  %1577 = load i64, ptr %1576, align 4
  %.sroa_idx.i1173 = getelementptr i8, ptr %1574, i64 16
  %1578 = load i64, ptr %.sroa_idx.i1173, align 4
  %1579 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1580 = call { ptr } %1570(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i1174 = extractvalue { ptr } %1580, 0
  %1581 = getelementptr i8, ptr %.fca.0.extract51.i1174, i64 %1573
  store ptr %.sroa.0.0306.i1162, ptr %1581, align 8
  %1582 = getelementptr i8, ptr %1581, i64 8
  store i64 %.sroa.6.0305.i1163.in, ptr %1582, align 4
  %.sroa_idx100.i1175 = getelementptr i8, ptr %1581, i64 16
  store i64 %.sroa.12.0304.i1164.in, ptr %.sroa_idx100.i1175, align 4
  %.sroa_idx101.i1176 = getelementptr i8, ptr %1581, i64 24
  store i32 %.sroa.17.0303.i1165, ptr %.sroa_idx101.i1176, align 4
  %1583 = icmp ne ptr %1575, @nil_typ
  %1584 = icmp ne ptr %1575, null
  %.not90.i1177 = and i1 %1583, %1584
  br i1 %.not90.i1177, label %.cont.i1182, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1205

.cont.i1182:                                      ; preds = %1552
  %1585 = add nuw nsw i32 %.0308.i1160, 1
  %1586 = xor i1 %.070307.i1161, true
  %hash_coef_ptr.i.i60.i1185 = getelementptr i8, ptr %1575, i64 8
  %tbl_size_ptr.i.i61.i1186 = getelementptr i8, ptr %1575, i64 16
  %offset_tbl_ptr.i.i62.i1187 = getelementptr i8, ptr %1575, i64 40
  %hash_coef.i.i63.i1188 = load i64, ptr %hash_coef_ptr.i.i60.i1185, align 4
  %tbl_size.i.i64.i1189 = load i64, ptr %tbl_size_ptr.i.i61.i1186, align 4
  %offset_tbl.i.i65.i1190 = load ptr, ptr %offset_tbl_ptr.i.i62.i1187, align 8
  %product.i.i.i66.i1191 = mul i64 %hash_coef.i.i63.i1188, 4015701072841558310
  %shifted.i.i.i67.i1192 = lshr i64 %product.i.i.i66.i1191, 32
  %xored.i.i.i68.i1193 = xor i64 %shifted.i.i.i67.i1192, %product.i.i.i66.i1191
  %hash.i.i.i69.i1194 = and i64 %xored.i.i.i68.i1193, %tbl_size.i.i64.i1189
  %offset_ptr.i.i70.i1195 = getelementptr i32, ptr %offset_tbl.i.i65.i1190, i64 %hash.i.i.i69.i1194
  %offset.i.i71.i1196 = load i32, ptr %offset_ptr.i.i70.i1195, align 4
  %1587 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1588 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1589 = icmp ult i32 %.0308.i1160, 99
  br i1 %1589, label %1552, label %1593

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1205: ; preds = %1552
  %1590 = load i32, ptr %922, align 4
  %1591 = add i32 %1590, 1
  %1592 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1591, ptr %922, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %52)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %53)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %54)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %55)
  br label %CuckooMap_insert_keyK_valueV.exit460

1593:                                             ; preds = %.cont.i1182
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %52)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %53)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %54)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %55)
  %1594 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1595 = load ptr, ptr %84, align 8
  %1596 = load ptr, ptr %85, align 8
  %1597 = load i32, ptr %83, align 8
  %1598 = shl i32 %1597, 1
  %spec.select.i1221 = call i32 @llvm.smax.i32(i32 %1598, i32 noundef 16) #37
  store i32 %spec.select.i1221, ptr %83, align 8
  %1599 = zext nneg i32 %spec.select.i1221 to i64
  %1600 = shl nuw nsw i64 %1599, 5
  %result.i.i1222 = call noalias ptr @bump_malloc_inner(i64 noundef %1600, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i1222, ptr %84, align 8
  %result.i1.i1223 = call noalias ptr @bump_malloc_inner(i64 noundef %1600, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i1223, ptr %85, align 8
  store i32 0, ptr %922, align 4
  %1601 = icmp sgt i32 %1597, 0
  br i1 %1601, label %.lr.ph.i1900, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1933.thread

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1933.thread: ; preds = %1593
  %1602 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %CuckooMap_insert_keyK_valueV.exit460

.lr.ph.i1900:                                     ; preds = %1593, %._crit_edge.i1915
  %.045.i1913 = phi i32 [ %1659, %._crit_edge.i1915 ], [ 0, %1593 ]
  %1603 = zext nneg i32 %.045.i1913 to i64
  %1604 = shl nuw nsw i64 %1603, 5
  %1605 = getelementptr i8, ptr %1595, i64 %1604
  %1606 = load ptr, ptr %1605, align 8
  %1607 = icmp ne ptr %1606, @nil_typ
  %1608 = icmp ne ptr %1606, null
  %.not16.i1914 = and i1 %1607, %1608
  br i1 %.not16.i1914, label %1609, label %._crit_edge.i1915

1609:                                             ; preds = %.lr.ph.i1900
  %1610 = getelementptr i8, ptr %1605, i64 8
  %1611 = load i64, ptr %1610, align 4
  %.sroa_idx.i1916 = getelementptr i8, ptr %1605, i64 16
  %1612 = load i64, ptr %.sroa_idx.i1916, align 4
  %hash_coef_ptr.i.i3.i1917 = getelementptr i8, ptr %1606, i64 8
  %tbl_size_ptr.i.i4.i1918 = getelementptr i8, ptr %1606, i64 16
  %offset_tbl_ptr.i.i5.i1919 = getelementptr i8, ptr %1606, i64 40
  %1613 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %8)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %9)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %10)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %11)
  %hash_coef.i.i17.i2780 = load i64, ptr %hash_coef_ptr.i.i3.i1917, align 4, !noalias !23
  %tbl_size.i.i18.i2781 = load i64, ptr %tbl_size_ptr.i.i4.i1918, align 4, !noalias !23
  %offset_tbl.i.i19.i2782 = load ptr, ptr %offset_tbl_ptr.i.i5.i1919, align 8, !noalias !23
  %product.i.i.i20.i2783 = mul i64 %hash_coef.i.i17.i2780, 4015701072841558310
  %shifted.i.i.i21.i2784 = lshr i64 %product.i.i.i20.i2783, 32
  %xored.i.i.i22.i2785 = xor i64 %shifted.i.i.i21.i2784, %product.i.i.i20.i2783
  %hash.i.i.i23.i2786 = and i64 %xored.i.i.i22.i2785, %tbl_size.i.i18.i2781
  %offset_ptr.i.i24.i2787 = getelementptr i32, ptr %offset_tbl.i.i19.i2782, i64 %hash.i.i.i23.i2786
  %offset.i.i39.i2788 = load i32, ptr %offset_ptr.i.i24.i2787, align 4, !noalias !111
  %1614 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1615 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1616 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1617

1617:                                             ; preds = %.cont.i2811, %1609
  %.0308.i2789 = phi i32 [ 0, %1609 ], [ %1650, %.cont.i2811 ]
  %.070307.i2790 = phi i1 [ true, %1609 ], [ %1651, %.cont.i2811 ]
  %.sroa.0.0306.i2791 = phi ptr [ %1606, %1609 ], [ %1640, %.cont.i2811 ]
  %.sroa.6.0305.i2792.in = phi i64 [ %1611, %1609 ], [ %1642, %.cont.i2811 ]
  %.sroa.12.0304.i2793.in = phi i64 [ %1612, %1609 ], [ %1643, %.cont.i2811 ]
  %.sroa.17.0303.i2794 = phi i32 [ %offset.i.i39.i2788, %1609 ], [ %offset.i.i71.i2825, %.cont.i2811 ]
  %.sroa.12.0304.i2793 = inttoptr i64 %.sroa.12.0304.i2793.in to ptr
  %.sroa.6.0305.i2792 = inttoptr i64 %.sroa.6.0305.i2792.in to ptr
  %1618 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2791, 0
  %1619 = insertvalue { ptr, ptr, ptr, i32 } %1618, ptr %.sroa.6.0305.i2792, 1
  %1620 = insertvalue { ptr, ptr, ptr, i32 } %1619, ptr %.sroa.12.0304.i2793, 2
  %1621 = insertvalue { ptr, ptr, ptr, i32 } %1620, i32 %.sroa.17.0303.i2794, 3
  %1622 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2791)
  %1623 = sext i32 %.sroa.17.0303.i2794 to i64
  %1624 = getelementptr ptr, ptr %.sroa.0.0306.i2791, i64 %1623
  %1625 = getelementptr i8, ptr %1624, i64 64
  %1626 = load ptr, ptr %1625, align 8
  %result.i43.i2795 = call ptr %1626({ ptr, ptr, ptr, i32 } %1621, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1627 = call i32 %result.i43.i2795({ ptr, ptr, ptr, i32 } %1621, { ptr, ptr, ptr, i32 } %1621, ptr nonnull align 8 %2) #42
  %..i2796 = select i1 %.070307.i2790, ptr %8, ptr %10
  %.184.i2797 = select i1 %.070307.i2790, i64 104, i64 112
  %.185.i2798 = select i1 %.070307.i2790, ptr %9, ptr %11
  %.186.i2799 = select i1 %.070307.i2790, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2796, align 8
  %1628 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2796)
  %1629 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2797
  %1630 = load ptr, ptr %1629, align 8
  store ptr @i32_typ, ptr %.185.i2798, align 8
  %result.i44.i2800 = call ptr %1630({ ptr, ptr, ptr, i32 } %926, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2798) #45
  %1631 = call i32 %result.i44.i2800({ ptr, ptr, ptr, i32 } %926, { ptr, ptr, ptr, i32 } %926, ptr nonnull align 8 dereferenceable(8) %..i2796, i32 %1627) #42
  %1632 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1633 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2799
  %1634 = load ptr, ptr %1633, align 8
  %1635 = load ptr, ptr %1634, align 8
  %1636 = call { ptr } %1635(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i2801 = extractvalue { ptr } %1636, 0
  %1637 = sext i32 %1631 to i64
  %1638 = shl nsw i64 %1637, 5
  %1639 = getelementptr i8, ptr %.fca.0.extract53.i2801, i64 %1638
  %1640 = load ptr, ptr %1639, align 8
  %1641 = getelementptr i8, ptr %1639, i64 8
  %1642 = load i64, ptr %1641, align 4
  %.sroa_idx.i2802 = getelementptr i8, ptr %1639, i64 16
  %1643 = load i64, ptr %.sroa_idx.i2802, align 4
  %1644 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1645 = call { ptr } %1635(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i2803 = extractvalue { ptr } %1645, 0
  %1646 = getelementptr i8, ptr %.fca.0.extract51.i2803, i64 %1638
  store ptr %.sroa.0.0306.i2791, ptr %1646, align 8
  %1647 = getelementptr i8, ptr %1646, i64 8
  store i64 %.sroa.6.0305.i2792.in, ptr %1647, align 4
  %.sroa_idx100.i2804 = getelementptr i8, ptr %1646, i64 16
  store i64 %.sroa.12.0304.i2793.in, ptr %.sroa_idx100.i2804, align 4
  %.sroa_idx101.i2805 = getelementptr i8, ptr %1646, i64 24
  store i32 %.sroa.17.0303.i2794, ptr %.sroa_idx101.i2805, align 4
  %1648 = icmp ne ptr %1640, @nil_typ
  %1649 = icmp ne ptr %1640, null
  %.not90.i2806 = and i1 %1648, %1649
  br i1 %.not90.i2806, label %.cont.i2811, label %1655

.cont.i2811:                                      ; preds = %1617
  %1650 = add nuw nsw i32 %.0308.i2789, 1
  %1651 = xor i1 %.070307.i2790, true
  %hash_coef_ptr.i.i60.i2814 = getelementptr i8, ptr %1640, i64 8
  %tbl_size_ptr.i.i61.i2815 = getelementptr i8, ptr %1640, i64 16
  %offset_tbl_ptr.i.i62.i2816 = getelementptr i8, ptr %1640, i64 40
  %hash_coef.i.i63.i2817 = load i64, ptr %hash_coef_ptr.i.i60.i2814, align 4
  %tbl_size.i.i64.i2818 = load i64, ptr %tbl_size_ptr.i.i61.i2815, align 4
  %offset_tbl.i.i65.i2819 = load ptr, ptr %offset_tbl_ptr.i.i62.i2816, align 8
  %product.i.i.i66.i2820 = mul i64 %hash_coef.i.i63.i2817, 4015701072841558310
  %shifted.i.i.i67.i2821 = lshr i64 %product.i.i.i66.i2820, 32
  %xored.i.i.i68.i2822 = xor i64 %shifted.i.i.i67.i2821, %product.i.i.i66.i2820
  %hash.i.i.i69.i2823 = and i64 %xored.i.i.i68.i2822, %tbl_size.i.i64.i2818
  %offset_ptr.i.i70.i2824 = getelementptr i32, ptr %offset_tbl.i.i65.i2819, i64 %hash.i.i.i69.i2823
  %offset.i.i71.i2825 = load i32, ptr %offset_ptr.i.i70.i2824, align 4
  %1652 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1653 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1654 = icmp ult i32 %.0308.i2789, 99
  br i1 %1654, label %1617, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2834

1655:                                             ; preds = %1617
  %1656 = load i32, ptr %922, align 4
  %1657 = add i32 %1656, 1
  %1658 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1657, ptr %922, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2834

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2834: ; preds = %.cont.i2811, %1655
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %8)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %9)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %10)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %11)
  br label %._crit_edge.i1915

._crit_edge.i1915:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2834, %.lr.ph.i1900
  %1659 = add nuw nsw i32 %.045.i1913, 1
  %1660 = icmp slt i32 %1659, %1597
  br i1 %1660, label %.lr.ph.i1900, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1933

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1933: ; preds = %._crit_edge.i1915
  %1661 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %1662

1662:                                             ; preds = %._crit_edge.i1950, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1933
  %.045.i1948 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1933 ], [ %1719, %._crit_edge.i1950 ]
  %1663 = zext nneg i32 %.045.i1948 to i64
  %1664 = shl nuw nsw i64 %1663, 5
  %1665 = getelementptr i8, ptr %1596, i64 %1664
  %1666 = load ptr, ptr %1665, align 8
  %1667 = icmp ne ptr %1666, @nil_typ
  %1668 = icmp ne ptr %1666, null
  %.not16.i1949 = and i1 %1667, %1668
  br i1 %.not16.i1949, label %1669, label %._crit_edge.i1950

1669:                                             ; preds = %1662
  %1670 = getelementptr i8, ptr %1665, i64 8
  %1671 = load i64, ptr %1670, align 4
  %.sroa_idx.i1951 = getelementptr i8, ptr %1665, i64 16
  %1672 = load i64, ptr %.sroa_idx.i1951, align 4
  %hash_coef_ptr.i.i3.i1952 = getelementptr i8, ptr %1666, i64 8
  %tbl_size_ptr.i.i4.i1953 = getelementptr i8, ptr %1666, i64 16
  %offset_tbl_ptr.i.i5.i1954 = getelementptr i8, ptr %1666, i64 40
  %1673 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %4)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %5)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %6)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %7)
  %hash_coef.i.i17.i2852 = load i64, ptr %hash_coef_ptr.i.i3.i1952, align 4, !noalias !23
  %tbl_size.i.i18.i2853 = load i64, ptr %tbl_size_ptr.i.i4.i1953, align 4, !noalias !23
  %offset_tbl.i.i19.i2854 = load ptr, ptr %offset_tbl_ptr.i.i5.i1954, align 8, !noalias !23
  %product.i.i.i20.i2855 = mul i64 %hash_coef.i.i17.i2852, 4015701072841558310
  %shifted.i.i.i21.i2856 = lshr i64 %product.i.i.i20.i2855, 32
  %xored.i.i.i22.i2857 = xor i64 %shifted.i.i.i21.i2856, %product.i.i.i20.i2855
  %hash.i.i.i23.i2858 = and i64 %xored.i.i.i22.i2857, %tbl_size.i.i18.i2853
  %offset_ptr.i.i24.i2859 = getelementptr i32, ptr %offset_tbl.i.i19.i2854, i64 %hash.i.i.i23.i2858
  %offset.i.i39.i2860 = load i32, ptr %offset_ptr.i.i24.i2859, align 4, !noalias !114
  %1674 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1675 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1676 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1677

1677:                                             ; preds = %.cont.i2883, %1669
  %.0308.i2861 = phi i32 [ 0, %1669 ], [ %1710, %.cont.i2883 ]
  %.070307.i2862 = phi i1 [ true, %1669 ], [ %1711, %.cont.i2883 ]
  %.sroa.0.0306.i2863 = phi ptr [ %1666, %1669 ], [ %1700, %.cont.i2883 ]
  %.sroa.6.0305.i2864.in = phi i64 [ %1671, %1669 ], [ %1702, %.cont.i2883 ]
  %.sroa.12.0304.i2865.in = phi i64 [ %1672, %1669 ], [ %1703, %.cont.i2883 ]
  %.sroa.17.0303.i2866 = phi i32 [ %offset.i.i39.i2860, %1669 ], [ %offset.i.i71.i2897, %.cont.i2883 ]
  %.sroa.12.0304.i2865 = inttoptr i64 %.sroa.12.0304.i2865.in to ptr
  %.sroa.6.0305.i2864 = inttoptr i64 %.sroa.6.0305.i2864.in to ptr
  %1678 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2863, 0
  %1679 = insertvalue { ptr, ptr, ptr, i32 } %1678, ptr %.sroa.6.0305.i2864, 1
  %1680 = insertvalue { ptr, ptr, ptr, i32 } %1679, ptr %.sroa.12.0304.i2865, 2
  %1681 = insertvalue { ptr, ptr, ptr, i32 } %1680, i32 %.sroa.17.0303.i2866, 3
  %1682 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2863)
  %1683 = sext i32 %.sroa.17.0303.i2866 to i64
  %1684 = getelementptr ptr, ptr %.sroa.0.0306.i2863, i64 %1683
  %1685 = getelementptr i8, ptr %1684, i64 64
  %1686 = load ptr, ptr %1685, align 8
  %result.i43.i2867 = call ptr %1686({ ptr, ptr, ptr, i32 } %1681, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1687 = call i32 %result.i43.i2867({ ptr, ptr, ptr, i32 } %1681, { ptr, ptr, ptr, i32 } %1681, ptr nonnull align 8 %2) #42
  %..i2868 = select i1 %.070307.i2862, ptr %4, ptr %6
  %.184.i2869 = select i1 %.070307.i2862, i64 104, i64 112
  %.185.i2870 = select i1 %.070307.i2862, ptr %5, ptr %7
  %.186.i2871 = select i1 %.070307.i2862, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2868, align 8
  %1688 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2868)
  %1689 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2869
  %1690 = load ptr, ptr %1689, align 8
  store ptr @i32_typ, ptr %.185.i2870, align 8
  %result.i44.i2872 = call ptr %1690({ ptr, ptr, ptr, i32 } %926, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2870) #45
  %1691 = call i32 %result.i44.i2872({ ptr, ptr, ptr, i32 } %926, { ptr, ptr, ptr, i32 } %926, ptr nonnull align 8 dereferenceable(8) %..i2868, i32 %1687) #42
  %1692 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1693 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2871
  %1694 = load ptr, ptr %1693, align 8
  %1695 = load ptr, ptr %1694, align 8
  %1696 = call { ptr } %1695(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i2873 = extractvalue { ptr } %1696, 0
  %1697 = sext i32 %1691 to i64
  %1698 = shl nsw i64 %1697, 5
  %1699 = getelementptr i8, ptr %.fca.0.extract53.i2873, i64 %1698
  %1700 = load ptr, ptr %1699, align 8
  %1701 = getelementptr i8, ptr %1699, i64 8
  %1702 = load i64, ptr %1701, align 4
  %.sroa_idx.i2874 = getelementptr i8, ptr %1699, i64 16
  %1703 = load i64, ptr %.sroa_idx.i2874, align 4
  %1704 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1705 = call { ptr } %1695(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i2875 = extractvalue { ptr } %1705, 0
  %1706 = getelementptr i8, ptr %.fca.0.extract51.i2875, i64 %1698
  store ptr %.sroa.0.0306.i2863, ptr %1706, align 8
  %1707 = getelementptr i8, ptr %1706, i64 8
  store i64 %.sroa.6.0305.i2864.in, ptr %1707, align 4
  %.sroa_idx100.i2876 = getelementptr i8, ptr %1706, i64 16
  store i64 %.sroa.12.0304.i2865.in, ptr %.sroa_idx100.i2876, align 4
  %.sroa_idx101.i2877 = getelementptr i8, ptr %1706, i64 24
  store i32 %.sroa.17.0303.i2866, ptr %.sroa_idx101.i2877, align 4
  %1708 = icmp ne ptr %1700, @nil_typ
  %1709 = icmp ne ptr %1700, null
  %.not90.i2878 = and i1 %1708, %1709
  br i1 %.not90.i2878, label %.cont.i2883, label %1715

.cont.i2883:                                      ; preds = %1677
  %1710 = add nuw nsw i32 %.0308.i2861, 1
  %1711 = xor i1 %.070307.i2862, true
  %hash_coef_ptr.i.i60.i2886 = getelementptr i8, ptr %1700, i64 8
  %tbl_size_ptr.i.i61.i2887 = getelementptr i8, ptr %1700, i64 16
  %offset_tbl_ptr.i.i62.i2888 = getelementptr i8, ptr %1700, i64 40
  %hash_coef.i.i63.i2889 = load i64, ptr %hash_coef_ptr.i.i60.i2886, align 4
  %tbl_size.i.i64.i2890 = load i64, ptr %tbl_size_ptr.i.i61.i2887, align 4
  %offset_tbl.i.i65.i2891 = load ptr, ptr %offset_tbl_ptr.i.i62.i2888, align 8
  %product.i.i.i66.i2892 = mul i64 %hash_coef.i.i63.i2889, 4015701072841558310
  %shifted.i.i.i67.i2893 = lshr i64 %product.i.i.i66.i2892, 32
  %xored.i.i.i68.i2894 = xor i64 %shifted.i.i.i67.i2893, %product.i.i.i66.i2892
  %hash.i.i.i69.i2895 = and i64 %xored.i.i.i68.i2894, %tbl_size.i.i64.i2890
  %offset_ptr.i.i70.i2896 = getelementptr i32, ptr %offset_tbl.i.i65.i2891, i64 %hash.i.i.i69.i2895
  %offset.i.i71.i2897 = load i32, ptr %offset_ptr.i.i70.i2896, align 4
  %1712 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1713 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1714 = icmp ult i32 %.0308.i2861, 99
  br i1 %1714, label %1677, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2906

1715:                                             ; preds = %1677
  %1716 = load i32, ptr %922, align 4
  %1717 = add i32 %1716, 1
  %1718 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1717, ptr %922, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2906

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2906: ; preds = %.cont.i2883, %1715
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %6)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %7)
  br label %._crit_edge.i1950

._crit_edge.i1950:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2906, %1662
  %1719 = add nuw nsw i32 %.045.i1948, 1
  %1720 = icmp slt i32 %1719, %1597
  br i1 %1720, label %1662, label %CuckooMap_insert_keyK_valueV.exit460

CuckooMap_insert_keyK_valueV.exit460:             ; preds = %._crit_edge.i1950, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1933.thread, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1205, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1109, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1013, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit954
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1721 = add nuw nsw i32 %.2249200, 1
  %1722 = icmp slt i32 %1721, %0
  br i1 %1722, label %._crit_edge3, label %._crit_edge5

._crit_edge5:                                     ; preds = %CuckooMap_insert_keyK_valueV.exit460
  %1723 = call i64 @clock()
  %.sroa.0202.0.insert.ext = zext i32 %spec.select to i160
  %1724 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0202.0.insert.ext, 1
  %1725 = load ptr, ptr %81, align 8
  %1726 = call i32 %1725({ ptr, i160 } %1724) #42
  %1727 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %1728 = load i32, ptr %83, align 8
  %1729 = add i32 %1728, -1
  %1730 = and i32 %1729, %1726
  %1731 = load ptr, ptr %84, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1732 = sext i32 %1730 to i64
  %1733 = shl nsw i64 %1732, 5
  %1734 = getelementptr i8, ptr %1731, i64 %1733
  %1735 = load ptr, ptr %1734, align 8
  %1736 = icmp ne ptr %1735, @nil_typ
  %1737 = icmp ne ptr %1735, null
  %.not44.i = and i1 %1736, %1737
  br i1 %.not44.i, label %1738, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

1738:                                             ; preds = %._crit_edge5
  %1739 = getelementptr i8, ptr %1734, i64 8
  %1740 = load i64, ptr %1739, align 4
  %.sroa_idx.i1268 = getelementptr i8, ptr %1734, i64 16
  %1741 = load i64, ptr %.sroa_idx.i1268, align 4
  %1742 = inttoptr i64 %1740 to ptr
  %1743 = inttoptr i64 %1741 to ptr
  %hash_coef_ptr.i.i2.i = getelementptr i8, ptr %1735, i64 8
  %tbl_size_ptr.i.i3.i = getelementptr i8, ptr %1735, i64 16
  %offset_tbl_ptr.i.i4.i = getelementptr i8, ptr %1735, i64 40
  %hash_coef.i.i5.i = load i64, ptr %hash_coef_ptr.i.i2.i, align 4, !noalias !117
  %tbl_size.i.i6.i = load i64, ptr %tbl_size_ptr.i.i3.i, align 4, !noalias !117
  %offset_tbl.i.i7.i = load ptr, ptr %offset_tbl_ptr.i.i4.i, align 8, !noalias !117
  %product.i.i.i8.i = mul i64 %hash_coef.i.i5.i, 4015701072841558310
  %shifted.i.i.i9.i = lshr i64 %product.i.i.i8.i, 32
  %xored.i.i.i10.i = xor i64 %shifted.i.i.i9.i, %product.i.i.i8.i
  %hash.i.i.i11.i = and i64 %xored.i.i.i10.i, %tbl_size.i.i6.i
  %offset_ptr.i.i12.i = getelementptr i32, ptr %offset_tbl.i.i7.i, i64 %hash.i.i.i11.i
  %offset.i.i13.i = load i32, ptr %offset_ptr.i.i12.i, align 4, !noalias !117
  %1744 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1735, 0
  %1745 = insertvalue { ptr, ptr, ptr, i32 } %1744, ptr %1742, 1
  %1746 = insertvalue { ptr, ptr, ptr, i32 } %1745, ptr %1743, 2
  %1747 = insertvalue { ptr, ptr, ptr, i32 } %1746, i32 %offset.i.i13.i, 3
  %1748 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1749 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1735) #37
  %1750 = sext i32 %offset.i.i13.i to i64
  %1751 = getelementptr ptr, ptr %1735, i64 %1750
  %1752 = getelementptr i8, ptr %1751, i64 64
  %1753 = load ptr, ptr %1752, align 8
  %result.i.i1269 = call ptr %1753({ ptr, ptr, ptr, i32 } %1747, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1754 = call i32 %result.i.i1269({ ptr, ptr, ptr, i32 } %1747, { ptr, ptr, ptr, i32 } %1747, ptr nonnull align 8 %2) #42
  %1755 = icmp eq i32 %1754, %1726
  br i1 %1755, label %._crit_edge.i1270, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

._crit_edge.i1270:                                ; preds = %1738
  %1756 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1757 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1735)
  %1758 = getelementptr i8, ptr %1751, i64 48
  %1759 = load ptr, ptr %1758, align 8
  %result.i15.i1271 = call ptr %1759({ ptr, ptr, ptr, i32 } %1747, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1760 = call { ptr, i160 } %result.i15.i1271({ ptr, ptr, ptr, i32 } %1747, { ptr, ptr, ptr, i32 } %1747, ptr nonnull align 8 %2) #42
  %1761 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1762 = load ptr, ptr %82, align 8
  %1763 = call i1 %1762({ ptr, i160 } %1760, { ptr, i160 } %1724) #42
  br i1 %1763, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread: ; preds = %._crit_edge.i1270, %._crit_edge5, %1738
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1771

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit: ; preds = %._crit_edge.i1270
  %1764 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1765 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1735)
  %1766 = getelementptr i8, ptr %1751, i64 56
  %1767 = load ptr, ptr %1766, align 8
  %result.i16.i1272 = call ptr %1767({ ptr, ptr, ptr, i32 } %1747, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1768 = call { ptr, i160 } %result.i16.i1272({ ptr, ptr, ptr, i32 } %1747, { ptr, ptr, ptr, i32 } %1747, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i = extractvalue { ptr, i160 } %1768, 0
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1769 = icmp ne ptr %.fca.0.extract21.i, @nil_typ
  %1770 = icmp ne ptr %.fca.0.extract21.i, null
  %.not63.i = and i1 %1769, %1770
  br i1 %.not63.i, label %CuckooMap_get_keyK.exit, label %1771

1771:                                             ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit
  %1772 = add i32 %1726, 2127912214
  %1773 = shl i32 %1726, 12
  %1774 = add i32 %1772, %1773
  %1775 = ashr i32 %1774, 19
  %1776 = xor i32 %1774, %1775
  %1777 = xor i32 %1776, -949894596
  %1778 = add i32 %1777, 374761393
  %1779 = shl i32 %1777, 5
  %1780 = add i32 %1778, %1779
  %1781 = add i32 %1780, -744332180
  %1782 = shl i32 %1780, 9
  %1783 = xor i32 %1781, %1782
  %1784 = add i32 %1783, -42973499
  %1785 = shl i32 %1783, 3
  %1786 = add i32 %1784, %1785
  %1787 = ashr i32 %1786, 16
  %1788 = xor i32 %1786, %1787
  %1789 = xor i32 %1788, -1252372727
  %1790 = load i32, ptr %83, align 8
  %1791 = add i32 %1790, -1
  %1792 = and i32 %1791, %1789
  %1793 = load ptr, ptr %85, align 8
  %1794 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1795 = sext i32 %1792 to i64
  %1796 = shl nsw i64 %1795, 5
  %1797 = getelementptr i8, ptr %1793, i64 %1796
  %1798 = load ptr, ptr %1797, align 8
  %1799 = icmp ne ptr %1798, @nil_typ
  %1800 = icmp ne ptr %1798, null
  %.not44.i1302 = and i1 %1799, %1800
  br i1 %.not44.i1302, label %1801, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1327

1801:                                             ; preds = %1771
  %1802 = getelementptr i8, ptr %1797, i64 8
  %1803 = load i64, ptr %1802, align 4
  %.sroa_idx.i1307 = getelementptr i8, ptr %1797, i64 16
  %1804 = load i64, ptr %.sroa_idx.i1307, align 4
  %1805 = inttoptr i64 %1803 to ptr
  %1806 = inttoptr i64 %1804 to ptr
  %hash_coef_ptr.i.i2.i1308 = getelementptr i8, ptr %1798, i64 8
  %tbl_size_ptr.i.i3.i1309 = getelementptr i8, ptr %1798, i64 16
  %offset_tbl_ptr.i.i4.i1310 = getelementptr i8, ptr %1798, i64 40
  %hash_coef.i.i5.i1311 = load i64, ptr %hash_coef_ptr.i.i2.i1308, align 4, !noalias !120
  %tbl_size.i.i6.i1312 = load i64, ptr %tbl_size_ptr.i.i3.i1309, align 4, !noalias !120
  %offset_tbl.i.i7.i1313 = load ptr, ptr %offset_tbl_ptr.i.i4.i1310, align 8, !noalias !120
  %product.i.i.i8.i1314 = mul i64 %hash_coef.i.i5.i1311, 4015701072841558310
  %shifted.i.i.i9.i1315 = lshr i64 %product.i.i.i8.i1314, 32
  %xored.i.i.i10.i1316 = xor i64 %shifted.i.i.i9.i1315, %product.i.i.i8.i1314
  %hash.i.i.i11.i1317 = and i64 %xored.i.i.i10.i1316, %tbl_size.i.i6.i1312
  %offset_ptr.i.i12.i1318 = getelementptr i32, ptr %offset_tbl.i.i7.i1313, i64 %hash.i.i.i11.i1317
  %offset.i.i13.i1319 = load i32, ptr %offset_ptr.i.i12.i1318, align 4, !noalias !120
  %1807 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1798, 0
  %1808 = insertvalue { ptr, ptr, ptr, i32 } %1807, ptr %1805, 1
  %1809 = insertvalue { ptr, ptr, ptr, i32 } %1808, ptr %1806, 2
  %1810 = insertvalue { ptr, ptr, ptr, i32 } %1809, i32 %offset.i.i13.i1319, 3
  %1811 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1812 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1798) #37
  %1813 = sext i32 %offset.i.i13.i1319 to i64
  %1814 = getelementptr ptr, ptr %1798, i64 %1813
  %1815 = getelementptr i8, ptr %1814, i64 64
  %1816 = load ptr, ptr %1815, align 8
  %result.i.i1320 = call ptr %1816({ ptr, ptr, ptr, i32 } %1810, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1817 = call i32 %result.i.i1320({ ptr, ptr, ptr, i32 } %1810, { ptr, ptr, ptr, i32 } %1810, ptr nonnull align 8 %2) #42
  %1818 = icmp eq i32 %1817, %1726
  br i1 %1818, label %._crit_edge.i1321, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1327

._crit_edge.i1321:                                ; preds = %1801
  %1819 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1820 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1798)
  %1821 = getelementptr i8, ptr %1814, i64 48
  %1822 = load ptr, ptr %1821, align 8
  %result.i15.i1322 = call ptr %1822({ ptr, ptr, ptr, i32 } %1810, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1823 = call { ptr, i160 } %result.i15.i1322({ ptr, ptr, ptr, i32 } %1810, { ptr, ptr, ptr, i32 } %1810, ptr nonnull align 8 %2) #42
  %1824 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1825 = load ptr, ptr %82, align 8
  %1826 = call i1 %1825({ ptr, i160 } %1823, { ptr, i160 } %1724) #42
  br i1 %1826, label %1827, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1327

1827:                                             ; preds = %._crit_edge.i1321
  %1828 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1829 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1798)
  %1830 = getelementptr i8, ptr %1814, i64 56
  %1831 = load ptr, ptr %1830, align 8
  %result.i16.i1324 = call ptr %1831({ ptr, ptr, ptr, i32 } %1810, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1832 = call { ptr, i160 } %result.i16.i1324({ ptr, ptr, ptr, i32 } %1810, { ptr, ptr, ptr, i32 } %1810, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i1325 = extractvalue { ptr, i160 } %1832, 0
  %.fca.1.extract22.i1326 = extractvalue { ptr, i160 } %1832, 1
  br label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1327

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1327: ; preds = %1771, %1801, %._crit_edge.i1321, %1827
  %.reg2mem43.sroa.3.0.i1303 = phi i160 [ %.fca.1.extract22.i1326, %1827 ], [ poison, %._crit_edge.i1321 ], [ poison, %1771 ], [ poison, %1801 ]
  %.reg2mem41.0.i1304 = phi ptr [ %.fca.0.extract21.i1325, %1827 ], [ @nil_typ, %._crit_edge.i1321 ], [ @nil_typ, %1771 ], [ @nil_typ, %1801 ]
  %.reload40.fca.0.insert.i1305 = insertvalue { ptr, i160 } poison, ptr %.reg2mem41.0.i1304, 0
  %.reload40.fca.1.insert.i1306 = insertvalue { ptr, i160 } %.reload40.fca.0.insert.i1305, i160 %.reg2mem43.sroa.3.0.i1303, 1
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1833 = icmp ne ptr %.reg2mem41.0.i1304, @nil_typ
  %1834 = icmp ne ptr %.reg2mem41.0.i1304, null
  %.not65.not.not.i = and i1 %1833, %1834
  %cond.fr27.i = freeze i1 %.not65.not.not.i
  %spec.select.i = select i1 %cond.fr27.i, ptr %.reg2mem41.0.i1304, ptr @nil_typ
  br label %CuckooMap_get_keyK.exit

CuckooMap_get_keyK.exit:                          ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1327
  %1835 = phi ptr [ %spec.select.i, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1327 ], [ %.fca.0.extract21.i, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit ]
  %.pn.i = phi { ptr, i160 } [ %.reload40.fca.1.insert.i1306, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1327 ], [ %1768, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit ]
  %1836 = icmp ne ptr %1835, @nil_typ
  %1837 = icmp ne ptr %1835, null
  %.not260 = and i1 %1836, %1837
  br i1 %.not260, label %._crit_edge6, label %._crit_edge7

._crit_edge6:                                     ; preds = %CuckooMap_get_keyK.exit
  %1838 = extractvalue { ptr, i160 } %.pn.i, 1
  %.sroa.2.8.extract.trunc = trunc i160 %1838 to i32
  %1839 = add i32 %spec.select, 1
  %.not264 = icmp eq i32 %1839, %.sroa.2.8.extract.trunc
  br label %._crit_edge7

._crit_edge7:                                     ; preds = %._crit_edge6, %CuckooMap_get_keyK.exit
  %.3253 = phi i1 [ %.not264, %._crit_edge6 ], [ false, %CuckooMap_get_keyK.exit ]
  %1840 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1841 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %1842 = load i32, ptr %922, align 4
  %.not265 = icmp eq i32 %1842, %919
  %1843 = select i1 %.not265, i1 %.3253, i1 false
  br label %._crit_edge.lr.ph.i

._crit_edge.lr.ph.i:                              ; preds = %._crit_edge7, %._crit_edge2._crit_edge.thread
  %1844 = phi i64 [ %920, %._crit_edge7 ], [ %107, %._crit_edge2._crit_edge.thread ]
  %1845 = phi i32 [ %919, %._crit_edge7 ], [ 0, %._crit_edge2._crit_edge.thread ]
  %1846 = phi i64 [ %1723, %._crit_edge7 ], [ %108, %._crit_edge2._crit_edge.thread ]
  %.reg2mem21.0.in = phi i1 [ %1843, %._crit_edge7 ], [ true, %._crit_edge2._crit_edge.thread ]
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1847 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1848 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <13 x i8> <i8 73, i8 110, i8 115, i8 101, i8 114, i8 116, i8 32, i8 82, i8 97, i8 110, i8 100, i8 111, i8 109>, ptr %result.i.i1341.h2s3131, align 16
  %1849 = sub i64 %1846, %1844
  %1850 = getelementptr inbounds i8, ptr %result.i.i1341.h2s3131, i64 13
  store i8 0, ptr %1850, align 1
  %puts.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(14) %result.i.i1341.h2s3131) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  store <14 x i8> <i8 32, i8 32, i8 79, i8 112, i8 101, i8 114, i8 97, i8 116, i8 105, i8 111, i8 110, i8 115, i8 58, i8 32>, ptr %result.i.i268.i.h2s3129, align 16
  %puts.i.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(15) %result.i.i268.i.h2s3129) #42
  %1851 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %0) #42
  store <14 x i8> <i8 32, i8 32, i8 84, i8 111, i8 116, i8 97, i8 108, i8 32, i8 84, i8 105, i8 109, i8 101, i8 58, i8 32>, ptr %result.i.i282.i.h2s3127, align 16
  %puts.i206.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(15) %result.i.i282.i.h2s3127) #42
  %1852 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(6) @i64_string, i64 %1849) #42
  store <3 x i8> <i8 32, i8 109, i8 115>, ptr %result.i.i301.i.h2s3125, align 4
  %puts.i226.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(4) %result.i.i301.i.h2s3125) #42
  br i1 %104, label %._crit_edge1.i, label %._crit_edge.lr.ph.i1357

._crit_edge1.i:                                   ; preds = %._crit_edge.lr.ph.i
  %1853 = icmp sgt i64 %1849, 0
  br i1 %1853, label %1854, label %._crit_edge.lr.ph.i321.i

1854:                                             ; preds = %._crit_edge1.i
  %1855 = mul i64 %1849, 1000000
  %1856 = zext nneg i32 %0 to i64
  %1857 = sdiv i64 %1855, %1856
  br label %._crit_edge.lr.ph.i321.i

._crit_edge.lr.ph.i321.i:                         ; preds = %1854, %._crit_edge1.i
  %.0.i = phi i64 [ %1857, %1854 ], [ 0, %._crit_edge1.i ]
  store <15 x i8> <i8 32, i8 32, i8 84, i8 105, i8 109, i8 101, i8 47, i8 79, i8 112, i8 58, i8 32, i8 32, i8 32, i8 32, i8 126>, ptr %result.i.i320.i.h2s3123, align 16
  %puts.i246.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(16) %result.i.i320.i.h2s3123) #42
  %1858 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(6) @i64_string, i64 %.0.i) #42
  %1859 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  store <3 x i8> <i8 32, i8 110, i8 115>, ptr %result.i.i339.i.h2s3121, align 4
  %1860 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %puts.i266.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(4) %result.i.i339.i.h2s3121) #42
  br label %._crit_edge.lr.ph.i1357

._crit_edge.lr.ph.i1357:                          ; preds = %._crit_edge.lr.ph.i, %._crit_edge.lr.ph.i321.i
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1861 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1862 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <18 x i8> <i8 32, i8 32, i8 32, i8 32, i8 86, i8 101, i8 114, i8 105, i8 102, i8 105, i8 99, i8 97, i8 116, i8 105, i8 111, i8 110, i8 58, i8 32>, ptr %result.i.i1356.h2s3119, align 32
  %1863 = getelementptr inbounds i8, ptr %result.i.i1356.h2s3119, i64 18
  store i8 0, ptr %1863, align 2
  %puts.i546 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(19) %result.i.i1356.h2s3119) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %. = select i1 %.reg2mem21.0.in, <4 x i8> <i8 80, i8 65, i8 83, i8 83>, <4 x i8> <i8 70, i8 65, i8 73, i8 76>
  %.310 = select i1 %.reg2mem21.0.in, ptr %68, ptr %72
  %.311 = select i1 %.reg2mem21.0.in, ptr %69, ptr %73
  %.312 = select i1 %.reg2mem21.0.in, ptr %70, ptr %74
  %.313 = select i1 %.reg2mem21.0.in, ptr %71, ptr %75
  store ptr @_parameterization_Bufferi8, ptr %.310, align 8
  %.310.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %.reg2mem21.0.in, ptr %68, ptr %72
  %.310.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.310.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 8
  store ptr @_parameterization_i32, ptr %.310.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %.310.sroa.sel322.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %.reg2mem21.0.in, ptr %68, ptr %72
  %.310.sroa.sel322.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.310.sroa.sel322.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 16
  store ptr @_parameterization_i32, ptr %.310.sroa.sel322.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %1864 = call ptr @llvm.invariant.start.p0(i64 noundef 9, ptr nocapture nofree noundef nonnull align 8 dereferenceable(24) %.310)
  store ptr @buffer_typ, ptr %.311, align 8
  %.311.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %.reg2mem21.0.in, ptr %69, ptr %73
  %.311.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.311.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 8
  store ptr @i32_typ, ptr %.311.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %.311.sroa.sel317.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %.reg2mem21.0.in, ptr %69, ptr %73
  %.311.sroa.sel317.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.311.sroa.sel317.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 16
  store ptr @i32_typ, ptr %.311.sroa.sel317.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %1865 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(24) %.311)
  store ptr @_parameterization_String, ptr %.312, align 8
  %1866 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %.312)
  store ptr @String, ptr %.313, align 8
  %1867 = call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %.313) #37
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1868 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1869 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <4 x i8> %., ptr %result.i.i1375.h2s3118, align 4
  %1870 = getelementptr inbounds i8, ptr %result.i.i1375.h2s3118, i64 4
  store i8 0, ptr %1870, align 4
  %puts.i566 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(5) %result.i.i1375.h2s3118) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1871 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1872 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <27 x i8> <i8 32, i8 32, i8 32, i8 32, i8 40, i8 69, i8 120, i8 112, i8 101, i8 99, i8 116, i8 101, i8 100, i8 32, i8 117, i8 110, i8 105, i8 113, i8 117, i8 101, i8 32, i8 115, i8 105, i8 122, i8 101, i8 58, i8 32>, ptr %result.i.i1394.h2s3116, align 32
  %1873 = getelementptr inbounds i8, ptr %result.i.i1394.h2s3116, i64 27
  store i8 0, ptr %1873, align 1
  %puts.i586 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(28) %result.i.i1394.h2s3116) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1874 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %1845) #42
  %1875 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1876 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1877 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store i8 41, ptr %result.i.i1413.h2s3115, align 2
  %1878 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %1879 = getelementptr inbounds i8, ptr %result.i.i1413.h2s3115, i64 1
  store i8 0, ptr %1879, align 1
  %puts.i606 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(2) %result.i.i1413.h2s3115) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  ret void
}

define void @benchmark_get_sequential_hit(i32 %0) local_unnamed_addr #10 {
  %2 = alloca {}, align 8
  %result.i.i739.h2s1607 = alloca [5 x i8], align 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(5) %result.i.i739.h2s1607, i8 0, i64 5, i1 false)
  %result.i.i720.h2s1608 = alloca [19 x i8], align 32
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 32 dereferenceable(19) %result.i.i720.h2s1608, i8 0, i64 19, i1 false)
  %result.i.i339.i.h2s1610 = alloca [4 x i8], align 4
  store i32 0, ptr %result.i.i339.i.h2s1610, align 4
  %result.i.i320.i.h2s1612 = alloca [16 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %result.i.i320.i.h2s1612, i8 0, i64 16, i1 false)
  %result.i.i301.i.h2s1614 = alloca [4 x i8], align 4
  store i32 0, ptr %result.i.i301.i.h2s1614, align 4
  %result.i.i282.i.h2s1616 = alloca [15 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(15) %result.i.i282.i.h2s1616, i8 0, i64 15, i1 false)
  %result.i.i268.i.h2s1618 = alloca [15 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(15) %result.i.i268.i.h2s1618, i8 0, i64 15, i1 false)
  %result.i.i701.h2s1620 = alloca [19 x i8], align 32
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 32 dereferenceable(19) %result.i.i701.h2s1620, i8 0, i64 19, i1 false)
  %3 = alloca [1 x ptr], align 8
  %4 = alloca { ptr }, align 8
  %5 = alloca [1 x ptr], align 8
  %6 = alloca { ptr }, align 8
  %7 = alloca [1 x ptr], align 8
  %8 = alloca { ptr }, align 8
  %9 = alloca [1 x ptr], align 8
  %10 = alloca { ptr }, align 8
  %11 = alloca [1 x ptr], align 8
  %12 = alloca { ptr }, align 8
  %13 = alloca [1 x ptr], align 8
  %14 = alloca { ptr }, align 8
  %15 = alloca [1 x ptr], align 8
  %16 = alloca { ptr }, align 8
  %17 = alloca [1 x ptr], align 8
  %18 = alloca { ptr }, align 8
  %19 = alloca [1 x ptr], align 8
  %20 = alloca { ptr }, align 8
  %21 = alloca [1 x ptr], align 8
  %22 = alloca { ptr }, align 8
  %23 = alloca [1 x ptr], align 8
  %24 = alloca { ptr }, align 8
  %25 = alloca [1 x ptr], align 8
  %26 = alloca { ptr }, align 8
  %27 = alloca [1 x ptr], align 8
  %28 = alloca { ptr }, align 8
  %29 = alloca [1 x ptr], align 8
  %30 = alloca { ptr }, align 8
  %31 = alloca [1 x ptr], align 8
  %32 = alloca { ptr }, align 8
  %33 = alloca [1 x ptr], align 8
  %34 = alloca { ptr }, align 8
  %oldProtect.i13 = alloca i32, align 4
  %oldProtect.i = alloca i32, align 4
  %35 = alloca [3 x ptr], align 8
  %36 = alloca { ptr, ptr, ptr }, align 8
  %37 = alloca [1 x ptr], align 8
  %38 = alloca { ptr }, align 8
  %39 = alloca [3 x ptr], align 8
  %40 = alloca { ptr, ptr, ptr }, align 8
  %41 = alloca [1 x ptr], align 8
  %42 = alloca { ptr }, align 8
  %result.i9 = call noalias nonnull align 8 dereferenceable(64) ptr @bump_malloc_inner(i64 noundef 64, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr @_parameterization_i32, ptr %result.i9, align 8
  %43 = getelementptr inbounds i8, ptr %result.i9, i64 8
  store ptr @_parameterization_i32, ptr %43, align 8
  %44 = getelementptr inbounds i8, ptr %result.i9, i64 16
  store ptr @_parameterization_Pairi32._i32, ptr %44, align 8
  %45 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(64) %result.i9) #37
  %result.i10 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i) #37
  %result.i11 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i10, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i10, ptr noalias nofree noundef nonnull readnone @uixwpatxai, ptr noalias nofree noundef nonnull readnone @i32_hasher) #37
  %ret.i = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i10) #48
  %46 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i10) #37
  %result.i12 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i13) #37
  %result.i14 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i12, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i13) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i13) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i12, ptr noalias nofree noundef nonnull readnone @peclnbhgie, ptr noalias nofree noundef nonnull readnone @i32_eq) #37
  %ret.i15 = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i12) #48
  %47 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i12) #37
  %48 = getelementptr inbounds i8, ptr %result.i9, i64 48
  store ptr %ret.i, ptr %48, align 8
  %49 = getelementptr inbounds i8, ptr %result.i9, i64 56
  store ptr %ret.i15, ptr %49, align 8
  %50 = getelementptr inbounds i8, ptr %result.i9, i64 40
  store i32 8, ptr %50, align 8
  %result.i.i132 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %51 = getelementptr inbounds i8, ptr %result.i9, i64 24
  store ptr %result.i.i132, ptr %51, align 8
  %result.i1.i = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %52 = getelementptr inbounds i8, ptr %result.i9, i64 32
  store ptr %result.i1.i, ptr %52, align 8
  %53 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %54 = icmp sgt i32 %0, 0
  br i1 %54, label %._crit_edge.preheader, label %._crit_edge1._crit_edge.thread

._crit_edge.preheader:                            ; preds = %1
  %55 = getelementptr inbounds i8, ptr %result.i9, i64 44
  %56 = insertvalue { ptr, ptr, ptr, i32 } { ptr @CuckooMap, ptr undef, ptr undef, i32 undef }, ptr %result.i9, 1
  %57 = insertvalue { ptr, ptr, ptr, i32 } %56, ptr undef, 2
  %58 = insertvalue { ptr, ptr, ptr, i32 } %57, i32 10, 3
  %59 = insertvalue { ptr, ptr, ptr, i32 } %56, i32 10, 3
  br label %._crit_edge

._crit_edge1._crit_edge.thread:                   ; preds = %1
  %60 = call i64 @clock()
  br label %._crit_edge.lr.ph.i702

._crit_edge:                                      ; preds = %._crit_edge.preheader, %CuckooMap_insert_keyK_valueV.exit
  %.0106 = phi i32 [ %61, %CuckooMap_insert_keyK_valueV.exit ], [ 0, %._crit_edge.preheader ]
  %.0139105 = phi i64 [ %851, %CuckooMap_insert_keyK_valueV.exit ], [ 0, %._crit_edge.preheader ]
  %61 = add nuw nsw i32 %.0106, 1
  %.sroa.0133.0.insert.ext = zext nneg i32 %.0106 to i160
  %62 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0133.0.insert.ext, 1
  %.sroa.0130.0.insert.ext = zext nneg i32 %61 to i160
  %63 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0130.0.insert.ext, 1
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %64 = load ptr, ptr %48, align 8
  %65 = call i32 %64({ ptr, i160 } %62) #42
  %66 = load i32, ptr %50, align 8
  %67 = add i32 %66, -1
  %68 = and i32 %67, %65
  %69 = load ptr, ptr %51, align 8
  %70 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %71 = sext i32 %68 to i64
  %72 = shl nsw i64 %71, 5
  %73 = getelementptr i8, ptr %69, i64 %72
  %74 = load ptr, ptr %73, align 8
  %75 = getelementptr i8, ptr %73, i64 8
  %76 = icmp ne ptr %74, @nil_typ
  %77 = icmp ne ptr %74, null
  %.not64.i = and i1 %76, %77
  br i1 %.not64.i, label %78, label %176

78:                                               ; preds = %._crit_edge
  %79 = load i64, ptr %75, align 4
  %.sroa_idx.i = getelementptr i8, ptr %73, i64 16
  %80 = load i64, ptr %.sroa_idx.i, align 4
  %81 = inttoptr i64 %79 to ptr
  %82 = inttoptr i64 %80 to ptr
  %hash_coef_ptr.i.i3.i = getelementptr i8, ptr %74, i64 8
  %tbl_size_ptr.i.i4.i = getelementptr i8, ptr %74, i64 16
  %offset_tbl_ptr.i.i5.i = getelementptr i8, ptr %74, i64 40
  %hash_coef.i.i6.i = load i64, ptr %hash_coef_ptr.i.i3.i, align 4, !noalias !123
  %tbl_size.i.i7.i = load i64, ptr %tbl_size_ptr.i.i4.i, align 4, !noalias !123
  %offset_tbl.i.i8.i = load ptr, ptr %offset_tbl_ptr.i.i5.i, align 8, !noalias !123
  %product.i.i.i9.i = mul i64 %hash_coef.i.i6.i, 4015701072841558310
  %shifted.i.i.i10.i = lshr i64 %product.i.i.i9.i, 32
  %xored.i.i.i11.i = xor i64 %shifted.i.i.i10.i, %product.i.i.i9.i
  %hash.i.i.i12.i = and i64 %xored.i.i.i11.i, %tbl_size.i.i7.i
  %offset_ptr.i.i13.i = getelementptr i32, ptr %offset_tbl.i.i8.i, i64 %hash.i.i.i12.i
  %offset.i.i14.i = load i32, ptr %offset_ptr.i.i13.i, align 4, !noalias !123
  %83 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %74, 0
  %84 = insertvalue { ptr, ptr, ptr, i32 } %83, ptr %81, 1
  %85 = insertvalue { ptr, ptr, ptr, i32 } %84, ptr %82, 2
  %86 = insertvalue { ptr, ptr, ptr, i32 } %85, i32 %offset.i.i14.i, 3
  %87 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %88 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %74) #37
  %89 = sext i32 %offset.i.i14.i to i64
  %90 = getelementptr ptr, ptr %74, i64 %89
  %91 = getelementptr i8, ptr %90, i64 64
  %92 = load ptr, ptr %91, align 8
  %result.i.i = call ptr %92({ ptr, ptr, ptr, i32 } %86, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %93 = call i32 %result.i.i({ ptr, ptr, ptr, i32 } %86, { ptr, ptr, ptr, i32 } %86, ptr nonnull align 8 %2) #42
  %94 = icmp eq i32 %93, %65
  br i1 %94, label %._crit_edge.i356, label %176

._crit_edge.i356:                                 ; preds = %78
  %95 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %96 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %74)
  %97 = getelementptr i8, ptr %90, i64 48
  %98 = load ptr, ptr %97, align 8
  %result.i16.i357 = call ptr %98({ ptr, ptr, ptr, i32 } %86, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %99 = call { ptr, i160 } %result.i16.i357({ ptr, ptr, ptr, i32 } %86, { ptr, ptr, ptr, i32 } %86, ptr nonnull align 8 %2) #42
  %100 = load ptr, ptr %49, align 8
  %101 = call i1 %100({ ptr, i160 } %99, { ptr, i160 } %62) #42
  br i1 %101, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, label %176

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit: ; preds = %._crit_edge.i356
  %102 = load ptr, ptr %result.i9, align 8
  %103 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %104 = load ptr, ptr %43, align 8
  %105 = load ptr, ptr %102, align 8, !alias.scope !126
  %106 = getelementptr i8, ptr %105, i64 72
  %107 = load ptr, ptr %106, align 8, !alias.scope !126
  %result.i.i.i358 = call { i64, i64 } %107(ptr nocapture nofree nonnull readonly align 8 %102) #41, !alias.scope !126
  %108 = extractvalue { i64, i64 } %result.i.i.i358, 0
  %109 = extractvalue { i64, i64 } %result.i.i.i358, 1
  %110 = urem i64 20, %109
  %111 = icmp eq i64 %110, 0
  %112 = sub i64 %109, %110
  %113 = select i1 %111, i64 0, i64 %112
  %114 = add i64 %108, 20
  %115 = add i64 %114, %113
  %116 = load ptr, ptr %104, align 8, !alias.scope !126
  %117 = getelementptr i8, ptr %116, i64 72
  %118 = load ptr, ptr %117, align 8, !alias.scope !126
  %result.i1.i.i359 = call { i64, i64 } %118(ptr nocapture nofree nonnull readonly align 8 %104) #41, !alias.scope !126
  %119 = extractvalue { i64, i64 } %result.i1.i.i359, 0
  %120 = extractvalue { i64, i64 } %result.i1.i.i359, 1
  %121 = call i64 @llvm.umax.i64(i64 %109, i64 %120) #38
  %122 = call i64 @llvm.umax.i64(i64 %121, i64 noundef 8) #38, !range !16
  %123 = urem i64 %115, %120
  %124 = icmp eq i64 %123, 0
  %125 = sub i64 %120, %123
  %126 = select i1 %124, i64 0, i64 %125
  %127 = add i64 %119, %115
  %128 = add i64 %127, %126
  %129 = urem i64 %128, %122
  %130 = icmp eq i64 %129, 0
  %131 = sub i64 %122, %129
  %132 = select i1 %130, i64 0, i64 %131
  %133 = add i64 %132, %128
  %result.i20.i360 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %133, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %102, ptr %result.i20.i360, align 8
  %134 = getelementptr inbounds i8, ptr %result.i20.i360, i64 8
  store ptr %104, ptr %134, align 8
  %135 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i360)
  %136 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %137 = load ptr, ptr %102, align 8
  %138 = getelementptr i8, ptr %137, i64 72
  %139 = load ptr, ptr %138, align 8
  %result.i.i54.i = call { i64, i64 } %139(ptr nocapture nofree nonnull readonly align 8 %102) #41
  %140 = extractvalue { i64, i64 } %result.i.i54.i, 1
  %141 = urem i64 20, %140
  %142 = icmp eq i64 %141, 0
  %reass.sub = sub i64 %140, %141
  %143 = add i64 %reass.sub, 20
  %144 = select i1 %142, i64 20, i64 %143
  %145 = getelementptr i8, ptr %result.i20.i360, i64 %144
  %146 = getelementptr i8, ptr %137, i64 64
  %147 = load ptr, ptr %146, align 8
  call void %147({ ptr, i160 } %62, ptr nocapture nofree nonnull readonly align 8 %102, ptr nocapture nofree writeonly %145) #49
  %148 = load ptr, ptr %result.i20.i360, align 8
  %149 = load ptr, ptr %148, align 8
  %150 = getelementptr i8, ptr %149, i64 72
  %151 = load ptr, ptr %150, align 8
  %result.i.i55.i = call { i64, i64 } %151(ptr nocapture nofree nonnull readonly align 8 %148) #41
  %152 = extractvalue { i64, i64 } %result.i.i55.i, 0
  %153 = extractvalue { i64, i64 } %result.i.i55.i, 1
  %154 = urem i64 20, %153
  %155 = icmp eq i64 %154, 0
  %156 = sub i64 %153, %154
  %157 = select i1 %155, i64 0, i64 %156
  %158 = add i64 %152, 20
  %159 = add i64 %158, %157
  %160 = load ptr, ptr %134, align 8
  %161 = load ptr, ptr %160, align 8
  %162 = getelementptr i8, ptr %161, i64 72
  %163 = load ptr, ptr %162, align 8
  %result.i1.i56.i = call { i64, i64 } %163(ptr nocapture nofree nonnull readonly align 8 %160) #41
  %164 = extractvalue { i64, i64 } %result.i1.i56.i, 1
  %165 = urem i64 %159, %164
  %166 = icmp eq i64 %165, 0
  %167 = sub i64 %164, %165
  %168 = select i1 %166, i64 0, i64 %167
  %169 = getelementptr i8, ptr %result.i20.i360, i64 %159
  %170 = getelementptr i8, ptr %169, i64 %168
  %171 = getelementptr i8, ptr %161, i64 64
  %172 = load ptr, ptr %171, align 8
  call void %172({ ptr, i160 } %63, ptr nocapture nofree nonnull readonly align 8 %160, ptr nocapture nofree writeonly %170) #49
  %173 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %174 = getelementptr inbounds i8, ptr %result.i20.i360, i64 16
  store i32 %65, ptr %174, align 8
  store ptr @Entry, ptr %73, align 8
  %175 = ptrtoint ptr %result.i20.i360 to i64
  store i64 %175, ptr %75, align 4
  %.sroa_idx28.i = getelementptr i8, ptr %73, i64 24
  store i32 10, ptr %.sroa_idx28.i, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit

176:                                              ; preds = %._crit_edge.i356, %._crit_edge, %78
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %177 = add i32 %65, 2127912214
  %178 = shl i32 %65, 12
  %179 = add i32 %177, %178
  %180 = ashr i32 %179, 19
  %181 = xor i32 %179, %180
  %182 = xor i32 %181, -949894596
  %183 = add i32 %182, 374761393
  %184 = shl i32 %182, 5
  %185 = add i32 %183, %184
  %186 = add i32 %185, -744332180
  %187 = shl i32 %185, 9
  %188 = xor i32 %186, %187
  %189 = add i32 %188, -42973499
  %190 = shl i32 %188, 3
  %191 = add i32 %189, %190
  %192 = ashr i32 %191, 16
  %193 = xor i32 %191, %192
  %194 = xor i32 %193, -1252372727
  %195 = load i32, ptr %50, align 8
  %196 = add i32 %195, -1
  %197 = and i32 %196, %194
  %198 = load ptr, ptr %52, align 8
  %199 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %200 = sext i32 %197 to i64
  %201 = shl nsw i64 %200, 5
  %202 = getelementptr i8, ptr %198, i64 %201
  %203 = load ptr, ptr %202, align 8
  %204 = getelementptr i8, ptr %202, i64 8
  %205 = icmp ne ptr %203, @nil_typ
  %206 = icmp ne ptr %203, null
  %.not64.i389 = and i1 %205, %206
  br i1 %.not64.i389, label %207, label %305

207:                                              ; preds = %176
  %208 = load i64, ptr %204, align 4
  %.sroa_idx.i391 = getelementptr i8, ptr %202, i64 16
  %209 = load i64, ptr %.sroa_idx.i391, align 4
  %210 = inttoptr i64 %208 to ptr
  %211 = inttoptr i64 %209 to ptr
  %hash_coef_ptr.i.i3.i392 = getelementptr i8, ptr %203, i64 8
  %tbl_size_ptr.i.i4.i393 = getelementptr i8, ptr %203, i64 16
  %offset_tbl_ptr.i.i5.i394 = getelementptr i8, ptr %203, i64 40
  %hash_coef.i.i6.i395 = load i64, ptr %hash_coef_ptr.i.i3.i392, align 4, !noalias !129
  %tbl_size.i.i7.i396 = load i64, ptr %tbl_size_ptr.i.i4.i393, align 4, !noalias !129
  %offset_tbl.i.i8.i397 = load ptr, ptr %offset_tbl_ptr.i.i5.i394, align 8, !noalias !129
  %product.i.i.i9.i398 = mul i64 %hash_coef.i.i6.i395, 4015701072841558310
  %shifted.i.i.i10.i399 = lshr i64 %product.i.i.i9.i398, 32
  %xored.i.i.i11.i400 = xor i64 %shifted.i.i.i10.i399, %product.i.i.i9.i398
  %hash.i.i.i12.i401 = and i64 %xored.i.i.i11.i400, %tbl_size.i.i7.i396
  %offset_ptr.i.i13.i402 = getelementptr i32, ptr %offset_tbl.i.i8.i397, i64 %hash.i.i.i12.i401
  %offset.i.i14.i403 = load i32, ptr %offset_ptr.i.i13.i402, align 4, !noalias !129
  %212 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %203, 0
  %213 = insertvalue { ptr, ptr, ptr, i32 } %212, ptr %210, 1
  %214 = insertvalue { ptr, ptr, ptr, i32 } %213, ptr %211, 2
  %215 = insertvalue { ptr, ptr, ptr, i32 } %214, i32 %offset.i.i14.i403, 3
  %216 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %217 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %203) #37
  %218 = sext i32 %offset.i.i14.i403 to i64
  %219 = getelementptr ptr, ptr %203, i64 %218
  %220 = getelementptr i8, ptr %219, i64 64
  %221 = load ptr, ptr %220, align 8
  %result.i.i404 = call ptr %221({ ptr, ptr, ptr, i32 } %215, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %222 = call i32 %result.i.i404({ ptr, ptr, ptr, i32 } %215, { ptr, ptr, ptr, i32 } %215, ptr nonnull align 8 %2) #42
  %223 = icmp eq i32 %222, %65
  br i1 %223, label %._crit_edge.i405, label %305

._crit_edge.i405:                                 ; preds = %207
  %224 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %225 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %203)
  %226 = getelementptr i8, ptr %219, i64 48
  %227 = load ptr, ptr %226, align 8
  %result.i16.i406 = call ptr %227({ ptr, ptr, ptr, i32 } %215, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %228 = call { ptr, i160 } %result.i16.i406({ ptr, ptr, ptr, i32 } %215, { ptr, ptr, ptr, i32 } %215, ptr nonnull align 8 %2) #42
  %229 = load ptr, ptr %49, align 8
  %230 = call i1 %229({ ptr, i160 } %228, { ptr, i160 } %62) #42
  br i1 %230, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit418, label %305

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit418: ; preds = %._crit_edge.i405
  %231 = load ptr, ptr %result.i9, align 8
  %232 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %233 = load ptr, ptr %43, align 8
  %234 = load ptr, ptr %231, align 8, !alias.scope !132
  %235 = getelementptr i8, ptr %234, i64 72
  %236 = load ptr, ptr %235, align 8, !alias.scope !132
  %result.i.i.i410 = call { i64, i64 } %236(ptr nocapture nofree nonnull readonly align 8 %231) #41, !alias.scope !132
  %237 = extractvalue { i64, i64 } %result.i.i.i410, 0
  %238 = extractvalue { i64, i64 } %result.i.i.i410, 1
  %239 = urem i64 20, %238
  %240 = icmp eq i64 %239, 0
  %241 = sub i64 %238, %239
  %242 = select i1 %240, i64 0, i64 %241
  %243 = add i64 %237, 20
  %244 = add i64 %243, %242
  %245 = load ptr, ptr %233, align 8, !alias.scope !132
  %246 = getelementptr i8, ptr %245, i64 72
  %247 = load ptr, ptr %246, align 8, !alias.scope !132
  %result.i1.i.i411 = call { i64, i64 } %247(ptr nocapture nofree nonnull readonly align 8 %233) #41, !alias.scope !132
  %248 = extractvalue { i64, i64 } %result.i1.i.i411, 0
  %249 = extractvalue { i64, i64 } %result.i1.i.i411, 1
  %250 = call i64 @llvm.umax.i64(i64 %238, i64 %249) #38
  %251 = call i64 @llvm.umax.i64(i64 %250, i64 noundef 8) #38, !range !16
  %252 = urem i64 %244, %249
  %253 = icmp eq i64 %252, 0
  %254 = sub i64 %249, %252
  %255 = select i1 %253, i64 0, i64 %254
  %256 = add i64 %248, %244
  %257 = add i64 %256, %255
  %258 = urem i64 %257, %251
  %259 = icmp eq i64 %258, 0
  %260 = sub i64 %251, %258
  %261 = select i1 %259, i64 0, i64 %260
  %262 = add i64 %261, %257
  %result.i20.i412 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %262, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %231, ptr %result.i20.i412, align 8
  %263 = getelementptr inbounds i8, ptr %result.i20.i412, i64 8
  store ptr %233, ptr %263, align 8
  %264 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i412)
  %265 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %266 = load ptr, ptr %231, align 8
  %267 = getelementptr i8, ptr %266, i64 72
  %268 = load ptr, ptr %267, align 8
  %result.i.i54.i413 = call { i64, i64 } %268(ptr nocapture nofree nonnull readonly align 8 %231) #41
  %269 = extractvalue { i64, i64 } %result.i.i54.i413, 1
  %270 = urem i64 20, %269
  %271 = icmp eq i64 %270, 0
  %reass.sub1639 = sub i64 %269, %270
  %272 = add i64 %reass.sub1639, 20
  %273 = select i1 %271, i64 20, i64 %272
  %274 = getelementptr i8, ptr %result.i20.i412, i64 %273
  %275 = getelementptr i8, ptr %266, i64 64
  %276 = load ptr, ptr %275, align 8
  call void %276({ ptr, i160 } %62, ptr nocapture nofree nonnull readonly align 8 %231, ptr nocapture nofree writeonly %274) #49
  %277 = load ptr, ptr %result.i20.i412, align 8
  %278 = load ptr, ptr %277, align 8
  %279 = getelementptr i8, ptr %278, i64 72
  %280 = load ptr, ptr %279, align 8
  %result.i.i55.i415 = call { i64, i64 } %280(ptr nocapture nofree nonnull readonly align 8 %277) #41
  %281 = extractvalue { i64, i64 } %result.i.i55.i415, 0
  %282 = extractvalue { i64, i64 } %result.i.i55.i415, 1
  %283 = urem i64 20, %282
  %284 = icmp eq i64 %283, 0
  %285 = sub i64 %282, %283
  %286 = select i1 %284, i64 0, i64 %285
  %287 = add i64 %281, 20
  %288 = add i64 %287, %286
  %289 = load ptr, ptr %263, align 8
  %290 = load ptr, ptr %289, align 8
  %291 = getelementptr i8, ptr %290, i64 72
  %292 = load ptr, ptr %291, align 8
  %result.i1.i56.i416 = call { i64, i64 } %292(ptr nocapture nofree nonnull readonly align 8 %289) #41
  %293 = extractvalue { i64, i64 } %result.i1.i56.i416, 1
  %294 = urem i64 %288, %293
  %295 = icmp eq i64 %294, 0
  %296 = sub i64 %293, %294
  %297 = select i1 %295, i64 0, i64 %296
  %298 = getelementptr i8, ptr %result.i20.i412, i64 %288
  %299 = getelementptr i8, ptr %298, i64 %297
  %300 = getelementptr i8, ptr %290, i64 64
  %301 = load ptr, ptr %300, align 8
  call void %301({ ptr, i160 } %63, ptr nocapture nofree nonnull readonly align 8 %289, ptr nocapture nofree writeonly %299) #49
  %302 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %303 = getelementptr inbounds i8, ptr %result.i20.i412, i64 16
  store i32 %65, ptr %303, align 8
  store ptr @Entry, ptr %202, align 8
  %304 = ptrtoint ptr %result.i20.i412 to i64
  store i64 %304, ptr %204, align 4
  %.sroa_idx28.i417 = getelementptr i8, ptr %202, i64 24
  store i32 10, ptr %.sroa_idx28.i417, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit

305:                                              ; preds = %._crit_edge.i405, %176, %207
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %306 = load i32, ptr %55, align 4
  %307 = load i32, ptr %50, align 8
  %.not.i = icmp slt i32 %306, %307
  br i1 %.not.i, label %._crit_edge.i, label %308

308:                                              ; preds = %305
  %309 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %310 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %311 = load ptr, ptr %51, align 8
  %312 = load ptr, ptr %52, align 8
  %313 = shl i32 %307, 1
  %spec.select.i433 = call i32 @llvm.smax.i32(i32 %313, i32 noundef 16) #37
  store i32 %spec.select.i433, ptr %50, align 8
  %314 = zext nneg i32 %spec.select.i433 to i64
  %315 = shl nuw nsw i64 %314, 5
  %result.i.i434 = call noalias ptr @bump_malloc_inner(i64 noundef %315, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i434, ptr %51, align 8
  %result.i1.i435 = call noalias ptr @bump_malloc_inner(i64 noundef %315, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i435, ptr %52, align 8
  store i32 0, ptr %55, align 4
  %316 = icmp sgt i32 %307, 0
  br i1 %316, label %.lr.ph.i, label %._crit_edge.i

.lr.ph.i:                                         ; preds = %308, %._crit_edge.i830
  %.045.i = phi i32 [ %373, %._crit_edge.i830 ], [ 0, %308 ]
  %317 = zext nneg i32 %.045.i to i64
  %318 = shl nuw nsw i64 %317, 5
  %319 = getelementptr i8, ptr %311, i64 %318
  %320 = load ptr, ptr %319, align 8
  %321 = icmp ne ptr %320, @nil_typ
  %322 = icmp ne ptr %320, null
  %.not16.i = and i1 %321, %322
  br i1 %.not16.i, label %323, label %._crit_edge.i830

323:                                              ; preds = %.lr.ph.i
  %324 = getelementptr i8, ptr %319, i64 8
  %325 = load i64, ptr %324, align 4
  %.sroa_idx.i831 = getelementptr i8, ptr %319, i64 16
  %326 = load i64, ptr %.sroa_idx.i831, align 4
  %hash_coef_ptr.i.i3.i832 = getelementptr i8, ptr %320, i64 8
  %tbl_size_ptr.i.i4.i833 = getelementptr i8, ptr %320, i64 16
  %offset_tbl_ptr.i.i5.i834 = getelementptr i8, ptr %320, i64 40
  %327 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %23)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %24)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %25)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %26)
  %hash_coef.i.i17.i = load i64, ptr %hash_coef_ptr.i.i3.i832, align 4, !noalias !23
  %tbl_size.i.i18.i = load i64, ptr %tbl_size_ptr.i.i4.i833, align 4, !noalias !23
  %offset_tbl.i.i19.i = load ptr, ptr %offset_tbl_ptr.i.i5.i834, align 8, !noalias !23
  %product.i.i.i20.i = mul i64 %hash_coef.i.i17.i, 4015701072841558310
  %shifted.i.i.i21.i = lshr i64 %product.i.i.i20.i, 32
  %xored.i.i.i22.i = xor i64 %shifted.i.i.i21.i, %product.i.i.i20.i
  %hash.i.i.i23.i = and i64 %xored.i.i.i22.i, %tbl_size.i.i18.i
  %offset_ptr.i.i24.i = getelementptr i32, ptr %offset_tbl.i.i19.i, i64 %hash.i.i.i23.i
  %offset.i.i39.i = load i32, ptr %offset_ptr.i.i24.i, align 4, !noalias !135
  %328 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %329 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %330 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %331

331:                                              ; preds = %.cont.i1105, %323
  %.0308.i1088 = phi i32 [ 0, %323 ], [ %364, %.cont.i1105 ]
  %.070307.i1089 = phi i1 [ true, %323 ], [ %365, %.cont.i1105 ]
  %.sroa.0.0306.i1090 = phi ptr [ %320, %323 ], [ %354, %.cont.i1105 ]
  %.sroa.6.0305.i1091.in = phi i64 [ %325, %323 ], [ %356, %.cont.i1105 ]
  %.sroa.12.0304.i1092.in = phi i64 [ %326, %323 ], [ %357, %.cont.i1105 ]
  %.sroa.17.0303.i1093 = phi i32 [ %offset.i.i39.i, %323 ], [ %offset.i.i71.i1119, %.cont.i1105 ]
  %.sroa.12.0304.i1092 = inttoptr i64 %.sroa.12.0304.i1092.in to ptr
  %.sroa.6.0305.i1091 = inttoptr i64 %.sroa.6.0305.i1091.in to ptr
  %332 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1090, 0
  %333 = insertvalue { ptr, ptr, ptr, i32 } %332, ptr %.sroa.6.0305.i1091, 1
  %334 = insertvalue { ptr, ptr, ptr, i32 } %333, ptr %.sroa.12.0304.i1092, 2
  %335 = insertvalue { ptr, ptr, ptr, i32 } %334, i32 %.sroa.17.0303.i1093, 3
  %336 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1090)
  %337 = sext i32 %.sroa.17.0303.i1093 to i64
  %338 = getelementptr ptr, ptr %.sroa.0.0306.i1090, i64 %337
  %339 = getelementptr i8, ptr %338, i64 64
  %340 = load ptr, ptr %339, align 8
  %result.i43.i1094 = call ptr %340({ ptr, ptr, ptr, i32 } %335, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %341 = call i32 %result.i43.i1094({ ptr, ptr, ptr, i32 } %335, { ptr, ptr, ptr, i32 } %335, ptr nonnull align 8 %2) #42
  %..i1095 = select i1 %.070307.i1089, ptr %23, ptr %25
  %.184.i1096 = select i1 %.070307.i1089, i64 104, i64 112
  %.185.i1097 = select i1 %.070307.i1089, ptr %24, ptr %26
  %.186.i1098 = select i1 %.070307.i1089, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1095, align 8
  %342 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1095)
  %343 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1096
  %344 = load ptr, ptr %343, align 8
  store ptr @i32_typ, ptr %.185.i1097, align 8
  %result.i44.i1099 = call ptr %344({ ptr, ptr, ptr, i32 } %59, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1097) #45
  %345 = call i32 %result.i44.i1099({ ptr, ptr, ptr, i32 } %59, { ptr, ptr, ptr, i32 } %59, ptr nonnull align 8 dereferenceable(8) %..i1095, i32 %341) #42
  %346 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %347 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1098
  %348 = load ptr, ptr %347, align 8
  %349 = load ptr, ptr %348, align 8
  %350 = call { ptr } %349(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i1100 = extractvalue { ptr } %350, 0
  %351 = sext i32 %345 to i64
  %352 = shl nsw i64 %351, 5
  %353 = getelementptr i8, ptr %.fca.0.extract53.i1100, i64 %352
  %354 = load ptr, ptr %353, align 8
  %355 = getelementptr i8, ptr %353, i64 8
  %356 = load i64, ptr %355, align 4
  %.sroa_idx.i1101 = getelementptr i8, ptr %353, i64 16
  %357 = load i64, ptr %.sroa_idx.i1101, align 4
  %358 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %359 = call { ptr } %349(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i = extractvalue { ptr } %359, 0
  %360 = getelementptr i8, ptr %.fca.0.extract51.i, i64 %352
  store ptr %.sroa.0.0306.i1090, ptr %360, align 8
  %361 = getelementptr i8, ptr %360, i64 8
  store i64 %.sroa.6.0305.i1091.in, ptr %361, align 4
  %.sroa_idx100.i1102 = getelementptr i8, ptr %360, i64 16
  store i64 %.sroa.12.0304.i1092.in, ptr %.sroa_idx100.i1102, align 4
  %.sroa_idx101.i1103 = getelementptr i8, ptr %360, i64 24
  store i32 %.sroa.17.0303.i1093, ptr %.sroa_idx101.i1103, align 4
  %362 = icmp ne ptr %354, @nil_typ
  %363 = icmp ne ptr %354, null
  %.not90.i1104 = and i1 %362, %363
  br i1 %.not90.i1104, label %.cont.i1105, label %369

.cont.i1105:                                      ; preds = %331
  %364 = add nuw nsw i32 %.0308.i1088, 1
  %365 = xor i1 %.070307.i1089, true
  %hash_coef_ptr.i.i60.i1108 = getelementptr i8, ptr %354, i64 8
  %tbl_size_ptr.i.i61.i1109 = getelementptr i8, ptr %354, i64 16
  %offset_tbl_ptr.i.i62.i1110 = getelementptr i8, ptr %354, i64 40
  %hash_coef.i.i63.i1111 = load i64, ptr %hash_coef_ptr.i.i60.i1108, align 4
  %tbl_size.i.i64.i1112 = load i64, ptr %tbl_size_ptr.i.i61.i1109, align 4
  %offset_tbl.i.i65.i1113 = load ptr, ptr %offset_tbl_ptr.i.i62.i1110, align 8
  %product.i.i.i66.i1114 = mul i64 %hash_coef.i.i63.i1111, 4015701072841558310
  %shifted.i.i.i67.i1115 = lshr i64 %product.i.i.i66.i1114, 32
  %xored.i.i.i68.i1116 = xor i64 %shifted.i.i.i67.i1115, %product.i.i.i66.i1114
  %hash.i.i.i69.i1117 = and i64 %xored.i.i.i68.i1116, %tbl_size.i.i64.i1112
  %offset_ptr.i.i70.i1118 = getelementptr i32, ptr %offset_tbl.i.i65.i1113, i64 %hash.i.i.i69.i1117
  %offset.i.i71.i1119 = load i32, ptr %offset_ptr.i.i70.i1118, align 4
  %366 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %367 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %368 = icmp ult i32 %.0308.i1088, 99
  br i1 %368, label %331, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1121

369:                                              ; preds = %331
  %370 = load i32, ptr %55, align 4
  %371 = add i32 %370, 1
  %372 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %371, ptr %55, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1121

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1121: ; preds = %.cont.i1105, %369
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %23)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %24)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %25)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %26)
  br label %._crit_edge.i830

._crit_edge.i830:                                 ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1121, %.lr.ph.i
  %373 = add nuw nsw i32 %.045.i, 1
  %374 = icmp slt i32 %373, %307
  br i1 %374, label %.lr.ph.i, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit: ; preds = %._crit_edge.i830, %._crit_edge.i860
  %.045.i858 = phi i32 [ %431, %._crit_edge.i860 ], [ 0, %._crit_edge.i830 ]
  %375 = zext nneg i32 %.045.i858 to i64
  %376 = shl nuw nsw i64 %375, 5
  %377 = getelementptr i8, ptr %312, i64 %376
  %378 = load ptr, ptr %377, align 8
  %379 = icmp ne ptr %378, @nil_typ
  %380 = icmp ne ptr %378, null
  %.not16.i859 = and i1 %379, %380
  br i1 %.not16.i859, label %381, label %._crit_edge.i860

381:                                              ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit
  %382 = getelementptr i8, ptr %377, i64 8
  %383 = load i64, ptr %382, align 4
  %.sroa_idx.i861 = getelementptr i8, ptr %377, i64 16
  %384 = load i64, ptr %.sroa_idx.i861, align 4
  %hash_coef_ptr.i.i3.i862 = getelementptr i8, ptr %378, i64 8
  %tbl_size_ptr.i.i4.i863 = getelementptr i8, ptr %378, i64 16
  %offset_tbl_ptr.i.i5.i864 = getelementptr i8, ptr %378, i64 40
  %385 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %19)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %20)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %21)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %22)
  %hash_coef.i.i17.i1139 = load i64, ptr %hash_coef_ptr.i.i3.i862, align 4, !noalias !23
  %tbl_size.i.i18.i1140 = load i64, ptr %tbl_size_ptr.i.i4.i863, align 4, !noalias !23
  %offset_tbl.i.i19.i1141 = load ptr, ptr %offset_tbl_ptr.i.i5.i864, align 8, !noalias !23
  %product.i.i.i20.i1142 = mul i64 %hash_coef.i.i17.i1139, 4015701072841558310
  %shifted.i.i.i21.i1143 = lshr i64 %product.i.i.i20.i1142, 32
  %xored.i.i.i22.i1144 = xor i64 %shifted.i.i.i21.i1143, %product.i.i.i20.i1142
  %hash.i.i.i23.i1145 = and i64 %xored.i.i.i22.i1144, %tbl_size.i.i18.i1140
  %offset_ptr.i.i24.i1146 = getelementptr i32, ptr %offset_tbl.i.i19.i1141, i64 %hash.i.i.i23.i1145
  %offset.i.i39.i1147 = load i32, ptr %offset_ptr.i.i24.i1146, align 4, !noalias !138
  %386 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %387 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %388 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %389

389:                                              ; preds = %.cont.i1170, %381
  %.0308.i1148 = phi i32 [ 0, %381 ], [ %422, %.cont.i1170 ]
  %.070307.i1149 = phi i1 [ true, %381 ], [ %423, %.cont.i1170 ]
  %.sroa.0.0306.i1150 = phi ptr [ %378, %381 ], [ %412, %.cont.i1170 ]
  %.sroa.6.0305.i1151.in = phi i64 [ %383, %381 ], [ %414, %.cont.i1170 ]
  %.sroa.12.0304.i1152.in = phi i64 [ %384, %381 ], [ %415, %.cont.i1170 ]
  %.sroa.17.0303.i1153 = phi i32 [ %offset.i.i39.i1147, %381 ], [ %offset.i.i71.i1184, %.cont.i1170 ]
  %.sroa.12.0304.i1152 = inttoptr i64 %.sroa.12.0304.i1152.in to ptr
  %.sroa.6.0305.i1151 = inttoptr i64 %.sroa.6.0305.i1151.in to ptr
  %390 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1150, 0
  %391 = insertvalue { ptr, ptr, ptr, i32 } %390, ptr %.sroa.6.0305.i1151, 1
  %392 = insertvalue { ptr, ptr, ptr, i32 } %391, ptr %.sroa.12.0304.i1152, 2
  %393 = insertvalue { ptr, ptr, ptr, i32 } %392, i32 %.sroa.17.0303.i1153, 3
  %394 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1150)
  %395 = sext i32 %.sroa.17.0303.i1153 to i64
  %396 = getelementptr ptr, ptr %.sroa.0.0306.i1150, i64 %395
  %397 = getelementptr i8, ptr %396, i64 64
  %398 = load ptr, ptr %397, align 8
  %result.i43.i1154 = call ptr %398({ ptr, ptr, ptr, i32 } %393, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %399 = call i32 %result.i43.i1154({ ptr, ptr, ptr, i32 } %393, { ptr, ptr, ptr, i32 } %393, ptr nonnull align 8 %2) #42
  %..i1155 = select i1 %.070307.i1149, ptr %19, ptr %21
  %.184.i1156 = select i1 %.070307.i1149, i64 104, i64 112
  %.185.i1157 = select i1 %.070307.i1149, ptr %20, ptr %22
  %.186.i1158 = select i1 %.070307.i1149, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1155, align 8
  %400 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1155)
  %401 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1156
  %402 = load ptr, ptr %401, align 8
  store ptr @i32_typ, ptr %.185.i1157, align 8
  %result.i44.i1159 = call ptr %402({ ptr, ptr, ptr, i32 } %59, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1157) #45
  %403 = call i32 %result.i44.i1159({ ptr, ptr, ptr, i32 } %59, { ptr, ptr, ptr, i32 } %59, ptr nonnull align 8 dereferenceable(8) %..i1155, i32 %399) #42
  %404 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %405 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1158
  %406 = load ptr, ptr %405, align 8
  %407 = load ptr, ptr %406, align 8
  %408 = call { ptr } %407(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i1160 = extractvalue { ptr } %408, 0
  %409 = sext i32 %403 to i64
  %410 = shl nsw i64 %409, 5
  %411 = getelementptr i8, ptr %.fca.0.extract53.i1160, i64 %410
  %412 = load ptr, ptr %411, align 8
  %413 = getelementptr i8, ptr %411, i64 8
  %414 = load i64, ptr %413, align 4
  %.sroa_idx.i1161 = getelementptr i8, ptr %411, i64 16
  %415 = load i64, ptr %.sroa_idx.i1161, align 4
  %416 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %417 = call { ptr } %407(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i1162 = extractvalue { ptr } %417, 0
  %418 = getelementptr i8, ptr %.fca.0.extract51.i1162, i64 %410
  store ptr %.sroa.0.0306.i1150, ptr %418, align 8
  %419 = getelementptr i8, ptr %418, i64 8
  store i64 %.sroa.6.0305.i1151.in, ptr %419, align 4
  %.sroa_idx100.i1163 = getelementptr i8, ptr %418, i64 16
  store i64 %.sroa.12.0304.i1152.in, ptr %.sroa_idx100.i1163, align 4
  %.sroa_idx101.i1164 = getelementptr i8, ptr %418, i64 24
  store i32 %.sroa.17.0303.i1153, ptr %.sroa_idx101.i1164, align 4
  %420 = icmp ne ptr %412, @nil_typ
  %421 = icmp ne ptr %412, null
  %.not90.i1165 = and i1 %420, %421
  br i1 %.not90.i1165, label %.cont.i1170, label %427

.cont.i1170:                                      ; preds = %389
  %422 = add nuw nsw i32 %.0308.i1148, 1
  %423 = xor i1 %.070307.i1149, true
  %hash_coef_ptr.i.i60.i1173 = getelementptr i8, ptr %412, i64 8
  %tbl_size_ptr.i.i61.i1174 = getelementptr i8, ptr %412, i64 16
  %offset_tbl_ptr.i.i62.i1175 = getelementptr i8, ptr %412, i64 40
  %hash_coef.i.i63.i1176 = load i64, ptr %hash_coef_ptr.i.i60.i1173, align 4
  %tbl_size.i.i64.i1177 = load i64, ptr %tbl_size_ptr.i.i61.i1174, align 4
  %offset_tbl.i.i65.i1178 = load ptr, ptr %offset_tbl_ptr.i.i62.i1175, align 8
  %product.i.i.i66.i1179 = mul i64 %hash_coef.i.i63.i1176, 4015701072841558310
  %shifted.i.i.i67.i1180 = lshr i64 %product.i.i.i66.i1179, 32
  %xored.i.i.i68.i1181 = xor i64 %shifted.i.i.i67.i1180, %product.i.i.i66.i1179
  %hash.i.i.i69.i1182 = and i64 %xored.i.i.i68.i1181, %tbl_size.i.i64.i1177
  %offset_ptr.i.i70.i1183 = getelementptr i32, ptr %offset_tbl.i.i65.i1178, i64 %hash.i.i.i69.i1182
  %offset.i.i71.i1184 = load i32, ptr %offset_ptr.i.i70.i1183, align 4
  %424 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %425 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %426 = icmp ult i32 %.0308.i1148, 99
  br i1 %426, label %389, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1193

427:                                              ; preds = %389
  %428 = load i32, ptr %55, align 4
  %429 = add i32 %428, 1
  %430 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %429, ptr %55, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1193

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1193: ; preds = %.cont.i1170, %427
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %19)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %20)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %21)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %22)
  br label %._crit_edge.i860

._crit_edge.i860:                                 ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1193, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit
  %431 = add nuw nsw i32 %.045.i858, 1
  %432 = icmp slt i32 %431, %307
  br i1 %432, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %._crit_edge.i860, %308, %305
  %433 = load ptr, ptr %result.i9, align 8
  %434 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %435 = load ptr, ptr %43, align 8
  %436 = load ptr, ptr %433, align 8
  %437 = getelementptr i8, ptr %436, i64 72
  %438 = load ptr, ptr %437, align 8
  %result.i.i.i = call { i64, i64 } %438(ptr nocapture nofree nonnull readonly align 8 %433) #41
  %439 = extractvalue { i64, i64 } %result.i.i.i, 0
  %440 = extractvalue { i64, i64 } %result.i.i.i, 1
  %441 = urem i64 20, %440
  %442 = icmp eq i64 %441, 0
  %443 = sub i64 %440, %441
  %444 = select i1 %442, i64 0, i64 %443
  %445 = add i64 %439, 20
  %446 = add i64 %445, %444
  %447 = load ptr, ptr %435, align 8
  %448 = getelementptr i8, ptr %447, i64 72
  %449 = load ptr, ptr %448, align 8
  %result.i1.i.i = call { i64, i64 } %449(ptr nocapture nofree nonnull readonly align 8 %435) #41
  %450 = extractvalue { i64, i64 } %result.i1.i.i, 0
  %451 = extractvalue { i64, i64 } %result.i1.i.i, 1
  %452 = call i64 @llvm.umax.i64(i64 %440, i64 %451) #38
  %453 = call i64 @llvm.umax.i64(i64 %452, i64 noundef 8) #38, !range !16
  %454 = urem i64 %446, %451
  %455 = icmp eq i64 %454, 0
  %456 = sub i64 %451, %454
  %457 = select i1 %455, i64 0, i64 %456
  %458 = add i64 %450, %446
  %459 = add i64 %458, %457
  %460 = urem i64 %459, %453
  %461 = icmp eq i64 %460, 0
  %462 = sub i64 %453, %460
  %463 = select i1 %461, i64 0, i64 %462
  %464 = add i64 %463, %459
  %result.i16.i = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %464, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %433, ptr %result.i16.i, align 8
  %465 = getelementptr inbounds i8, ptr %result.i16.i, i64 8
  store ptr %435, ptr %465, align 8
  %466 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i16.i)
  %467 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %468 = load ptr, ptr %433, align 8
  %469 = getelementptr i8, ptr %468, i64 72
  %470 = load ptr, ptr %469, align 8
  %result.i.i110.i = call { i64, i64 } %470(ptr nocapture nofree nonnull readonly align 8 %433) #41
  %471 = extractvalue { i64, i64 } %result.i.i110.i, 1
  %472 = urem i64 20, %471
  %473 = icmp eq i64 %472, 0
  %reass.sub1638 = sub i64 %471, %472
  %474 = add i64 %reass.sub1638, 20
  %475 = select i1 %473, i64 20, i64 %474
  %476 = getelementptr i8, ptr %result.i16.i, i64 %475
  %477 = getelementptr i8, ptr %468, i64 64
  %478 = load ptr, ptr %477, align 8
  call void %478({ ptr, i160 } %62, ptr nocapture nofree nonnull readonly align 8 %433, ptr nocapture nofree writeonly %476) #49
  %479 = load ptr, ptr %result.i16.i, align 8
  %480 = load ptr, ptr %479, align 8
  %481 = getelementptr i8, ptr %480, i64 72
  %482 = load ptr, ptr %481, align 8
  %result.i.i111.i = call { i64, i64 } %482(ptr nocapture nofree nonnull readonly align 8 %479) #41
  %483 = extractvalue { i64, i64 } %result.i.i111.i, 0
  %484 = extractvalue { i64, i64 } %result.i.i111.i, 1
  %485 = urem i64 20, %484
  %486 = icmp eq i64 %485, 0
  %487 = sub i64 %484, %485
  %488 = select i1 %486, i64 0, i64 %487
  %489 = add i64 %483, 20
  %490 = add i64 %489, %488
  %491 = load ptr, ptr %465, align 8
  %492 = load ptr, ptr %491, align 8
  %493 = getelementptr i8, ptr %492, i64 72
  %494 = load ptr, ptr %493, align 8
  %result.i1.i112.i = call { i64, i64 } %494(ptr nocapture nofree nonnull readonly align 8 %491) #41
  %495 = extractvalue { i64, i64 } %result.i1.i112.i, 1
  %496 = urem i64 %490, %495
  %497 = icmp eq i64 %496, 0
  %498 = sub i64 %495, %496
  %499 = select i1 %497, i64 0, i64 %498
  %500 = getelementptr i8, ptr %result.i16.i, i64 %490
  %501 = getelementptr i8, ptr %500, i64 %499
  %502 = getelementptr i8, ptr %492, i64 64
  %503 = load ptr, ptr %502, align 8
  call void %503({ ptr, i160 } %63, ptr nocapture nofree nonnull readonly align 8 %491, ptr nocapture nofree writeonly %501) #49
  %504 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %505 = getelementptr inbounds i8, ptr %result.i16.i, i64 16
  store i32 %65, ptr %505, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %31)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %32)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %33)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %34)
  %506 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %507 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %508 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %509

509:                                              ; preds = %.cont.i, %._crit_edge.i
  %.0308.i = phi i32 [ 0, %._crit_edge.i ], [ %544, %.cont.i ]
  %.070307.i = phi i1 [ true, %._crit_edge.i ], [ %545, %.cont.i ]
  %.sroa.0.0306.i = phi ptr [ @Entry, %._crit_edge.i ], [ %532, %.cont.i ]
  %.sroa.6.0305.i = phi ptr [ %result.i16.i, %._crit_edge.i ], [ %.sroa.speculated111.i, %.cont.i ]
  %.sroa.12.0304.i = phi ptr [ undef, %._crit_edge.i ], [ %.sroa.speculated105.i, %.cont.i ]
  %.sroa.17.0303.i = phi i32 [ 10, %._crit_edge.i ], [ %offset.i.i71.i, %.cont.i ]
  %510 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i, 0
  %511 = insertvalue { ptr, ptr, ptr, i32 } %510, ptr %.sroa.6.0305.i, 1
  %512 = insertvalue { ptr, ptr, ptr, i32 } %511, ptr %.sroa.12.0304.i, 2
  %513 = insertvalue { ptr, ptr, ptr, i32 } %512, i32 %.sroa.17.0303.i, 3
  %514 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i)
  %515 = sext i32 %.sroa.17.0303.i to i64
  %516 = getelementptr ptr, ptr %.sroa.0.0306.i, i64 %515
  %517 = getelementptr i8, ptr %516, i64 64
  %518 = load ptr, ptr %517, align 8
  %result.i43.i = call ptr %518({ ptr, ptr, ptr, i32 } %513, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %519 = call i32 %result.i43.i({ ptr, ptr, ptr, i32 } %513, { ptr, ptr, ptr, i32 } %513, ptr nonnull align 8 %2) #42
  %..i = select i1 %.070307.i, ptr %31, ptr %33
  %.184.i = select i1 %.070307.i, i64 104, i64 112
  %.185.i = select i1 %.070307.i, ptr %32, ptr %34
  %.186.i = select i1 %.070307.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i, align 8
  %520 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i)
  %521 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i
  %522 = load ptr, ptr %521, align 8
  store ptr @i32_typ, ptr %.185.i, align 8
  %result.i44.i = call ptr %522({ ptr, ptr, ptr, i32 } %58, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i) #45
  %523 = call i32 %result.i44.i({ ptr, ptr, ptr, i32 } %58, { ptr, ptr, ptr, i32 } %58, ptr nonnull align 8 dereferenceable(8) %..i, i32 %519) #42
  %524 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %525 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i
  %526 = load ptr, ptr %525, align 8
  %527 = load ptr, ptr %526, align 8
  %528 = call { ptr } %527(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i = extractvalue { ptr } %528, 0
  %529 = sext i32 %523 to i64
  %530 = shl nsw i64 %529, 5
  %531 = getelementptr i8, ptr %.fca.0.extract53.i, i64 %530
  %532 = load ptr, ptr %531, align 8
  %533 = getelementptr i8, ptr %531, i64 8
  %534 = load i64, ptr %533, align 4
  %.sroa_idx.i452 = getelementptr i8, ptr %531, i64 16
  %535 = load i64, ptr %.sroa_idx.i452, align 4
  %536 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %537 = call { ptr } %527(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i453 = extractvalue { ptr } %537, 0
  %538 = getelementptr i8, ptr %.fca.0.extract51.i453, i64 %530
  store ptr %.sroa.0.0306.i, ptr %538, align 8
  %539 = getelementptr i8, ptr %538, i64 8
  %540 = ptrtoint ptr %.sroa.6.0305.i to i64
  %541 = ptrtoint ptr %.sroa.12.0304.i to i64
  store i64 %540, ptr %539, align 4
  %.sroa_idx100.i = getelementptr i8, ptr %538, i64 16
  store i64 %541, ptr %.sroa_idx100.i, align 4
  %.sroa_idx101.i = getelementptr i8, ptr %538, i64 24
  store i32 %.sroa.17.0303.i, ptr %.sroa_idx101.i, align 4
  %542 = icmp ne ptr %532, @nil_typ
  %543 = icmp ne ptr %532, null
  %.not90.i = and i1 %542, %543
  br i1 %.not90.i, label %.cont.i, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit

.cont.i:                                          ; preds = %509
  %544 = add nuw nsw i32 %.0308.i, 1
  %545 = xor i1 %.070307.i, true
  %.sroa.speculated111.i = inttoptr i64 %534 to ptr
  %.sroa.speculated105.i = inttoptr i64 %535 to ptr
  %hash_coef_ptr.i.i60.i = getelementptr i8, ptr %532, i64 8
  %tbl_size_ptr.i.i61.i = getelementptr i8, ptr %532, i64 16
  %offset_tbl_ptr.i.i62.i = getelementptr i8, ptr %532, i64 40
  %hash_coef.i.i63.i = load i64, ptr %hash_coef_ptr.i.i60.i, align 4
  %tbl_size.i.i64.i = load i64, ptr %tbl_size_ptr.i.i61.i, align 4
  %offset_tbl.i.i65.i = load ptr, ptr %offset_tbl_ptr.i.i62.i, align 8
  %product.i.i.i66.i = mul i64 %hash_coef.i.i63.i, 4015701072841558310
  %shifted.i.i.i67.i = lshr i64 %product.i.i.i66.i, 32
  %xored.i.i.i68.i = xor i64 %shifted.i.i.i67.i, %product.i.i.i66.i
  %hash.i.i.i69.i = and i64 %xored.i.i.i68.i, %tbl_size.i.i64.i
  %offset_ptr.i.i70.i = getelementptr i32, ptr %offset_tbl.i.i65.i, i64 %hash.i.i.i69.i
  %offset.i.i71.i = load i32, ptr %offset_ptr.i.i70.i, align 4
  %546 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %547 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %548 = icmp ult i32 %.0308.i, 99
  br i1 %548, label %509, label %552

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit: ; preds = %509
  %549 = load i32, ptr %55, align 4
  %550 = add i32 %549, 1
  %551 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %550, ptr %55, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %31)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %32)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %33)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %34)
  br label %CuckooMap_insert_keyK_valueV.exit

552:                                              ; preds = %.cont.i
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %31)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %32)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %33)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %34)
  %553 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %554 = load ptr, ptr %51, align 8
  %555 = load ptr, ptr %52, align 8
  %556 = load i32, ptr %50, align 8
  %557 = shl i32 %556, 1
  %spec.select.i470 = call i32 @llvm.smax.i32(i32 %557, i32 noundef 16) #37
  store i32 %spec.select.i470, ptr %50, align 8
  %558 = zext nneg i32 %spec.select.i470 to i64
  %559 = shl nuw nsw i64 %558, 5
  %result.i.i471 = call noalias ptr @bump_malloc_inner(i64 noundef %559, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i471, ptr %51, align 8
  %result.i1.i472 = call noalias ptr @bump_malloc_inner(i64 noundef %559, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i472, ptr %52, align 8
  store i32 0, ptr %55, align 4
  %560 = icmp sgt i32 %556, 0
  br i1 %560, label %.lr.ph.i880, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948

.lr.ph.i880:                                      ; preds = %552, %._crit_edge.i895
  %.045.i893 = phi i32 [ %617, %._crit_edge.i895 ], [ 0, %552 ]
  %561 = zext nneg i32 %.045.i893 to i64
  %562 = shl nuw nsw i64 %561, 5
  %563 = getelementptr i8, ptr %554, i64 %562
  %564 = load ptr, ptr %563, align 8
  %565 = icmp ne ptr %564, @nil_typ
  %566 = icmp ne ptr %564, null
  %.not16.i894 = and i1 %565, %566
  br i1 %.not16.i894, label %567, label %._crit_edge.i895

567:                                              ; preds = %.lr.ph.i880
  %568 = getelementptr i8, ptr %563, i64 8
  %569 = load i64, ptr %568, align 4
  %.sroa_idx.i896 = getelementptr i8, ptr %563, i64 16
  %570 = load i64, ptr %.sroa_idx.i896, align 4
  %hash_coef_ptr.i.i3.i897 = getelementptr i8, ptr %564, i64 8
  %tbl_size_ptr.i.i4.i898 = getelementptr i8, ptr %564, i64 16
  %offset_tbl_ptr.i.i5.i899 = getelementptr i8, ptr %564, i64 40
  %571 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %15)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %16)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %17)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %18)
  %hash_coef.i.i17.i1211 = load i64, ptr %hash_coef_ptr.i.i3.i897, align 4, !noalias !23
  %tbl_size.i.i18.i1212 = load i64, ptr %tbl_size_ptr.i.i4.i898, align 4, !noalias !23
  %offset_tbl.i.i19.i1213 = load ptr, ptr %offset_tbl_ptr.i.i5.i899, align 8, !noalias !23
  %product.i.i.i20.i1214 = mul i64 %hash_coef.i.i17.i1211, 4015701072841558310
  %shifted.i.i.i21.i1215 = lshr i64 %product.i.i.i20.i1214, 32
  %xored.i.i.i22.i1216 = xor i64 %shifted.i.i.i21.i1215, %product.i.i.i20.i1214
  %hash.i.i.i23.i1217 = and i64 %xored.i.i.i22.i1216, %tbl_size.i.i18.i1212
  %offset_ptr.i.i24.i1218 = getelementptr i32, ptr %offset_tbl.i.i19.i1213, i64 %hash.i.i.i23.i1217
  %offset.i.i39.i1219 = load i32, ptr %offset_ptr.i.i24.i1218, align 4, !noalias !141
  %572 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %573 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %574 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %575

575:                                              ; preds = %.cont.i1242, %567
  %.0308.i1220 = phi i32 [ 0, %567 ], [ %608, %.cont.i1242 ]
  %.070307.i1221 = phi i1 [ true, %567 ], [ %609, %.cont.i1242 ]
  %.sroa.0.0306.i1222 = phi ptr [ %564, %567 ], [ %598, %.cont.i1242 ]
  %.sroa.6.0305.i1223.in = phi i64 [ %569, %567 ], [ %600, %.cont.i1242 ]
  %.sroa.12.0304.i1224.in = phi i64 [ %570, %567 ], [ %601, %.cont.i1242 ]
  %.sroa.17.0303.i1225 = phi i32 [ %offset.i.i39.i1219, %567 ], [ %offset.i.i71.i1256, %.cont.i1242 ]
  %.sroa.12.0304.i1224 = inttoptr i64 %.sroa.12.0304.i1224.in to ptr
  %.sroa.6.0305.i1223 = inttoptr i64 %.sroa.6.0305.i1223.in to ptr
  %576 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1222, 0
  %577 = insertvalue { ptr, ptr, ptr, i32 } %576, ptr %.sroa.6.0305.i1223, 1
  %578 = insertvalue { ptr, ptr, ptr, i32 } %577, ptr %.sroa.12.0304.i1224, 2
  %579 = insertvalue { ptr, ptr, ptr, i32 } %578, i32 %.sroa.17.0303.i1225, 3
  %580 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1222)
  %581 = sext i32 %.sroa.17.0303.i1225 to i64
  %582 = getelementptr ptr, ptr %.sroa.0.0306.i1222, i64 %581
  %583 = getelementptr i8, ptr %582, i64 64
  %584 = load ptr, ptr %583, align 8
  %result.i43.i1226 = call ptr %584({ ptr, ptr, ptr, i32 } %579, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %585 = call i32 %result.i43.i1226({ ptr, ptr, ptr, i32 } %579, { ptr, ptr, ptr, i32 } %579, ptr nonnull align 8 %2) #42
  %..i1227 = select i1 %.070307.i1221, ptr %15, ptr %17
  %.184.i1228 = select i1 %.070307.i1221, i64 104, i64 112
  %.185.i1229 = select i1 %.070307.i1221, ptr %16, ptr %18
  %.186.i1230 = select i1 %.070307.i1221, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1227, align 8
  %586 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1227)
  %587 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1228
  %588 = load ptr, ptr %587, align 8
  store ptr @i32_typ, ptr %.185.i1229, align 8
  %result.i44.i1231 = call ptr %588({ ptr, ptr, ptr, i32 } %59, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1229) #45
  %589 = call i32 %result.i44.i1231({ ptr, ptr, ptr, i32 } %59, { ptr, ptr, ptr, i32 } %59, ptr nonnull align 8 dereferenceable(8) %..i1227, i32 %585) #42
  %590 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %591 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1230
  %592 = load ptr, ptr %591, align 8
  %593 = load ptr, ptr %592, align 8
  %594 = call { ptr } %593(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i1232 = extractvalue { ptr } %594, 0
  %595 = sext i32 %589 to i64
  %596 = shl nsw i64 %595, 5
  %597 = getelementptr i8, ptr %.fca.0.extract53.i1232, i64 %596
  %598 = load ptr, ptr %597, align 8
  %599 = getelementptr i8, ptr %597, i64 8
  %600 = load i64, ptr %599, align 4
  %.sroa_idx.i1233 = getelementptr i8, ptr %597, i64 16
  %601 = load i64, ptr %.sroa_idx.i1233, align 4
  %602 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %603 = call { ptr } %593(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i1234 = extractvalue { ptr } %603, 0
  %604 = getelementptr i8, ptr %.fca.0.extract51.i1234, i64 %596
  store ptr %.sroa.0.0306.i1222, ptr %604, align 8
  %605 = getelementptr i8, ptr %604, i64 8
  store i64 %.sroa.6.0305.i1223.in, ptr %605, align 4
  %.sroa_idx100.i1235 = getelementptr i8, ptr %604, i64 16
  store i64 %.sroa.12.0304.i1224.in, ptr %.sroa_idx100.i1235, align 4
  %.sroa_idx101.i1236 = getelementptr i8, ptr %604, i64 24
  store i32 %.sroa.17.0303.i1225, ptr %.sroa_idx101.i1236, align 4
  %606 = icmp ne ptr %598, @nil_typ
  %607 = icmp ne ptr %598, null
  %.not90.i1237 = and i1 %606, %607
  br i1 %.not90.i1237, label %.cont.i1242, label %613

.cont.i1242:                                      ; preds = %575
  %608 = add nuw nsw i32 %.0308.i1220, 1
  %609 = xor i1 %.070307.i1221, true
  %hash_coef_ptr.i.i60.i1245 = getelementptr i8, ptr %598, i64 8
  %tbl_size_ptr.i.i61.i1246 = getelementptr i8, ptr %598, i64 16
  %offset_tbl_ptr.i.i62.i1247 = getelementptr i8, ptr %598, i64 40
  %hash_coef.i.i63.i1248 = load i64, ptr %hash_coef_ptr.i.i60.i1245, align 4
  %tbl_size.i.i64.i1249 = load i64, ptr %tbl_size_ptr.i.i61.i1246, align 4
  %offset_tbl.i.i65.i1250 = load ptr, ptr %offset_tbl_ptr.i.i62.i1247, align 8
  %product.i.i.i66.i1251 = mul i64 %hash_coef.i.i63.i1248, 4015701072841558310
  %shifted.i.i.i67.i1252 = lshr i64 %product.i.i.i66.i1251, 32
  %xored.i.i.i68.i1253 = xor i64 %shifted.i.i.i67.i1252, %product.i.i.i66.i1251
  %hash.i.i.i69.i1254 = and i64 %xored.i.i.i68.i1253, %tbl_size.i.i64.i1249
  %offset_ptr.i.i70.i1255 = getelementptr i32, ptr %offset_tbl.i.i65.i1250, i64 %hash.i.i.i69.i1254
  %offset.i.i71.i1256 = load i32, ptr %offset_ptr.i.i70.i1255, align 4
  %610 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %611 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %612 = icmp ult i32 %.0308.i1220, 99
  br i1 %612, label %575, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1265

613:                                              ; preds = %575
  %614 = load i32, ptr %55, align 4
  %615 = add i32 %614, 1
  %616 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %615, ptr %55, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1265

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1265: ; preds = %.cont.i1242, %613
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %15)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %16)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %17)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %18)
  br label %._crit_edge.i895

._crit_edge.i895:                                 ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1265, %.lr.ph.i880
  %617 = add nuw nsw i32 %.045.i893, 1
  %618 = icmp slt i32 %617, %556
  br i1 %618, label %.lr.ph.i880, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit913

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit913: ; preds = %._crit_edge.i895, %._crit_edge.i930
  %.045.i928 = phi i32 [ %675, %._crit_edge.i930 ], [ 0, %._crit_edge.i895 ]
  %619 = zext nneg i32 %.045.i928 to i64
  %620 = shl nuw nsw i64 %619, 5
  %621 = getelementptr i8, ptr %555, i64 %620
  %622 = load ptr, ptr %621, align 8
  %623 = icmp ne ptr %622, @nil_typ
  %624 = icmp ne ptr %622, null
  %.not16.i929 = and i1 %623, %624
  br i1 %.not16.i929, label %625, label %._crit_edge.i930

625:                                              ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit913
  %626 = getelementptr i8, ptr %621, i64 8
  %627 = load i64, ptr %626, align 4
  %.sroa_idx.i931 = getelementptr i8, ptr %621, i64 16
  %628 = load i64, ptr %.sroa_idx.i931, align 4
  %hash_coef_ptr.i.i3.i932 = getelementptr i8, ptr %622, i64 8
  %tbl_size_ptr.i.i4.i933 = getelementptr i8, ptr %622, i64 16
  %offset_tbl_ptr.i.i5.i934 = getelementptr i8, ptr %622, i64 40
  %629 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %11)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %12)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %13)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %14)
  %hash_coef.i.i17.i1283 = load i64, ptr %hash_coef_ptr.i.i3.i932, align 4, !noalias !23
  %tbl_size.i.i18.i1284 = load i64, ptr %tbl_size_ptr.i.i4.i933, align 4, !noalias !23
  %offset_tbl.i.i19.i1285 = load ptr, ptr %offset_tbl_ptr.i.i5.i934, align 8, !noalias !23
  %product.i.i.i20.i1286 = mul i64 %hash_coef.i.i17.i1283, 4015701072841558310
  %shifted.i.i.i21.i1287 = lshr i64 %product.i.i.i20.i1286, 32
  %xored.i.i.i22.i1288 = xor i64 %shifted.i.i.i21.i1287, %product.i.i.i20.i1286
  %hash.i.i.i23.i1289 = and i64 %xored.i.i.i22.i1288, %tbl_size.i.i18.i1284
  %offset_ptr.i.i24.i1290 = getelementptr i32, ptr %offset_tbl.i.i19.i1285, i64 %hash.i.i.i23.i1289
  %offset.i.i39.i1291 = load i32, ptr %offset_ptr.i.i24.i1290, align 4, !noalias !144
  %630 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %631 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %632 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %633

633:                                              ; preds = %.cont.i1314, %625
  %.0308.i1292 = phi i32 [ 0, %625 ], [ %666, %.cont.i1314 ]
  %.070307.i1293 = phi i1 [ true, %625 ], [ %667, %.cont.i1314 ]
  %.sroa.0.0306.i1294 = phi ptr [ %622, %625 ], [ %656, %.cont.i1314 ]
  %.sroa.6.0305.i1295.in = phi i64 [ %627, %625 ], [ %658, %.cont.i1314 ]
  %.sroa.12.0304.i1296.in = phi i64 [ %628, %625 ], [ %659, %.cont.i1314 ]
  %.sroa.17.0303.i1297 = phi i32 [ %offset.i.i39.i1291, %625 ], [ %offset.i.i71.i1328, %.cont.i1314 ]
  %.sroa.12.0304.i1296 = inttoptr i64 %.sroa.12.0304.i1296.in to ptr
  %.sroa.6.0305.i1295 = inttoptr i64 %.sroa.6.0305.i1295.in to ptr
  %634 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1294, 0
  %635 = insertvalue { ptr, ptr, ptr, i32 } %634, ptr %.sroa.6.0305.i1295, 1
  %636 = insertvalue { ptr, ptr, ptr, i32 } %635, ptr %.sroa.12.0304.i1296, 2
  %637 = insertvalue { ptr, ptr, ptr, i32 } %636, i32 %.sroa.17.0303.i1297, 3
  %638 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1294)
  %639 = sext i32 %.sroa.17.0303.i1297 to i64
  %640 = getelementptr ptr, ptr %.sroa.0.0306.i1294, i64 %639
  %641 = getelementptr i8, ptr %640, i64 64
  %642 = load ptr, ptr %641, align 8
  %result.i43.i1298 = call ptr %642({ ptr, ptr, ptr, i32 } %637, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %643 = call i32 %result.i43.i1298({ ptr, ptr, ptr, i32 } %637, { ptr, ptr, ptr, i32 } %637, ptr nonnull align 8 %2) #42
  %..i1299 = select i1 %.070307.i1293, ptr %11, ptr %13
  %.184.i1300 = select i1 %.070307.i1293, i64 104, i64 112
  %.185.i1301 = select i1 %.070307.i1293, ptr %12, ptr %14
  %.186.i1302 = select i1 %.070307.i1293, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1299, align 8
  %644 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1299)
  %645 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1300
  %646 = load ptr, ptr %645, align 8
  store ptr @i32_typ, ptr %.185.i1301, align 8
  %result.i44.i1303 = call ptr %646({ ptr, ptr, ptr, i32 } %59, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1301) #45
  %647 = call i32 %result.i44.i1303({ ptr, ptr, ptr, i32 } %59, { ptr, ptr, ptr, i32 } %59, ptr nonnull align 8 dereferenceable(8) %..i1299, i32 %643) #42
  %648 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %649 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1302
  %650 = load ptr, ptr %649, align 8
  %651 = load ptr, ptr %650, align 8
  %652 = call { ptr } %651(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i1304 = extractvalue { ptr } %652, 0
  %653 = sext i32 %647 to i64
  %654 = shl nsw i64 %653, 5
  %655 = getelementptr i8, ptr %.fca.0.extract53.i1304, i64 %654
  %656 = load ptr, ptr %655, align 8
  %657 = getelementptr i8, ptr %655, i64 8
  %658 = load i64, ptr %657, align 4
  %.sroa_idx.i1305 = getelementptr i8, ptr %655, i64 16
  %659 = load i64, ptr %.sroa_idx.i1305, align 4
  %660 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %661 = call { ptr } %651(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i1306 = extractvalue { ptr } %661, 0
  %662 = getelementptr i8, ptr %.fca.0.extract51.i1306, i64 %654
  store ptr %.sroa.0.0306.i1294, ptr %662, align 8
  %663 = getelementptr i8, ptr %662, i64 8
  store i64 %.sroa.6.0305.i1295.in, ptr %663, align 4
  %.sroa_idx100.i1307 = getelementptr i8, ptr %662, i64 16
  store i64 %.sroa.12.0304.i1296.in, ptr %.sroa_idx100.i1307, align 4
  %.sroa_idx101.i1308 = getelementptr i8, ptr %662, i64 24
  store i32 %.sroa.17.0303.i1297, ptr %.sroa_idx101.i1308, align 4
  %664 = icmp ne ptr %656, @nil_typ
  %665 = icmp ne ptr %656, null
  %.not90.i1309 = and i1 %664, %665
  br i1 %.not90.i1309, label %.cont.i1314, label %671

.cont.i1314:                                      ; preds = %633
  %666 = add nuw nsw i32 %.0308.i1292, 1
  %667 = xor i1 %.070307.i1293, true
  %hash_coef_ptr.i.i60.i1317 = getelementptr i8, ptr %656, i64 8
  %tbl_size_ptr.i.i61.i1318 = getelementptr i8, ptr %656, i64 16
  %offset_tbl_ptr.i.i62.i1319 = getelementptr i8, ptr %656, i64 40
  %hash_coef.i.i63.i1320 = load i64, ptr %hash_coef_ptr.i.i60.i1317, align 4
  %tbl_size.i.i64.i1321 = load i64, ptr %tbl_size_ptr.i.i61.i1318, align 4
  %offset_tbl.i.i65.i1322 = load ptr, ptr %offset_tbl_ptr.i.i62.i1319, align 8
  %product.i.i.i66.i1323 = mul i64 %hash_coef.i.i63.i1320, 4015701072841558310
  %shifted.i.i.i67.i1324 = lshr i64 %product.i.i.i66.i1323, 32
  %xored.i.i.i68.i1325 = xor i64 %shifted.i.i.i67.i1324, %product.i.i.i66.i1323
  %hash.i.i.i69.i1326 = and i64 %xored.i.i.i68.i1325, %tbl_size.i.i64.i1321
  %offset_ptr.i.i70.i1327 = getelementptr i32, ptr %offset_tbl.i.i65.i1322, i64 %hash.i.i.i69.i1326
  %offset.i.i71.i1328 = load i32, ptr %offset_ptr.i.i70.i1327, align 4
  %668 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %669 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %670 = icmp ult i32 %.0308.i1292, 99
  br i1 %670, label %633, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1337

671:                                              ; preds = %633
  %672 = load i32, ptr %55, align 4
  %673 = add i32 %672, 1
  %674 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %673, ptr %55, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1337

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1337: ; preds = %.cont.i1314, %671
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %11)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %12)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %13)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %14)
  br label %._crit_edge.i930

._crit_edge.i930:                                 ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1337, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit913
  %675 = add nuw nsw i32 %.045.i928, 1
  %676 = icmp slt i32 %675, %556
  br i1 %676, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit913, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948: ; preds = %._crit_edge.i930, %552
  %677 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %27)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %28)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %29)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %30)
  %hash_coef.i.i17.i495 = load i64, ptr %hash_coef_ptr.i.i60.i, align 4, !noalias !23
  %tbl_size.i.i18.i496 = load i64, ptr %tbl_size_ptr.i.i61.i, align 4, !noalias !23
  %offset_tbl.i.i19.i497 = load ptr, ptr %offset_tbl_ptr.i.i62.i, align 8, !noalias !23
  %product.i.i.i20.i498 = mul i64 %hash_coef.i.i17.i495, 4015701072841558310
  %shifted.i.i.i21.i499 = lshr i64 %product.i.i.i20.i498, 32
  %xored.i.i.i22.i500 = xor i64 %shifted.i.i.i21.i499, %product.i.i.i20.i498
  %hash.i.i.i23.i501 = and i64 %xored.i.i.i22.i500, %tbl_size.i.i18.i496
  %offset_ptr.i.i24.i502 = getelementptr i32, ptr %offset_tbl.i.i19.i497, i64 %hash.i.i.i23.i501
  %offset.i.i39.i503 = load i32, ptr %offset_ptr.i.i24.i502, align 4, !noalias !147
  %678 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %679 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %680 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %681

681:                                              ; preds = %.cont.i527, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948
  %.0308.i505 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948 ], [ %714, %.cont.i527 ]
  %.070307.i506 = phi i1 [ true, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948 ], [ %715, %.cont.i527 ]
  %.sroa.0.0306.i507 = phi ptr [ %532, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948 ], [ %704, %.cont.i527 ]
  %.sroa.6.0305.i508.in = phi i64 [ %534, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948 ], [ %706, %.cont.i527 ]
  %.sroa.12.0304.i509.in = phi i64 [ %535, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948 ], [ %707, %.cont.i527 ]
  %.sroa.17.0303.i510 = phi i32 [ %offset.i.i39.i503, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948 ], [ %offset.i.i71.i541, %.cont.i527 ]
  %.sroa.12.0304.i509 = inttoptr i64 %.sroa.12.0304.i509.in to ptr
  %.sroa.6.0305.i508 = inttoptr i64 %.sroa.6.0305.i508.in to ptr
  %682 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i507, 0
  %683 = insertvalue { ptr, ptr, ptr, i32 } %682, ptr %.sroa.6.0305.i508, 1
  %684 = insertvalue { ptr, ptr, ptr, i32 } %683, ptr %.sroa.12.0304.i509, 2
  %685 = insertvalue { ptr, ptr, ptr, i32 } %684, i32 %.sroa.17.0303.i510, 3
  %686 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i507)
  %687 = sext i32 %.sroa.17.0303.i510 to i64
  %688 = getelementptr ptr, ptr %.sroa.0.0306.i507, i64 %687
  %689 = getelementptr i8, ptr %688, i64 64
  %690 = load ptr, ptr %689, align 8
  %result.i43.i511 = call ptr %690({ ptr, ptr, ptr, i32 } %685, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %691 = call i32 %result.i43.i511({ ptr, ptr, ptr, i32 } %685, { ptr, ptr, ptr, i32 } %685, ptr nonnull align 8 %2) #42
  %..i512 = select i1 %.070307.i506, ptr %27, ptr %29
  %.184.i513 = select i1 %.070307.i506, i64 104, i64 112
  %.185.i514 = select i1 %.070307.i506, ptr %28, ptr %30
  %.186.i515 = select i1 %.070307.i506, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i512, align 8
  %692 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i512)
  %693 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i513
  %694 = load ptr, ptr %693, align 8
  store ptr @i32_typ, ptr %.185.i514, align 8
  %result.i44.i516 = call ptr %694({ ptr, ptr, ptr, i32 } %58, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i514) #45
  %695 = call i32 %result.i44.i516({ ptr, ptr, ptr, i32 } %58, { ptr, ptr, ptr, i32 } %58, ptr nonnull align 8 dereferenceable(8) %..i512, i32 %691) #42
  %696 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %697 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i515
  %698 = load ptr, ptr %697, align 8
  %699 = load ptr, ptr %698, align 8
  %700 = call { ptr } %699(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i517 = extractvalue { ptr } %700, 0
  %701 = sext i32 %695 to i64
  %702 = shl nsw i64 %701, 5
  %703 = getelementptr i8, ptr %.fca.0.extract53.i517, i64 %702
  %704 = load ptr, ptr %703, align 8
  %705 = getelementptr i8, ptr %703, i64 8
  %706 = load i64, ptr %705, align 4
  %.sroa_idx.i518 = getelementptr i8, ptr %703, i64 16
  %707 = load i64, ptr %.sroa_idx.i518, align 4
  %708 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %709 = call { ptr } %699(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i519 = extractvalue { ptr } %709, 0
  %710 = getelementptr i8, ptr %.fca.0.extract51.i519, i64 %702
  store ptr %.sroa.0.0306.i507, ptr %710, align 8
  %711 = getelementptr i8, ptr %710, i64 8
  store i64 %.sroa.6.0305.i508.in, ptr %711, align 4
  %.sroa_idx100.i520 = getelementptr i8, ptr %710, i64 16
  store i64 %.sroa.12.0304.i509.in, ptr %.sroa_idx100.i520, align 4
  %.sroa_idx101.i521 = getelementptr i8, ptr %710, i64 24
  store i32 %.sroa.17.0303.i510, ptr %.sroa_idx101.i521, align 4
  %712 = icmp ne ptr %704, @nil_typ
  %713 = icmp ne ptr %704, null
  %.not90.i522 = and i1 %712, %713
  br i1 %.not90.i522, label %.cont.i527, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit550

.cont.i527:                                       ; preds = %681
  %714 = add nuw nsw i32 %.0308.i505, 1
  %715 = xor i1 %.070307.i506, true
  %hash_coef_ptr.i.i60.i530 = getelementptr i8, ptr %704, i64 8
  %tbl_size_ptr.i.i61.i531 = getelementptr i8, ptr %704, i64 16
  %offset_tbl_ptr.i.i62.i532 = getelementptr i8, ptr %704, i64 40
  %hash_coef.i.i63.i533 = load i64, ptr %hash_coef_ptr.i.i60.i530, align 4
  %tbl_size.i.i64.i534 = load i64, ptr %tbl_size_ptr.i.i61.i531, align 4
  %offset_tbl.i.i65.i535 = load ptr, ptr %offset_tbl_ptr.i.i62.i532, align 8
  %product.i.i.i66.i536 = mul i64 %hash_coef.i.i63.i533, 4015701072841558310
  %shifted.i.i.i67.i537 = lshr i64 %product.i.i.i66.i536, 32
  %xored.i.i.i68.i538 = xor i64 %shifted.i.i.i67.i537, %product.i.i.i66.i536
  %hash.i.i.i69.i539 = and i64 %xored.i.i.i68.i538, %tbl_size.i.i64.i534
  %offset_ptr.i.i70.i540 = getelementptr i32, ptr %offset_tbl.i.i65.i535, i64 %hash.i.i.i69.i539
  %offset.i.i71.i541 = load i32, ptr %offset_ptr.i.i70.i540, align 4
  %716 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %717 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %718 = icmp ult i32 %.0308.i505, 99
  br i1 %718, label %681, label %722

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit550: ; preds = %681
  %719 = load i32, ptr %55, align 4
  %720 = add i32 %719, 1
  %721 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %720, ptr %55, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %27)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %28)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %29)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %30)
  br label %CuckooMap_insert_keyK_valueV.exit

722:                                              ; preds = %.cont.i527
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %27)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %28)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %29)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %30)
  %723 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %724 = load ptr, ptr %51, align 8
  %725 = load ptr, ptr %52, align 8
  %726 = load i32, ptr %50, align 8
  %727 = shl i32 %726, 1
  %spec.select.i566 = call i32 @llvm.smax.i32(i32 %727, i32 noundef 16) #37
  store i32 %spec.select.i566, ptr %50, align 8
  %728 = zext nneg i32 %spec.select.i566 to i64
  %729 = shl nuw nsw i64 %728, 5
  %result.i.i567 = call noalias ptr @bump_malloc_inner(i64 noundef %729, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i567, ptr %51, align 8
  %result.i1.i568 = call noalias ptr @bump_malloc_inner(i64 noundef %729, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i568, ptr %52, align 8
  store i32 0, ptr %55, align 4
  %730 = icmp sgt i32 %726, 0
  br i1 %730, label %.lr.ph.i950, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit983.thread

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit983.thread: ; preds = %722
  %731 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %CuckooMap_insert_keyK_valueV.exit

.lr.ph.i950:                                      ; preds = %722, %._crit_edge.i965
  %.045.i963 = phi i32 [ %788, %._crit_edge.i965 ], [ 0, %722 ]
  %732 = zext nneg i32 %.045.i963 to i64
  %733 = shl nuw nsw i64 %732, 5
  %734 = getelementptr i8, ptr %724, i64 %733
  %735 = load ptr, ptr %734, align 8
  %736 = icmp ne ptr %735, @nil_typ
  %737 = icmp ne ptr %735, null
  %.not16.i964 = and i1 %736, %737
  br i1 %.not16.i964, label %738, label %._crit_edge.i965

738:                                              ; preds = %.lr.ph.i950
  %739 = getelementptr i8, ptr %734, i64 8
  %740 = load i64, ptr %739, align 4
  %.sroa_idx.i966 = getelementptr i8, ptr %734, i64 16
  %741 = load i64, ptr %.sroa_idx.i966, align 4
  %hash_coef_ptr.i.i3.i967 = getelementptr i8, ptr %735, i64 8
  %tbl_size_ptr.i.i4.i968 = getelementptr i8, ptr %735, i64 16
  %offset_tbl_ptr.i.i5.i969 = getelementptr i8, ptr %735, i64 40
  %742 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %7)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %8)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %9)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %10)
  %hash_coef.i.i17.i1355 = load i64, ptr %hash_coef_ptr.i.i3.i967, align 4, !noalias !23
  %tbl_size.i.i18.i1356 = load i64, ptr %tbl_size_ptr.i.i4.i968, align 4, !noalias !23
  %offset_tbl.i.i19.i1357 = load ptr, ptr %offset_tbl_ptr.i.i5.i969, align 8, !noalias !23
  %product.i.i.i20.i1358 = mul i64 %hash_coef.i.i17.i1355, 4015701072841558310
  %shifted.i.i.i21.i1359 = lshr i64 %product.i.i.i20.i1358, 32
  %xored.i.i.i22.i1360 = xor i64 %shifted.i.i.i21.i1359, %product.i.i.i20.i1358
  %hash.i.i.i23.i1361 = and i64 %xored.i.i.i22.i1360, %tbl_size.i.i18.i1356
  %offset_ptr.i.i24.i1362 = getelementptr i32, ptr %offset_tbl.i.i19.i1357, i64 %hash.i.i.i23.i1361
  %offset.i.i39.i1363 = load i32, ptr %offset_ptr.i.i24.i1362, align 4, !noalias !150
  %743 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %744 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %745 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %746

746:                                              ; preds = %.cont.i1386, %738
  %.0308.i1364 = phi i32 [ 0, %738 ], [ %779, %.cont.i1386 ]
  %.070307.i1365 = phi i1 [ true, %738 ], [ %780, %.cont.i1386 ]
  %.sroa.0.0306.i1366 = phi ptr [ %735, %738 ], [ %769, %.cont.i1386 ]
  %.sroa.6.0305.i1367.in = phi i64 [ %740, %738 ], [ %771, %.cont.i1386 ]
  %.sroa.12.0304.i1368.in = phi i64 [ %741, %738 ], [ %772, %.cont.i1386 ]
  %.sroa.17.0303.i1369 = phi i32 [ %offset.i.i39.i1363, %738 ], [ %offset.i.i71.i1400, %.cont.i1386 ]
  %.sroa.12.0304.i1368 = inttoptr i64 %.sroa.12.0304.i1368.in to ptr
  %.sroa.6.0305.i1367 = inttoptr i64 %.sroa.6.0305.i1367.in to ptr
  %747 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1366, 0
  %748 = insertvalue { ptr, ptr, ptr, i32 } %747, ptr %.sroa.6.0305.i1367, 1
  %749 = insertvalue { ptr, ptr, ptr, i32 } %748, ptr %.sroa.12.0304.i1368, 2
  %750 = insertvalue { ptr, ptr, ptr, i32 } %749, i32 %.sroa.17.0303.i1369, 3
  %751 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1366)
  %752 = sext i32 %.sroa.17.0303.i1369 to i64
  %753 = getelementptr ptr, ptr %.sroa.0.0306.i1366, i64 %752
  %754 = getelementptr i8, ptr %753, i64 64
  %755 = load ptr, ptr %754, align 8
  %result.i43.i1370 = call ptr %755({ ptr, ptr, ptr, i32 } %750, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %756 = call i32 %result.i43.i1370({ ptr, ptr, ptr, i32 } %750, { ptr, ptr, ptr, i32 } %750, ptr nonnull align 8 %2) #42
  %..i1371 = select i1 %.070307.i1365, ptr %7, ptr %9
  %.184.i1372 = select i1 %.070307.i1365, i64 104, i64 112
  %.185.i1373 = select i1 %.070307.i1365, ptr %8, ptr %10
  %.186.i1374 = select i1 %.070307.i1365, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1371, align 8
  %757 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1371)
  %758 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1372
  %759 = load ptr, ptr %758, align 8
  store ptr @i32_typ, ptr %.185.i1373, align 8
  %result.i44.i1375 = call ptr %759({ ptr, ptr, ptr, i32 } %59, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1373) #45
  %760 = call i32 %result.i44.i1375({ ptr, ptr, ptr, i32 } %59, { ptr, ptr, ptr, i32 } %59, ptr nonnull align 8 dereferenceable(8) %..i1371, i32 %756) #42
  %761 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %762 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1374
  %763 = load ptr, ptr %762, align 8
  %764 = load ptr, ptr %763, align 8
  %765 = call { ptr } %764(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i1376 = extractvalue { ptr } %765, 0
  %766 = sext i32 %760 to i64
  %767 = shl nsw i64 %766, 5
  %768 = getelementptr i8, ptr %.fca.0.extract53.i1376, i64 %767
  %769 = load ptr, ptr %768, align 8
  %770 = getelementptr i8, ptr %768, i64 8
  %771 = load i64, ptr %770, align 4
  %.sroa_idx.i1377 = getelementptr i8, ptr %768, i64 16
  %772 = load i64, ptr %.sroa_idx.i1377, align 4
  %773 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %774 = call { ptr } %764(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i1378 = extractvalue { ptr } %774, 0
  %775 = getelementptr i8, ptr %.fca.0.extract51.i1378, i64 %767
  store ptr %.sroa.0.0306.i1366, ptr %775, align 8
  %776 = getelementptr i8, ptr %775, i64 8
  store i64 %.sroa.6.0305.i1367.in, ptr %776, align 4
  %.sroa_idx100.i1379 = getelementptr i8, ptr %775, i64 16
  store i64 %.sroa.12.0304.i1368.in, ptr %.sroa_idx100.i1379, align 4
  %.sroa_idx101.i1380 = getelementptr i8, ptr %775, i64 24
  store i32 %.sroa.17.0303.i1369, ptr %.sroa_idx101.i1380, align 4
  %777 = icmp ne ptr %769, @nil_typ
  %778 = icmp ne ptr %769, null
  %.not90.i1381 = and i1 %777, %778
  br i1 %.not90.i1381, label %.cont.i1386, label %784

.cont.i1386:                                      ; preds = %746
  %779 = add nuw nsw i32 %.0308.i1364, 1
  %780 = xor i1 %.070307.i1365, true
  %hash_coef_ptr.i.i60.i1389 = getelementptr i8, ptr %769, i64 8
  %tbl_size_ptr.i.i61.i1390 = getelementptr i8, ptr %769, i64 16
  %offset_tbl_ptr.i.i62.i1391 = getelementptr i8, ptr %769, i64 40
  %hash_coef.i.i63.i1392 = load i64, ptr %hash_coef_ptr.i.i60.i1389, align 4
  %tbl_size.i.i64.i1393 = load i64, ptr %tbl_size_ptr.i.i61.i1390, align 4
  %offset_tbl.i.i65.i1394 = load ptr, ptr %offset_tbl_ptr.i.i62.i1391, align 8
  %product.i.i.i66.i1395 = mul i64 %hash_coef.i.i63.i1392, 4015701072841558310
  %shifted.i.i.i67.i1396 = lshr i64 %product.i.i.i66.i1395, 32
  %xored.i.i.i68.i1397 = xor i64 %shifted.i.i.i67.i1396, %product.i.i.i66.i1395
  %hash.i.i.i69.i1398 = and i64 %xored.i.i.i68.i1397, %tbl_size.i.i64.i1393
  %offset_ptr.i.i70.i1399 = getelementptr i32, ptr %offset_tbl.i.i65.i1394, i64 %hash.i.i.i69.i1398
  %offset.i.i71.i1400 = load i32, ptr %offset_ptr.i.i70.i1399, align 4
  %781 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %782 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %783 = icmp ult i32 %.0308.i1364, 99
  br i1 %783, label %746, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1409

784:                                              ; preds = %746
  %785 = load i32, ptr %55, align 4
  %786 = add i32 %785, 1
  %787 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %786, ptr %55, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1409

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1409: ; preds = %.cont.i1386, %784
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %8)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %9)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %10)
  br label %._crit_edge.i965

._crit_edge.i965:                                 ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1409, %.lr.ph.i950
  %788 = add nuw nsw i32 %.045.i963, 1
  %789 = icmp slt i32 %788, %726
  br i1 %789, label %.lr.ph.i950, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit983

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit983: ; preds = %._crit_edge.i965
  %790 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %791

791:                                              ; preds = %._crit_edge.i1000, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit983
  %.045.i998 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit983 ], [ %848, %._crit_edge.i1000 ]
  %792 = zext nneg i32 %.045.i998 to i64
  %793 = shl nuw nsw i64 %792, 5
  %794 = getelementptr i8, ptr %725, i64 %793
  %795 = load ptr, ptr %794, align 8
  %796 = icmp ne ptr %795, @nil_typ
  %797 = icmp ne ptr %795, null
  %.not16.i999 = and i1 %796, %797
  br i1 %.not16.i999, label %798, label %._crit_edge.i1000

798:                                              ; preds = %791
  %799 = getelementptr i8, ptr %794, i64 8
  %800 = load i64, ptr %799, align 4
  %.sroa_idx.i1001 = getelementptr i8, ptr %794, i64 16
  %801 = load i64, ptr %.sroa_idx.i1001, align 4
  %hash_coef_ptr.i.i3.i1002 = getelementptr i8, ptr %795, i64 8
  %tbl_size_ptr.i.i4.i1003 = getelementptr i8, ptr %795, i64 16
  %offset_tbl_ptr.i.i5.i1004 = getelementptr i8, ptr %795, i64 40
  %802 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %3)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %4)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %5)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %6)
  %hash_coef.i.i17.i1427 = load i64, ptr %hash_coef_ptr.i.i3.i1002, align 4, !noalias !23
  %tbl_size.i.i18.i1428 = load i64, ptr %tbl_size_ptr.i.i4.i1003, align 4, !noalias !23
  %offset_tbl.i.i19.i1429 = load ptr, ptr %offset_tbl_ptr.i.i5.i1004, align 8, !noalias !23
  %product.i.i.i20.i1430 = mul i64 %hash_coef.i.i17.i1427, 4015701072841558310
  %shifted.i.i.i21.i1431 = lshr i64 %product.i.i.i20.i1430, 32
  %xored.i.i.i22.i1432 = xor i64 %shifted.i.i.i21.i1431, %product.i.i.i20.i1430
  %hash.i.i.i23.i1433 = and i64 %xored.i.i.i22.i1432, %tbl_size.i.i18.i1428
  %offset_ptr.i.i24.i1434 = getelementptr i32, ptr %offset_tbl.i.i19.i1429, i64 %hash.i.i.i23.i1433
  %offset.i.i39.i1435 = load i32, ptr %offset_ptr.i.i24.i1434, align 4, !noalias !153
  %803 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %804 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %805 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %806

806:                                              ; preds = %.cont.i1458, %798
  %.0308.i1436 = phi i32 [ 0, %798 ], [ %839, %.cont.i1458 ]
  %.070307.i1437 = phi i1 [ true, %798 ], [ %840, %.cont.i1458 ]
  %.sroa.0.0306.i1438 = phi ptr [ %795, %798 ], [ %829, %.cont.i1458 ]
  %.sroa.6.0305.i1439.in = phi i64 [ %800, %798 ], [ %831, %.cont.i1458 ]
  %.sroa.12.0304.i1440.in = phi i64 [ %801, %798 ], [ %832, %.cont.i1458 ]
  %.sroa.17.0303.i1441 = phi i32 [ %offset.i.i39.i1435, %798 ], [ %offset.i.i71.i1472, %.cont.i1458 ]
  %.sroa.12.0304.i1440 = inttoptr i64 %.sroa.12.0304.i1440.in to ptr
  %.sroa.6.0305.i1439 = inttoptr i64 %.sroa.6.0305.i1439.in to ptr
  %807 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1438, 0
  %808 = insertvalue { ptr, ptr, ptr, i32 } %807, ptr %.sroa.6.0305.i1439, 1
  %809 = insertvalue { ptr, ptr, ptr, i32 } %808, ptr %.sroa.12.0304.i1440, 2
  %810 = insertvalue { ptr, ptr, ptr, i32 } %809, i32 %.sroa.17.0303.i1441, 3
  %811 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1438)
  %812 = sext i32 %.sroa.17.0303.i1441 to i64
  %813 = getelementptr ptr, ptr %.sroa.0.0306.i1438, i64 %812
  %814 = getelementptr i8, ptr %813, i64 64
  %815 = load ptr, ptr %814, align 8
  %result.i43.i1442 = call ptr %815({ ptr, ptr, ptr, i32 } %810, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %816 = call i32 %result.i43.i1442({ ptr, ptr, ptr, i32 } %810, { ptr, ptr, ptr, i32 } %810, ptr nonnull align 8 %2) #42
  %..i1443 = select i1 %.070307.i1437, ptr %3, ptr %5
  %.184.i1444 = select i1 %.070307.i1437, i64 104, i64 112
  %.185.i1445 = select i1 %.070307.i1437, ptr %4, ptr %6
  %.186.i1446 = select i1 %.070307.i1437, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1443, align 8
  %817 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1443)
  %818 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1444
  %819 = load ptr, ptr %818, align 8
  store ptr @i32_typ, ptr %.185.i1445, align 8
  %result.i44.i1447 = call ptr %819({ ptr, ptr, ptr, i32 } %59, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1445) #45
  %820 = call i32 %result.i44.i1447({ ptr, ptr, ptr, i32 } %59, { ptr, ptr, ptr, i32 } %59, ptr nonnull align 8 dereferenceable(8) %..i1443, i32 %816) #42
  %821 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %822 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1446
  %823 = load ptr, ptr %822, align 8
  %824 = load ptr, ptr %823, align 8
  %825 = call { ptr } %824(ptr nonnull %result.i9) #40
  %.fca.0.extract53.i1448 = extractvalue { ptr } %825, 0
  %826 = sext i32 %820 to i64
  %827 = shl nsw i64 %826, 5
  %828 = getelementptr i8, ptr %.fca.0.extract53.i1448, i64 %827
  %829 = load ptr, ptr %828, align 8
  %830 = getelementptr i8, ptr %828, i64 8
  %831 = load i64, ptr %830, align 4
  %.sroa_idx.i1449 = getelementptr i8, ptr %828, i64 16
  %832 = load i64, ptr %.sroa_idx.i1449, align 4
  %833 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %834 = call { ptr } %824(ptr nonnull %result.i9) #40
  %.fca.0.extract51.i1450 = extractvalue { ptr } %834, 0
  %835 = getelementptr i8, ptr %.fca.0.extract51.i1450, i64 %827
  store ptr %.sroa.0.0306.i1438, ptr %835, align 8
  %836 = getelementptr i8, ptr %835, i64 8
  store i64 %.sroa.6.0305.i1439.in, ptr %836, align 4
  %.sroa_idx100.i1451 = getelementptr i8, ptr %835, i64 16
  store i64 %.sroa.12.0304.i1440.in, ptr %.sroa_idx100.i1451, align 4
  %.sroa_idx101.i1452 = getelementptr i8, ptr %835, i64 24
  store i32 %.sroa.17.0303.i1441, ptr %.sroa_idx101.i1452, align 4
  %837 = icmp ne ptr %829, @nil_typ
  %838 = icmp ne ptr %829, null
  %.not90.i1453 = and i1 %837, %838
  br i1 %.not90.i1453, label %.cont.i1458, label %844

.cont.i1458:                                      ; preds = %806
  %839 = add nuw nsw i32 %.0308.i1436, 1
  %840 = xor i1 %.070307.i1437, true
  %hash_coef_ptr.i.i60.i1461 = getelementptr i8, ptr %829, i64 8
  %tbl_size_ptr.i.i61.i1462 = getelementptr i8, ptr %829, i64 16
  %offset_tbl_ptr.i.i62.i1463 = getelementptr i8, ptr %829, i64 40
  %hash_coef.i.i63.i1464 = load i64, ptr %hash_coef_ptr.i.i60.i1461, align 4
  %tbl_size.i.i64.i1465 = load i64, ptr %tbl_size_ptr.i.i61.i1462, align 4
  %offset_tbl.i.i65.i1466 = load ptr, ptr %offset_tbl_ptr.i.i62.i1463, align 8
  %product.i.i.i66.i1467 = mul i64 %hash_coef.i.i63.i1464, 4015701072841558310
  %shifted.i.i.i67.i1468 = lshr i64 %product.i.i.i66.i1467, 32
  %xored.i.i.i68.i1469 = xor i64 %shifted.i.i.i67.i1468, %product.i.i.i66.i1467
  %hash.i.i.i69.i1470 = and i64 %xored.i.i.i68.i1469, %tbl_size.i.i64.i1465
  %offset_ptr.i.i70.i1471 = getelementptr i32, ptr %offset_tbl.i.i65.i1466, i64 %hash.i.i.i69.i1470
  %offset.i.i71.i1472 = load i32, ptr %offset_ptr.i.i70.i1471, align 4
  %841 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %842 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %843 = icmp ult i32 %.0308.i1436, 99
  br i1 %843, label %806, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1481

844:                                              ; preds = %806
  %845 = load i32, ptr %55, align 4
  %846 = add i32 %845, 1
  %847 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %846, ptr %55, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1481

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1481: ; preds = %.cont.i1458, %844
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %6)
  br label %._crit_edge.i1000

._crit_edge.i1000:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1481, %791
  %848 = add nuw nsw i32 %.045.i998, 1
  %849 = icmp slt i32 %848, %726
  br i1 %849, label %791, label %CuckooMap_insert_keyK_valueV.exit

CuckooMap_insert_keyK_valueV.exit:                ; preds = %._crit_edge.i1000, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit983.thread, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit550, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit418, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %850 = zext nneg i32 %61 to i64
  %851 = add i64 %.0139105, %850
  %852 = icmp slt i32 %61, %0
  br i1 %852, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %CuckooMap_insert_keyK_valueV.exit
  %853 = call i64 @clock()
  br label %854

854:                                              ; preds = %.lr.ph, %._crit_edge2
  %.2112 = phi i32 [ 0, %.lr.ph ], [ %982, %._crit_edge2 ]
  %.0141111 = phi i64 [ 0, %.lr.ph ], [ %.1142, %._crit_edge2 ]
  %.0144110 = phi i1 [ true, %.lr.ph ], [ %.1145, %._crit_edge2 ]
  %.sroa.0117.0.insert.ext = zext nneg i32 %.2112 to i160
  %855 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0117.0.insert.ext, 1
  %856 = load ptr, ptr %48, align 8
  %857 = call i32 %856({ ptr, i160 } %855) #42
  %858 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %859 = load i32, ptr %50, align 8
  %860 = add i32 %859, -1
  %861 = and i32 %860, %857
  %862 = load ptr, ptr %51, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %863 = sext i32 %861 to i64
  %864 = shl nsw i64 %863, 5
  %865 = getelementptr i8, ptr %862, i64 %864
  %866 = load ptr, ptr %865, align 8
  %867 = icmp ne ptr %866, @nil_typ
  %868 = icmp ne ptr %866, null
  %.not44.i = and i1 %867, %868
  br i1 %.not44.i, label %869, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

869:                                              ; preds = %854
  %870 = getelementptr i8, ptr %865, i64 8
  %871 = load i64, ptr %870, align 4
  %.sroa_idx.i613 = getelementptr i8, ptr %865, i64 16
  %872 = load i64, ptr %.sroa_idx.i613, align 4
  %873 = inttoptr i64 %871 to ptr
  %874 = inttoptr i64 %872 to ptr
  %hash_coef_ptr.i.i2.i = getelementptr i8, ptr %866, i64 8
  %tbl_size_ptr.i.i3.i = getelementptr i8, ptr %866, i64 16
  %offset_tbl_ptr.i.i4.i = getelementptr i8, ptr %866, i64 40
  %hash_coef.i.i5.i = load i64, ptr %hash_coef_ptr.i.i2.i, align 4, !noalias !156
  %tbl_size.i.i6.i = load i64, ptr %tbl_size_ptr.i.i3.i, align 4, !noalias !156
  %offset_tbl.i.i7.i = load ptr, ptr %offset_tbl_ptr.i.i4.i, align 8, !noalias !156
  %product.i.i.i8.i = mul i64 %hash_coef.i.i5.i, 4015701072841558310
  %shifted.i.i.i9.i = lshr i64 %product.i.i.i8.i, 32
  %xored.i.i.i10.i = xor i64 %shifted.i.i.i9.i, %product.i.i.i8.i
  %hash.i.i.i11.i = and i64 %xored.i.i.i10.i, %tbl_size.i.i6.i
  %offset_ptr.i.i12.i = getelementptr i32, ptr %offset_tbl.i.i7.i, i64 %hash.i.i.i11.i
  %offset.i.i13.i = load i32, ptr %offset_ptr.i.i12.i, align 4, !noalias !156
  %875 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %866, 0
  %876 = insertvalue { ptr, ptr, ptr, i32 } %875, ptr %873, 1
  %877 = insertvalue { ptr, ptr, ptr, i32 } %876, ptr %874, 2
  %878 = insertvalue { ptr, ptr, ptr, i32 } %877, i32 %offset.i.i13.i, 3
  %879 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %880 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %866) #37
  %881 = sext i32 %offset.i.i13.i to i64
  %882 = getelementptr ptr, ptr %866, i64 %881
  %883 = getelementptr i8, ptr %882, i64 64
  %884 = load ptr, ptr %883, align 8
  %result.i.i614 = call ptr %884({ ptr, ptr, ptr, i32 } %878, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %885 = call i32 %result.i.i614({ ptr, ptr, ptr, i32 } %878, { ptr, ptr, ptr, i32 } %878, ptr nonnull align 8 %2) #42
  %886 = icmp eq i32 %885, %857
  br i1 %886, label %._crit_edge.i615, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

._crit_edge.i615:                                 ; preds = %869
  %887 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %888 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %866)
  %889 = getelementptr i8, ptr %882, i64 48
  %890 = load ptr, ptr %889, align 8
  %result.i15.i616 = call ptr %890({ ptr, ptr, ptr, i32 } %878, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %891 = call { ptr, i160 } %result.i15.i616({ ptr, ptr, ptr, i32 } %878, { ptr, ptr, ptr, i32 } %878, ptr nonnull align 8 %2) #42
  %892 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %893 = load ptr, ptr %49, align 8
  %894 = call i1 %893({ ptr, i160 } %891, { ptr, i160 } %855) #42
  br i1 %894, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread: ; preds = %._crit_edge.i615, %854, %869
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %903

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit: ; preds = %._crit_edge.i615
  %895 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %896 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %866)
  %897 = getelementptr i8, ptr %882, i64 56
  %898 = load ptr, ptr %897, align 8
  %result.i16.i617 = call ptr %898({ ptr, ptr, ptr, i32 } %878, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %899 = call { ptr, i160 } %result.i16.i617({ ptr, ptr, ptr, i32 } %878, { ptr, ptr, ptr, i32 } %878, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i = extractvalue { ptr, i160 } %899, 0
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %900 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %901 = icmp ne ptr %.fca.0.extract21.i, @nil_typ
  %902 = icmp ne ptr %.fca.0.extract21.i, null
  %.not63.i = and i1 %901, %902
  br i1 %.not63.i, label %CuckooMap_get_keyK.exit, label %903

903:                                              ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit
  %904 = add i32 %857, 2127912214
  %905 = shl i32 %857, 12
  %906 = add i32 %904, %905
  %907 = ashr i32 %906, 19
  %908 = xor i32 %906, %907
  %909 = xor i32 %908, -949894596
  %910 = add i32 %909, 374761393
  %911 = shl i32 %909, 5
  %912 = add i32 %910, %911
  %913 = add i32 %912, -744332180
  %914 = shl i32 %912, 9
  %915 = xor i32 %913, %914
  %916 = add i32 %915, -42973499
  %917 = shl i32 %915, 3
  %918 = add i32 %916, %917
  %919 = ashr i32 %918, 16
  %920 = xor i32 %918, %919
  %921 = xor i32 %920, -1252372727
  %922 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %923 = load i32, ptr %50, align 8
  %924 = add i32 %923, -1
  %925 = and i32 %924, %921
  %926 = load ptr, ptr %52, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %927 = sext i32 %925 to i64
  %928 = shl nsw i64 %927, 5
  %929 = getelementptr i8, ptr %926, i64 %928
  %930 = load ptr, ptr %929, align 8
  %931 = icmp ne ptr %930, @nil_typ
  %932 = icmp ne ptr %930, null
  %.not44.i647 = and i1 %931, %932
  br i1 %.not44.i647, label %933, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit672

933:                                              ; preds = %903
  %934 = getelementptr i8, ptr %929, i64 8
  %935 = load i64, ptr %934, align 4
  %.sroa_idx.i652 = getelementptr i8, ptr %929, i64 16
  %936 = load i64, ptr %.sroa_idx.i652, align 4
  %937 = inttoptr i64 %935 to ptr
  %938 = inttoptr i64 %936 to ptr
  %hash_coef_ptr.i.i2.i653 = getelementptr i8, ptr %930, i64 8
  %tbl_size_ptr.i.i3.i654 = getelementptr i8, ptr %930, i64 16
  %offset_tbl_ptr.i.i4.i655 = getelementptr i8, ptr %930, i64 40
  %hash_coef.i.i5.i656 = load i64, ptr %hash_coef_ptr.i.i2.i653, align 4, !noalias !159
  %tbl_size.i.i6.i657 = load i64, ptr %tbl_size_ptr.i.i3.i654, align 4, !noalias !159
  %offset_tbl.i.i7.i658 = load ptr, ptr %offset_tbl_ptr.i.i4.i655, align 8, !noalias !159
  %product.i.i.i8.i659 = mul i64 %hash_coef.i.i5.i656, 4015701072841558310
  %shifted.i.i.i9.i660 = lshr i64 %product.i.i.i8.i659, 32
  %xored.i.i.i10.i661 = xor i64 %shifted.i.i.i9.i660, %product.i.i.i8.i659
  %hash.i.i.i11.i662 = and i64 %xored.i.i.i10.i661, %tbl_size.i.i6.i657
  %offset_ptr.i.i12.i663 = getelementptr i32, ptr %offset_tbl.i.i7.i658, i64 %hash.i.i.i11.i662
  %offset.i.i13.i664 = load i32, ptr %offset_ptr.i.i12.i663, align 4, !noalias !159
  %939 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %930, 0
  %940 = insertvalue { ptr, ptr, ptr, i32 } %939, ptr %937, 1
  %941 = insertvalue { ptr, ptr, ptr, i32 } %940, ptr %938, 2
  %942 = insertvalue { ptr, ptr, ptr, i32 } %941, i32 %offset.i.i13.i664, 3
  %943 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %944 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %930) #37
  %945 = sext i32 %offset.i.i13.i664 to i64
  %946 = getelementptr ptr, ptr %930, i64 %945
  %947 = getelementptr i8, ptr %946, i64 64
  %948 = load ptr, ptr %947, align 8
  %result.i.i665 = call ptr %948({ ptr, ptr, ptr, i32 } %942, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %949 = call i32 %result.i.i665({ ptr, ptr, ptr, i32 } %942, { ptr, ptr, ptr, i32 } %942, ptr nonnull align 8 %2) #42
  %950 = icmp eq i32 %949, %857
  br i1 %950, label %._crit_edge.i666, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit672

._crit_edge.i666:                                 ; preds = %933
  %951 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %952 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %930)
  %953 = getelementptr i8, ptr %946, i64 48
  %954 = load ptr, ptr %953, align 8
  %result.i15.i667 = call ptr %954({ ptr, ptr, ptr, i32 } %942, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %955 = call { ptr, i160 } %result.i15.i667({ ptr, ptr, ptr, i32 } %942, { ptr, ptr, ptr, i32 } %942, ptr nonnull align 8 %2) #42
  %956 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %957 = load ptr, ptr %49, align 8
  %958 = call i1 %957({ ptr, i160 } %955, { ptr, i160 } %855) #42
  br i1 %958, label %959, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit672

959:                                              ; preds = %._crit_edge.i666
  %960 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %961 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %930)
  %962 = getelementptr i8, ptr %946, i64 56
  %963 = load ptr, ptr %962, align 8
  %result.i16.i669 = call ptr %963({ ptr, ptr, ptr, i32 } %942, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %964 = call { ptr, i160 } %result.i16.i669({ ptr, ptr, ptr, i32 } %942, { ptr, ptr, ptr, i32 } %942, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i670 = extractvalue { ptr, i160 } %964, 0
  %.fca.1.extract22.i671 = extractvalue { ptr, i160 } %964, 1
  br label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit672

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit672: ; preds = %903, %933, %._crit_edge.i666, %959
  %.reg2mem43.sroa.3.0.i648 = phi i160 [ %.fca.1.extract22.i671, %959 ], [ poison, %._crit_edge.i666 ], [ poison, %903 ], [ poison, %933 ]
  %.reg2mem41.0.i649 = phi ptr [ %.fca.0.extract21.i670, %959 ], [ @nil_typ, %._crit_edge.i666 ], [ @nil_typ, %903 ], [ @nil_typ, %933 ]
  %.reload40.fca.0.insert.i650 = insertvalue { ptr, i160 } poison, ptr %.reg2mem41.0.i649, 0
  %.reload40.fca.1.insert.i651 = insertvalue { ptr, i160 } %.reload40.fca.0.insert.i650, i160 %.reg2mem43.sroa.3.0.i648, 1
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %965 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %966 = icmp ne ptr %.reg2mem41.0.i649, @nil_typ
  %967 = icmp ne ptr %.reg2mem41.0.i649, null
  %.not65.not.not.i = and i1 %966, %967
  %cond.fr27.i = freeze i1 %.not65.not.not.i
  %spec.select.i = select i1 %cond.fr27.i, ptr %.reg2mem41.0.i649, ptr @nil_typ
  br label %CuckooMap_get_keyK.exit

CuckooMap_get_keyK.exit:                          ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit672
  %968 = phi ptr [ %spec.select.i, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit672 ], [ %.fca.0.extract21.i, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit ]
  %.pn.i = phi { ptr, i160 } [ %.reload40.fca.1.insert.i651, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit672 ], [ %899, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit ]
  %969 = icmp ne ptr %968, @nil_typ
  %970 = icmp ne ptr %968, null
  %.not150 = and i1 %969, %970
  br i1 %.not150, label %971, label %._crit_edge.lr.ph.i

971:                                              ; preds = %CuckooMap_get_keyK.exit
  %972 = extractvalue { ptr, i160 } %.pn.i, 1
  %.sroa.2.8.extract.trunc = trunc i160 %972 to i32
  %973 = sext i32 %.sroa.2.8.extract.trunc to i64
  %974 = add i64 %.0141111, %973
  br label %._crit_edge2

._crit_edge.lr.ph.i:                              ; preds = %CuckooMap_get_keyK.exit
  %result.i19.h2s1622 = alloca [56 x i8], align 64
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 64 dereferenceable(56) %result.i19.h2s1622, i8 0, i64 56, i1 false)
  %975 = load <55 x i8>, ptr @ikfyp_Error_Nil_returned_during_sequential_hit_test_for_key_, align 64
  store <55 x i8> %975, ptr %result.i19.h2s1622, align 64
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %976 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %977 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %result.i.i686.h2s1623 = alloca [56 x i8], align 1
  call void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture nofree noundef nonnull writeonly align 1 dereferenceable(56) %result.i.i686.h2s1623, ptr noalias nocapture nofree noundef nonnull readonly align 64 dereferenceable(56) %result.i19.h2s1622, i64 noundef 55, i1 noundef false)
  %978 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %979 = getelementptr inbounds i8, ptr %result.i.i686.h2s1623, i64 55
  store i8 0, ptr %979, align 1
  %puts.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(56) %result.i.i686.h2s1623) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %980 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  %981 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %.2112) #42
  br label %._crit_edge2

._crit_edge2:                                     ; preds = %971, %._crit_edge.lr.ph.i
  %.1145 = phi i1 [ %.0144110, %971 ], [ false, %._crit_edge.lr.ph.i ]
  %.1142 = phi i64 [ %974, %971 ], [ %.0141111, %._crit_edge.lr.ph.i ]
  %982 = add nuw nsw i32 %.2112, 1
  %983 = icmp slt i32 %982, %0
  br i1 %983, label %854, label %._crit_edge.lr.ph.i702

._crit_edge.lr.ph.i702:                           ; preds = %._crit_edge2, %._crit_edge1._crit_edge.thread
  %984 = phi i64 [ %60, %._crit_edge1._crit_edge.thread ], [ %853, %._crit_edge2 ]
  %.0139.lcssa129 = phi i64 [ 0, %._crit_edge1._crit_edge.thread ], [ %851, %._crit_edge2 ]
  %.0144.lcssa = phi i1 [ true, %._crit_edge1._crit_edge.thread ], [ %.1145, %._crit_edge2 ]
  %.0141.lcssa = phi i64 [ 0, %._crit_edge1._crit_edge.thread ], [ %.1142, %._crit_edge2 ]
  %985 = call i64 @clock()
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %986 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %987 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <18 x i8> <i8 71, i8 101, i8 116, i8 32, i8 83, i8 101, i8 113, i8 117, i8 101, i8 110, i8 116, i8 105, i8 97, i8 108, i8 32, i8 72, i8 105, i8 116>, ptr %result.i.i701.h2s1620, align 32
  %988 = sub i64 %985, %984
  %989 = getelementptr inbounds i8, ptr %result.i.i701.h2s1620, i64 18
  store i8 0, ptr %989, align 2
  %puts.i258 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(19) %result.i.i701.h2s1620) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  store <14 x i8> <i8 32, i8 32, i8 79, i8 112, i8 101, i8 114, i8 97, i8 116, i8 105, i8 111, i8 110, i8 115, i8 58, i8 32>, ptr %result.i.i268.i.h2s1618, align 16
  %puts.i.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(15) %result.i.i268.i.h2s1618) #42
  %990 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %0) #42
  store <14 x i8> <i8 32, i8 32, i8 84, i8 111, i8 116, i8 97, i8 108, i8 32, i8 84, i8 105, i8 109, i8 101, i8 58, i8 32>, ptr %result.i.i282.i.h2s1616, align 16
  %puts.i206.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(15) %result.i.i282.i.h2s1616) #42
  %991 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(6) @i64_string, i64 %988) #42
  store <3 x i8> <i8 32, i8 109, i8 115>, ptr %result.i.i301.i.h2s1614, align 4
  %puts.i226.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(4) %result.i.i301.i.h2s1614) #42
  br i1 %54, label %._crit_edge1.i, label %._crit_edge.lr.ph.i721

._crit_edge1.i:                                   ; preds = %._crit_edge.lr.ph.i702
  %992 = icmp sgt i64 %988, 0
  br i1 %992, label %993, label %._crit_edge.lr.ph.i321.i

993:                                              ; preds = %._crit_edge1.i
  %994 = mul i64 %988, 1000000
  %995 = zext nneg i32 %0 to i64
  %996 = sdiv i64 %994, %995
  br label %._crit_edge.lr.ph.i321.i

._crit_edge.lr.ph.i321.i:                         ; preds = %993, %._crit_edge1.i
  %.0.i = phi i64 [ %996, %993 ], [ 0, %._crit_edge1.i ]
  store <15 x i8> <i8 32, i8 32, i8 84, i8 105, i8 109, i8 101, i8 47, i8 79, i8 112, i8 58, i8 32, i8 32, i8 32, i8 32, i8 126>, ptr %result.i.i320.i.h2s1612, align 16
  %puts.i246.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(16) %result.i.i320.i.h2s1612) #42
  %997 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(6) @i64_string, i64 %.0.i) #42
  %998 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  store <3 x i8> <i8 32, i8 110, i8 115>, ptr %result.i.i339.i.h2s1610, align 4
  %999 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %puts.i266.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(4) %result.i.i339.i.h2s1610) #42
  br label %._crit_edge.lr.ph.i721

._crit_edge.lr.ph.i721:                           ; preds = %._crit_edge.lr.ph.i702, %._crit_edge.lr.ph.i321.i
  %.not = icmp eq i64 %.0141.lcssa, %.0139.lcssa129
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1000 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1001 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <18 x i8> <i8 32, i8 32, i8 32, i8 32, i8 86, i8 101, i8 114, i8 105, i8 102, i8 105, i8 99, i8 97, i8 116, i8 105, i8 111, i8 110, i8 58, i8 32>, ptr %result.i.i720.h2s1608, align 32
  %spec.select = select i1 %.not, i1 %.0144.lcssa, i1 false
  %1002 = getelementptr inbounds i8, ptr %result.i.i720.h2s1608, i64 18
  store i8 0, ptr %1002, align 2
  %puts.i278 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(19) %result.i.i720.h2s1608) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %. = select i1 %spec.select, <4 x i8> <i8 80, i8 65, i8 83, i8 83>, <4 x i8> <i8 70, i8 65, i8 73, i8 76>
  %.187 = select i1 %spec.select, ptr %35, ptr %39
  %.188 = select i1 %spec.select, ptr %36, ptr %40
  %.189 = select i1 %spec.select, ptr %37, ptr %41
  %.190 = select i1 %spec.select, ptr %38, ptr %42
  store ptr @_parameterization_Bufferi8, ptr %.187, align 8
  %.187.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %spec.select, ptr %35, ptr %39
  %.187.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.187.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 8
  store ptr @_parameterization_i32, ptr %.187.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %.187.sroa.sel199.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %spec.select, ptr %35, ptr %39
  %.187.sroa.sel199.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.187.sroa.sel199.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 16
  store ptr @_parameterization_i32, ptr %.187.sroa.sel199.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %1003 = call ptr @llvm.invariant.start.p0(i64 noundef 9, ptr nocapture nofree noundef nonnull align 8 dereferenceable(24) %.187)
  store ptr @buffer_typ, ptr %.188, align 8
  %.188.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %spec.select, ptr %36, ptr %40
  %.188.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.188.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 8
  store ptr @i32_typ, ptr %.188.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %.188.sroa.sel194.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %spec.select, ptr %36, ptr %40
  %.188.sroa.sel194.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.188.sroa.sel194.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 16
  store ptr @i32_typ, ptr %.188.sroa.sel194.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %1004 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(24) %.188)
  store ptr @_parameterization_String, ptr %.189, align 8
  %1005 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %.189)
  %1006 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  store ptr @String, ptr %.190, align 8
  %1007 = call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %.190) #37
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1008 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1009 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <4 x i8> %., ptr %result.i.i739.h2s1607, align 4
  %1010 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %1011 = getelementptr inbounds i8, ptr %result.i.i739.h2s1607, i64 4
  store i8 0, ptr %1011, align 4
  %puts.i298 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(5) %result.i.i739.h2s1607) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  ret void
}

define void @benchmark_get_random_hit(i32 %0) local_unnamed_addr #10 {
  %2 = alloca {}, align 8
  %result.i.i1640.h2s3360 = alloca [5 x i8], align 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(5) %result.i.i1640.h2s3360, i8 0, i64 5, i1 false)
  %result.i.i1621.h2s3361 = alloca [19 x i8], align 32
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 32 dereferenceable(19) %result.i.i1621.h2s3361, i8 0, i64 19, i1 false)
  %result.i.i339.i.h2s3363 = alloca [4 x i8], align 4
  store i32 0, ptr %result.i.i339.i.h2s3363, align 4
  %result.i.i320.i.h2s3365 = alloca [16 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %result.i.i320.i.h2s3365, i8 0, i64 16, i1 false)
  %result.i.i301.i.h2s3367 = alloca [4 x i8], align 4
  store i32 0, ptr %result.i.i301.i.h2s3367, align 4
  %result.i.i282.i.h2s3369 = alloca [15 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(15) %result.i.i282.i.h2s3369, i8 0, i64 15, i1 false)
  %result.i.i268.i.h2s3371 = alloca [15 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(15) %result.i.i268.i.h2s3371, i8 0, i64 15, i1 false)
  %result.i.i1602.h2s3373 = alloca [15 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(15) %result.i.i1602.h2s3373, i8 0, i64 15, i1 false)
  %result.i.i1442.h2s3375 = alloca [34 x i8], align 64
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 64 dereferenceable(34) %result.i.i1442.h2s3375, i8 0, i64 34, i1 false)
  %result.i.i1427.h2s3377 = alloca [30 x i8], align 32
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 32 dereferenceable(30) %result.i.i1427.h2s3377, i8 0, i64 30, i1 false)
  %result.i34.h2s3379 = alloca [24 x i8], align 8
  %3 = getelementptr inbounds i8, ptr %result.i34.h2s3379, i64 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 16, i1 false)
  %4 = alloca [1 x ptr], align 8
  %5 = alloca { ptr }, align 8
  %6 = alloca [1 x ptr], align 8
  %7 = alloca { ptr }, align 8
  %8 = alloca [1 x ptr], align 8
  %9 = alloca { ptr }, align 8
  %10 = alloca [1 x ptr], align 8
  %11 = alloca { ptr }, align 8
  %12 = alloca [1 x ptr], align 8
  %13 = alloca { ptr }, align 8
  %14 = alloca [1 x ptr], align 8
  %15 = alloca { ptr }, align 8
  %16 = alloca [1 x ptr], align 8
  %17 = alloca { ptr }, align 8
  %18 = alloca [1 x ptr], align 8
  %19 = alloca { ptr }, align 8
  %20 = alloca [1 x ptr], align 8
  %21 = alloca { ptr }, align 8
  %22 = alloca [1 x ptr], align 8
  %23 = alloca { ptr }, align 8
  %24 = alloca [1 x ptr], align 8
  %25 = alloca { ptr }, align 8
  %26 = alloca [1 x ptr], align 8
  %27 = alloca { ptr }, align 8
  %28 = alloca [1 x ptr], align 8
  %29 = alloca { ptr }, align 8
  %30 = alloca [1 x ptr], align 8
  %31 = alloca { ptr }, align 8
  %32 = alloca [1 x ptr], align 8
  %33 = alloca { ptr }, align 8
  %34 = alloca [1 x ptr], align 8
  %35 = alloca { ptr }, align 8
  %36 = alloca [1 x ptr], align 8
  %37 = alloca { ptr }, align 8
  %38 = alloca [1 x ptr], align 8
  %39 = alloca { ptr }, align 8
  %40 = alloca [1 x ptr], align 8
  %41 = alloca { ptr }, align 8
  %42 = alloca [1 x ptr], align 8
  %43 = alloca { ptr }, align 8
  %44 = alloca [1 x ptr], align 8
  %45 = alloca { ptr }, align 8
  %46 = alloca [1 x ptr], align 8
  %47 = alloca { ptr }, align 8
  %48 = alloca [1 x ptr], align 8
  %49 = alloca { ptr }, align 8
  %50 = alloca [1 x ptr], align 8
  %51 = alloca { ptr }, align 8
  %52 = alloca [1 x ptr], align 8
  %53 = alloca { ptr }, align 8
  %54 = alloca [1 x ptr], align 8
  %55 = alloca { ptr }, align 8
  %56 = alloca [1 x ptr], align 8
  %57 = alloca { ptr }, align 8
  %58 = alloca [1 x ptr], align 8
  %59 = alloca { ptr }, align 8
  %60 = alloca [1 x ptr], align 8
  %61 = alloca { ptr }, align 8
  %62 = alloca [1 x ptr], align 8
  %63 = alloca { ptr }, align 8
  %64 = alloca [1 x ptr], align 8
  %65 = alloca { ptr }, align 8
  %66 = alloca [1 x ptr], align 8
  %67 = alloca { ptr }, align 8
  %oldProtect.i57 = alloca i32, align 4
  %oldProtect.i53 = alloca i32, align 4
  %oldProtect.i12 = alloca i32, align 4
  %oldProtect.i = alloca i32, align 4
  %.sroa.0224.sroa.0 = alloca i8, align 8
  %68 = alloca [3 x ptr], align 8
  %69 = alloca { ptr, ptr, ptr }, align 8
  %70 = alloca [1 x ptr], align 8
  %71 = alloca { ptr }, align 8
  %72 = alloca [3 x ptr], align 8
  %73 = alloca { ptr, ptr, ptr }, align 8
  %74 = alloca [1 x ptr], align 8
  %75 = alloca { ptr }, align 8
  %result.i8 = call noalias nonnull align 8 dereferenceable(64) ptr @bump_malloc_inner(i64 noundef 64, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr @_parameterization_i32, ptr %result.i8, align 8
  %76 = getelementptr inbounds i8, ptr %result.i8, i64 8
  store ptr @_parameterization_i32, ptr %76, align 8
  %77 = getelementptr inbounds i8, ptr %result.i8, i64 16
  store ptr @_parameterization_Pairi32._i32, ptr %77, align 8
  %78 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(64) %result.i8) #37
  %result.i9 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i) #37
  %result.i10 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i9, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i9, ptr noalias nofree noundef nonnull readnone @mvogsyztbq, ptr noalias nofree noundef nonnull readnone @i32_hasher) #37
  %ret.i = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i9) #48
  %79 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i9) #37
  %result.i11 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i12) #37
  %result.i13 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i11, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i12) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i12) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i11, ptr noalias nofree noundef nonnull readnone @qchnrssnvn, ptr noalias nofree noundef nonnull readnone @i32_eq) #37
  %ret.i14 = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i11) #48
  %80 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i11) #37
  %81 = getelementptr inbounds i8, ptr %result.i8, i64 48
  store ptr %ret.i, ptr %81, align 8
  %82 = getelementptr inbounds i8, ptr %result.i8, i64 56
  store ptr %ret.i14, ptr %82, align 8
  %83 = getelementptr inbounds i8, ptr %result.i8, i64 40
  store i32 8, ptr %83, align 8
  %result.i.i262 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %84 = getelementptr inbounds i8, ptr %result.i8, i64 24
  store ptr %result.i.i262, ptr %84, align 8
  %result.i1.i263 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %85 = getelementptr inbounds i8, ptr %result.i8, i64 32
  store ptr %result.i1.i263, ptr %85, align 8
  %86 = call ptr @llvm.invariant.start.p0(i64 noundef 40, ptr nocapture nofree noundef nonnull align 16 dereferenceable(120) @PRNG) #37
  store ptr @_parameterization_i32, ptr %result.i34.h2s3379, align 8
  %87 = call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(24) %result.i34.h2s3379) #37
  %88 = getelementptr inbounds i8, ptr %result.i34.h2s3379, i64 20
  store i32 %0, ptr %88, align 4
  %89 = sext i32 %0 to i64
  %90 = shl nsw i64 %89, 2
  %result.i2.i = call noalias ptr @bump_malloc_inner(i64 noundef %90, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %91 = getelementptr inbounds i8, ptr %result.i34.h2s3379, i64 8
  store ptr %result.i2.i, ptr %91, align 8
  %92 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 16 dereferenceable(744) @Array) #37
  %result.i51 = call noalias nonnull align 8 dereferenceable(64) ptr @bump_malloc_inner(i64 noundef 64, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr @_parameterization_i32, ptr %result.i51, align 8
  %93 = getelementptr inbounds i8, ptr %result.i51, i64 8
  store ptr @_parameterization_i1, ptr %93, align 8
  %94 = getelementptr inbounds i8, ptr %result.i51, i64 16
  store ptr @_parameterization_Pairi32._i1, ptr %94, align 8
  %95 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(64) %result.i51) #37
  %result.i52 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i53) #37
  %result.i54 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i52, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i53) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i53) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i52, ptr noalias nofree noundef nonnull readnone @smmvirnftz, ptr noalias nofree noundef nonnull readnone @i32_hasher) #37
  %ret.i55 = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i52) #48
  %96 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i52) #37
  %result.i56 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i57) #37
  %result.i58 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i56, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i57) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i57) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i56, ptr noalias nofree noundef nonnull readnone @dpmhvdztoi, ptr noalias nofree noundef nonnull readnone @i32_eq) #37
  %ret.i59 = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i56) #48
  %97 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i56) #37
  %98 = getelementptr inbounds i8, ptr %result.i51, i64 48
  store ptr %ret.i55, ptr %98, align 8
  %99 = getelementptr inbounds i8, ptr %result.i51, i64 56
  store ptr %ret.i59, ptr %99, align 8
  %100 = getelementptr inbounds i8, ptr %result.i51, i64 40
  store i32 8, ptr %100, align 8
  %result.i.i304 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %101 = getelementptr inbounds i8, ptr %result.i51, i64 24
  store ptr %result.i.i304, ptr %101, align 8
  %result.i1.i305 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %102 = getelementptr inbounds i8, ptr %result.i51, i64 32
  store ptr %result.i1.i305, ptr %102, align 8
  %103 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %104 = mul i32 %0, 10
  %105 = icmp sgt i32 %0, 0
  %106 = icmp sgt i32 %104, 0
  %spec.select234 = and i1 %105, %106
  br i1 %spec.select234, label %.lr.ph, label %._crit_edge3._crit_edge

.lr.ph:                                           ; preds = %1
  %107 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %108 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2) #37
  %109 = getelementptr inbounds i8, ptr %result.i8, i64 44
  %110 = getelementptr inbounds i8, ptr %result.i51, i64 44
  %111 = insertvalue { ptr, ptr, ptr, i32 } { ptr @CuckooMap, ptr undef, ptr undef, i32 undef }, ptr %result.i51, 1
  %112 = insertvalue { ptr, ptr, ptr, i32 } %111, ptr undef, 2
  %113 = insertvalue { ptr, ptr, ptr, i32 } %112, i32 10, 3
  %114 = insertvalue { ptr, ptr, ptr, i32 } { ptr @CuckooMap, ptr undef, ptr undef, i32 undef }, ptr %result.i8, 1
  %115 = insertvalue { ptr, ptr, ptr, i32 } %114, ptr undef, 2
  %116 = insertvalue { ptr, ptr, ptr, i32 } %115, i32 10, 3
  %117 = insertvalue { ptr, ptr, ptr, i32 } %114, i32 10, 3
  %118 = insertvalue { ptr, ptr, ptr, i32 } %111, i32 10, 3
  %119 = call ptr @llvm.invariant.start.p0(i64 noundef 40, ptr nocapture nofree noundef nonnull align 16 dereferenceable(120) @PRNG) #37
  br label %120

120:                                              ; preds = %.lr.ph, %._crit_edge1
  %result.i17.h2s3380.sroa.0.0 = phi i32 [ 456, %.lr.ph ], [ %123, %._crit_edge1 ]
  %.0264237 = phi i32 [ 0, %.lr.ph ], [ %1827, %._crit_edge1 ]
  %.0266236 = phi i32 [ 0, %.lr.ph ], [ %.1267, %._crit_edge1 ]
  %.0275235 = phi i64 [ 0, %.lr.ph ], [ %.1276, %._crit_edge1 ]
  %121 = mul i32 %result.i17.h2s3380.sroa.0.0, 1103515245
  %122 = add i32 %121, 12345
  %123 = and i32 %122, 2147483647
  %.sroa.0252.0.insert.ext = zext nneg i32 %123 to i160
  %124 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0252.0.insert.ext, 1
  %125 = load ptr, ptr %98, align 8
  %126 = call i32 %125({ ptr, i160 } %124) #42
  %127 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %128 = load i32, ptr %100, align 8
  %129 = add i32 %128, -1
  %130 = and i32 %129, %126
  %131 = load ptr, ptr %101, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %132 = sext i32 %130 to i64
  %133 = shl nsw i64 %132, 5
  %134 = getelementptr i8, ptr %131, i64 %133
  %135 = load ptr, ptr %134, align 8
  %136 = icmp ne ptr %135, @nil_typ
  %137 = icmp ne ptr %135, null
  %.not44.i = and i1 %136, %137
  br i1 %.not44.i, label %138, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

138:                                              ; preds = %120
  %139 = getelementptr i8, ptr %134, i64 8
  %140 = load i64, ptr %139, align 4
  %.sroa_idx.i = getelementptr i8, ptr %134, i64 16
  %141 = load i64, ptr %.sroa_idx.i, align 4
  %142 = inttoptr i64 %140 to ptr
  %143 = inttoptr i64 %141 to ptr
  %hash_coef_ptr.i.i2.i = getelementptr i8, ptr %135, i64 8
  %tbl_size_ptr.i.i3.i = getelementptr i8, ptr %135, i64 16
  %offset_tbl_ptr.i.i4.i = getelementptr i8, ptr %135, i64 40
  %hash_coef.i.i5.i = load i64, ptr %hash_coef_ptr.i.i2.i, align 4, !noalias !162
  %tbl_size.i.i6.i = load i64, ptr %tbl_size_ptr.i.i3.i, align 4, !noalias !162
  %offset_tbl.i.i7.i = load ptr, ptr %offset_tbl_ptr.i.i4.i, align 8, !noalias !162
  %product.i.i.i8.i = mul i64 %hash_coef.i.i5.i, 4015701072841558310
  %shifted.i.i.i9.i = lshr i64 %product.i.i.i8.i, 32
  %xored.i.i.i10.i = xor i64 %shifted.i.i.i9.i, %product.i.i.i8.i
  %hash.i.i.i11.i = and i64 %xored.i.i.i10.i, %tbl_size.i.i6.i
  %offset_ptr.i.i12.i = getelementptr i32, ptr %offset_tbl.i.i7.i, i64 %hash.i.i.i11.i
  %offset.i.i13.i = load i32, ptr %offset_ptr.i.i12.i, align 4, !noalias !162
  %144 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %135, 0
  %145 = insertvalue { ptr, ptr, ptr, i32 } %144, ptr %142, 1
  %146 = insertvalue { ptr, ptr, ptr, i32 } %145, ptr %143, 2
  %147 = insertvalue { ptr, ptr, ptr, i32 } %146, i32 %offset.i.i13.i, 3
  %148 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %149 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %135) #37
  %150 = sext i32 %offset.i.i13.i to i64
  %151 = getelementptr ptr, ptr %135, i64 %150
  %152 = getelementptr i8, ptr %151, i64 64
  %153 = load ptr, ptr %152, align 8
  %result.i.i = call ptr %153({ ptr, ptr, ptr, i32 } %147, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %154 = call i32 %result.i.i({ ptr, ptr, ptr, i32 } %147, { ptr, ptr, ptr, i32 } %147, ptr nonnull align 8 %2) #42
  %155 = icmp eq i32 %154, %126
  br i1 %155, label %._crit_edge.i752, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

._crit_edge.i752:                                 ; preds = %138
  %156 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %157 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %135)
  %158 = getelementptr i8, ptr %151, i64 48
  %159 = load ptr, ptr %158, align 8
  %result.i15.i753 = call ptr %159({ ptr, ptr, ptr, i32 } %147, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %160 = call { ptr, i160 } %result.i15.i753({ ptr, ptr, ptr, i32 } %147, { ptr, ptr, ptr, i32 } %147, ptr nonnull align 8 %2) #42
  %161 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %162 = load ptr, ptr %99, align 8
  %163 = call i1 %162({ ptr, i160 } %160, { ptr, i160 } %124) #42
  br i1 %163, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread: ; preds = %._crit_edge.i752, %120, %138
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %172

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit: ; preds = %._crit_edge.i752
  %164 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %165 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %135)
  %166 = getelementptr i8, ptr %151, i64 56
  %167 = load ptr, ptr %166, align 8
  %result.i16.i754 = call ptr %167({ ptr, ptr, ptr, i32 } %147, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %168 = call { ptr, i160 } %result.i16.i754({ ptr, ptr, ptr, i32 } %147, { ptr, ptr, ptr, i32 } %147, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i = extractvalue { ptr, i160 } %168, 0
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %169 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %170 = icmp ne ptr %.fca.0.extract21.i, @nil_typ
  %171 = icmp ne ptr %.fca.0.extract21.i, null
  %.not63.i = and i1 %170, %171
  br i1 %.not63.i, label %CuckooMap_get_keyK.exit, label %172

172:                                              ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit
  %173 = add i32 %126, 2127912214
  %174 = shl i32 %126, 12
  %175 = add i32 %173, %174
  %176 = ashr i32 %175, 19
  %177 = xor i32 %175, %176
  %178 = xor i32 %177, -949894596
  %179 = add i32 %178, 374761393
  %180 = shl i32 %178, 5
  %181 = add i32 %179, %180
  %182 = add i32 %181, -744332180
  %183 = shl i32 %181, 9
  %184 = xor i32 %182, %183
  %185 = add i32 %184, -42973499
  %186 = shl i32 %184, 3
  %187 = add i32 %185, %186
  %188 = ashr i32 %187, 16
  %189 = xor i32 %187, %188
  %190 = xor i32 %189, -1252372727
  %191 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %192 = load i32, ptr %100, align 8
  %193 = add i32 %192, -1
  %194 = and i32 %193, %190
  %195 = load ptr, ptr %102, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %196 = sext i32 %194 to i64
  %197 = shl nsw i64 %196, 5
  %198 = getelementptr i8, ptr %195, i64 %197
  %199 = load ptr, ptr %198, align 8
  %200 = icmp ne ptr %199, @nil_typ
  %201 = icmp ne ptr %199, null
  %.not44.i783 = and i1 %200, %201
  br i1 %.not44.i783, label %202, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit808

202:                                              ; preds = %172
  %203 = getelementptr i8, ptr %198, i64 8
  %204 = load i64, ptr %203, align 4
  %.sroa_idx.i788 = getelementptr i8, ptr %198, i64 16
  %205 = load i64, ptr %.sroa_idx.i788, align 4
  %206 = inttoptr i64 %204 to ptr
  %207 = inttoptr i64 %205 to ptr
  %hash_coef_ptr.i.i2.i789 = getelementptr i8, ptr %199, i64 8
  %tbl_size_ptr.i.i3.i790 = getelementptr i8, ptr %199, i64 16
  %offset_tbl_ptr.i.i4.i791 = getelementptr i8, ptr %199, i64 40
  %hash_coef.i.i5.i792 = load i64, ptr %hash_coef_ptr.i.i2.i789, align 4, !noalias !165
  %tbl_size.i.i6.i793 = load i64, ptr %tbl_size_ptr.i.i3.i790, align 4, !noalias !165
  %offset_tbl.i.i7.i794 = load ptr, ptr %offset_tbl_ptr.i.i4.i791, align 8, !noalias !165
  %product.i.i.i8.i795 = mul i64 %hash_coef.i.i5.i792, 4015701072841558310
  %shifted.i.i.i9.i796 = lshr i64 %product.i.i.i8.i795, 32
  %xored.i.i.i10.i797 = xor i64 %shifted.i.i.i9.i796, %product.i.i.i8.i795
  %hash.i.i.i11.i798 = and i64 %xored.i.i.i10.i797, %tbl_size.i.i6.i793
  %offset_ptr.i.i12.i799 = getelementptr i32, ptr %offset_tbl.i.i7.i794, i64 %hash.i.i.i11.i798
  %offset.i.i13.i800 = load i32, ptr %offset_ptr.i.i12.i799, align 4, !noalias !165
  %208 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %199, 0
  %209 = insertvalue { ptr, ptr, ptr, i32 } %208, ptr %206, 1
  %210 = insertvalue { ptr, ptr, ptr, i32 } %209, ptr %207, 2
  %211 = insertvalue { ptr, ptr, ptr, i32 } %210, i32 %offset.i.i13.i800, 3
  %212 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %213 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %199) #37
  %214 = sext i32 %offset.i.i13.i800 to i64
  %215 = getelementptr ptr, ptr %199, i64 %214
  %216 = getelementptr i8, ptr %215, i64 64
  %217 = load ptr, ptr %216, align 8
  %result.i.i801 = call ptr %217({ ptr, ptr, ptr, i32 } %211, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %218 = call i32 %result.i.i801({ ptr, ptr, ptr, i32 } %211, { ptr, ptr, ptr, i32 } %211, ptr nonnull align 8 %2) #42
  %219 = icmp eq i32 %218, %126
  br i1 %219, label %._crit_edge.i802, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit808

._crit_edge.i802:                                 ; preds = %202
  %220 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %221 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %199)
  %222 = getelementptr i8, ptr %215, i64 48
  %223 = load ptr, ptr %222, align 8
  %result.i15.i803 = call ptr %223({ ptr, ptr, ptr, i32 } %211, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %224 = call { ptr, i160 } %result.i15.i803({ ptr, ptr, ptr, i32 } %211, { ptr, ptr, ptr, i32 } %211, ptr nonnull align 8 %2) #42
  %225 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %226 = load ptr, ptr %99, align 8
  %227 = call i1 %226({ ptr, i160 } %224, { ptr, i160 } %124) #42
  br i1 %227, label %228, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit808

228:                                              ; preds = %._crit_edge.i802
  %229 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %230 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %199)
  %231 = getelementptr i8, ptr %215, i64 56
  %232 = load ptr, ptr %231, align 8
  %result.i16.i805 = call ptr %232({ ptr, ptr, ptr, i32 } %211, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %233 = call { ptr, i160 } %result.i16.i805({ ptr, ptr, ptr, i32 } %211, { ptr, ptr, ptr, i32 } %211, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i806 = extractvalue { ptr, i160 } %233, 0
  br label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit808

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit808: ; preds = %172, %202, %._crit_edge.i802, %228
  %.reg2mem41.0.i785 = phi ptr [ %.fca.0.extract21.i806, %228 ], [ @nil_typ, %._crit_edge.i802 ], [ @nil_typ, %172 ], [ @nil_typ, %202 ]
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %234 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %235 = icmp ne ptr %.reg2mem41.0.i785, @nil_typ
  %236 = icmp ne ptr %.reg2mem41.0.i785, null
  %.not65.not.not.i = and i1 %235, %236
  %cond.fr27.i = freeze i1 %.not65.not.not.i
  %spec.select.i = select i1 %cond.fr27.i, ptr %.reg2mem41.0.i785, ptr @nil_typ
  br label %CuckooMap_get_keyK.exit

CuckooMap_get_keyK.exit:                          ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit808
  %237 = phi ptr [ %spec.select.i, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit808 ], [ %.fca.0.extract21.i, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit ]
  %238 = icmp eq ptr %237, @nil_typ
  %239 = icmp eq ptr %237, null
  %240 = or i1 %238, %239
  br i1 %240, label %241, label %._crit_edge1

241:                                              ; preds = %CuckooMap_get_keyK.exit
  %242 = add nuw i32 %123, 1
  %.sroa.0234.0.insert.ext = zext i32 %242 to i160
  %243 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0234.0.insert.ext, 1
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %244 = load ptr, ptr %81, align 8
  %245 = call i32 %244({ ptr, i160 } %124) #42
  %246 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %247 = load i32, ptr %83, align 8
  %248 = add i32 %247, -1
  %249 = and i32 %248, %245
  %250 = load ptr, ptr %84, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %251 = sext i32 %249 to i64
  %252 = shl nsw i64 %251, 5
  %253 = getelementptr i8, ptr %250, i64 %252
  %254 = load ptr, ptr %253, align 8
  %255 = getelementptr i8, ptr %253, i64 8
  %256 = icmp ne ptr %254, @nil_typ
  %257 = icmp ne ptr %254, null
  %.not64.i = and i1 %256, %257
  br i1 %.not64.i, label %258, label %356

258:                                              ; preds = %241
  %259 = load i64, ptr %255, align 4
  %.sroa_idx.i849 = getelementptr i8, ptr %253, i64 16
  %260 = load i64, ptr %.sroa_idx.i849, align 4
  %261 = inttoptr i64 %259 to ptr
  %262 = inttoptr i64 %260 to ptr
  %hash_coef_ptr.i.i3.i = getelementptr i8, ptr %254, i64 8
  %tbl_size_ptr.i.i4.i = getelementptr i8, ptr %254, i64 16
  %offset_tbl_ptr.i.i5.i = getelementptr i8, ptr %254, i64 40
  %hash_coef.i.i6.i = load i64, ptr %hash_coef_ptr.i.i3.i, align 4, !noalias !168
  %tbl_size.i.i7.i = load i64, ptr %tbl_size_ptr.i.i4.i, align 4, !noalias !168
  %offset_tbl.i.i8.i = load ptr, ptr %offset_tbl_ptr.i.i5.i, align 8, !noalias !168
  %product.i.i.i9.i = mul i64 %hash_coef.i.i6.i, 4015701072841558310
  %shifted.i.i.i10.i = lshr i64 %product.i.i.i9.i, 32
  %xored.i.i.i11.i = xor i64 %shifted.i.i.i10.i, %product.i.i.i9.i
  %hash.i.i.i12.i = and i64 %xored.i.i.i11.i, %tbl_size.i.i7.i
  %offset_ptr.i.i13.i = getelementptr i32, ptr %offset_tbl.i.i8.i, i64 %hash.i.i.i12.i
  %offset.i.i14.i = load i32, ptr %offset_ptr.i.i13.i, align 4, !noalias !168
  %263 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %254, 0
  %264 = insertvalue { ptr, ptr, ptr, i32 } %263, ptr %261, 1
  %265 = insertvalue { ptr, ptr, ptr, i32 } %264, ptr %262, 2
  %266 = insertvalue { ptr, ptr, ptr, i32 } %265, i32 %offset.i.i14.i, 3
  %267 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %268 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %254) #37
  %269 = sext i32 %offset.i.i14.i to i64
  %270 = getelementptr ptr, ptr %254, i64 %269
  %271 = getelementptr i8, ptr %270, i64 64
  %272 = load ptr, ptr %271, align 8
  %result.i.i850 = call ptr %272({ ptr, ptr, ptr, i32 } %266, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %273 = call i32 %result.i.i850({ ptr, ptr, ptr, i32 } %266, { ptr, ptr, ptr, i32 } %266, ptr nonnull align 8 %2) #42
  %274 = icmp eq i32 %273, %245
  br i1 %274, label %._crit_edge.i851, label %356

._crit_edge.i851:                                 ; preds = %258
  %275 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %276 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %254)
  %277 = getelementptr i8, ptr %270, i64 48
  %278 = load ptr, ptr %277, align 8
  %result.i16.i852 = call ptr %278({ ptr, ptr, ptr, i32 } %266, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %279 = call { ptr, i160 } %result.i16.i852({ ptr, ptr, ptr, i32 } %266, { ptr, ptr, ptr, i32 } %266, ptr nonnull align 8 %2) #42
  %280 = load ptr, ptr %82, align 8
  %281 = call i1 %280({ ptr, i160 } %279, { ptr, i160 } %124) #42
  br i1 %281, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, label %356

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit: ; preds = %._crit_edge.i851
  %282 = load ptr, ptr %result.i8, align 8
  %283 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %284 = load ptr, ptr %76, align 8
  %285 = load ptr, ptr %282, align 8, !alias.scope !171
  %286 = getelementptr i8, ptr %285, i64 72
  %287 = load ptr, ptr %286, align 8, !alias.scope !171
  %result.i.i.i853 = call { i64, i64 } %287(ptr nocapture nofree nonnull readonly align 8 %282) #41, !alias.scope !171
  %288 = extractvalue { i64, i64 } %result.i.i.i853, 0
  %289 = extractvalue { i64, i64 } %result.i.i.i853, 1
  %290 = urem i64 20, %289
  %291 = icmp eq i64 %290, 0
  %292 = sub i64 %289, %290
  %293 = select i1 %291, i64 0, i64 %292
  %294 = add i64 %288, 20
  %295 = add i64 %294, %293
  %296 = load ptr, ptr %284, align 8, !alias.scope !171
  %297 = getelementptr i8, ptr %296, i64 72
  %298 = load ptr, ptr %297, align 8, !alias.scope !171
  %result.i1.i.i854 = call { i64, i64 } %298(ptr nocapture nofree nonnull readonly align 8 %284) #41, !alias.scope !171
  %299 = extractvalue { i64, i64 } %result.i1.i.i854, 0
  %300 = extractvalue { i64, i64 } %result.i1.i.i854, 1
  %301 = call i64 @llvm.umax.i64(i64 %289, i64 %300) #38
  %302 = call i64 @llvm.umax.i64(i64 %301, i64 noundef 8) #38, !range !16
  %303 = urem i64 %295, %300
  %304 = icmp eq i64 %303, 0
  %305 = sub i64 %300, %303
  %306 = select i1 %304, i64 0, i64 %305
  %307 = add i64 %299, %295
  %308 = add i64 %307, %306
  %309 = urem i64 %308, %302
  %310 = icmp eq i64 %309, 0
  %311 = sub i64 %302, %309
  %312 = select i1 %310, i64 0, i64 %311
  %313 = add i64 %312, %308
  %result.i20.i855 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %313, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %282, ptr %result.i20.i855, align 8
  %314 = getelementptr inbounds i8, ptr %result.i20.i855, i64 8
  store ptr %284, ptr %314, align 8
  %315 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i855)
  %316 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %317 = load ptr, ptr %282, align 8
  %318 = getelementptr i8, ptr %317, i64 72
  %319 = load ptr, ptr %318, align 8
  %result.i.i54.i = call { i64, i64 } %319(ptr nocapture nofree nonnull readonly align 8 %282) #41
  %320 = extractvalue { i64, i64 } %result.i.i54.i, 1
  %321 = urem i64 20, %320
  %322 = icmp eq i64 %321, 0
  %reass.sub3407 = sub i64 %320, %321
  %323 = add i64 %reass.sub3407, 20
  %324 = select i1 %322, i64 20, i64 %323
  %325 = getelementptr i8, ptr %result.i20.i855, i64 %324
  %326 = getelementptr i8, ptr %317, i64 64
  %327 = load ptr, ptr %326, align 8
  call void %327({ ptr, i160 } %124, ptr nocapture nofree nonnull readonly align 8 %282, ptr nocapture nofree writeonly %325) #49
  %328 = load ptr, ptr %result.i20.i855, align 8
  %329 = load ptr, ptr %328, align 8
  %330 = getelementptr i8, ptr %329, i64 72
  %331 = load ptr, ptr %330, align 8
  %result.i.i55.i = call { i64, i64 } %331(ptr nocapture nofree nonnull readonly align 8 %328) #41
  %332 = extractvalue { i64, i64 } %result.i.i55.i, 0
  %333 = extractvalue { i64, i64 } %result.i.i55.i, 1
  %334 = urem i64 20, %333
  %335 = icmp eq i64 %334, 0
  %336 = sub i64 %333, %334
  %337 = select i1 %335, i64 0, i64 %336
  %338 = add i64 %332, 20
  %339 = add i64 %338, %337
  %340 = load ptr, ptr %314, align 8
  %341 = load ptr, ptr %340, align 8
  %342 = getelementptr i8, ptr %341, i64 72
  %343 = load ptr, ptr %342, align 8
  %result.i1.i56.i = call { i64, i64 } %343(ptr nocapture nofree nonnull readonly align 8 %340) #41
  %344 = extractvalue { i64, i64 } %result.i1.i56.i, 1
  %345 = urem i64 %339, %344
  %346 = icmp eq i64 %345, 0
  %347 = sub i64 %344, %345
  %348 = select i1 %346, i64 0, i64 %347
  %349 = getelementptr i8, ptr %result.i20.i855, i64 %339
  %350 = getelementptr i8, ptr %349, i64 %348
  %351 = getelementptr i8, ptr %341, i64 64
  %352 = load ptr, ptr %351, align 8
  call void %352({ ptr, i160 } %243, ptr nocapture nofree nonnull readonly align 8 %340, ptr nocapture nofree writeonly %350) #49
  %353 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %354 = getelementptr inbounds i8, ptr %result.i20.i855, i64 16
  store i32 %245, ptr %354, align 8
  store ptr @Entry, ptr %253, align 8
  %355 = ptrtoint ptr %result.i20.i855 to i64
  store i64 %355, ptr %255, align 4
  %.sroa_idx28.i = getelementptr i8, ptr %253, i64 24
  store i32 10, ptr %.sroa_idx28.i, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit

356:                                              ; preds = %._crit_edge.i851, %241, %258
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %357 = add i32 %245, 2127912214
  %358 = shl i32 %245, 12
  %359 = add i32 %357, %358
  %360 = ashr i32 %359, 19
  %361 = xor i32 %359, %360
  %362 = xor i32 %361, -949894596
  %363 = add i32 %362, 374761393
  %364 = shl i32 %362, 5
  %365 = add i32 %363, %364
  %366 = add i32 %365, -744332180
  %367 = shl i32 %365, 9
  %368 = xor i32 %366, %367
  %369 = add i32 %368, -42973499
  %370 = shl i32 %368, 3
  %371 = add i32 %369, %370
  %372 = ashr i32 %371, 16
  %373 = xor i32 %371, %372
  %374 = xor i32 %373, -1252372727
  %375 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %376 = load i32, ptr %83, align 8
  %377 = add i32 %376, -1
  %378 = and i32 %377, %374
  %379 = load ptr, ptr %85, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %380 = sext i32 %378 to i64
  %381 = shl nsw i64 %380, 5
  %382 = getelementptr i8, ptr %379, i64 %381
  %383 = load ptr, ptr %382, align 8
  %384 = getelementptr i8, ptr %382, i64 8
  %385 = icmp ne ptr %383, @nil_typ
  %386 = icmp ne ptr %383, null
  %.not64.i885 = and i1 %385, %386
  br i1 %.not64.i885, label %387, label %485

387:                                              ; preds = %356
  %388 = load i64, ptr %384, align 4
  %.sroa_idx.i887 = getelementptr i8, ptr %382, i64 16
  %389 = load i64, ptr %.sroa_idx.i887, align 4
  %390 = inttoptr i64 %388 to ptr
  %391 = inttoptr i64 %389 to ptr
  %hash_coef_ptr.i.i3.i888 = getelementptr i8, ptr %383, i64 8
  %tbl_size_ptr.i.i4.i889 = getelementptr i8, ptr %383, i64 16
  %offset_tbl_ptr.i.i5.i890 = getelementptr i8, ptr %383, i64 40
  %hash_coef.i.i6.i891 = load i64, ptr %hash_coef_ptr.i.i3.i888, align 4, !noalias !174
  %tbl_size.i.i7.i892 = load i64, ptr %tbl_size_ptr.i.i4.i889, align 4, !noalias !174
  %offset_tbl.i.i8.i893 = load ptr, ptr %offset_tbl_ptr.i.i5.i890, align 8, !noalias !174
  %product.i.i.i9.i894 = mul i64 %hash_coef.i.i6.i891, 4015701072841558310
  %shifted.i.i.i10.i895 = lshr i64 %product.i.i.i9.i894, 32
  %xored.i.i.i11.i896 = xor i64 %shifted.i.i.i10.i895, %product.i.i.i9.i894
  %hash.i.i.i12.i897 = and i64 %xored.i.i.i11.i896, %tbl_size.i.i7.i892
  %offset_ptr.i.i13.i898 = getelementptr i32, ptr %offset_tbl.i.i8.i893, i64 %hash.i.i.i12.i897
  %offset.i.i14.i899 = load i32, ptr %offset_ptr.i.i13.i898, align 4, !noalias !174
  %392 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %383, 0
  %393 = insertvalue { ptr, ptr, ptr, i32 } %392, ptr %390, 1
  %394 = insertvalue { ptr, ptr, ptr, i32 } %393, ptr %391, 2
  %395 = insertvalue { ptr, ptr, ptr, i32 } %394, i32 %offset.i.i14.i899, 3
  %396 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %397 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %383) #37
  %398 = sext i32 %offset.i.i14.i899 to i64
  %399 = getelementptr ptr, ptr %383, i64 %398
  %400 = getelementptr i8, ptr %399, i64 64
  %401 = load ptr, ptr %400, align 8
  %result.i.i900 = call ptr %401({ ptr, ptr, ptr, i32 } %395, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %402 = call i32 %result.i.i900({ ptr, ptr, ptr, i32 } %395, { ptr, ptr, ptr, i32 } %395, ptr nonnull align 8 %2) #42
  %403 = icmp eq i32 %402, %245
  br i1 %403, label %._crit_edge.i901, label %485

._crit_edge.i901:                                 ; preds = %387
  %404 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %405 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %383)
  %406 = getelementptr i8, ptr %399, i64 48
  %407 = load ptr, ptr %406, align 8
  %result.i16.i902 = call ptr %407({ ptr, ptr, ptr, i32 } %395, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %408 = call { ptr, i160 } %result.i16.i902({ ptr, ptr, ptr, i32 } %395, { ptr, ptr, ptr, i32 } %395, ptr nonnull align 8 %2) #42
  %409 = load ptr, ptr %82, align 8
  %410 = call i1 %409({ ptr, i160 } %408, { ptr, i160 } %124) #42
  br i1 %410, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit914, label %485

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit914: ; preds = %._crit_edge.i901
  %411 = load ptr, ptr %result.i8, align 8
  %412 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %413 = load ptr, ptr %76, align 8
  %414 = load ptr, ptr %411, align 8, !alias.scope !177
  %415 = getelementptr i8, ptr %414, i64 72
  %416 = load ptr, ptr %415, align 8, !alias.scope !177
  %result.i.i.i906 = call { i64, i64 } %416(ptr nocapture nofree nonnull readonly align 8 %411) #41, !alias.scope !177
  %417 = extractvalue { i64, i64 } %result.i.i.i906, 0
  %418 = extractvalue { i64, i64 } %result.i.i.i906, 1
  %419 = urem i64 20, %418
  %420 = icmp eq i64 %419, 0
  %421 = sub i64 %418, %419
  %422 = select i1 %420, i64 0, i64 %421
  %423 = add i64 %417, 20
  %424 = add i64 %423, %422
  %425 = load ptr, ptr %413, align 8, !alias.scope !177
  %426 = getelementptr i8, ptr %425, i64 72
  %427 = load ptr, ptr %426, align 8, !alias.scope !177
  %result.i1.i.i907 = call { i64, i64 } %427(ptr nocapture nofree nonnull readonly align 8 %413) #41, !alias.scope !177
  %428 = extractvalue { i64, i64 } %result.i1.i.i907, 0
  %429 = extractvalue { i64, i64 } %result.i1.i.i907, 1
  %430 = call i64 @llvm.umax.i64(i64 %418, i64 %429) #38
  %431 = call i64 @llvm.umax.i64(i64 %430, i64 noundef 8) #38, !range !16
  %432 = urem i64 %424, %429
  %433 = icmp eq i64 %432, 0
  %434 = sub i64 %429, %432
  %435 = select i1 %433, i64 0, i64 %434
  %436 = add i64 %428, %424
  %437 = add i64 %436, %435
  %438 = urem i64 %437, %431
  %439 = icmp eq i64 %438, 0
  %440 = sub i64 %431, %438
  %441 = select i1 %439, i64 0, i64 %440
  %442 = add i64 %441, %437
  %result.i20.i908 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %442, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %411, ptr %result.i20.i908, align 8
  %443 = getelementptr inbounds i8, ptr %result.i20.i908, i64 8
  store ptr %413, ptr %443, align 8
  %444 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i908)
  %445 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %446 = load ptr, ptr %411, align 8
  %447 = getelementptr i8, ptr %446, i64 72
  %448 = load ptr, ptr %447, align 8
  %result.i.i54.i909 = call { i64, i64 } %448(ptr nocapture nofree nonnull readonly align 8 %411) #41
  %449 = extractvalue { i64, i64 } %result.i.i54.i909, 1
  %450 = urem i64 20, %449
  %451 = icmp eq i64 %450, 0
  %reass.sub3406 = sub i64 %449, %450
  %452 = add i64 %reass.sub3406, 20
  %453 = select i1 %451, i64 20, i64 %452
  %454 = getelementptr i8, ptr %result.i20.i908, i64 %453
  %455 = getelementptr i8, ptr %446, i64 64
  %456 = load ptr, ptr %455, align 8
  call void %456({ ptr, i160 } %124, ptr nocapture nofree nonnull readonly align 8 %411, ptr nocapture nofree writeonly %454) #49
  %457 = load ptr, ptr %result.i20.i908, align 8
  %458 = load ptr, ptr %457, align 8
  %459 = getelementptr i8, ptr %458, i64 72
  %460 = load ptr, ptr %459, align 8
  %result.i.i55.i911 = call { i64, i64 } %460(ptr nocapture nofree nonnull readonly align 8 %457) #41
  %461 = extractvalue { i64, i64 } %result.i.i55.i911, 0
  %462 = extractvalue { i64, i64 } %result.i.i55.i911, 1
  %463 = urem i64 20, %462
  %464 = icmp eq i64 %463, 0
  %465 = sub i64 %462, %463
  %466 = select i1 %464, i64 0, i64 %465
  %467 = add i64 %461, 20
  %468 = add i64 %467, %466
  %469 = load ptr, ptr %443, align 8
  %470 = load ptr, ptr %469, align 8
  %471 = getelementptr i8, ptr %470, i64 72
  %472 = load ptr, ptr %471, align 8
  %result.i1.i56.i912 = call { i64, i64 } %472(ptr nocapture nofree nonnull readonly align 8 %469) #41
  %473 = extractvalue { i64, i64 } %result.i1.i56.i912, 1
  %474 = urem i64 %468, %473
  %475 = icmp eq i64 %474, 0
  %476 = sub i64 %473, %474
  %477 = select i1 %475, i64 0, i64 %476
  %478 = getelementptr i8, ptr %result.i20.i908, i64 %468
  %479 = getelementptr i8, ptr %478, i64 %477
  %480 = getelementptr i8, ptr %470, i64 64
  %481 = load ptr, ptr %480, align 8
  call void %481({ ptr, i160 } %243, ptr nocapture nofree nonnull readonly align 8 %469, ptr nocapture nofree writeonly %479) #49
  %482 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %483 = getelementptr inbounds i8, ptr %result.i20.i908, i64 16
  store i32 %245, ptr %483, align 8
  store ptr @Entry, ptr %382, align 8
  %484 = ptrtoint ptr %result.i20.i908 to i64
  store i64 %484, ptr %384, align 4
  %.sroa_idx28.i913 = getelementptr i8, ptr %382, i64 24
  store i32 10, ptr %.sroa_idx28.i913, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit

485:                                              ; preds = %._crit_edge.i901, %356, %387
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %486 = load i32, ptr %109, align 4
  %487 = load i32, ptr %83, align 8
  %.not.i = icmp slt i32 %486, %487
  br i1 %.not.i, label %._crit_edge.i, label %488

488:                                              ; preds = %485
  %489 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %490 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %491 = load ptr, ptr %84, align 8
  %492 = load ptr, ptr %85, align 8
  %493 = shl i32 %487, 1
  %spec.select.i929 = call i32 @llvm.smax.i32(i32 %493, i32 noundef 16) #37
  store i32 %spec.select.i929, ptr %83, align 8
  %494 = zext nneg i32 %spec.select.i929 to i64
  %495 = shl nuw nsw i64 %494, 5
  %result.i.i930 = call noalias ptr @bump_malloc_inner(i64 noundef %495, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i930, ptr %84, align 8
  %result.i1.i = call noalias ptr @bump_malloc_inner(i64 noundef %495, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i, ptr %85, align 8
  store i32 0, ptr %109, align 4
  %496 = icmp sgt i32 %487, 0
  br i1 %496, label %.lr.ph.i, label %._crit_edge.i

.lr.ph.i:                                         ; preds = %488, %._crit_edge.i1808
  %.045.i = phi i32 [ %553, %._crit_edge.i1808 ], [ 0, %488 ]
  %497 = zext nneg i32 %.045.i to i64
  %498 = shl nuw nsw i64 %497, 5
  %499 = getelementptr i8, ptr %491, i64 %498
  %500 = load ptr, ptr %499, align 8
  %501 = icmp ne ptr %500, @nil_typ
  %502 = icmp ne ptr %500, null
  %.not16.i = and i1 %501, %502
  br i1 %.not16.i, label %503, label %._crit_edge.i1808

503:                                              ; preds = %.lr.ph.i
  %504 = getelementptr i8, ptr %499, i64 8
  %505 = load i64, ptr %504, align 4
  %.sroa_idx.i1809 = getelementptr i8, ptr %499, i64 16
  %506 = load i64, ptr %.sroa_idx.i1809, align 4
  %hash_coef_ptr.i.i3.i1810 = getelementptr i8, ptr %500, i64 8
  %tbl_size_ptr.i.i4.i1811 = getelementptr i8, ptr %500, i64 16
  %offset_tbl_ptr.i.i5.i1812 = getelementptr i8, ptr %500, i64 40
  %507 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %48)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %49)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %50)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %51)
  %hash_coef.i.i17.i = load i64, ptr %hash_coef_ptr.i.i3.i1810, align 4, !noalias !23
  %tbl_size.i.i18.i = load i64, ptr %tbl_size_ptr.i.i4.i1811, align 4, !noalias !23
  %offset_tbl.i.i19.i = load ptr, ptr %offset_tbl_ptr.i.i5.i1812, align 8, !noalias !23
  %product.i.i.i20.i = mul i64 %hash_coef.i.i17.i, 4015701072841558310
  %shifted.i.i.i21.i = lshr i64 %product.i.i.i20.i, 32
  %xored.i.i.i22.i = xor i64 %shifted.i.i.i21.i, %product.i.i.i20.i
  %hash.i.i.i23.i = and i64 %xored.i.i.i22.i, %tbl_size.i.i18.i
  %offset_ptr.i.i24.i = getelementptr i32, ptr %offset_tbl.i.i19.i, i64 %hash.i.i.i23.i
  %offset.i.i39.i = load i32, ptr %offset_ptr.i.i24.i, align 4, !noalias !180
  %508 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %509 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %510 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %511

511:                                              ; preds = %.cont.i2337, %503
  %.0308.i2320 = phi i32 [ 0, %503 ], [ %544, %.cont.i2337 ]
  %.070307.i2321 = phi i1 [ true, %503 ], [ %545, %.cont.i2337 ]
  %.sroa.0.0306.i2322 = phi ptr [ %500, %503 ], [ %534, %.cont.i2337 ]
  %.sroa.6.0305.i2323.in = phi i64 [ %505, %503 ], [ %536, %.cont.i2337 ]
  %.sroa.12.0304.i2324.in = phi i64 [ %506, %503 ], [ %537, %.cont.i2337 ]
  %.sroa.17.0303.i2325 = phi i32 [ %offset.i.i39.i, %503 ], [ %offset.i.i71.i2351, %.cont.i2337 ]
  %.sroa.12.0304.i2324 = inttoptr i64 %.sroa.12.0304.i2324.in to ptr
  %.sroa.6.0305.i2323 = inttoptr i64 %.sroa.6.0305.i2323.in to ptr
  %512 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2322, 0
  %513 = insertvalue { ptr, ptr, ptr, i32 } %512, ptr %.sroa.6.0305.i2323, 1
  %514 = insertvalue { ptr, ptr, ptr, i32 } %513, ptr %.sroa.12.0304.i2324, 2
  %515 = insertvalue { ptr, ptr, ptr, i32 } %514, i32 %.sroa.17.0303.i2325, 3
  %516 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2322)
  %517 = sext i32 %.sroa.17.0303.i2325 to i64
  %518 = getelementptr ptr, ptr %.sroa.0.0306.i2322, i64 %517
  %519 = getelementptr i8, ptr %518, i64 64
  %520 = load ptr, ptr %519, align 8
  %result.i43.i2326 = call ptr %520({ ptr, ptr, ptr, i32 } %515, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %521 = call i32 %result.i43.i2326({ ptr, ptr, ptr, i32 } %515, { ptr, ptr, ptr, i32 } %515, ptr nonnull align 8 %2) #42
  %..i2327 = select i1 %.070307.i2321, ptr %48, ptr %50
  %.184.i2328 = select i1 %.070307.i2321, i64 104, i64 112
  %.185.i2329 = select i1 %.070307.i2321, ptr %49, ptr %51
  %.186.i2330 = select i1 %.070307.i2321, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2327, align 8
  %522 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2327)
  %523 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2328
  %524 = load ptr, ptr %523, align 8
  store ptr @i32_typ, ptr %.185.i2329, align 8
  %result.i44.i2331 = call ptr %524({ ptr, ptr, ptr, i32 } %117, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2329) #45
  %525 = call i32 %result.i44.i2331({ ptr, ptr, ptr, i32 } %117, { ptr, ptr, ptr, i32 } %117, ptr nonnull align 8 dereferenceable(8) %..i2327, i32 %521) #42
  %526 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %527 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2330
  %528 = load ptr, ptr %527, align 8
  %529 = load ptr, ptr %528, align 8
  %530 = call { ptr } %529(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i2332 = extractvalue { ptr } %530, 0
  %531 = sext i32 %525 to i64
  %532 = shl nsw i64 %531, 5
  %533 = getelementptr i8, ptr %.fca.0.extract53.i2332, i64 %532
  %534 = load ptr, ptr %533, align 8
  %535 = getelementptr i8, ptr %533, i64 8
  %536 = load i64, ptr %535, align 4
  %.sroa_idx.i2333 = getelementptr i8, ptr %533, i64 16
  %537 = load i64, ptr %.sroa_idx.i2333, align 4
  %538 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %539 = call { ptr } %529(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i = extractvalue { ptr } %539, 0
  %540 = getelementptr i8, ptr %.fca.0.extract51.i, i64 %532
  store ptr %.sroa.0.0306.i2322, ptr %540, align 8
  %541 = getelementptr i8, ptr %540, i64 8
  store i64 %.sroa.6.0305.i2323.in, ptr %541, align 4
  %.sroa_idx100.i2334 = getelementptr i8, ptr %540, i64 16
  store i64 %.sroa.12.0304.i2324.in, ptr %.sroa_idx100.i2334, align 4
  %.sroa_idx101.i2335 = getelementptr i8, ptr %540, i64 24
  store i32 %.sroa.17.0303.i2325, ptr %.sroa_idx101.i2335, align 4
  %542 = icmp ne ptr %534, @nil_typ
  %543 = icmp ne ptr %534, null
  %.not90.i2336 = and i1 %542, %543
  br i1 %.not90.i2336, label %.cont.i2337, label %549

.cont.i2337:                                      ; preds = %511
  %544 = add nuw nsw i32 %.0308.i2320, 1
  %545 = xor i1 %.070307.i2321, true
  %hash_coef_ptr.i.i60.i2340 = getelementptr i8, ptr %534, i64 8
  %tbl_size_ptr.i.i61.i2341 = getelementptr i8, ptr %534, i64 16
  %offset_tbl_ptr.i.i62.i2342 = getelementptr i8, ptr %534, i64 40
  %hash_coef.i.i63.i2343 = load i64, ptr %hash_coef_ptr.i.i60.i2340, align 4
  %tbl_size.i.i64.i2344 = load i64, ptr %tbl_size_ptr.i.i61.i2341, align 4
  %offset_tbl.i.i65.i2345 = load ptr, ptr %offset_tbl_ptr.i.i62.i2342, align 8
  %product.i.i.i66.i2346 = mul i64 %hash_coef.i.i63.i2343, 4015701072841558310
  %shifted.i.i.i67.i2347 = lshr i64 %product.i.i.i66.i2346, 32
  %xored.i.i.i68.i2348 = xor i64 %shifted.i.i.i67.i2347, %product.i.i.i66.i2346
  %hash.i.i.i69.i2349 = and i64 %xored.i.i.i68.i2348, %tbl_size.i.i64.i2344
  %offset_ptr.i.i70.i2350 = getelementptr i32, ptr %offset_tbl.i.i65.i2345, i64 %hash.i.i.i69.i2349
  %offset.i.i71.i2351 = load i32, ptr %offset_ptr.i.i70.i2350, align 4
  %546 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %547 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %548 = icmp ult i32 %.0308.i2320, 99
  br i1 %548, label %511, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2353

549:                                              ; preds = %511
  %550 = load i32, ptr %109, align 4
  %551 = add i32 %550, 1
  %552 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %551, ptr %109, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2353

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2353: ; preds = %.cont.i2337, %549
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %48)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %49)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %50)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %51)
  br label %._crit_edge.i1808

._crit_edge.i1808:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2353, %.lr.ph.i
  %553 = add nuw nsw i32 %.045.i, 1
  %554 = icmp slt i32 %553, %487
  br i1 %554, label %.lr.ph.i, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit: ; preds = %._crit_edge.i1808, %._crit_edge.i1838
  %.045.i1836 = phi i32 [ %611, %._crit_edge.i1838 ], [ 0, %._crit_edge.i1808 ]
  %555 = zext nneg i32 %.045.i1836 to i64
  %556 = shl nuw nsw i64 %555, 5
  %557 = getelementptr i8, ptr %492, i64 %556
  %558 = load ptr, ptr %557, align 8
  %559 = icmp ne ptr %558, @nil_typ
  %560 = icmp ne ptr %558, null
  %.not16.i1837 = and i1 %559, %560
  br i1 %.not16.i1837, label %561, label %._crit_edge.i1838

561:                                              ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit
  %562 = getelementptr i8, ptr %557, i64 8
  %563 = load i64, ptr %562, align 4
  %.sroa_idx.i1839 = getelementptr i8, ptr %557, i64 16
  %564 = load i64, ptr %.sroa_idx.i1839, align 4
  %hash_coef_ptr.i.i3.i1840 = getelementptr i8, ptr %558, i64 8
  %tbl_size_ptr.i.i4.i1841 = getelementptr i8, ptr %558, i64 16
  %offset_tbl_ptr.i.i5.i1842 = getelementptr i8, ptr %558, i64 40
  %565 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %44)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %45)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %46)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %47)
  %hash_coef.i.i17.i2371 = load i64, ptr %hash_coef_ptr.i.i3.i1840, align 4, !noalias !23
  %tbl_size.i.i18.i2372 = load i64, ptr %tbl_size_ptr.i.i4.i1841, align 4, !noalias !23
  %offset_tbl.i.i19.i2373 = load ptr, ptr %offset_tbl_ptr.i.i5.i1842, align 8, !noalias !23
  %product.i.i.i20.i2374 = mul i64 %hash_coef.i.i17.i2371, 4015701072841558310
  %shifted.i.i.i21.i2375 = lshr i64 %product.i.i.i20.i2374, 32
  %xored.i.i.i22.i2376 = xor i64 %shifted.i.i.i21.i2375, %product.i.i.i20.i2374
  %hash.i.i.i23.i2377 = and i64 %xored.i.i.i22.i2376, %tbl_size.i.i18.i2372
  %offset_ptr.i.i24.i2378 = getelementptr i32, ptr %offset_tbl.i.i19.i2373, i64 %hash.i.i.i23.i2377
  %offset.i.i39.i2379 = load i32, ptr %offset_ptr.i.i24.i2378, align 4, !noalias !183
  %566 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %567 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %568 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %569

569:                                              ; preds = %.cont.i2402, %561
  %.0308.i2380 = phi i32 [ 0, %561 ], [ %602, %.cont.i2402 ]
  %.070307.i2381 = phi i1 [ true, %561 ], [ %603, %.cont.i2402 ]
  %.sroa.0.0306.i2382 = phi ptr [ %558, %561 ], [ %592, %.cont.i2402 ]
  %.sroa.6.0305.i2383.in = phi i64 [ %563, %561 ], [ %594, %.cont.i2402 ]
  %.sroa.12.0304.i2384.in = phi i64 [ %564, %561 ], [ %595, %.cont.i2402 ]
  %.sroa.17.0303.i2385 = phi i32 [ %offset.i.i39.i2379, %561 ], [ %offset.i.i71.i2416, %.cont.i2402 ]
  %.sroa.12.0304.i2384 = inttoptr i64 %.sroa.12.0304.i2384.in to ptr
  %.sroa.6.0305.i2383 = inttoptr i64 %.sroa.6.0305.i2383.in to ptr
  %570 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2382, 0
  %571 = insertvalue { ptr, ptr, ptr, i32 } %570, ptr %.sroa.6.0305.i2383, 1
  %572 = insertvalue { ptr, ptr, ptr, i32 } %571, ptr %.sroa.12.0304.i2384, 2
  %573 = insertvalue { ptr, ptr, ptr, i32 } %572, i32 %.sroa.17.0303.i2385, 3
  %574 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2382)
  %575 = sext i32 %.sroa.17.0303.i2385 to i64
  %576 = getelementptr ptr, ptr %.sroa.0.0306.i2382, i64 %575
  %577 = getelementptr i8, ptr %576, i64 64
  %578 = load ptr, ptr %577, align 8
  %result.i43.i2386 = call ptr %578({ ptr, ptr, ptr, i32 } %573, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %579 = call i32 %result.i43.i2386({ ptr, ptr, ptr, i32 } %573, { ptr, ptr, ptr, i32 } %573, ptr nonnull align 8 %2) #42
  %..i2387 = select i1 %.070307.i2381, ptr %44, ptr %46
  %.184.i2388 = select i1 %.070307.i2381, i64 104, i64 112
  %.185.i2389 = select i1 %.070307.i2381, ptr %45, ptr %47
  %.186.i2390 = select i1 %.070307.i2381, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2387, align 8
  %580 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2387)
  %581 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2388
  %582 = load ptr, ptr %581, align 8
  store ptr @i32_typ, ptr %.185.i2389, align 8
  %result.i44.i2391 = call ptr %582({ ptr, ptr, ptr, i32 } %117, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2389) #45
  %583 = call i32 %result.i44.i2391({ ptr, ptr, ptr, i32 } %117, { ptr, ptr, ptr, i32 } %117, ptr nonnull align 8 dereferenceable(8) %..i2387, i32 %579) #42
  %584 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %585 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2390
  %586 = load ptr, ptr %585, align 8
  %587 = load ptr, ptr %586, align 8
  %588 = call { ptr } %587(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i2392 = extractvalue { ptr } %588, 0
  %589 = sext i32 %583 to i64
  %590 = shl nsw i64 %589, 5
  %591 = getelementptr i8, ptr %.fca.0.extract53.i2392, i64 %590
  %592 = load ptr, ptr %591, align 8
  %593 = getelementptr i8, ptr %591, i64 8
  %594 = load i64, ptr %593, align 4
  %.sroa_idx.i2393 = getelementptr i8, ptr %591, i64 16
  %595 = load i64, ptr %.sroa_idx.i2393, align 4
  %596 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %597 = call { ptr } %587(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i2394 = extractvalue { ptr } %597, 0
  %598 = getelementptr i8, ptr %.fca.0.extract51.i2394, i64 %590
  store ptr %.sroa.0.0306.i2382, ptr %598, align 8
  %599 = getelementptr i8, ptr %598, i64 8
  store i64 %.sroa.6.0305.i2383.in, ptr %599, align 4
  %.sroa_idx100.i2395 = getelementptr i8, ptr %598, i64 16
  store i64 %.sroa.12.0304.i2384.in, ptr %.sroa_idx100.i2395, align 4
  %.sroa_idx101.i2396 = getelementptr i8, ptr %598, i64 24
  store i32 %.sroa.17.0303.i2385, ptr %.sroa_idx101.i2396, align 4
  %600 = icmp ne ptr %592, @nil_typ
  %601 = icmp ne ptr %592, null
  %.not90.i2397 = and i1 %600, %601
  br i1 %.not90.i2397, label %.cont.i2402, label %607

.cont.i2402:                                      ; preds = %569
  %602 = add nuw nsw i32 %.0308.i2380, 1
  %603 = xor i1 %.070307.i2381, true
  %hash_coef_ptr.i.i60.i2405 = getelementptr i8, ptr %592, i64 8
  %tbl_size_ptr.i.i61.i2406 = getelementptr i8, ptr %592, i64 16
  %offset_tbl_ptr.i.i62.i2407 = getelementptr i8, ptr %592, i64 40
  %hash_coef.i.i63.i2408 = load i64, ptr %hash_coef_ptr.i.i60.i2405, align 4
  %tbl_size.i.i64.i2409 = load i64, ptr %tbl_size_ptr.i.i61.i2406, align 4
  %offset_tbl.i.i65.i2410 = load ptr, ptr %offset_tbl_ptr.i.i62.i2407, align 8
  %product.i.i.i66.i2411 = mul i64 %hash_coef.i.i63.i2408, 4015701072841558310
  %shifted.i.i.i67.i2412 = lshr i64 %product.i.i.i66.i2411, 32
  %xored.i.i.i68.i2413 = xor i64 %shifted.i.i.i67.i2412, %product.i.i.i66.i2411
  %hash.i.i.i69.i2414 = and i64 %xored.i.i.i68.i2413, %tbl_size.i.i64.i2409
  %offset_ptr.i.i70.i2415 = getelementptr i32, ptr %offset_tbl.i.i65.i2410, i64 %hash.i.i.i69.i2414
  %offset.i.i71.i2416 = load i32, ptr %offset_ptr.i.i70.i2415, align 4
  %604 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %605 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %606 = icmp ult i32 %.0308.i2380, 99
  br i1 %606, label %569, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2425

607:                                              ; preds = %569
  %608 = load i32, ptr %109, align 4
  %609 = add i32 %608, 1
  %610 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %609, ptr %109, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2425

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2425: ; preds = %.cont.i2402, %607
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %44)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %45)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %46)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %47)
  br label %._crit_edge.i1838

._crit_edge.i1838:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2425, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit
  %611 = add nuw nsw i32 %.045.i1836, 1
  %612 = icmp slt i32 %611, %487
  br i1 %612, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %._crit_edge.i1838, %488, %485
  %613 = load ptr, ptr %result.i8, align 8
  %614 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %615 = load ptr, ptr %76, align 8
  %616 = load ptr, ptr %613, align 8
  %617 = getelementptr i8, ptr %616, i64 72
  %618 = load ptr, ptr %617, align 8
  %result.i.i.i = call { i64, i64 } %618(ptr nocapture nofree nonnull readonly align 8 %613) #41
  %619 = extractvalue { i64, i64 } %result.i.i.i, 0
  %620 = extractvalue { i64, i64 } %result.i.i.i, 1
  %621 = urem i64 20, %620
  %622 = icmp eq i64 %621, 0
  %623 = sub i64 %620, %621
  %624 = select i1 %622, i64 0, i64 %623
  %625 = add i64 %619, 20
  %626 = add i64 %625, %624
  %627 = load ptr, ptr %615, align 8
  %628 = getelementptr i8, ptr %627, i64 72
  %629 = load ptr, ptr %628, align 8
  %result.i1.i.i = call { i64, i64 } %629(ptr nocapture nofree nonnull readonly align 8 %615) #41
  %630 = extractvalue { i64, i64 } %result.i1.i.i, 0
  %631 = extractvalue { i64, i64 } %result.i1.i.i, 1
  %632 = call i64 @llvm.umax.i64(i64 %620, i64 %631) #38
  %633 = call i64 @llvm.umax.i64(i64 %632, i64 noundef 8) #38, !range !16
  %634 = urem i64 %626, %631
  %635 = icmp eq i64 %634, 0
  %636 = sub i64 %631, %634
  %637 = select i1 %635, i64 0, i64 %636
  %638 = add i64 %630, %626
  %639 = add i64 %638, %637
  %640 = urem i64 %639, %633
  %641 = icmp eq i64 %640, 0
  %642 = sub i64 %633, %640
  %643 = select i1 %641, i64 0, i64 %642
  %644 = add i64 %643, %639
  %result.i16.i = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %644, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %613, ptr %result.i16.i, align 8
  %645 = getelementptr inbounds i8, ptr %result.i16.i, i64 8
  store ptr %615, ptr %645, align 8
  %646 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i16.i)
  %647 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %648 = load ptr, ptr %613, align 8
  %649 = getelementptr i8, ptr %648, i64 72
  %650 = load ptr, ptr %649, align 8
  %result.i.i110.i = call { i64, i64 } %650(ptr nocapture nofree nonnull readonly align 8 %613) #41
  %651 = extractvalue { i64, i64 } %result.i.i110.i, 1
  %652 = urem i64 20, %651
  %653 = icmp eq i64 %652, 0
  %reass.sub3405 = sub i64 %651, %652
  %654 = add i64 %reass.sub3405, 20
  %655 = select i1 %653, i64 20, i64 %654
  %656 = getelementptr i8, ptr %result.i16.i, i64 %655
  %657 = getelementptr i8, ptr %648, i64 64
  %658 = load ptr, ptr %657, align 8
  call void %658({ ptr, i160 } %124, ptr nocapture nofree nonnull readonly align 8 %613, ptr nocapture nofree writeonly %656) #49
  %659 = load ptr, ptr %result.i16.i, align 8
  %660 = load ptr, ptr %659, align 8
  %661 = getelementptr i8, ptr %660, i64 72
  %662 = load ptr, ptr %661, align 8
  %result.i.i111.i = call { i64, i64 } %662(ptr nocapture nofree nonnull readonly align 8 %659) #41
  %663 = extractvalue { i64, i64 } %result.i.i111.i, 0
  %664 = extractvalue { i64, i64 } %result.i.i111.i, 1
  %665 = urem i64 20, %664
  %666 = icmp eq i64 %665, 0
  %667 = sub i64 %664, %665
  %668 = select i1 %666, i64 0, i64 %667
  %669 = add i64 %663, 20
  %670 = add i64 %669, %668
  %671 = load ptr, ptr %645, align 8
  %672 = load ptr, ptr %671, align 8
  %673 = getelementptr i8, ptr %672, i64 72
  %674 = load ptr, ptr %673, align 8
  %result.i1.i112.i = call { i64, i64 } %674(ptr nocapture nofree nonnull readonly align 8 %671) #41
  %675 = extractvalue { i64, i64 } %result.i1.i112.i, 1
  %676 = urem i64 %670, %675
  %677 = icmp eq i64 %676, 0
  %678 = sub i64 %675, %676
  %679 = select i1 %677, i64 0, i64 %678
  %680 = getelementptr i8, ptr %result.i16.i, i64 %670
  %681 = getelementptr i8, ptr %680, i64 %679
  %682 = getelementptr i8, ptr %672, i64 64
  %683 = load ptr, ptr %682, align 8
  call void %683({ ptr, i160 } %243, ptr nocapture nofree nonnull readonly align 8 %671, ptr nocapture nofree writeonly %681) #49
  %684 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %685 = getelementptr inbounds i8, ptr %result.i16.i, i64 16
  store i32 %245, ptr %685, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %64)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %65)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %66)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %67)
  %686 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %687 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %688 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %689

689:                                              ; preds = %.cont.i, %._crit_edge.i
  %.0308.i = phi i32 [ 0, %._crit_edge.i ], [ %724, %.cont.i ]
  %.070307.i = phi i1 [ true, %._crit_edge.i ], [ %725, %.cont.i ]
  %.sroa.0.0306.i = phi ptr [ @Entry, %._crit_edge.i ], [ %712, %.cont.i ]
  %.sroa.6.0305.i = phi ptr [ %result.i16.i, %._crit_edge.i ], [ %.sroa.speculated111.i, %.cont.i ]
  %.sroa.12.0304.i = phi ptr [ undef, %._crit_edge.i ], [ %.sroa.speculated105.i, %.cont.i ]
  %.sroa.17.0303.i = phi i32 [ 10, %._crit_edge.i ], [ %offset.i.i71.i, %.cont.i ]
  %690 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i, 0
  %691 = insertvalue { ptr, ptr, ptr, i32 } %690, ptr %.sroa.6.0305.i, 1
  %692 = insertvalue { ptr, ptr, ptr, i32 } %691, ptr %.sroa.12.0304.i, 2
  %693 = insertvalue { ptr, ptr, ptr, i32 } %692, i32 %.sroa.17.0303.i, 3
  %694 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i)
  %695 = sext i32 %.sroa.17.0303.i to i64
  %696 = getelementptr ptr, ptr %.sroa.0.0306.i, i64 %695
  %697 = getelementptr i8, ptr %696, i64 64
  %698 = load ptr, ptr %697, align 8
  %result.i43.i = call ptr %698({ ptr, ptr, ptr, i32 } %693, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %699 = call i32 %result.i43.i({ ptr, ptr, ptr, i32 } %693, { ptr, ptr, ptr, i32 } %693, ptr nonnull align 8 %2) #42
  %..i = select i1 %.070307.i, ptr %64, ptr %66
  %.184.i = select i1 %.070307.i, i64 104, i64 112
  %.185.i = select i1 %.070307.i, ptr %65, ptr %67
  %.186.i = select i1 %.070307.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i, align 8
  %700 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i)
  %701 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i
  %702 = load ptr, ptr %701, align 8
  store ptr @i32_typ, ptr %.185.i, align 8
  %result.i44.i = call ptr %702({ ptr, ptr, ptr, i32 } %116, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i) #45
  %703 = call i32 %result.i44.i({ ptr, ptr, ptr, i32 } %116, { ptr, ptr, ptr, i32 } %116, ptr nonnull align 8 dereferenceable(8) %..i, i32 %699) #42
  %704 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %705 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i
  %706 = load ptr, ptr %705, align 8
  %707 = load ptr, ptr %706, align 8
  %708 = call { ptr } %707(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i = extractvalue { ptr } %708, 0
  %709 = sext i32 %703 to i64
  %710 = shl nsw i64 %709, 5
  %711 = getelementptr i8, ptr %.fca.0.extract53.i, i64 %710
  %712 = load ptr, ptr %711, align 8
  %713 = getelementptr i8, ptr %711, i64 8
  %714 = load i64, ptr %713, align 4
  %.sroa_idx.i948 = getelementptr i8, ptr %711, i64 16
  %715 = load i64, ptr %.sroa_idx.i948, align 4
  %716 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %717 = call { ptr } %707(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i949 = extractvalue { ptr } %717, 0
  %718 = getelementptr i8, ptr %.fca.0.extract51.i949, i64 %710
  store ptr %.sroa.0.0306.i, ptr %718, align 8
  %719 = getelementptr i8, ptr %718, i64 8
  %720 = ptrtoint ptr %.sroa.6.0305.i to i64
  %721 = ptrtoint ptr %.sroa.12.0304.i to i64
  store i64 %720, ptr %719, align 4
  %.sroa_idx100.i = getelementptr i8, ptr %718, i64 16
  store i64 %721, ptr %.sroa_idx100.i, align 4
  %.sroa_idx101.i = getelementptr i8, ptr %718, i64 24
  store i32 %.sroa.17.0303.i, ptr %.sroa_idx101.i, align 4
  %722 = icmp ne ptr %712, @nil_typ
  %723 = icmp ne ptr %712, null
  %.not90.i = and i1 %722, %723
  br i1 %.not90.i, label %.cont.i, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit

.cont.i:                                          ; preds = %689
  %724 = add nuw nsw i32 %.0308.i, 1
  %725 = xor i1 %.070307.i, true
  %.sroa.speculated111.i = inttoptr i64 %714 to ptr
  %.sroa.speculated105.i = inttoptr i64 %715 to ptr
  %hash_coef_ptr.i.i60.i = getelementptr i8, ptr %712, i64 8
  %tbl_size_ptr.i.i61.i = getelementptr i8, ptr %712, i64 16
  %offset_tbl_ptr.i.i62.i = getelementptr i8, ptr %712, i64 40
  %hash_coef.i.i63.i = load i64, ptr %hash_coef_ptr.i.i60.i, align 4
  %tbl_size.i.i64.i = load i64, ptr %tbl_size_ptr.i.i61.i, align 4
  %offset_tbl.i.i65.i = load ptr, ptr %offset_tbl_ptr.i.i62.i, align 8
  %product.i.i.i66.i = mul i64 %hash_coef.i.i63.i, 4015701072841558310
  %shifted.i.i.i67.i = lshr i64 %product.i.i.i66.i, 32
  %xored.i.i.i68.i = xor i64 %shifted.i.i.i67.i, %product.i.i.i66.i
  %hash.i.i.i69.i = and i64 %xored.i.i.i68.i, %tbl_size.i.i64.i
  %offset_ptr.i.i70.i = getelementptr i32, ptr %offset_tbl.i.i65.i, i64 %hash.i.i.i69.i
  %offset.i.i71.i = load i32, ptr %offset_ptr.i.i70.i, align 4
  %726 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %727 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %728 = icmp ult i32 %.0308.i, 99
  br i1 %728, label %689, label %732

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit: ; preds = %689
  %729 = load i32, ptr %109, align 4
  %730 = add i32 %729, 1
  %731 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %730, ptr %109, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %64)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %65)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %66)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %67)
  br label %CuckooMap_insert_keyK_valueV.exit

732:                                              ; preds = %.cont.i
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %64)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %65)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %66)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %67)
  %733 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %734 = load ptr, ptr %84, align 8
  %735 = load ptr, ptr %85, align 8
  %736 = load i32, ptr %83, align 8
  %737 = shl i32 %736, 1
  %spec.select.i966 = call i32 @llvm.smax.i32(i32 %737, i32 noundef 16) #37
  store i32 %spec.select.i966, ptr %83, align 8
  %738 = zext nneg i32 %spec.select.i966 to i64
  %739 = shl nuw nsw i64 %738, 5
  %result.i.i967 = call noalias ptr @bump_malloc_inner(i64 noundef %739, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i967, ptr %84, align 8
  %result.i1.i968 = call noalias ptr @bump_malloc_inner(i64 noundef %739, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i968, ptr %85, align 8
  store i32 0, ptr %109, align 4
  %740 = icmp sgt i32 %736, 0
  br i1 %740, label %.lr.ph.i1858, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1891.thread

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1891.thread: ; preds = %732
  %741 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1926

.lr.ph.i1858:                                     ; preds = %732, %._crit_edge.i1873
  %.045.i1871 = phi i32 [ %798, %._crit_edge.i1873 ], [ 0, %732 ]
  %742 = zext nneg i32 %.045.i1871 to i64
  %743 = shl nuw nsw i64 %742, 5
  %744 = getelementptr i8, ptr %734, i64 %743
  %745 = load ptr, ptr %744, align 8
  %746 = icmp ne ptr %745, @nil_typ
  %747 = icmp ne ptr %745, null
  %.not16.i1872 = and i1 %746, %747
  br i1 %.not16.i1872, label %748, label %._crit_edge.i1873

748:                                              ; preds = %.lr.ph.i1858
  %749 = getelementptr i8, ptr %744, i64 8
  %750 = load i64, ptr %749, align 4
  %.sroa_idx.i1874 = getelementptr i8, ptr %744, i64 16
  %751 = load i64, ptr %.sroa_idx.i1874, align 4
  %hash_coef_ptr.i.i3.i1875 = getelementptr i8, ptr %745, i64 8
  %tbl_size_ptr.i.i4.i1876 = getelementptr i8, ptr %745, i64 16
  %offset_tbl_ptr.i.i5.i1877 = getelementptr i8, ptr %745, i64 40
  %752 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %40)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %41)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %42)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %43)
  %hash_coef.i.i17.i2443 = load i64, ptr %hash_coef_ptr.i.i3.i1875, align 4, !noalias !23
  %tbl_size.i.i18.i2444 = load i64, ptr %tbl_size_ptr.i.i4.i1876, align 4, !noalias !23
  %offset_tbl.i.i19.i2445 = load ptr, ptr %offset_tbl_ptr.i.i5.i1877, align 8, !noalias !23
  %product.i.i.i20.i2446 = mul i64 %hash_coef.i.i17.i2443, 4015701072841558310
  %shifted.i.i.i21.i2447 = lshr i64 %product.i.i.i20.i2446, 32
  %xored.i.i.i22.i2448 = xor i64 %shifted.i.i.i21.i2447, %product.i.i.i20.i2446
  %hash.i.i.i23.i2449 = and i64 %xored.i.i.i22.i2448, %tbl_size.i.i18.i2444
  %offset_ptr.i.i24.i2450 = getelementptr i32, ptr %offset_tbl.i.i19.i2445, i64 %hash.i.i.i23.i2449
  %offset.i.i39.i2451 = load i32, ptr %offset_ptr.i.i24.i2450, align 4, !noalias !186
  %753 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %754 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %755 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %756

756:                                              ; preds = %.cont.i2474, %748
  %.0308.i2452 = phi i32 [ 0, %748 ], [ %789, %.cont.i2474 ]
  %.070307.i2453 = phi i1 [ true, %748 ], [ %790, %.cont.i2474 ]
  %.sroa.0.0306.i2454 = phi ptr [ %745, %748 ], [ %779, %.cont.i2474 ]
  %.sroa.6.0305.i2455.in = phi i64 [ %750, %748 ], [ %781, %.cont.i2474 ]
  %.sroa.12.0304.i2456.in = phi i64 [ %751, %748 ], [ %782, %.cont.i2474 ]
  %.sroa.17.0303.i2457 = phi i32 [ %offset.i.i39.i2451, %748 ], [ %offset.i.i71.i2488, %.cont.i2474 ]
  %.sroa.12.0304.i2456 = inttoptr i64 %.sroa.12.0304.i2456.in to ptr
  %.sroa.6.0305.i2455 = inttoptr i64 %.sroa.6.0305.i2455.in to ptr
  %757 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2454, 0
  %758 = insertvalue { ptr, ptr, ptr, i32 } %757, ptr %.sroa.6.0305.i2455, 1
  %759 = insertvalue { ptr, ptr, ptr, i32 } %758, ptr %.sroa.12.0304.i2456, 2
  %760 = insertvalue { ptr, ptr, ptr, i32 } %759, i32 %.sroa.17.0303.i2457, 3
  %761 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2454)
  %762 = sext i32 %.sroa.17.0303.i2457 to i64
  %763 = getelementptr ptr, ptr %.sroa.0.0306.i2454, i64 %762
  %764 = getelementptr i8, ptr %763, i64 64
  %765 = load ptr, ptr %764, align 8
  %result.i43.i2458 = call ptr %765({ ptr, ptr, ptr, i32 } %760, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %766 = call i32 %result.i43.i2458({ ptr, ptr, ptr, i32 } %760, { ptr, ptr, ptr, i32 } %760, ptr nonnull align 8 %2) #42
  %..i2459 = select i1 %.070307.i2453, ptr %40, ptr %42
  %.184.i2460 = select i1 %.070307.i2453, i64 104, i64 112
  %.185.i2461 = select i1 %.070307.i2453, ptr %41, ptr %43
  %.186.i2462 = select i1 %.070307.i2453, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2459, align 8
  %767 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2459)
  %768 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2460
  %769 = load ptr, ptr %768, align 8
  store ptr @i32_typ, ptr %.185.i2461, align 8
  %result.i44.i2463 = call ptr %769({ ptr, ptr, ptr, i32 } %117, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2461) #45
  %770 = call i32 %result.i44.i2463({ ptr, ptr, ptr, i32 } %117, { ptr, ptr, ptr, i32 } %117, ptr nonnull align 8 dereferenceable(8) %..i2459, i32 %766) #42
  %771 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %772 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2462
  %773 = load ptr, ptr %772, align 8
  %774 = load ptr, ptr %773, align 8
  %775 = call { ptr } %774(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i2464 = extractvalue { ptr } %775, 0
  %776 = sext i32 %770 to i64
  %777 = shl nsw i64 %776, 5
  %778 = getelementptr i8, ptr %.fca.0.extract53.i2464, i64 %777
  %779 = load ptr, ptr %778, align 8
  %780 = getelementptr i8, ptr %778, i64 8
  %781 = load i64, ptr %780, align 4
  %.sroa_idx.i2465 = getelementptr i8, ptr %778, i64 16
  %782 = load i64, ptr %.sroa_idx.i2465, align 4
  %783 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %784 = call { ptr } %774(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i2466 = extractvalue { ptr } %784, 0
  %785 = getelementptr i8, ptr %.fca.0.extract51.i2466, i64 %777
  store ptr %.sroa.0.0306.i2454, ptr %785, align 8
  %786 = getelementptr i8, ptr %785, i64 8
  store i64 %.sroa.6.0305.i2455.in, ptr %786, align 4
  %.sroa_idx100.i2467 = getelementptr i8, ptr %785, i64 16
  store i64 %.sroa.12.0304.i2456.in, ptr %.sroa_idx100.i2467, align 4
  %.sroa_idx101.i2468 = getelementptr i8, ptr %785, i64 24
  store i32 %.sroa.17.0303.i2457, ptr %.sroa_idx101.i2468, align 4
  %787 = icmp ne ptr %779, @nil_typ
  %788 = icmp ne ptr %779, null
  %.not90.i2469 = and i1 %787, %788
  br i1 %.not90.i2469, label %.cont.i2474, label %794

.cont.i2474:                                      ; preds = %756
  %789 = add nuw nsw i32 %.0308.i2452, 1
  %790 = xor i1 %.070307.i2453, true
  %hash_coef_ptr.i.i60.i2477 = getelementptr i8, ptr %779, i64 8
  %tbl_size_ptr.i.i61.i2478 = getelementptr i8, ptr %779, i64 16
  %offset_tbl_ptr.i.i62.i2479 = getelementptr i8, ptr %779, i64 40
  %hash_coef.i.i63.i2480 = load i64, ptr %hash_coef_ptr.i.i60.i2477, align 4
  %tbl_size.i.i64.i2481 = load i64, ptr %tbl_size_ptr.i.i61.i2478, align 4
  %offset_tbl.i.i65.i2482 = load ptr, ptr %offset_tbl_ptr.i.i62.i2479, align 8
  %product.i.i.i66.i2483 = mul i64 %hash_coef.i.i63.i2480, 4015701072841558310
  %shifted.i.i.i67.i2484 = lshr i64 %product.i.i.i66.i2483, 32
  %xored.i.i.i68.i2485 = xor i64 %shifted.i.i.i67.i2484, %product.i.i.i66.i2483
  %hash.i.i.i69.i2486 = and i64 %xored.i.i.i68.i2485, %tbl_size.i.i64.i2481
  %offset_ptr.i.i70.i2487 = getelementptr i32, ptr %offset_tbl.i.i65.i2482, i64 %hash.i.i.i69.i2486
  %offset.i.i71.i2488 = load i32, ptr %offset_ptr.i.i70.i2487, align 4
  %791 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %792 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %793 = icmp ult i32 %.0308.i2452, 99
  br i1 %793, label %756, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2497

794:                                              ; preds = %756
  %795 = load i32, ptr %109, align 4
  %796 = add i32 %795, 1
  %797 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %796, ptr %109, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2497

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2497: ; preds = %.cont.i2474, %794
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %40)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %41)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %42)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %43)
  br label %._crit_edge.i1873

._crit_edge.i1873:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2497, %.lr.ph.i1858
  %798 = add nuw nsw i32 %.045.i1871, 1
  %799 = icmp slt i32 %798, %736
  br i1 %799, label %.lr.ph.i1858, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1891

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1891: ; preds = %._crit_edge.i1873
  %800 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %801

801:                                              ; preds = %._crit_edge.i1908, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1891
  %.045.i1906 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1891 ], [ %858, %._crit_edge.i1908 ]
  %802 = zext nneg i32 %.045.i1906 to i64
  %803 = shl nuw nsw i64 %802, 5
  %804 = getelementptr i8, ptr %735, i64 %803
  %805 = load ptr, ptr %804, align 8
  %806 = icmp ne ptr %805, @nil_typ
  %807 = icmp ne ptr %805, null
  %.not16.i1907 = and i1 %806, %807
  br i1 %.not16.i1907, label %808, label %._crit_edge.i1908

808:                                              ; preds = %801
  %809 = getelementptr i8, ptr %804, i64 8
  %810 = load i64, ptr %809, align 4
  %.sroa_idx.i1909 = getelementptr i8, ptr %804, i64 16
  %811 = load i64, ptr %.sroa_idx.i1909, align 4
  %hash_coef_ptr.i.i3.i1910 = getelementptr i8, ptr %805, i64 8
  %tbl_size_ptr.i.i4.i1911 = getelementptr i8, ptr %805, i64 16
  %offset_tbl_ptr.i.i5.i1912 = getelementptr i8, ptr %805, i64 40
  %812 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %36)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %37)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %38)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %39)
  %hash_coef.i.i17.i2515 = load i64, ptr %hash_coef_ptr.i.i3.i1910, align 4, !noalias !23
  %tbl_size.i.i18.i2516 = load i64, ptr %tbl_size_ptr.i.i4.i1911, align 4, !noalias !23
  %offset_tbl.i.i19.i2517 = load ptr, ptr %offset_tbl_ptr.i.i5.i1912, align 8, !noalias !23
  %product.i.i.i20.i2518 = mul i64 %hash_coef.i.i17.i2515, 4015701072841558310
  %shifted.i.i.i21.i2519 = lshr i64 %product.i.i.i20.i2518, 32
  %xored.i.i.i22.i2520 = xor i64 %shifted.i.i.i21.i2519, %product.i.i.i20.i2518
  %hash.i.i.i23.i2521 = and i64 %xored.i.i.i22.i2520, %tbl_size.i.i18.i2516
  %offset_ptr.i.i24.i2522 = getelementptr i32, ptr %offset_tbl.i.i19.i2517, i64 %hash.i.i.i23.i2521
  %offset.i.i39.i2523 = load i32, ptr %offset_ptr.i.i24.i2522, align 4, !noalias !189
  %813 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %814 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %815 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %816

816:                                              ; preds = %.cont.i2546, %808
  %.0308.i2524 = phi i32 [ 0, %808 ], [ %849, %.cont.i2546 ]
  %.070307.i2525 = phi i1 [ true, %808 ], [ %850, %.cont.i2546 ]
  %.sroa.0.0306.i2526 = phi ptr [ %805, %808 ], [ %839, %.cont.i2546 ]
  %.sroa.6.0305.i2527.in = phi i64 [ %810, %808 ], [ %841, %.cont.i2546 ]
  %.sroa.12.0304.i2528.in = phi i64 [ %811, %808 ], [ %842, %.cont.i2546 ]
  %.sroa.17.0303.i2529 = phi i32 [ %offset.i.i39.i2523, %808 ], [ %offset.i.i71.i2560, %.cont.i2546 ]
  %.sroa.12.0304.i2528 = inttoptr i64 %.sroa.12.0304.i2528.in to ptr
  %.sroa.6.0305.i2527 = inttoptr i64 %.sroa.6.0305.i2527.in to ptr
  %817 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2526, 0
  %818 = insertvalue { ptr, ptr, ptr, i32 } %817, ptr %.sroa.6.0305.i2527, 1
  %819 = insertvalue { ptr, ptr, ptr, i32 } %818, ptr %.sroa.12.0304.i2528, 2
  %820 = insertvalue { ptr, ptr, ptr, i32 } %819, i32 %.sroa.17.0303.i2529, 3
  %821 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2526)
  %822 = sext i32 %.sroa.17.0303.i2529 to i64
  %823 = getelementptr ptr, ptr %.sroa.0.0306.i2526, i64 %822
  %824 = getelementptr i8, ptr %823, i64 64
  %825 = load ptr, ptr %824, align 8
  %result.i43.i2530 = call ptr %825({ ptr, ptr, ptr, i32 } %820, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %826 = call i32 %result.i43.i2530({ ptr, ptr, ptr, i32 } %820, { ptr, ptr, ptr, i32 } %820, ptr nonnull align 8 %2) #42
  %..i2531 = select i1 %.070307.i2525, ptr %36, ptr %38
  %.184.i2532 = select i1 %.070307.i2525, i64 104, i64 112
  %.185.i2533 = select i1 %.070307.i2525, ptr %37, ptr %39
  %.186.i2534 = select i1 %.070307.i2525, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2531, align 8
  %827 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2531)
  %828 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2532
  %829 = load ptr, ptr %828, align 8
  store ptr @i32_typ, ptr %.185.i2533, align 8
  %result.i44.i2535 = call ptr %829({ ptr, ptr, ptr, i32 } %117, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2533) #45
  %830 = call i32 %result.i44.i2535({ ptr, ptr, ptr, i32 } %117, { ptr, ptr, ptr, i32 } %117, ptr nonnull align 8 dereferenceable(8) %..i2531, i32 %826) #42
  %831 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %832 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2534
  %833 = load ptr, ptr %832, align 8
  %834 = load ptr, ptr %833, align 8
  %835 = call { ptr } %834(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i2536 = extractvalue { ptr } %835, 0
  %836 = sext i32 %830 to i64
  %837 = shl nsw i64 %836, 5
  %838 = getelementptr i8, ptr %.fca.0.extract53.i2536, i64 %837
  %839 = load ptr, ptr %838, align 8
  %840 = getelementptr i8, ptr %838, i64 8
  %841 = load i64, ptr %840, align 4
  %.sroa_idx.i2537 = getelementptr i8, ptr %838, i64 16
  %842 = load i64, ptr %.sroa_idx.i2537, align 4
  %843 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %844 = call { ptr } %834(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i2538 = extractvalue { ptr } %844, 0
  %845 = getelementptr i8, ptr %.fca.0.extract51.i2538, i64 %837
  store ptr %.sroa.0.0306.i2526, ptr %845, align 8
  %846 = getelementptr i8, ptr %845, i64 8
  store i64 %.sroa.6.0305.i2527.in, ptr %846, align 4
  %.sroa_idx100.i2539 = getelementptr i8, ptr %845, i64 16
  store i64 %.sroa.12.0304.i2528.in, ptr %.sroa_idx100.i2539, align 4
  %.sroa_idx101.i2540 = getelementptr i8, ptr %845, i64 24
  store i32 %.sroa.17.0303.i2529, ptr %.sroa_idx101.i2540, align 4
  %847 = icmp ne ptr %839, @nil_typ
  %848 = icmp ne ptr %839, null
  %.not90.i2541 = and i1 %847, %848
  br i1 %.not90.i2541, label %.cont.i2546, label %854

.cont.i2546:                                      ; preds = %816
  %849 = add nuw nsw i32 %.0308.i2524, 1
  %850 = xor i1 %.070307.i2525, true
  %hash_coef_ptr.i.i60.i2549 = getelementptr i8, ptr %839, i64 8
  %tbl_size_ptr.i.i61.i2550 = getelementptr i8, ptr %839, i64 16
  %offset_tbl_ptr.i.i62.i2551 = getelementptr i8, ptr %839, i64 40
  %hash_coef.i.i63.i2552 = load i64, ptr %hash_coef_ptr.i.i60.i2549, align 4
  %tbl_size.i.i64.i2553 = load i64, ptr %tbl_size_ptr.i.i61.i2550, align 4
  %offset_tbl.i.i65.i2554 = load ptr, ptr %offset_tbl_ptr.i.i62.i2551, align 8
  %product.i.i.i66.i2555 = mul i64 %hash_coef.i.i63.i2552, 4015701072841558310
  %shifted.i.i.i67.i2556 = lshr i64 %product.i.i.i66.i2555, 32
  %xored.i.i.i68.i2557 = xor i64 %shifted.i.i.i67.i2556, %product.i.i.i66.i2555
  %hash.i.i.i69.i2558 = and i64 %xored.i.i.i68.i2557, %tbl_size.i.i64.i2553
  %offset_ptr.i.i70.i2559 = getelementptr i32, ptr %offset_tbl.i.i65.i2554, i64 %hash.i.i.i69.i2558
  %offset.i.i71.i2560 = load i32, ptr %offset_ptr.i.i70.i2559, align 4
  %851 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %852 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %853 = icmp ult i32 %.0308.i2524, 99
  br i1 %853, label %816, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2569

854:                                              ; preds = %816
  %855 = load i32, ptr %109, align 4
  %856 = add i32 %855, 1
  %857 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %856, ptr %109, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2569

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2569: ; preds = %.cont.i2546, %854
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %36)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %37)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %38)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %39)
  br label %._crit_edge.i1908

._crit_edge.i1908:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2569, %801
  %858 = add nuw nsw i32 %.045.i1906, 1
  %859 = icmp slt i32 %858, %736
  br i1 %859, label %801, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1926

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1926: ; preds = %._crit_edge.i1908, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1891.thread
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %60)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %61)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %62)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %63)
  %hash_coef.i.i17.i991 = load i64, ptr %hash_coef_ptr.i.i60.i, align 4, !noalias !23
  %tbl_size.i.i18.i992 = load i64, ptr %tbl_size_ptr.i.i61.i, align 4, !noalias !23
  %offset_tbl.i.i19.i993 = load ptr, ptr %offset_tbl_ptr.i.i62.i, align 8, !noalias !23
  %product.i.i.i20.i994 = mul i64 %hash_coef.i.i17.i991, 4015701072841558310
  %shifted.i.i.i21.i995 = lshr i64 %product.i.i.i20.i994, 32
  %xored.i.i.i22.i996 = xor i64 %shifted.i.i.i21.i995, %product.i.i.i20.i994
  %hash.i.i.i23.i997 = and i64 %xored.i.i.i22.i996, %tbl_size.i.i18.i992
  %offset_ptr.i.i24.i998 = getelementptr i32, ptr %offset_tbl.i.i19.i993, i64 %hash.i.i.i23.i997
  %offset.i.i39.i999 = load i32, ptr %offset_ptr.i.i24.i998, align 4, !noalias !192
  %860 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %861 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %862 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %863

863:                                              ; preds = %.cont.i1023, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1926
  %.0308.i1001 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1926 ], [ %896, %.cont.i1023 ]
  %.070307.i1002 = phi i1 [ true, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1926 ], [ %897, %.cont.i1023 ]
  %.sroa.0.0306.i1003 = phi ptr [ %712, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1926 ], [ %886, %.cont.i1023 ]
  %.sroa.6.0305.i1004.in = phi i64 [ %714, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1926 ], [ %888, %.cont.i1023 ]
  %.sroa.12.0304.i1005.in = phi i64 [ %715, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1926 ], [ %889, %.cont.i1023 ]
  %.sroa.17.0303.i1006 = phi i32 [ %offset.i.i39.i999, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1926 ], [ %offset.i.i71.i1037, %.cont.i1023 ]
  %.sroa.12.0304.i1005 = inttoptr i64 %.sroa.12.0304.i1005.in to ptr
  %.sroa.6.0305.i1004 = inttoptr i64 %.sroa.6.0305.i1004.in to ptr
  %864 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1003, 0
  %865 = insertvalue { ptr, ptr, ptr, i32 } %864, ptr %.sroa.6.0305.i1004, 1
  %866 = insertvalue { ptr, ptr, ptr, i32 } %865, ptr %.sroa.12.0304.i1005, 2
  %867 = insertvalue { ptr, ptr, ptr, i32 } %866, i32 %.sroa.17.0303.i1006, 3
  %868 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1003)
  %869 = sext i32 %.sroa.17.0303.i1006 to i64
  %870 = getelementptr ptr, ptr %.sroa.0.0306.i1003, i64 %869
  %871 = getelementptr i8, ptr %870, i64 64
  %872 = load ptr, ptr %871, align 8
  %result.i43.i1007 = call ptr %872({ ptr, ptr, ptr, i32 } %867, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %873 = call i32 %result.i43.i1007({ ptr, ptr, ptr, i32 } %867, { ptr, ptr, ptr, i32 } %867, ptr nonnull align 8 %2) #42
  %..i1008 = select i1 %.070307.i1002, ptr %60, ptr %62
  %.184.i1009 = select i1 %.070307.i1002, i64 104, i64 112
  %.185.i1010 = select i1 %.070307.i1002, ptr %61, ptr %63
  %.186.i1011 = select i1 %.070307.i1002, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1008, align 8
  %874 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1008)
  %875 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1009
  %876 = load ptr, ptr %875, align 8
  store ptr @i32_typ, ptr %.185.i1010, align 8
  %result.i44.i1012 = call ptr %876({ ptr, ptr, ptr, i32 } %116, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1010) #45
  %877 = call i32 %result.i44.i1012({ ptr, ptr, ptr, i32 } %116, { ptr, ptr, ptr, i32 } %116, ptr nonnull align 8 dereferenceable(8) %..i1008, i32 %873) #42
  %878 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %879 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1011
  %880 = load ptr, ptr %879, align 8
  %881 = load ptr, ptr %880, align 8
  %882 = call { ptr } %881(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i1013 = extractvalue { ptr } %882, 0
  %883 = sext i32 %877 to i64
  %884 = shl nsw i64 %883, 5
  %885 = getelementptr i8, ptr %.fca.0.extract53.i1013, i64 %884
  %886 = load ptr, ptr %885, align 8
  %887 = getelementptr i8, ptr %885, i64 8
  %888 = load i64, ptr %887, align 4
  %.sroa_idx.i1014 = getelementptr i8, ptr %885, i64 16
  %889 = load i64, ptr %.sroa_idx.i1014, align 4
  %890 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %891 = call { ptr } %881(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i1015 = extractvalue { ptr } %891, 0
  %892 = getelementptr i8, ptr %.fca.0.extract51.i1015, i64 %884
  store ptr %.sroa.0.0306.i1003, ptr %892, align 8
  %893 = getelementptr i8, ptr %892, i64 8
  store i64 %.sroa.6.0305.i1004.in, ptr %893, align 4
  %.sroa_idx100.i1016 = getelementptr i8, ptr %892, i64 16
  store i64 %.sroa.12.0304.i1005.in, ptr %.sroa_idx100.i1016, align 4
  %.sroa_idx101.i1017 = getelementptr i8, ptr %892, i64 24
  store i32 %.sroa.17.0303.i1006, ptr %.sroa_idx101.i1017, align 4
  %894 = icmp ne ptr %886, @nil_typ
  %895 = icmp ne ptr %886, null
  %.not90.i1018 = and i1 %894, %895
  br i1 %.not90.i1018, label %.cont.i1023, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1046

.cont.i1023:                                      ; preds = %863
  %896 = add nuw nsw i32 %.0308.i1001, 1
  %897 = xor i1 %.070307.i1002, true
  %hash_coef_ptr.i.i60.i1026 = getelementptr i8, ptr %886, i64 8
  %tbl_size_ptr.i.i61.i1027 = getelementptr i8, ptr %886, i64 16
  %offset_tbl_ptr.i.i62.i1028 = getelementptr i8, ptr %886, i64 40
  %hash_coef.i.i63.i1029 = load i64, ptr %hash_coef_ptr.i.i60.i1026, align 4
  %tbl_size.i.i64.i1030 = load i64, ptr %tbl_size_ptr.i.i61.i1027, align 4
  %offset_tbl.i.i65.i1031 = load ptr, ptr %offset_tbl_ptr.i.i62.i1028, align 8
  %product.i.i.i66.i1032 = mul i64 %hash_coef.i.i63.i1029, 4015701072841558310
  %shifted.i.i.i67.i1033 = lshr i64 %product.i.i.i66.i1032, 32
  %xored.i.i.i68.i1034 = xor i64 %shifted.i.i.i67.i1033, %product.i.i.i66.i1032
  %hash.i.i.i69.i1035 = and i64 %xored.i.i.i68.i1034, %tbl_size.i.i64.i1030
  %offset_ptr.i.i70.i1036 = getelementptr i32, ptr %offset_tbl.i.i65.i1031, i64 %hash.i.i.i69.i1035
  %offset.i.i71.i1037 = load i32, ptr %offset_ptr.i.i70.i1036, align 4
  %898 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %899 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %900 = icmp ult i32 %.0308.i1001, 99
  br i1 %900, label %863, label %904

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1046: ; preds = %863
  %901 = load i32, ptr %109, align 4
  %902 = add i32 %901, 1
  %903 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %902, ptr %109, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %60)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %61)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %62)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %63)
  br label %CuckooMap_insert_keyK_valueV.exit

904:                                              ; preds = %.cont.i1023
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %60)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %61)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %62)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %63)
  %905 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %906 = load ptr, ptr %84, align 8
  %907 = load ptr, ptr %85, align 8
  %908 = load i32, ptr %83, align 8
  %909 = shl i32 %908, 1
  %spec.select.i1062 = call i32 @llvm.smax.i32(i32 %909, i32 noundef 16) #37
  store i32 %spec.select.i1062, ptr %83, align 8
  %910 = zext nneg i32 %spec.select.i1062 to i64
  %911 = shl nuw nsw i64 %910, 5
  %result.i.i1063 = call noalias ptr @bump_malloc_inner(i64 noundef %911, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i1063, ptr %84, align 8
  %result.i1.i1064 = call noalias ptr @bump_malloc_inner(i64 noundef %911, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i1064, ptr %85, align 8
  store i32 0, ptr %109, align 4
  %912 = icmp sgt i32 %908, 0
  br i1 %912, label %.lr.ph.i1928, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1961.thread

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1961.thread: ; preds = %904
  %913 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %CuckooMap_insert_keyK_valueV.exit

.lr.ph.i1928:                                     ; preds = %904, %._crit_edge.i1943
  %.045.i1941 = phi i32 [ %970, %._crit_edge.i1943 ], [ 0, %904 ]
  %914 = zext nneg i32 %.045.i1941 to i64
  %915 = shl nuw nsw i64 %914, 5
  %916 = getelementptr i8, ptr %906, i64 %915
  %917 = load ptr, ptr %916, align 8
  %918 = icmp ne ptr %917, @nil_typ
  %919 = icmp ne ptr %917, null
  %.not16.i1942 = and i1 %918, %919
  br i1 %.not16.i1942, label %920, label %._crit_edge.i1943

920:                                              ; preds = %.lr.ph.i1928
  %921 = getelementptr i8, ptr %916, i64 8
  %922 = load i64, ptr %921, align 4
  %.sroa_idx.i1944 = getelementptr i8, ptr %916, i64 16
  %923 = load i64, ptr %.sroa_idx.i1944, align 4
  %hash_coef_ptr.i.i3.i1945 = getelementptr i8, ptr %917, i64 8
  %tbl_size_ptr.i.i4.i1946 = getelementptr i8, ptr %917, i64 16
  %offset_tbl_ptr.i.i5.i1947 = getelementptr i8, ptr %917, i64 40
  %924 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %32)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %33)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %34)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %35)
  %hash_coef.i.i17.i2587 = load i64, ptr %hash_coef_ptr.i.i3.i1945, align 4, !noalias !23
  %tbl_size.i.i18.i2588 = load i64, ptr %tbl_size_ptr.i.i4.i1946, align 4, !noalias !23
  %offset_tbl.i.i19.i2589 = load ptr, ptr %offset_tbl_ptr.i.i5.i1947, align 8, !noalias !23
  %product.i.i.i20.i2590 = mul i64 %hash_coef.i.i17.i2587, 4015701072841558310
  %shifted.i.i.i21.i2591 = lshr i64 %product.i.i.i20.i2590, 32
  %xored.i.i.i22.i2592 = xor i64 %shifted.i.i.i21.i2591, %product.i.i.i20.i2590
  %hash.i.i.i23.i2593 = and i64 %xored.i.i.i22.i2592, %tbl_size.i.i18.i2588
  %offset_ptr.i.i24.i2594 = getelementptr i32, ptr %offset_tbl.i.i19.i2589, i64 %hash.i.i.i23.i2593
  %offset.i.i39.i2595 = load i32, ptr %offset_ptr.i.i24.i2594, align 4, !noalias !195
  %925 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %926 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %927 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %928

928:                                              ; preds = %.cont.i2618, %920
  %.0308.i2596 = phi i32 [ 0, %920 ], [ %961, %.cont.i2618 ]
  %.070307.i2597 = phi i1 [ true, %920 ], [ %962, %.cont.i2618 ]
  %.sroa.0.0306.i2598 = phi ptr [ %917, %920 ], [ %951, %.cont.i2618 ]
  %.sroa.6.0305.i2599.in = phi i64 [ %922, %920 ], [ %953, %.cont.i2618 ]
  %.sroa.12.0304.i2600.in = phi i64 [ %923, %920 ], [ %954, %.cont.i2618 ]
  %.sroa.17.0303.i2601 = phi i32 [ %offset.i.i39.i2595, %920 ], [ %offset.i.i71.i2632, %.cont.i2618 ]
  %.sroa.12.0304.i2600 = inttoptr i64 %.sroa.12.0304.i2600.in to ptr
  %.sroa.6.0305.i2599 = inttoptr i64 %.sroa.6.0305.i2599.in to ptr
  %929 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2598, 0
  %930 = insertvalue { ptr, ptr, ptr, i32 } %929, ptr %.sroa.6.0305.i2599, 1
  %931 = insertvalue { ptr, ptr, ptr, i32 } %930, ptr %.sroa.12.0304.i2600, 2
  %932 = insertvalue { ptr, ptr, ptr, i32 } %931, i32 %.sroa.17.0303.i2601, 3
  %933 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2598)
  %934 = sext i32 %.sroa.17.0303.i2601 to i64
  %935 = getelementptr ptr, ptr %.sroa.0.0306.i2598, i64 %934
  %936 = getelementptr i8, ptr %935, i64 64
  %937 = load ptr, ptr %936, align 8
  %result.i43.i2602 = call ptr %937({ ptr, ptr, ptr, i32 } %932, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %938 = call i32 %result.i43.i2602({ ptr, ptr, ptr, i32 } %932, { ptr, ptr, ptr, i32 } %932, ptr nonnull align 8 %2) #42
  %..i2603 = select i1 %.070307.i2597, ptr %32, ptr %34
  %.184.i2604 = select i1 %.070307.i2597, i64 104, i64 112
  %.185.i2605 = select i1 %.070307.i2597, ptr %33, ptr %35
  %.186.i2606 = select i1 %.070307.i2597, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2603, align 8
  %939 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2603)
  %940 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2604
  %941 = load ptr, ptr %940, align 8
  store ptr @i32_typ, ptr %.185.i2605, align 8
  %result.i44.i2607 = call ptr %941({ ptr, ptr, ptr, i32 } %117, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2605) #45
  %942 = call i32 %result.i44.i2607({ ptr, ptr, ptr, i32 } %117, { ptr, ptr, ptr, i32 } %117, ptr nonnull align 8 dereferenceable(8) %..i2603, i32 %938) #42
  %943 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %944 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2606
  %945 = load ptr, ptr %944, align 8
  %946 = load ptr, ptr %945, align 8
  %947 = call { ptr } %946(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i2608 = extractvalue { ptr } %947, 0
  %948 = sext i32 %942 to i64
  %949 = shl nsw i64 %948, 5
  %950 = getelementptr i8, ptr %.fca.0.extract53.i2608, i64 %949
  %951 = load ptr, ptr %950, align 8
  %952 = getelementptr i8, ptr %950, i64 8
  %953 = load i64, ptr %952, align 4
  %.sroa_idx.i2609 = getelementptr i8, ptr %950, i64 16
  %954 = load i64, ptr %.sroa_idx.i2609, align 4
  %955 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %956 = call { ptr } %946(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i2610 = extractvalue { ptr } %956, 0
  %957 = getelementptr i8, ptr %.fca.0.extract51.i2610, i64 %949
  store ptr %.sroa.0.0306.i2598, ptr %957, align 8
  %958 = getelementptr i8, ptr %957, i64 8
  store i64 %.sroa.6.0305.i2599.in, ptr %958, align 4
  %.sroa_idx100.i2611 = getelementptr i8, ptr %957, i64 16
  store i64 %.sroa.12.0304.i2600.in, ptr %.sroa_idx100.i2611, align 4
  %.sroa_idx101.i2612 = getelementptr i8, ptr %957, i64 24
  store i32 %.sroa.17.0303.i2601, ptr %.sroa_idx101.i2612, align 4
  %959 = icmp ne ptr %951, @nil_typ
  %960 = icmp ne ptr %951, null
  %.not90.i2613 = and i1 %959, %960
  br i1 %.not90.i2613, label %.cont.i2618, label %966

.cont.i2618:                                      ; preds = %928
  %961 = add nuw nsw i32 %.0308.i2596, 1
  %962 = xor i1 %.070307.i2597, true
  %hash_coef_ptr.i.i60.i2621 = getelementptr i8, ptr %951, i64 8
  %tbl_size_ptr.i.i61.i2622 = getelementptr i8, ptr %951, i64 16
  %offset_tbl_ptr.i.i62.i2623 = getelementptr i8, ptr %951, i64 40
  %hash_coef.i.i63.i2624 = load i64, ptr %hash_coef_ptr.i.i60.i2621, align 4
  %tbl_size.i.i64.i2625 = load i64, ptr %tbl_size_ptr.i.i61.i2622, align 4
  %offset_tbl.i.i65.i2626 = load ptr, ptr %offset_tbl_ptr.i.i62.i2623, align 8
  %product.i.i.i66.i2627 = mul i64 %hash_coef.i.i63.i2624, 4015701072841558310
  %shifted.i.i.i67.i2628 = lshr i64 %product.i.i.i66.i2627, 32
  %xored.i.i.i68.i2629 = xor i64 %shifted.i.i.i67.i2628, %product.i.i.i66.i2627
  %hash.i.i.i69.i2630 = and i64 %xored.i.i.i68.i2629, %tbl_size.i.i64.i2625
  %offset_ptr.i.i70.i2631 = getelementptr i32, ptr %offset_tbl.i.i65.i2626, i64 %hash.i.i.i69.i2630
  %offset.i.i71.i2632 = load i32, ptr %offset_ptr.i.i70.i2631, align 4
  %963 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %964 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %965 = icmp ult i32 %.0308.i2596, 99
  br i1 %965, label %928, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2641

966:                                              ; preds = %928
  %967 = load i32, ptr %109, align 4
  %968 = add i32 %967, 1
  %969 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %968, ptr %109, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2641

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2641: ; preds = %.cont.i2618, %966
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %32)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %33)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %34)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %35)
  br label %._crit_edge.i1943

._crit_edge.i1943:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2641, %.lr.ph.i1928
  %970 = add nuw nsw i32 %.045.i1941, 1
  %971 = icmp slt i32 %970, %908
  br i1 %971, label %.lr.ph.i1928, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1961

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1961: ; preds = %._crit_edge.i1943
  %972 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %973

973:                                              ; preds = %._crit_edge.i1978, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1961
  %.045.i1976 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1961 ], [ %1030, %._crit_edge.i1978 ]
  %974 = zext nneg i32 %.045.i1976 to i64
  %975 = shl nuw nsw i64 %974, 5
  %976 = getelementptr i8, ptr %907, i64 %975
  %977 = load ptr, ptr %976, align 8
  %978 = icmp ne ptr %977, @nil_typ
  %979 = icmp ne ptr %977, null
  %.not16.i1977 = and i1 %978, %979
  br i1 %.not16.i1977, label %980, label %._crit_edge.i1978

980:                                              ; preds = %973
  %981 = getelementptr i8, ptr %976, i64 8
  %982 = load i64, ptr %981, align 4
  %.sroa_idx.i1979 = getelementptr i8, ptr %976, i64 16
  %983 = load i64, ptr %.sroa_idx.i1979, align 4
  %hash_coef_ptr.i.i3.i1980 = getelementptr i8, ptr %977, i64 8
  %tbl_size_ptr.i.i4.i1981 = getelementptr i8, ptr %977, i64 16
  %offset_tbl_ptr.i.i5.i1982 = getelementptr i8, ptr %977, i64 40
  %984 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %28)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %29)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %30)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %31)
  %hash_coef.i.i17.i2659 = load i64, ptr %hash_coef_ptr.i.i3.i1980, align 4, !noalias !23
  %tbl_size.i.i18.i2660 = load i64, ptr %tbl_size_ptr.i.i4.i1981, align 4, !noalias !23
  %offset_tbl.i.i19.i2661 = load ptr, ptr %offset_tbl_ptr.i.i5.i1982, align 8, !noalias !23
  %product.i.i.i20.i2662 = mul i64 %hash_coef.i.i17.i2659, 4015701072841558310
  %shifted.i.i.i21.i2663 = lshr i64 %product.i.i.i20.i2662, 32
  %xored.i.i.i22.i2664 = xor i64 %shifted.i.i.i21.i2663, %product.i.i.i20.i2662
  %hash.i.i.i23.i2665 = and i64 %xored.i.i.i22.i2664, %tbl_size.i.i18.i2660
  %offset_ptr.i.i24.i2666 = getelementptr i32, ptr %offset_tbl.i.i19.i2661, i64 %hash.i.i.i23.i2665
  %offset.i.i39.i2667 = load i32, ptr %offset_ptr.i.i24.i2666, align 4, !noalias !198
  %985 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %986 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %987 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %988

988:                                              ; preds = %.cont.i2690, %980
  %.0308.i2668 = phi i32 [ 0, %980 ], [ %1021, %.cont.i2690 ]
  %.070307.i2669 = phi i1 [ true, %980 ], [ %1022, %.cont.i2690 ]
  %.sroa.0.0306.i2670 = phi ptr [ %977, %980 ], [ %1011, %.cont.i2690 ]
  %.sroa.6.0305.i2671.in = phi i64 [ %982, %980 ], [ %1013, %.cont.i2690 ]
  %.sroa.12.0304.i2672.in = phi i64 [ %983, %980 ], [ %1014, %.cont.i2690 ]
  %.sroa.17.0303.i2673 = phi i32 [ %offset.i.i39.i2667, %980 ], [ %offset.i.i71.i2704, %.cont.i2690 ]
  %.sroa.12.0304.i2672 = inttoptr i64 %.sroa.12.0304.i2672.in to ptr
  %.sroa.6.0305.i2671 = inttoptr i64 %.sroa.6.0305.i2671.in to ptr
  %989 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2670, 0
  %990 = insertvalue { ptr, ptr, ptr, i32 } %989, ptr %.sroa.6.0305.i2671, 1
  %991 = insertvalue { ptr, ptr, ptr, i32 } %990, ptr %.sroa.12.0304.i2672, 2
  %992 = insertvalue { ptr, ptr, ptr, i32 } %991, i32 %.sroa.17.0303.i2673, 3
  %993 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2670)
  %994 = sext i32 %.sroa.17.0303.i2673 to i64
  %995 = getelementptr ptr, ptr %.sroa.0.0306.i2670, i64 %994
  %996 = getelementptr i8, ptr %995, i64 64
  %997 = load ptr, ptr %996, align 8
  %result.i43.i2674 = call ptr %997({ ptr, ptr, ptr, i32 } %992, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %998 = call i32 %result.i43.i2674({ ptr, ptr, ptr, i32 } %992, { ptr, ptr, ptr, i32 } %992, ptr nonnull align 8 %2) #42
  %..i2675 = select i1 %.070307.i2669, ptr %28, ptr %30
  %.184.i2676 = select i1 %.070307.i2669, i64 104, i64 112
  %.185.i2677 = select i1 %.070307.i2669, ptr %29, ptr %31
  %.186.i2678 = select i1 %.070307.i2669, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2675, align 8
  %999 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2675)
  %1000 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2676
  %1001 = load ptr, ptr %1000, align 8
  store ptr @i32_typ, ptr %.185.i2677, align 8
  %result.i44.i2679 = call ptr %1001({ ptr, ptr, ptr, i32 } %117, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2677) #45
  %1002 = call i32 %result.i44.i2679({ ptr, ptr, ptr, i32 } %117, { ptr, ptr, ptr, i32 } %117, ptr nonnull align 8 dereferenceable(8) %..i2675, i32 %998) #42
  %1003 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1004 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2678
  %1005 = load ptr, ptr %1004, align 8
  %1006 = load ptr, ptr %1005, align 8
  %1007 = call { ptr } %1006(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i2680 = extractvalue { ptr } %1007, 0
  %1008 = sext i32 %1002 to i64
  %1009 = shl nsw i64 %1008, 5
  %1010 = getelementptr i8, ptr %.fca.0.extract53.i2680, i64 %1009
  %1011 = load ptr, ptr %1010, align 8
  %1012 = getelementptr i8, ptr %1010, i64 8
  %1013 = load i64, ptr %1012, align 4
  %.sroa_idx.i2681 = getelementptr i8, ptr %1010, i64 16
  %1014 = load i64, ptr %.sroa_idx.i2681, align 4
  %1015 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1016 = call { ptr } %1006(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i2682 = extractvalue { ptr } %1016, 0
  %1017 = getelementptr i8, ptr %.fca.0.extract51.i2682, i64 %1009
  store ptr %.sroa.0.0306.i2670, ptr %1017, align 8
  %1018 = getelementptr i8, ptr %1017, i64 8
  store i64 %.sroa.6.0305.i2671.in, ptr %1018, align 4
  %.sroa_idx100.i2683 = getelementptr i8, ptr %1017, i64 16
  store i64 %.sroa.12.0304.i2672.in, ptr %.sroa_idx100.i2683, align 4
  %.sroa_idx101.i2684 = getelementptr i8, ptr %1017, i64 24
  store i32 %.sroa.17.0303.i2673, ptr %.sroa_idx101.i2684, align 4
  %1019 = icmp ne ptr %1011, @nil_typ
  %1020 = icmp ne ptr %1011, null
  %.not90.i2685 = and i1 %1019, %1020
  br i1 %.not90.i2685, label %.cont.i2690, label %1026

.cont.i2690:                                      ; preds = %988
  %1021 = add nuw nsw i32 %.0308.i2668, 1
  %1022 = xor i1 %.070307.i2669, true
  %hash_coef_ptr.i.i60.i2693 = getelementptr i8, ptr %1011, i64 8
  %tbl_size_ptr.i.i61.i2694 = getelementptr i8, ptr %1011, i64 16
  %offset_tbl_ptr.i.i62.i2695 = getelementptr i8, ptr %1011, i64 40
  %hash_coef.i.i63.i2696 = load i64, ptr %hash_coef_ptr.i.i60.i2693, align 4
  %tbl_size.i.i64.i2697 = load i64, ptr %tbl_size_ptr.i.i61.i2694, align 4
  %offset_tbl.i.i65.i2698 = load ptr, ptr %offset_tbl_ptr.i.i62.i2695, align 8
  %product.i.i.i66.i2699 = mul i64 %hash_coef.i.i63.i2696, 4015701072841558310
  %shifted.i.i.i67.i2700 = lshr i64 %product.i.i.i66.i2699, 32
  %xored.i.i.i68.i2701 = xor i64 %shifted.i.i.i67.i2700, %product.i.i.i66.i2699
  %hash.i.i.i69.i2702 = and i64 %xored.i.i.i68.i2701, %tbl_size.i.i64.i2697
  %offset_ptr.i.i70.i2703 = getelementptr i32, ptr %offset_tbl.i.i65.i2698, i64 %hash.i.i.i69.i2702
  %offset.i.i71.i2704 = load i32, ptr %offset_ptr.i.i70.i2703, align 4
  %1023 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1024 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1025 = icmp ult i32 %.0308.i2668, 99
  br i1 %1025, label %988, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2713

1026:                                             ; preds = %988
  %1027 = load i32, ptr %109, align 4
  %1028 = add i32 %1027, 1
  %1029 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1028, ptr %109, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2713

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2713: ; preds = %.cont.i2690, %1026
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %28)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %29)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %30)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %31)
  br label %._crit_edge.i1978

._crit_edge.i1978:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2713, %973
  %1030 = add nuw nsw i32 %.045.i1976, 1
  %1031 = icmp slt i32 %1030, %908
  br i1 %1031, label %973, label %CuckooMap_insert_keyK_valueV.exit

CuckooMap_insert_keyK_valueV.exit:                ; preds = %._crit_edge.i1978, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit1961.thread, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1046, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit914, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1032 = load ptr, ptr %91, align 8
  %1033 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 16 dereferenceable(744) @Array) #50
  %1034 = sext i32 %.0266236 to i64
  %1035 = shl nsw i64 %1034, 2
  %1036 = getelementptr i8, ptr %1032, i64 %1035
  store i32 %123, ptr %1036, align 1
  store i1 true, ptr %.sroa.0224.sroa.0, align 8
  %.sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.0. = load i8, ptr %.sroa.0224.sroa.0, align 8
  %.sroa.0224.0.insert.ext = zext i8 %.sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.sroa.0.0..sroa.0224.0. to i160
  %1037 = insertvalue { ptr, i160 } { ptr @bool_typ, i160 undef }, i160 %.sroa.0224.0.insert.ext, 1
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1038 = load ptr, ptr %98, align 8
  %1039 = call i32 %1038({ ptr, i160 } %124) #42
  %1040 = load i32, ptr %100, align 8
  %1041 = add i32 %1040, -1
  %1042 = and i32 %1041, %1039
  %1043 = load ptr, ptr %101, align 8
  %1044 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1045 = sext i32 %1042 to i64
  %1046 = shl nsw i64 %1045, 5
  %1047 = getelementptr i8, ptr %1043, i64 %1046
  %1048 = load ptr, ptr %1047, align 8
  %1049 = getelementptr i8, ptr %1047, i64 8
  %1050 = icmp ne ptr %1048, @nil_typ
  %1051 = icmp ne ptr %1048, null
  %.not64.i1111 = and i1 %1050, %1051
  br i1 %.not64.i1111, label %1052, label %1150

1052:                                             ; preds = %CuckooMap_insert_keyK_valueV.exit
  %1053 = load i64, ptr %1049, align 4
  %.sroa_idx.i1113 = getelementptr i8, ptr %1047, i64 16
  %1054 = load i64, ptr %.sroa_idx.i1113, align 4
  %1055 = inttoptr i64 %1053 to ptr
  %1056 = inttoptr i64 %1054 to ptr
  %hash_coef_ptr.i.i3.i1114 = getelementptr i8, ptr %1048, i64 8
  %tbl_size_ptr.i.i4.i1115 = getelementptr i8, ptr %1048, i64 16
  %offset_tbl_ptr.i.i5.i1116 = getelementptr i8, ptr %1048, i64 40
  %hash_coef.i.i6.i1117 = load i64, ptr %hash_coef_ptr.i.i3.i1114, align 4, !noalias !201
  %tbl_size.i.i7.i1118 = load i64, ptr %tbl_size_ptr.i.i4.i1115, align 4, !noalias !201
  %offset_tbl.i.i8.i1119 = load ptr, ptr %offset_tbl_ptr.i.i5.i1116, align 8, !noalias !201
  %product.i.i.i9.i1120 = mul i64 %hash_coef.i.i6.i1117, 4015701072841558310
  %shifted.i.i.i10.i1121 = lshr i64 %product.i.i.i9.i1120, 32
  %xored.i.i.i11.i1122 = xor i64 %shifted.i.i.i10.i1121, %product.i.i.i9.i1120
  %hash.i.i.i12.i1123 = and i64 %xored.i.i.i11.i1122, %tbl_size.i.i7.i1118
  %offset_ptr.i.i13.i1124 = getelementptr i32, ptr %offset_tbl.i.i8.i1119, i64 %hash.i.i.i12.i1123
  %offset.i.i14.i1125 = load i32, ptr %offset_ptr.i.i13.i1124, align 4, !noalias !201
  %1057 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1048, 0
  %1058 = insertvalue { ptr, ptr, ptr, i32 } %1057, ptr %1055, 1
  %1059 = insertvalue { ptr, ptr, ptr, i32 } %1058, ptr %1056, 2
  %1060 = insertvalue { ptr, ptr, ptr, i32 } %1059, i32 %offset.i.i14.i1125, 3
  %1061 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1062 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1048) #37
  %1063 = sext i32 %offset.i.i14.i1125 to i64
  %1064 = getelementptr ptr, ptr %1048, i64 %1063
  %1065 = getelementptr i8, ptr %1064, i64 64
  %1066 = load ptr, ptr %1065, align 8
  %result.i.i1126 = call ptr %1066({ ptr, ptr, ptr, i32 } %1060, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1067 = call i32 %result.i.i1126({ ptr, ptr, ptr, i32 } %1060, { ptr, ptr, ptr, i32 } %1060, ptr nonnull align 8 %2) #42
  %1068 = icmp eq i32 %1067, %1039
  br i1 %1068, label %._crit_edge.i1127, label %1150

._crit_edge.i1127:                                ; preds = %1052
  %1069 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1070 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1048)
  %1071 = getelementptr i8, ptr %1064, i64 48
  %1072 = load ptr, ptr %1071, align 8
  %result.i16.i1128 = call ptr %1072({ ptr, ptr, ptr, i32 } %1060, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1073 = call { ptr, i160 } %result.i16.i1128({ ptr, ptr, ptr, i32 } %1060, { ptr, ptr, ptr, i32 } %1060, ptr nonnull align 8 %2) #42
  %1074 = load ptr, ptr %99, align 8
  %1075 = call i1 %1074({ ptr, i160 } %1073, { ptr, i160 } %124) #42
  br i1 %1075, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1140, label %1150

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1140: ; preds = %._crit_edge.i1127
  %1076 = load ptr, ptr %result.i51, align 8
  %1077 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1078 = load ptr, ptr %93, align 8
  %1079 = load ptr, ptr %1076, align 8, !alias.scope !204
  %1080 = getelementptr i8, ptr %1079, i64 72
  %1081 = load ptr, ptr %1080, align 8, !alias.scope !204
  %result.i.i.i1132 = call { i64, i64 } %1081(ptr nocapture nofree nonnull readonly align 8 %1076) #41, !alias.scope !204
  %1082 = extractvalue { i64, i64 } %result.i.i.i1132, 0
  %1083 = extractvalue { i64, i64 } %result.i.i.i1132, 1
  %1084 = urem i64 20, %1083
  %1085 = icmp eq i64 %1084, 0
  %1086 = sub i64 %1083, %1084
  %1087 = select i1 %1085, i64 0, i64 %1086
  %1088 = add i64 %1082, 20
  %1089 = add i64 %1088, %1087
  %1090 = load ptr, ptr %1078, align 8, !alias.scope !204
  %1091 = getelementptr i8, ptr %1090, i64 72
  %1092 = load ptr, ptr %1091, align 8, !alias.scope !204
  %result.i1.i.i1133 = call { i64, i64 } %1092(ptr nocapture nofree nonnull readonly align 8 %1078) #41, !alias.scope !204
  %1093 = extractvalue { i64, i64 } %result.i1.i.i1133, 0
  %1094 = extractvalue { i64, i64 } %result.i1.i.i1133, 1
  %1095 = call i64 @llvm.umax.i64(i64 %1083, i64 %1094) #38
  %1096 = call i64 @llvm.umax.i64(i64 %1095, i64 noundef 8) #38, !range !16
  %1097 = urem i64 %1089, %1094
  %1098 = icmp eq i64 %1097, 0
  %1099 = sub i64 %1094, %1097
  %1100 = select i1 %1098, i64 0, i64 %1099
  %1101 = add i64 %1093, %1089
  %1102 = add i64 %1101, %1100
  %1103 = urem i64 %1102, %1096
  %1104 = icmp eq i64 %1103, 0
  %1105 = sub i64 %1096, %1103
  %1106 = select i1 %1104, i64 0, i64 %1105
  %1107 = add i64 %1106, %1102
  %result.i20.i1134 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %1107, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %1076, ptr %result.i20.i1134, align 8
  %1108 = getelementptr inbounds i8, ptr %result.i20.i1134, i64 8
  store ptr %1078, ptr %1108, align 8
  %1109 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i1134)
  %1110 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1111 = load ptr, ptr %1076, align 8
  %1112 = getelementptr i8, ptr %1111, i64 72
  %1113 = load ptr, ptr %1112, align 8
  %result.i.i54.i1135 = call { i64, i64 } %1113(ptr nocapture nofree nonnull readonly align 8 %1076) #41
  %1114 = extractvalue { i64, i64 } %result.i.i54.i1135, 1
  %1115 = urem i64 20, %1114
  %1116 = icmp eq i64 %1115, 0
  %reass.sub3409 = sub i64 %1114, %1115
  %1117 = add i64 %reass.sub3409, 20
  %1118 = select i1 %1116, i64 20, i64 %1117
  %1119 = getelementptr i8, ptr %result.i20.i1134, i64 %1118
  %1120 = getelementptr i8, ptr %1111, i64 64
  %1121 = load ptr, ptr %1120, align 8
  call void %1121({ ptr, i160 } %124, ptr nocapture nofree nonnull readonly align 8 %1076, ptr nocapture nofree writeonly %1119) #49
  %1122 = load ptr, ptr %result.i20.i1134, align 8
  %1123 = load ptr, ptr %1122, align 8
  %1124 = getelementptr i8, ptr %1123, i64 72
  %1125 = load ptr, ptr %1124, align 8
  %result.i.i55.i1137 = call { i64, i64 } %1125(ptr nocapture nofree nonnull readonly align 8 %1122) #41
  %1126 = extractvalue { i64, i64 } %result.i.i55.i1137, 0
  %1127 = extractvalue { i64, i64 } %result.i.i55.i1137, 1
  %1128 = urem i64 20, %1127
  %1129 = icmp eq i64 %1128, 0
  %1130 = sub i64 %1127, %1128
  %1131 = select i1 %1129, i64 0, i64 %1130
  %1132 = add i64 %1126, 20
  %1133 = add i64 %1132, %1131
  %1134 = load ptr, ptr %1108, align 8
  %1135 = load ptr, ptr %1134, align 8
  %1136 = getelementptr i8, ptr %1135, i64 72
  %1137 = load ptr, ptr %1136, align 8
  %result.i1.i56.i1138 = call { i64, i64 } %1137(ptr nocapture nofree nonnull readonly align 8 %1134) #41
  %1138 = extractvalue { i64, i64 } %result.i1.i56.i1138, 1
  %1139 = urem i64 %1133, %1138
  %1140 = icmp eq i64 %1139, 0
  %1141 = sub i64 %1138, %1139
  %1142 = select i1 %1140, i64 0, i64 %1141
  %1143 = getelementptr i8, ptr %result.i20.i1134, i64 %1133
  %1144 = getelementptr i8, ptr %1143, i64 %1142
  %1145 = getelementptr i8, ptr %1135, i64 64
  %1146 = load ptr, ptr %1145, align 8
  call void %1146({ ptr, i160 } %1037, ptr nocapture nofree nonnull readonly align 8 %1134, ptr nocapture nofree writeonly %1144) #49
  %1147 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %1148 = getelementptr inbounds i8, ptr %result.i20.i1134, i64 16
  store i32 %1039, ptr %1148, align 8
  store ptr @Entry, ptr %1047, align 8
  %1149 = ptrtoint ptr %result.i20.i1134 to i64
  store i64 %1149, ptr %1049, align 4
  %.sroa_idx28.i1139 = getelementptr i8, ptr %1047, i64 24
  store i32 10, ptr %.sroa_idx28.i1139, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit527

1150:                                             ; preds = %._crit_edge.i1127, %CuckooMap_insert_keyK_valueV.exit, %1052
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1151 = add i32 %1039, 2127912214
  %1152 = shl i32 %1039, 12
  %1153 = add i32 %1151, %1152
  %1154 = ashr i32 %1153, 19
  %1155 = xor i32 %1153, %1154
  %1156 = xor i32 %1155, -949894596
  %1157 = add i32 %1156, 374761393
  %1158 = shl i32 %1156, 5
  %1159 = add i32 %1157, %1158
  %1160 = add i32 %1159, -744332180
  %1161 = shl i32 %1159, 9
  %1162 = xor i32 %1160, %1161
  %1163 = add i32 %1162, -42973499
  %1164 = shl i32 %1162, 3
  %1165 = add i32 %1163, %1164
  %1166 = ashr i32 %1165, 16
  %1167 = xor i32 %1165, %1166
  %1168 = xor i32 %1167, -1252372727
  %1169 = load i32, ptr %100, align 8
  %1170 = add i32 %1169, -1
  %1171 = and i32 %1170, %1168
  %1172 = load ptr, ptr %102, align 8
  %1173 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1174 = sext i32 %1171 to i64
  %1175 = shl nsw i64 %1174, 5
  %1176 = getelementptr i8, ptr %1172, i64 %1175
  %1177 = load ptr, ptr %1176, align 8
  %1178 = getelementptr i8, ptr %1176, i64 8
  %1179 = icmp ne ptr %1177, @nil_typ
  %1180 = icmp ne ptr %1177, null
  %.not64.i1170 = and i1 %1179, %1180
  br i1 %.not64.i1170, label %1181, label %1279

1181:                                             ; preds = %1150
  %1182 = load i64, ptr %1178, align 4
  %.sroa_idx.i1172 = getelementptr i8, ptr %1176, i64 16
  %1183 = load i64, ptr %.sroa_idx.i1172, align 4
  %1184 = inttoptr i64 %1182 to ptr
  %1185 = inttoptr i64 %1183 to ptr
  %hash_coef_ptr.i.i3.i1173 = getelementptr i8, ptr %1177, i64 8
  %tbl_size_ptr.i.i4.i1174 = getelementptr i8, ptr %1177, i64 16
  %offset_tbl_ptr.i.i5.i1175 = getelementptr i8, ptr %1177, i64 40
  %hash_coef.i.i6.i1176 = load i64, ptr %hash_coef_ptr.i.i3.i1173, align 4, !noalias !207
  %tbl_size.i.i7.i1177 = load i64, ptr %tbl_size_ptr.i.i4.i1174, align 4, !noalias !207
  %offset_tbl.i.i8.i1178 = load ptr, ptr %offset_tbl_ptr.i.i5.i1175, align 8, !noalias !207
  %product.i.i.i9.i1179 = mul i64 %hash_coef.i.i6.i1176, 4015701072841558310
  %shifted.i.i.i10.i1180 = lshr i64 %product.i.i.i9.i1179, 32
  %xored.i.i.i11.i1181 = xor i64 %shifted.i.i.i10.i1180, %product.i.i.i9.i1179
  %hash.i.i.i12.i1182 = and i64 %xored.i.i.i11.i1181, %tbl_size.i.i7.i1177
  %offset_ptr.i.i13.i1183 = getelementptr i32, ptr %offset_tbl.i.i8.i1178, i64 %hash.i.i.i12.i1182
  %offset.i.i14.i1184 = load i32, ptr %offset_ptr.i.i13.i1183, align 4, !noalias !207
  %1186 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1177, 0
  %1187 = insertvalue { ptr, ptr, ptr, i32 } %1186, ptr %1184, 1
  %1188 = insertvalue { ptr, ptr, ptr, i32 } %1187, ptr %1185, 2
  %1189 = insertvalue { ptr, ptr, ptr, i32 } %1188, i32 %offset.i.i14.i1184, 3
  %1190 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1191 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1177) #37
  %1192 = sext i32 %offset.i.i14.i1184 to i64
  %1193 = getelementptr ptr, ptr %1177, i64 %1192
  %1194 = getelementptr i8, ptr %1193, i64 64
  %1195 = load ptr, ptr %1194, align 8
  %result.i.i1185 = call ptr %1195({ ptr, ptr, ptr, i32 } %1189, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1196 = call i32 %result.i.i1185({ ptr, ptr, ptr, i32 } %1189, { ptr, ptr, ptr, i32 } %1189, ptr nonnull align 8 %2) #42
  %1197 = icmp eq i32 %1196, %1039
  br i1 %1197, label %._crit_edge.i1186, label %1279

._crit_edge.i1186:                                ; preds = %1181
  %1198 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1199 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1177)
  %1200 = getelementptr i8, ptr %1193, i64 48
  %1201 = load ptr, ptr %1200, align 8
  %result.i16.i1187 = call ptr %1201({ ptr, ptr, ptr, i32 } %1189, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1202 = call { ptr, i160 } %result.i16.i1187({ ptr, ptr, ptr, i32 } %1189, { ptr, ptr, ptr, i32 } %1189, ptr nonnull align 8 %2) #42
  %1203 = load ptr, ptr %99, align 8
  %1204 = call i1 %1203({ ptr, i160 } %1202, { ptr, i160 } %124) #42
  br i1 %1204, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1199, label %1279

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1199: ; preds = %._crit_edge.i1186
  %1205 = load ptr, ptr %result.i51, align 8
  %1206 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1207 = load ptr, ptr %93, align 8
  %1208 = load ptr, ptr %1205, align 8, !alias.scope !210
  %1209 = getelementptr i8, ptr %1208, i64 72
  %1210 = load ptr, ptr %1209, align 8, !alias.scope !210
  %result.i.i.i1191 = call { i64, i64 } %1210(ptr nocapture nofree nonnull readonly align 8 %1205) #41, !alias.scope !210
  %1211 = extractvalue { i64, i64 } %result.i.i.i1191, 0
  %1212 = extractvalue { i64, i64 } %result.i.i.i1191, 1
  %1213 = urem i64 20, %1212
  %1214 = icmp eq i64 %1213, 0
  %1215 = sub i64 %1212, %1213
  %1216 = select i1 %1214, i64 0, i64 %1215
  %1217 = add i64 %1211, 20
  %1218 = add i64 %1217, %1216
  %1219 = load ptr, ptr %1207, align 8, !alias.scope !210
  %1220 = getelementptr i8, ptr %1219, i64 72
  %1221 = load ptr, ptr %1220, align 8, !alias.scope !210
  %result.i1.i.i1192 = call { i64, i64 } %1221(ptr nocapture nofree nonnull readonly align 8 %1207) #41, !alias.scope !210
  %1222 = extractvalue { i64, i64 } %result.i1.i.i1192, 0
  %1223 = extractvalue { i64, i64 } %result.i1.i.i1192, 1
  %1224 = call i64 @llvm.umax.i64(i64 %1212, i64 %1223) #38
  %1225 = call i64 @llvm.umax.i64(i64 %1224, i64 noundef 8) #38, !range !16
  %1226 = urem i64 %1218, %1223
  %1227 = icmp eq i64 %1226, 0
  %1228 = sub i64 %1223, %1226
  %1229 = select i1 %1227, i64 0, i64 %1228
  %1230 = add i64 %1222, %1218
  %1231 = add i64 %1230, %1229
  %1232 = urem i64 %1231, %1225
  %1233 = icmp eq i64 %1232, 0
  %1234 = sub i64 %1225, %1232
  %1235 = select i1 %1233, i64 0, i64 %1234
  %1236 = add i64 %1235, %1231
  %result.i20.i1193 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %1236, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %1205, ptr %result.i20.i1193, align 8
  %1237 = getelementptr inbounds i8, ptr %result.i20.i1193, i64 8
  store ptr %1207, ptr %1237, align 8
  %1238 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i1193)
  %1239 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1240 = load ptr, ptr %1205, align 8
  %1241 = getelementptr i8, ptr %1240, i64 72
  %1242 = load ptr, ptr %1241, align 8
  %result.i.i54.i1194 = call { i64, i64 } %1242(ptr nocapture nofree nonnull readonly align 8 %1205) #41
  %1243 = extractvalue { i64, i64 } %result.i.i54.i1194, 1
  %1244 = urem i64 20, %1243
  %1245 = icmp eq i64 %1244, 0
  %reass.sub3408 = sub i64 %1243, %1244
  %1246 = add i64 %reass.sub3408, 20
  %1247 = select i1 %1245, i64 20, i64 %1246
  %1248 = getelementptr i8, ptr %result.i20.i1193, i64 %1247
  %1249 = getelementptr i8, ptr %1240, i64 64
  %1250 = load ptr, ptr %1249, align 8
  call void %1250({ ptr, i160 } %124, ptr nocapture nofree nonnull readonly align 8 %1205, ptr nocapture nofree writeonly %1248) #49
  %1251 = load ptr, ptr %result.i20.i1193, align 8
  %1252 = load ptr, ptr %1251, align 8
  %1253 = getelementptr i8, ptr %1252, i64 72
  %1254 = load ptr, ptr %1253, align 8
  %result.i.i55.i1196 = call { i64, i64 } %1254(ptr nocapture nofree nonnull readonly align 8 %1251) #41
  %1255 = extractvalue { i64, i64 } %result.i.i55.i1196, 0
  %1256 = extractvalue { i64, i64 } %result.i.i55.i1196, 1
  %1257 = urem i64 20, %1256
  %1258 = icmp eq i64 %1257, 0
  %1259 = sub i64 %1256, %1257
  %1260 = select i1 %1258, i64 0, i64 %1259
  %1261 = add i64 %1255, 20
  %1262 = add i64 %1261, %1260
  %1263 = load ptr, ptr %1237, align 8
  %1264 = load ptr, ptr %1263, align 8
  %1265 = getelementptr i8, ptr %1264, i64 72
  %1266 = load ptr, ptr %1265, align 8
  %result.i1.i56.i1197 = call { i64, i64 } %1266(ptr nocapture nofree nonnull readonly align 8 %1263) #41
  %1267 = extractvalue { i64, i64 } %result.i1.i56.i1197, 1
  %1268 = urem i64 %1262, %1267
  %1269 = icmp eq i64 %1268, 0
  %1270 = sub i64 %1267, %1268
  %1271 = select i1 %1269, i64 0, i64 %1270
  %1272 = getelementptr i8, ptr %result.i20.i1193, i64 %1262
  %1273 = getelementptr i8, ptr %1272, i64 %1271
  %1274 = getelementptr i8, ptr %1264, i64 64
  %1275 = load ptr, ptr %1274, align 8
  call void %1275({ ptr, i160 } %1037, ptr nocapture nofree nonnull readonly align 8 %1263, ptr nocapture nofree writeonly %1273) #49
  %1276 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %1277 = getelementptr inbounds i8, ptr %result.i20.i1193, i64 16
  store i32 %1039, ptr %1277, align 8
  store ptr @Entry, ptr %1176, align 8
  %1278 = ptrtoint ptr %result.i20.i1193 to i64
  store i64 %1278, ptr %1178, align 4
  %.sroa_idx28.i1198 = getelementptr i8, ptr %1176, i64 24
  store i32 10, ptr %.sroa_idx28.i1198, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit527

1279:                                             ; preds = %._crit_edge.i1186, %1150, %1181
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1280 = load i32, ptr %110, align 4
  %1281 = load i32, ptr %100, align 8
  %.not.i483 = icmp slt i32 %1280, %1281
  br i1 %.not.i483, label %._crit_edge.i485, label %1282

1282:                                             ; preds = %1279
  %1283 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1284 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1285 = load ptr, ptr %101, align 8
  %1286 = load ptr, ptr %102, align 8
  %1287 = shl i32 %1281, 1
  %spec.select.i1215 = call i32 @llvm.smax.i32(i32 %1287, i32 noundef 16) #37
  store i32 %spec.select.i1215, ptr %100, align 8
  %1288 = zext nneg i32 %spec.select.i1215 to i64
  %1289 = shl nuw nsw i64 %1288, 5
  %result.i.i1216 = call noalias ptr @bump_malloc_inner(i64 noundef %1289, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i1216, ptr %101, align 8
  %result.i1.i1217 = call noalias ptr @bump_malloc_inner(i64 noundef %1289, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i1217, ptr %102, align 8
  store i32 0, ptr %110, align 4
  %1290 = icmp sgt i32 %1281, 0
  br i1 %1290, label %.lr.ph.i1998, label %._crit_edge.i485

.lr.ph.i1998:                                     ; preds = %1282, %._crit_edge.i2013
  %.045.i2011 = phi i32 [ %1347, %._crit_edge.i2013 ], [ 0, %1282 ]
  %1291 = zext nneg i32 %.045.i2011 to i64
  %1292 = shl nuw nsw i64 %1291, 5
  %1293 = getelementptr i8, ptr %1285, i64 %1292
  %1294 = load ptr, ptr %1293, align 8
  %1295 = icmp ne ptr %1294, @nil_typ
  %1296 = icmp ne ptr %1294, null
  %.not16.i2012 = and i1 %1295, %1296
  br i1 %.not16.i2012, label %1297, label %._crit_edge.i2013

1297:                                             ; preds = %.lr.ph.i1998
  %1298 = getelementptr i8, ptr %1293, i64 8
  %1299 = load i64, ptr %1298, align 4
  %.sroa_idx.i2014 = getelementptr i8, ptr %1293, i64 16
  %1300 = load i64, ptr %.sroa_idx.i2014, align 4
  %hash_coef_ptr.i.i3.i2015 = getelementptr i8, ptr %1294, i64 8
  %tbl_size_ptr.i.i4.i2016 = getelementptr i8, ptr %1294, i64 16
  %offset_tbl_ptr.i.i5.i2017 = getelementptr i8, ptr %1294, i64 40
  %1301 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %24)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %25)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %26)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %27)
  %hash_coef.i.i17.i2731 = load i64, ptr %hash_coef_ptr.i.i3.i2015, align 4, !noalias !23
  %tbl_size.i.i18.i2732 = load i64, ptr %tbl_size_ptr.i.i4.i2016, align 4, !noalias !23
  %offset_tbl.i.i19.i2733 = load ptr, ptr %offset_tbl_ptr.i.i5.i2017, align 8, !noalias !23
  %product.i.i.i20.i2734 = mul i64 %hash_coef.i.i17.i2731, 4015701072841558310
  %shifted.i.i.i21.i2735 = lshr i64 %product.i.i.i20.i2734, 32
  %xored.i.i.i22.i2736 = xor i64 %shifted.i.i.i21.i2735, %product.i.i.i20.i2734
  %hash.i.i.i23.i2737 = and i64 %xored.i.i.i22.i2736, %tbl_size.i.i18.i2732
  %offset_ptr.i.i24.i2738 = getelementptr i32, ptr %offset_tbl.i.i19.i2733, i64 %hash.i.i.i23.i2737
  %offset.i.i39.i2739 = load i32, ptr %offset_ptr.i.i24.i2738, align 4, !noalias !213
  %1302 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1303 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1304 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1305

1305:                                             ; preds = %.cont.i2762, %1297
  %.0308.i2740 = phi i32 [ 0, %1297 ], [ %1338, %.cont.i2762 ]
  %.070307.i2741 = phi i1 [ true, %1297 ], [ %1339, %.cont.i2762 ]
  %.sroa.0.0306.i2742 = phi ptr [ %1294, %1297 ], [ %1328, %.cont.i2762 ]
  %.sroa.6.0305.i2743.in = phi i64 [ %1299, %1297 ], [ %1330, %.cont.i2762 ]
  %.sroa.12.0304.i2744.in = phi i64 [ %1300, %1297 ], [ %1331, %.cont.i2762 ]
  %.sroa.17.0303.i2745 = phi i32 [ %offset.i.i39.i2739, %1297 ], [ %offset.i.i71.i2776, %.cont.i2762 ]
  %.sroa.12.0304.i2744 = inttoptr i64 %.sroa.12.0304.i2744.in to ptr
  %.sroa.6.0305.i2743 = inttoptr i64 %.sroa.6.0305.i2743.in to ptr
  %1306 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2742, 0
  %1307 = insertvalue { ptr, ptr, ptr, i32 } %1306, ptr %.sroa.6.0305.i2743, 1
  %1308 = insertvalue { ptr, ptr, ptr, i32 } %1307, ptr %.sroa.12.0304.i2744, 2
  %1309 = insertvalue { ptr, ptr, ptr, i32 } %1308, i32 %.sroa.17.0303.i2745, 3
  %1310 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2742)
  %1311 = sext i32 %.sroa.17.0303.i2745 to i64
  %1312 = getelementptr ptr, ptr %.sroa.0.0306.i2742, i64 %1311
  %1313 = getelementptr i8, ptr %1312, i64 64
  %1314 = load ptr, ptr %1313, align 8
  %result.i43.i2746 = call ptr %1314({ ptr, ptr, ptr, i32 } %1309, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1315 = call i32 %result.i43.i2746({ ptr, ptr, ptr, i32 } %1309, { ptr, ptr, ptr, i32 } %1309, ptr nonnull align 8 %2) #42
  %..i2747 = select i1 %.070307.i2741, ptr %24, ptr %26
  %.184.i2748 = select i1 %.070307.i2741, i64 104, i64 112
  %.185.i2749 = select i1 %.070307.i2741, ptr %25, ptr %27
  %.186.i2750 = select i1 %.070307.i2741, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2747, align 8
  %1316 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2747)
  %1317 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2748
  %1318 = load ptr, ptr %1317, align 8
  store ptr @i32_typ, ptr %.185.i2749, align 8
  %result.i44.i2751 = call ptr %1318({ ptr, ptr, ptr, i32 } %118, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2749) #45
  %1319 = call i32 %result.i44.i2751({ ptr, ptr, ptr, i32 } %118, { ptr, ptr, ptr, i32 } %118, ptr nonnull align 8 dereferenceable(8) %..i2747, i32 %1315) #42
  %1320 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1321 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2750
  %1322 = load ptr, ptr %1321, align 8
  %1323 = load ptr, ptr %1322, align 8
  %1324 = call { ptr } %1323(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i2752 = extractvalue { ptr } %1324, 0
  %1325 = sext i32 %1319 to i64
  %1326 = shl nsw i64 %1325, 5
  %1327 = getelementptr i8, ptr %.fca.0.extract53.i2752, i64 %1326
  %1328 = load ptr, ptr %1327, align 8
  %1329 = getelementptr i8, ptr %1327, i64 8
  %1330 = load i64, ptr %1329, align 4
  %.sroa_idx.i2753 = getelementptr i8, ptr %1327, i64 16
  %1331 = load i64, ptr %.sroa_idx.i2753, align 4
  %1332 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1333 = call { ptr } %1323(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i2754 = extractvalue { ptr } %1333, 0
  %1334 = getelementptr i8, ptr %.fca.0.extract51.i2754, i64 %1326
  store ptr %.sroa.0.0306.i2742, ptr %1334, align 8
  %1335 = getelementptr i8, ptr %1334, i64 8
  store i64 %.sroa.6.0305.i2743.in, ptr %1335, align 4
  %.sroa_idx100.i2755 = getelementptr i8, ptr %1334, i64 16
  store i64 %.sroa.12.0304.i2744.in, ptr %.sroa_idx100.i2755, align 4
  %.sroa_idx101.i2756 = getelementptr i8, ptr %1334, i64 24
  store i32 %.sroa.17.0303.i2745, ptr %.sroa_idx101.i2756, align 4
  %1336 = icmp ne ptr %1328, @nil_typ
  %1337 = icmp ne ptr %1328, null
  %.not90.i2757 = and i1 %1336, %1337
  br i1 %.not90.i2757, label %.cont.i2762, label %1343

.cont.i2762:                                      ; preds = %1305
  %1338 = add nuw nsw i32 %.0308.i2740, 1
  %1339 = xor i1 %.070307.i2741, true
  %hash_coef_ptr.i.i60.i2765 = getelementptr i8, ptr %1328, i64 8
  %tbl_size_ptr.i.i61.i2766 = getelementptr i8, ptr %1328, i64 16
  %offset_tbl_ptr.i.i62.i2767 = getelementptr i8, ptr %1328, i64 40
  %hash_coef.i.i63.i2768 = load i64, ptr %hash_coef_ptr.i.i60.i2765, align 4
  %tbl_size.i.i64.i2769 = load i64, ptr %tbl_size_ptr.i.i61.i2766, align 4
  %offset_tbl.i.i65.i2770 = load ptr, ptr %offset_tbl_ptr.i.i62.i2767, align 8
  %product.i.i.i66.i2771 = mul i64 %hash_coef.i.i63.i2768, 4015701072841558310
  %shifted.i.i.i67.i2772 = lshr i64 %product.i.i.i66.i2771, 32
  %xored.i.i.i68.i2773 = xor i64 %shifted.i.i.i67.i2772, %product.i.i.i66.i2771
  %hash.i.i.i69.i2774 = and i64 %xored.i.i.i68.i2773, %tbl_size.i.i64.i2769
  %offset_ptr.i.i70.i2775 = getelementptr i32, ptr %offset_tbl.i.i65.i2770, i64 %hash.i.i.i69.i2774
  %offset.i.i71.i2776 = load i32, ptr %offset_ptr.i.i70.i2775, align 4
  %1340 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1341 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1342 = icmp ult i32 %.0308.i2740, 99
  br i1 %1342, label %1305, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2785

1343:                                             ; preds = %1305
  %1344 = load i32, ptr %110, align 4
  %1345 = add i32 %1344, 1
  %1346 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1345, ptr %110, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2785

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2785: ; preds = %.cont.i2762, %1343
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %24)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %25)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %26)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %27)
  br label %._crit_edge.i2013

._crit_edge.i2013:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2785, %.lr.ph.i1998
  %1347 = add nuw nsw i32 %.045.i2011, 1
  %1348 = icmp slt i32 %1347, %1281
  br i1 %1348, label %.lr.ph.i1998, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2031

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2031: ; preds = %._crit_edge.i2013, %._crit_edge.i2048
  %.045.i2046 = phi i32 [ %1405, %._crit_edge.i2048 ], [ 0, %._crit_edge.i2013 ]
  %1349 = zext nneg i32 %.045.i2046 to i64
  %1350 = shl nuw nsw i64 %1349, 5
  %1351 = getelementptr i8, ptr %1286, i64 %1350
  %1352 = load ptr, ptr %1351, align 8
  %1353 = icmp ne ptr %1352, @nil_typ
  %1354 = icmp ne ptr %1352, null
  %.not16.i2047 = and i1 %1353, %1354
  br i1 %.not16.i2047, label %1355, label %._crit_edge.i2048

1355:                                             ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2031
  %1356 = getelementptr i8, ptr %1351, i64 8
  %1357 = load i64, ptr %1356, align 4
  %.sroa_idx.i2049 = getelementptr i8, ptr %1351, i64 16
  %1358 = load i64, ptr %.sroa_idx.i2049, align 4
  %hash_coef_ptr.i.i3.i2050 = getelementptr i8, ptr %1352, i64 8
  %tbl_size_ptr.i.i4.i2051 = getelementptr i8, ptr %1352, i64 16
  %offset_tbl_ptr.i.i5.i2052 = getelementptr i8, ptr %1352, i64 40
  %1359 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %20)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %21)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %22)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %23)
  %hash_coef.i.i17.i2803 = load i64, ptr %hash_coef_ptr.i.i3.i2050, align 4, !noalias !23
  %tbl_size.i.i18.i2804 = load i64, ptr %tbl_size_ptr.i.i4.i2051, align 4, !noalias !23
  %offset_tbl.i.i19.i2805 = load ptr, ptr %offset_tbl_ptr.i.i5.i2052, align 8, !noalias !23
  %product.i.i.i20.i2806 = mul i64 %hash_coef.i.i17.i2803, 4015701072841558310
  %shifted.i.i.i21.i2807 = lshr i64 %product.i.i.i20.i2806, 32
  %xored.i.i.i22.i2808 = xor i64 %shifted.i.i.i21.i2807, %product.i.i.i20.i2806
  %hash.i.i.i23.i2809 = and i64 %xored.i.i.i22.i2808, %tbl_size.i.i18.i2804
  %offset_ptr.i.i24.i2810 = getelementptr i32, ptr %offset_tbl.i.i19.i2805, i64 %hash.i.i.i23.i2809
  %offset.i.i39.i2811 = load i32, ptr %offset_ptr.i.i24.i2810, align 4, !noalias !216
  %1360 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1361 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1362 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1363

1363:                                             ; preds = %.cont.i2834, %1355
  %.0308.i2812 = phi i32 [ 0, %1355 ], [ %1396, %.cont.i2834 ]
  %.070307.i2813 = phi i1 [ true, %1355 ], [ %1397, %.cont.i2834 ]
  %.sroa.0.0306.i2814 = phi ptr [ %1352, %1355 ], [ %1386, %.cont.i2834 ]
  %.sroa.6.0305.i2815.in = phi i64 [ %1357, %1355 ], [ %1388, %.cont.i2834 ]
  %.sroa.12.0304.i2816.in = phi i64 [ %1358, %1355 ], [ %1389, %.cont.i2834 ]
  %.sroa.17.0303.i2817 = phi i32 [ %offset.i.i39.i2811, %1355 ], [ %offset.i.i71.i2848, %.cont.i2834 ]
  %.sroa.12.0304.i2816 = inttoptr i64 %.sroa.12.0304.i2816.in to ptr
  %.sroa.6.0305.i2815 = inttoptr i64 %.sroa.6.0305.i2815.in to ptr
  %1364 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2814, 0
  %1365 = insertvalue { ptr, ptr, ptr, i32 } %1364, ptr %.sroa.6.0305.i2815, 1
  %1366 = insertvalue { ptr, ptr, ptr, i32 } %1365, ptr %.sroa.12.0304.i2816, 2
  %1367 = insertvalue { ptr, ptr, ptr, i32 } %1366, i32 %.sroa.17.0303.i2817, 3
  %1368 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2814)
  %1369 = sext i32 %.sroa.17.0303.i2817 to i64
  %1370 = getelementptr ptr, ptr %.sroa.0.0306.i2814, i64 %1369
  %1371 = getelementptr i8, ptr %1370, i64 64
  %1372 = load ptr, ptr %1371, align 8
  %result.i43.i2818 = call ptr %1372({ ptr, ptr, ptr, i32 } %1367, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1373 = call i32 %result.i43.i2818({ ptr, ptr, ptr, i32 } %1367, { ptr, ptr, ptr, i32 } %1367, ptr nonnull align 8 %2) #42
  %..i2819 = select i1 %.070307.i2813, ptr %20, ptr %22
  %.184.i2820 = select i1 %.070307.i2813, i64 104, i64 112
  %.185.i2821 = select i1 %.070307.i2813, ptr %21, ptr %23
  %.186.i2822 = select i1 %.070307.i2813, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2819, align 8
  %1374 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2819)
  %1375 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2820
  %1376 = load ptr, ptr %1375, align 8
  store ptr @i32_typ, ptr %.185.i2821, align 8
  %result.i44.i2823 = call ptr %1376({ ptr, ptr, ptr, i32 } %118, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2821) #45
  %1377 = call i32 %result.i44.i2823({ ptr, ptr, ptr, i32 } %118, { ptr, ptr, ptr, i32 } %118, ptr nonnull align 8 dereferenceable(8) %..i2819, i32 %1373) #42
  %1378 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1379 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2822
  %1380 = load ptr, ptr %1379, align 8
  %1381 = load ptr, ptr %1380, align 8
  %1382 = call { ptr } %1381(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i2824 = extractvalue { ptr } %1382, 0
  %1383 = sext i32 %1377 to i64
  %1384 = shl nsw i64 %1383, 5
  %1385 = getelementptr i8, ptr %.fca.0.extract53.i2824, i64 %1384
  %1386 = load ptr, ptr %1385, align 8
  %1387 = getelementptr i8, ptr %1385, i64 8
  %1388 = load i64, ptr %1387, align 4
  %.sroa_idx.i2825 = getelementptr i8, ptr %1385, i64 16
  %1389 = load i64, ptr %.sroa_idx.i2825, align 4
  %1390 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1391 = call { ptr } %1381(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i2826 = extractvalue { ptr } %1391, 0
  %1392 = getelementptr i8, ptr %.fca.0.extract51.i2826, i64 %1384
  store ptr %.sroa.0.0306.i2814, ptr %1392, align 8
  %1393 = getelementptr i8, ptr %1392, i64 8
  store i64 %.sroa.6.0305.i2815.in, ptr %1393, align 4
  %.sroa_idx100.i2827 = getelementptr i8, ptr %1392, i64 16
  store i64 %.sroa.12.0304.i2816.in, ptr %.sroa_idx100.i2827, align 4
  %.sroa_idx101.i2828 = getelementptr i8, ptr %1392, i64 24
  store i32 %.sroa.17.0303.i2817, ptr %.sroa_idx101.i2828, align 4
  %1394 = icmp ne ptr %1386, @nil_typ
  %1395 = icmp ne ptr %1386, null
  %.not90.i2829 = and i1 %1394, %1395
  br i1 %.not90.i2829, label %.cont.i2834, label %1401

.cont.i2834:                                      ; preds = %1363
  %1396 = add nuw nsw i32 %.0308.i2812, 1
  %1397 = xor i1 %.070307.i2813, true
  %hash_coef_ptr.i.i60.i2837 = getelementptr i8, ptr %1386, i64 8
  %tbl_size_ptr.i.i61.i2838 = getelementptr i8, ptr %1386, i64 16
  %offset_tbl_ptr.i.i62.i2839 = getelementptr i8, ptr %1386, i64 40
  %hash_coef.i.i63.i2840 = load i64, ptr %hash_coef_ptr.i.i60.i2837, align 4
  %tbl_size.i.i64.i2841 = load i64, ptr %tbl_size_ptr.i.i61.i2838, align 4
  %offset_tbl.i.i65.i2842 = load ptr, ptr %offset_tbl_ptr.i.i62.i2839, align 8
  %product.i.i.i66.i2843 = mul i64 %hash_coef.i.i63.i2840, 4015701072841558310
  %shifted.i.i.i67.i2844 = lshr i64 %product.i.i.i66.i2843, 32
  %xored.i.i.i68.i2845 = xor i64 %shifted.i.i.i67.i2844, %product.i.i.i66.i2843
  %hash.i.i.i69.i2846 = and i64 %xored.i.i.i68.i2845, %tbl_size.i.i64.i2841
  %offset_ptr.i.i70.i2847 = getelementptr i32, ptr %offset_tbl.i.i65.i2842, i64 %hash.i.i.i69.i2846
  %offset.i.i71.i2848 = load i32, ptr %offset_ptr.i.i70.i2847, align 4
  %1398 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1399 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1400 = icmp ult i32 %.0308.i2812, 99
  br i1 %1400, label %1363, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2857

1401:                                             ; preds = %1363
  %1402 = load i32, ptr %110, align 4
  %1403 = add i32 %1402, 1
  %1404 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1403, ptr %110, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2857

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2857: ; preds = %.cont.i2834, %1401
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %20)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %21)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %22)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %23)
  br label %._crit_edge.i2048

._crit_edge.i2048:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2857, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2031
  %1405 = add nuw nsw i32 %.045.i2046, 1
  %1406 = icmp slt i32 %1405, %1281
  br i1 %1406, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2031, label %._crit_edge.i485

._crit_edge.i485:                                 ; preds = %._crit_edge.i2048, %1282, %1279
  %1407 = load ptr, ptr %result.i51, align 8
  %1408 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1409 = load ptr, ptr %93, align 8
  %1410 = load ptr, ptr %1407, align 8
  %1411 = getelementptr i8, ptr %1410, i64 72
  %1412 = load ptr, ptr %1411, align 8
  %result.i.i.i488 = call { i64, i64 } %1412(ptr nocapture nofree nonnull readonly align 8 %1407) #41
  %1413 = extractvalue { i64, i64 } %result.i.i.i488, 0
  %1414 = extractvalue { i64, i64 } %result.i.i.i488, 1
  %1415 = urem i64 20, %1414
  %1416 = icmp eq i64 %1415, 0
  %1417 = sub i64 %1414, %1415
  %1418 = select i1 %1416, i64 0, i64 %1417
  %1419 = add i64 %1413, 20
  %1420 = add i64 %1419, %1418
  %1421 = load ptr, ptr %1409, align 8
  %1422 = getelementptr i8, ptr %1421, i64 72
  %1423 = load ptr, ptr %1422, align 8
  %result.i1.i.i489 = call { i64, i64 } %1423(ptr nocapture nofree nonnull readonly align 8 %1409) #41
  %1424 = extractvalue { i64, i64 } %result.i1.i.i489, 0
  %1425 = extractvalue { i64, i64 } %result.i1.i.i489, 1
  %1426 = call i64 @llvm.umax.i64(i64 %1414, i64 %1425) #38
  %1427 = call i64 @llvm.umax.i64(i64 %1426, i64 noundef 8) #38, !range !16
  %1428 = urem i64 %1420, %1425
  %1429 = icmp eq i64 %1428, 0
  %1430 = sub i64 %1425, %1428
  %1431 = select i1 %1429, i64 0, i64 %1430
  %1432 = add i64 %1424, %1420
  %1433 = add i64 %1432, %1431
  %1434 = urem i64 %1433, %1427
  %1435 = icmp eq i64 %1434, 0
  %1436 = sub i64 %1427, %1434
  %1437 = select i1 %1435, i64 0, i64 %1436
  %1438 = add i64 %1437, %1433
  %result.i16.i490 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %1438, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %1407, ptr %result.i16.i490, align 8
  %1439 = getelementptr inbounds i8, ptr %result.i16.i490, i64 8
  store ptr %1409, ptr %1439, align 8
  %1440 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i16.i490)
  %1441 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1442 = load ptr, ptr %1407, align 8
  %1443 = getelementptr i8, ptr %1442, i64 72
  %1444 = load ptr, ptr %1443, align 8
  %result.i.i110.i491 = call { i64, i64 } %1444(ptr nocapture nofree nonnull readonly align 8 %1407) #41
  %1445 = extractvalue { i64, i64 } %result.i.i110.i491, 1
  %1446 = urem i64 20, %1445
  %1447 = icmp eq i64 %1446, 0
  %reass.sub = sub i64 %1445, %1446
  %1448 = add i64 %reass.sub, 20
  %1449 = select i1 %1447, i64 20, i64 %1448
  %1450 = getelementptr i8, ptr %result.i16.i490, i64 %1449
  %1451 = getelementptr i8, ptr %1442, i64 64
  %1452 = load ptr, ptr %1451, align 8
  call void %1452({ ptr, i160 } %124, ptr nocapture nofree nonnull readonly align 8 %1407, ptr nocapture nofree writeonly %1450) #49
  %1453 = load ptr, ptr %result.i16.i490, align 8
  %1454 = load ptr, ptr %1453, align 8
  %1455 = getelementptr i8, ptr %1454, i64 72
  %1456 = load ptr, ptr %1455, align 8
  %result.i.i111.i493 = call { i64, i64 } %1456(ptr nocapture nofree nonnull readonly align 8 %1453) #41
  %1457 = extractvalue { i64, i64 } %result.i.i111.i493, 0
  %1458 = extractvalue { i64, i64 } %result.i.i111.i493, 1
  %1459 = urem i64 20, %1458
  %1460 = icmp eq i64 %1459, 0
  %1461 = sub i64 %1458, %1459
  %1462 = select i1 %1460, i64 0, i64 %1461
  %1463 = add i64 %1457, 20
  %1464 = add i64 %1463, %1462
  %1465 = load ptr, ptr %1439, align 8
  %1466 = load ptr, ptr %1465, align 8
  %1467 = getelementptr i8, ptr %1466, i64 72
  %1468 = load ptr, ptr %1467, align 8
  %result.i1.i112.i494 = call { i64, i64 } %1468(ptr nocapture nofree nonnull readonly align 8 %1465) #41
  %1469 = extractvalue { i64, i64 } %result.i1.i112.i494, 1
  %1470 = urem i64 %1464, %1469
  %1471 = icmp eq i64 %1470, 0
  %1472 = sub i64 %1469, %1470
  %1473 = select i1 %1471, i64 0, i64 %1472
  %1474 = getelementptr i8, ptr %result.i16.i490, i64 %1464
  %1475 = getelementptr i8, ptr %1474, i64 %1473
  %1476 = getelementptr i8, ptr %1466, i64 64
  %1477 = load ptr, ptr %1476, align 8
  call void %1477({ ptr, i160 } %1037, ptr nocapture nofree nonnull readonly align 8 %1465, ptr nocapture nofree writeonly %1475) #49
  %1478 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %1479 = getelementptr inbounds i8, ptr %result.i16.i490, i64 16
  store i32 %1039, ptr %1479, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %56)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %57)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %58)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %59)
  %1480 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1481 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1482 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1483

1483:                                             ; preds = %.cont.i1272, %._crit_edge.i485
  %.0308.i1250 = phi i32 [ 0, %._crit_edge.i485 ], [ %1518, %.cont.i1272 ]
  %.070307.i1251 = phi i1 [ true, %._crit_edge.i485 ], [ %1519, %.cont.i1272 ]
  %.sroa.0.0306.i1252 = phi ptr [ @Entry, %._crit_edge.i485 ], [ %1506, %.cont.i1272 ]
  %.sroa.6.0305.i1253 = phi ptr [ %result.i16.i490, %._crit_edge.i485 ], [ %.sroa.speculated111.i1273, %.cont.i1272 ]
  %.sroa.12.0304.i1254 = phi ptr [ undef, %._crit_edge.i485 ], [ %.sroa.speculated105.i1274, %.cont.i1272 ]
  %.sroa.17.0303.i1255 = phi i32 [ 10, %._crit_edge.i485 ], [ %offset.i.i71.i1286, %.cont.i1272 ]
  %1484 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1252, 0
  %1485 = insertvalue { ptr, ptr, ptr, i32 } %1484, ptr %.sroa.6.0305.i1253, 1
  %1486 = insertvalue { ptr, ptr, ptr, i32 } %1485, ptr %.sroa.12.0304.i1254, 2
  %1487 = insertvalue { ptr, ptr, ptr, i32 } %1486, i32 %.sroa.17.0303.i1255, 3
  %1488 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1252)
  %1489 = sext i32 %.sroa.17.0303.i1255 to i64
  %1490 = getelementptr ptr, ptr %.sroa.0.0306.i1252, i64 %1489
  %1491 = getelementptr i8, ptr %1490, i64 64
  %1492 = load ptr, ptr %1491, align 8
  %result.i43.i1256 = call ptr %1492({ ptr, ptr, ptr, i32 } %1487, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1493 = call i32 %result.i43.i1256({ ptr, ptr, ptr, i32 } %1487, { ptr, ptr, ptr, i32 } %1487, ptr nonnull align 8 %2) #42
  %..i1257 = select i1 %.070307.i1251, ptr %56, ptr %58
  %.184.i1258 = select i1 %.070307.i1251, i64 104, i64 112
  %.185.i1259 = select i1 %.070307.i1251, ptr %57, ptr %59
  %.186.i1260 = select i1 %.070307.i1251, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1257, align 8
  %1494 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1257)
  %1495 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1258
  %1496 = load ptr, ptr %1495, align 8
  store ptr @i32_typ, ptr %.185.i1259, align 8
  %result.i44.i1261 = call ptr %1496({ ptr, ptr, ptr, i32 } %113, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1259) #45
  %1497 = call i32 %result.i44.i1261({ ptr, ptr, ptr, i32 } %113, { ptr, ptr, ptr, i32 } %113, ptr nonnull align 8 dereferenceable(8) %..i1257, i32 %1493) #42
  %1498 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1499 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1260
  %1500 = load ptr, ptr %1499, align 8
  %1501 = load ptr, ptr %1500, align 8
  %1502 = call { ptr } %1501(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i1262 = extractvalue { ptr } %1502, 0
  %1503 = sext i32 %1497 to i64
  %1504 = shl nsw i64 %1503, 5
  %1505 = getelementptr i8, ptr %.fca.0.extract53.i1262, i64 %1504
  %1506 = load ptr, ptr %1505, align 8
  %1507 = getelementptr i8, ptr %1505, i64 8
  %1508 = load i64, ptr %1507, align 4
  %.sroa_idx.i1263 = getelementptr i8, ptr %1505, i64 16
  %1509 = load i64, ptr %.sroa_idx.i1263, align 4
  %1510 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1511 = call { ptr } %1501(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i1264 = extractvalue { ptr } %1511, 0
  %1512 = getelementptr i8, ptr %.fca.0.extract51.i1264, i64 %1504
  store ptr %.sroa.0.0306.i1252, ptr %1512, align 8
  %1513 = getelementptr i8, ptr %1512, i64 8
  %1514 = ptrtoint ptr %.sroa.6.0305.i1253 to i64
  %1515 = ptrtoint ptr %.sroa.12.0304.i1254 to i64
  store i64 %1514, ptr %1513, align 4
  %.sroa_idx100.i1265 = getelementptr i8, ptr %1512, i64 16
  store i64 %1515, ptr %.sroa_idx100.i1265, align 4
  %.sroa_idx101.i1266 = getelementptr i8, ptr %1512, i64 24
  store i32 %.sroa.17.0303.i1255, ptr %.sroa_idx101.i1266, align 4
  %1516 = icmp ne ptr %1506, @nil_typ
  %1517 = icmp ne ptr %1506, null
  %.not90.i1267 = and i1 %1516, %1517
  br i1 %.not90.i1267, label %.cont.i1272, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1295

.cont.i1272:                                      ; preds = %1483
  %1518 = add nuw nsw i32 %.0308.i1250, 1
  %1519 = xor i1 %.070307.i1251, true
  %.sroa.speculated111.i1273 = inttoptr i64 %1508 to ptr
  %.sroa.speculated105.i1274 = inttoptr i64 %1509 to ptr
  %hash_coef_ptr.i.i60.i1275 = getelementptr i8, ptr %1506, i64 8
  %tbl_size_ptr.i.i61.i1276 = getelementptr i8, ptr %1506, i64 16
  %offset_tbl_ptr.i.i62.i1277 = getelementptr i8, ptr %1506, i64 40
  %hash_coef.i.i63.i1278 = load i64, ptr %hash_coef_ptr.i.i60.i1275, align 4
  %tbl_size.i.i64.i1279 = load i64, ptr %tbl_size_ptr.i.i61.i1276, align 4
  %offset_tbl.i.i65.i1280 = load ptr, ptr %offset_tbl_ptr.i.i62.i1277, align 8
  %product.i.i.i66.i1281 = mul i64 %hash_coef.i.i63.i1278, 4015701072841558310
  %shifted.i.i.i67.i1282 = lshr i64 %product.i.i.i66.i1281, 32
  %xored.i.i.i68.i1283 = xor i64 %shifted.i.i.i67.i1282, %product.i.i.i66.i1281
  %hash.i.i.i69.i1284 = and i64 %xored.i.i.i68.i1283, %tbl_size.i.i64.i1279
  %offset_ptr.i.i70.i1285 = getelementptr i32, ptr %offset_tbl.i.i65.i1280, i64 %hash.i.i.i69.i1284
  %offset.i.i71.i1286 = load i32, ptr %offset_ptr.i.i70.i1285, align 4
  %1520 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1521 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1522 = icmp ult i32 %.0308.i1250, 99
  br i1 %1522, label %1483, label %1526

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1295: ; preds = %1483
  %1523 = load i32, ptr %110, align 4
  %1524 = add i32 %1523, 1
  %1525 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1524, ptr %110, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %56)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %57)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %58)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %59)
  br label %CuckooMap_insert_keyK_valueV.exit527

1526:                                             ; preds = %.cont.i1272
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %56)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %57)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %58)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %59)
  %1527 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1528 = load ptr, ptr %101, align 8
  %1529 = load ptr, ptr %102, align 8
  %1530 = load i32, ptr %100, align 8
  %1531 = shl i32 %1530, 1
  %spec.select.i1311 = call i32 @llvm.smax.i32(i32 %1531, i32 noundef 16) #37
  store i32 %spec.select.i1311, ptr %100, align 8
  %1532 = zext nneg i32 %spec.select.i1311 to i64
  %1533 = shl nuw nsw i64 %1532, 5
  %result.i.i1312 = call noalias ptr @bump_malloc_inner(i64 noundef %1533, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i1312, ptr %101, align 8
  %result.i1.i1313 = call noalias ptr @bump_malloc_inner(i64 noundef %1533, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i1313, ptr %102, align 8
  store i32 0, ptr %110, align 4
  %1534 = icmp sgt i32 %1530, 0
  br i1 %1534, label %.lr.ph.i2068, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2136

.lr.ph.i2068:                                     ; preds = %1526, %._crit_edge.i2083
  %.045.i2081 = phi i32 [ %1591, %._crit_edge.i2083 ], [ 0, %1526 ]
  %1535 = zext nneg i32 %.045.i2081 to i64
  %1536 = shl nuw nsw i64 %1535, 5
  %1537 = getelementptr i8, ptr %1528, i64 %1536
  %1538 = load ptr, ptr %1537, align 8
  %1539 = icmp ne ptr %1538, @nil_typ
  %1540 = icmp ne ptr %1538, null
  %.not16.i2082 = and i1 %1539, %1540
  br i1 %.not16.i2082, label %1541, label %._crit_edge.i2083

1541:                                             ; preds = %.lr.ph.i2068
  %1542 = getelementptr i8, ptr %1537, i64 8
  %1543 = load i64, ptr %1542, align 4
  %.sroa_idx.i2084 = getelementptr i8, ptr %1537, i64 16
  %1544 = load i64, ptr %.sroa_idx.i2084, align 4
  %hash_coef_ptr.i.i3.i2085 = getelementptr i8, ptr %1538, i64 8
  %tbl_size_ptr.i.i4.i2086 = getelementptr i8, ptr %1538, i64 16
  %offset_tbl_ptr.i.i5.i2087 = getelementptr i8, ptr %1538, i64 40
  %1545 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %16)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %17)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %18)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %19)
  %hash_coef.i.i17.i2875 = load i64, ptr %hash_coef_ptr.i.i3.i2085, align 4, !noalias !23
  %tbl_size.i.i18.i2876 = load i64, ptr %tbl_size_ptr.i.i4.i2086, align 4, !noalias !23
  %offset_tbl.i.i19.i2877 = load ptr, ptr %offset_tbl_ptr.i.i5.i2087, align 8, !noalias !23
  %product.i.i.i20.i2878 = mul i64 %hash_coef.i.i17.i2875, 4015701072841558310
  %shifted.i.i.i21.i2879 = lshr i64 %product.i.i.i20.i2878, 32
  %xored.i.i.i22.i2880 = xor i64 %shifted.i.i.i21.i2879, %product.i.i.i20.i2878
  %hash.i.i.i23.i2881 = and i64 %xored.i.i.i22.i2880, %tbl_size.i.i18.i2876
  %offset_ptr.i.i24.i2882 = getelementptr i32, ptr %offset_tbl.i.i19.i2877, i64 %hash.i.i.i23.i2881
  %offset.i.i39.i2883 = load i32, ptr %offset_ptr.i.i24.i2882, align 4, !noalias !219
  %1546 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1547 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1548 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1549

1549:                                             ; preds = %.cont.i2906, %1541
  %.0308.i2884 = phi i32 [ 0, %1541 ], [ %1582, %.cont.i2906 ]
  %.070307.i2885 = phi i1 [ true, %1541 ], [ %1583, %.cont.i2906 ]
  %.sroa.0.0306.i2886 = phi ptr [ %1538, %1541 ], [ %1572, %.cont.i2906 ]
  %.sroa.6.0305.i2887.in = phi i64 [ %1543, %1541 ], [ %1574, %.cont.i2906 ]
  %.sroa.12.0304.i2888.in = phi i64 [ %1544, %1541 ], [ %1575, %.cont.i2906 ]
  %.sroa.17.0303.i2889 = phi i32 [ %offset.i.i39.i2883, %1541 ], [ %offset.i.i71.i2920, %.cont.i2906 ]
  %.sroa.12.0304.i2888 = inttoptr i64 %.sroa.12.0304.i2888.in to ptr
  %.sroa.6.0305.i2887 = inttoptr i64 %.sroa.6.0305.i2887.in to ptr
  %1550 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2886, 0
  %1551 = insertvalue { ptr, ptr, ptr, i32 } %1550, ptr %.sroa.6.0305.i2887, 1
  %1552 = insertvalue { ptr, ptr, ptr, i32 } %1551, ptr %.sroa.12.0304.i2888, 2
  %1553 = insertvalue { ptr, ptr, ptr, i32 } %1552, i32 %.sroa.17.0303.i2889, 3
  %1554 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2886)
  %1555 = sext i32 %.sroa.17.0303.i2889 to i64
  %1556 = getelementptr ptr, ptr %.sroa.0.0306.i2886, i64 %1555
  %1557 = getelementptr i8, ptr %1556, i64 64
  %1558 = load ptr, ptr %1557, align 8
  %result.i43.i2890 = call ptr %1558({ ptr, ptr, ptr, i32 } %1553, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1559 = call i32 %result.i43.i2890({ ptr, ptr, ptr, i32 } %1553, { ptr, ptr, ptr, i32 } %1553, ptr nonnull align 8 %2) #42
  %..i2891 = select i1 %.070307.i2885, ptr %16, ptr %18
  %.184.i2892 = select i1 %.070307.i2885, i64 104, i64 112
  %.185.i2893 = select i1 %.070307.i2885, ptr %17, ptr %19
  %.186.i2894 = select i1 %.070307.i2885, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2891, align 8
  %1560 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2891)
  %1561 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2892
  %1562 = load ptr, ptr %1561, align 8
  store ptr @i32_typ, ptr %.185.i2893, align 8
  %result.i44.i2895 = call ptr %1562({ ptr, ptr, ptr, i32 } %118, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2893) #45
  %1563 = call i32 %result.i44.i2895({ ptr, ptr, ptr, i32 } %118, { ptr, ptr, ptr, i32 } %118, ptr nonnull align 8 dereferenceable(8) %..i2891, i32 %1559) #42
  %1564 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1565 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2894
  %1566 = load ptr, ptr %1565, align 8
  %1567 = load ptr, ptr %1566, align 8
  %1568 = call { ptr } %1567(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i2896 = extractvalue { ptr } %1568, 0
  %1569 = sext i32 %1563 to i64
  %1570 = shl nsw i64 %1569, 5
  %1571 = getelementptr i8, ptr %.fca.0.extract53.i2896, i64 %1570
  %1572 = load ptr, ptr %1571, align 8
  %1573 = getelementptr i8, ptr %1571, i64 8
  %1574 = load i64, ptr %1573, align 4
  %.sroa_idx.i2897 = getelementptr i8, ptr %1571, i64 16
  %1575 = load i64, ptr %.sroa_idx.i2897, align 4
  %1576 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1577 = call { ptr } %1567(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i2898 = extractvalue { ptr } %1577, 0
  %1578 = getelementptr i8, ptr %.fca.0.extract51.i2898, i64 %1570
  store ptr %.sroa.0.0306.i2886, ptr %1578, align 8
  %1579 = getelementptr i8, ptr %1578, i64 8
  store i64 %.sroa.6.0305.i2887.in, ptr %1579, align 4
  %.sroa_idx100.i2899 = getelementptr i8, ptr %1578, i64 16
  store i64 %.sroa.12.0304.i2888.in, ptr %.sroa_idx100.i2899, align 4
  %.sroa_idx101.i2900 = getelementptr i8, ptr %1578, i64 24
  store i32 %.sroa.17.0303.i2889, ptr %.sroa_idx101.i2900, align 4
  %1580 = icmp ne ptr %1572, @nil_typ
  %1581 = icmp ne ptr %1572, null
  %.not90.i2901 = and i1 %1580, %1581
  br i1 %.not90.i2901, label %.cont.i2906, label %1587

.cont.i2906:                                      ; preds = %1549
  %1582 = add nuw nsw i32 %.0308.i2884, 1
  %1583 = xor i1 %.070307.i2885, true
  %hash_coef_ptr.i.i60.i2909 = getelementptr i8, ptr %1572, i64 8
  %tbl_size_ptr.i.i61.i2910 = getelementptr i8, ptr %1572, i64 16
  %offset_tbl_ptr.i.i62.i2911 = getelementptr i8, ptr %1572, i64 40
  %hash_coef.i.i63.i2912 = load i64, ptr %hash_coef_ptr.i.i60.i2909, align 4
  %tbl_size.i.i64.i2913 = load i64, ptr %tbl_size_ptr.i.i61.i2910, align 4
  %offset_tbl.i.i65.i2914 = load ptr, ptr %offset_tbl_ptr.i.i62.i2911, align 8
  %product.i.i.i66.i2915 = mul i64 %hash_coef.i.i63.i2912, 4015701072841558310
  %shifted.i.i.i67.i2916 = lshr i64 %product.i.i.i66.i2915, 32
  %xored.i.i.i68.i2917 = xor i64 %shifted.i.i.i67.i2916, %product.i.i.i66.i2915
  %hash.i.i.i69.i2918 = and i64 %xored.i.i.i68.i2917, %tbl_size.i.i64.i2913
  %offset_ptr.i.i70.i2919 = getelementptr i32, ptr %offset_tbl.i.i65.i2914, i64 %hash.i.i.i69.i2918
  %offset.i.i71.i2920 = load i32, ptr %offset_ptr.i.i70.i2919, align 4
  %1584 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1585 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1586 = icmp ult i32 %.0308.i2884, 99
  br i1 %1586, label %1549, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2929

1587:                                             ; preds = %1549
  %1588 = load i32, ptr %110, align 4
  %1589 = add i32 %1588, 1
  %1590 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1589, ptr %110, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2929

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2929: ; preds = %.cont.i2906, %1587
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %16)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %17)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %18)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %19)
  br label %._crit_edge.i2083

._crit_edge.i2083:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2929, %.lr.ph.i2068
  %1591 = add nuw nsw i32 %.045.i2081, 1
  %1592 = icmp slt i32 %1591, %1530
  br i1 %1592, label %.lr.ph.i2068, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2101

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2101: ; preds = %._crit_edge.i2083, %._crit_edge.i2118
  %.045.i2116 = phi i32 [ %1649, %._crit_edge.i2118 ], [ 0, %._crit_edge.i2083 ]
  %1593 = zext nneg i32 %.045.i2116 to i64
  %1594 = shl nuw nsw i64 %1593, 5
  %1595 = getelementptr i8, ptr %1529, i64 %1594
  %1596 = load ptr, ptr %1595, align 8
  %1597 = icmp ne ptr %1596, @nil_typ
  %1598 = icmp ne ptr %1596, null
  %.not16.i2117 = and i1 %1597, %1598
  br i1 %.not16.i2117, label %1599, label %._crit_edge.i2118

1599:                                             ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2101
  %1600 = getelementptr i8, ptr %1595, i64 8
  %1601 = load i64, ptr %1600, align 4
  %.sroa_idx.i2119 = getelementptr i8, ptr %1595, i64 16
  %1602 = load i64, ptr %.sroa_idx.i2119, align 4
  %hash_coef_ptr.i.i3.i2120 = getelementptr i8, ptr %1596, i64 8
  %tbl_size_ptr.i.i4.i2121 = getelementptr i8, ptr %1596, i64 16
  %offset_tbl_ptr.i.i5.i2122 = getelementptr i8, ptr %1596, i64 40
  %1603 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %12)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %13)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %14)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %15)
  %hash_coef.i.i17.i2947 = load i64, ptr %hash_coef_ptr.i.i3.i2120, align 4, !noalias !23
  %tbl_size.i.i18.i2948 = load i64, ptr %tbl_size_ptr.i.i4.i2121, align 4, !noalias !23
  %offset_tbl.i.i19.i2949 = load ptr, ptr %offset_tbl_ptr.i.i5.i2122, align 8, !noalias !23
  %product.i.i.i20.i2950 = mul i64 %hash_coef.i.i17.i2947, 4015701072841558310
  %shifted.i.i.i21.i2951 = lshr i64 %product.i.i.i20.i2950, 32
  %xored.i.i.i22.i2952 = xor i64 %shifted.i.i.i21.i2951, %product.i.i.i20.i2950
  %hash.i.i.i23.i2953 = and i64 %xored.i.i.i22.i2952, %tbl_size.i.i18.i2948
  %offset_ptr.i.i24.i2954 = getelementptr i32, ptr %offset_tbl.i.i19.i2949, i64 %hash.i.i.i23.i2953
  %offset.i.i39.i2955 = load i32, ptr %offset_ptr.i.i24.i2954, align 4, !noalias !222
  %1604 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1605 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1606 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1607

1607:                                             ; preds = %.cont.i2978, %1599
  %.0308.i2956 = phi i32 [ 0, %1599 ], [ %1640, %.cont.i2978 ]
  %.070307.i2957 = phi i1 [ true, %1599 ], [ %1641, %.cont.i2978 ]
  %.sroa.0.0306.i2958 = phi ptr [ %1596, %1599 ], [ %1630, %.cont.i2978 ]
  %.sroa.6.0305.i2959.in = phi i64 [ %1601, %1599 ], [ %1632, %.cont.i2978 ]
  %.sroa.12.0304.i2960.in = phi i64 [ %1602, %1599 ], [ %1633, %.cont.i2978 ]
  %.sroa.17.0303.i2961 = phi i32 [ %offset.i.i39.i2955, %1599 ], [ %offset.i.i71.i2992, %.cont.i2978 ]
  %.sroa.12.0304.i2960 = inttoptr i64 %.sroa.12.0304.i2960.in to ptr
  %.sroa.6.0305.i2959 = inttoptr i64 %.sroa.6.0305.i2959.in to ptr
  %1608 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2958, 0
  %1609 = insertvalue { ptr, ptr, ptr, i32 } %1608, ptr %.sroa.6.0305.i2959, 1
  %1610 = insertvalue { ptr, ptr, ptr, i32 } %1609, ptr %.sroa.12.0304.i2960, 2
  %1611 = insertvalue { ptr, ptr, ptr, i32 } %1610, i32 %.sroa.17.0303.i2961, 3
  %1612 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2958)
  %1613 = sext i32 %.sroa.17.0303.i2961 to i64
  %1614 = getelementptr ptr, ptr %.sroa.0.0306.i2958, i64 %1613
  %1615 = getelementptr i8, ptr %1614, i64 64
  %1616 = load ptr, ptr %1615, align 8
  %result.i43.i2962 = call ptr %1616({ ptr, ptr, ptr, i32 } %1611, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1617 = call i32 %result.i43.i2962({ ptr, ptr, ptr, i32 } %1611, { ptr, ptr, ptr, i32 } %1611, ptr nonnull align 8 %2) #42
  %..i2963 = select i1 %.070307.i2957, ptr %12, ptr %14
  %.184.i2964 = select i1 %.070307.i2957, i64 104, i64 112
  %.185.i2965 = select i1 %.070307.i2957, ptr %13, ptr %15
  %.186.i2966 = select i1 %.070307.i2957, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2963, align 8
  %1618 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2963)
  %1619 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2964
  %1620 = load ptr, ptr %1619, align 8
  store ptr @i32_typ, ptr %.185.i2965, align 8
  %result.i44.i2967 = call ptr %1620({ ptr, ptr, ptr, i32 } %118, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2965) #45
  %1621 = call i32 %result.i44.i2967({ ptr, ptr, ptr, i32 } %118, { ptr, ptr, ptr, i32 } %118, ptr nonnull align 8 dereferenceable(8) %..i2963, i32 %1617) #42
  %1622 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1623 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2966
  %1624 = load ptr, ptr %1623, align 8
  %1625 = load ptr, ptr %1624, align 8
  %1626 = call { ptr } %1625(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i2968 = extractvalue { ptr } %1626, 0
  %1627 = sext i32 %1621 to i64
  %1628 = shl nsw i64 %1627, 5
  %1629 = getelementptr i8, ptr %.fca.0.extract53.i2968, i64 %1628
  %1630 = load ptr, ptr %1629, align 8
  %1631 = getelementptr i8, ptr %1629, i64 8
  %1632 = load i64, ptr %1631, align 4
  %.sroa_idx.i2969 = getelementptr i8, ptr %1629, i64 16
  %1633 = load i64, ptr %.sroa_idx.i2969, align 4
  %1634 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1635 = call { ptr } %1625(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i2970 = extractvalue { ptr } %1635, 0
  %1636 = getelementptr i8, ptr %.fca.0.extract51.i2970, i64 %1628
  store ptr %.sroa.0.0306.i2958, ptr %1636, align 8
  %1637 = getelementptr i8, ptr %1636, i64 8
  store i64 %.sroa.6.0305.i2959.in, ptr %1637, align 4
  %.sroa_idx100.i2971 = getelementptr i8, ptr %1636, i64 16
  store i64 %.sroa.12.0304.i2960.in, ptr %.sroa_idx100.i2971, align 4
  %.sroa_idx101.i2972 = getelementptr i8, ptr %1636, i64 24
  store i32 %.sroa.17.0303.i2961, ptr %.sroa_idx101.i2972, align 4
  %1638 = icmp ne ptr %1630, @nil_typ
  %1639 = icmp ne ptr %1630, null
  %.not90.i2973 = and i1 %1638, %1639
  br i1 %.not90.i2973, label %.cont.i2978, label %1645

.cont.i2978:                                      ; preds = %1607
  %1640 = add nuw nsw i32 %.0308.i2956, 1
  %1641 = xor i1 %.070307.i2957, true
  %hash_coef_ptr.i.i60.i2981 = getelementptr i8, ptr %1630, i64 8
  %tbl_size_ptr.i.i61.i2982 = getelementptr i8, ptr %1630, i64 16
  %offset_tbl_ptr.i.i62.i2983 = getelementptr i8, ptr %1630, i64 40
  %hash_coef.i.i63.i2984 = load i64, ptr %hash_coef_ptr.i.i60.i2981, align 4
  %tbl_size.i.i64.i2985 = load i64, ptr %tbl_size_ptr.i.i61.i2982, align 4
  %offset_tbl.i.i65.i2986 = load ptr, ptr %offset_tbl_ptr.i.i62.i2983, align 8
  %product.i.i.i66.i2987 = mul i64 %hash_coef.i.i63.i2984, 4015701072841558310
  %shifted.i.i.i67.i2988 = lshr i64 %product.i.i.i66.i2987, 32
  %xored.i.i.i68.i2989 = xor i64 %shifted.i.i.i67.i2988, %product.i.i.i66.i2987
  %hash.i.i.i69.i2990 = and i64 %xored.i.i.i68.i2989, %tbl_size.i.i64.i2985
  %offset_ptr.i.i70.i2991 = getelementptr i32, ptr %offset_tbl.i.i65.i2986, i64 %hash.i.i.i69.i2990
  %offset.i.i71.i2992 = load i32, ptr %offset_ptr.i.i70.i2991, align 4
  %1642 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1643 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1644 = icmp ult i32 %.0308.i2956, 99
  br i1 %1644, label %1607, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3001

1645:                                             ; preds = %1607
  %1646 = load i32, ptr %110, align 4
  %1647 = add i32 %1646, 1
  %1648 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1647, ptr %110, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3001

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3001: ; preds = %.cont.i2978, %1645
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %12)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %13)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %14)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %15)
  br label %._crit_edge.i2118

._crit_edge.i2118:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3001, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2101
  %1649 = add nuw nsw i32 %.045.i2116, 1
  %1650 = icmp slt i32 %1649, %1530
  br i1 %1650, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2101, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2136

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2136: ; preds = %._crit_edge.i2118, %1526
  %1651 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %52)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %53)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %54)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %55)
  %hash_coef.i.i17.i1336 = load i64, ptr %hash_coef_ptr.i.i60.i1275, align 4, !noalias !23
  %tbl_size.i.i18.i1337 = load i64, ptr %tbl_size_ptr.i.i61.i1276, align 4, !noalias !23
  %offset_tbl.i.i19.i1338 = load ptr, ptr %offset_tbl_ptr.i.i62.i1277, align 8, !noalias !23
  %product.i.i.i20.i1339 = mul i64 %hash_coef.i.i17.i1336, 4015701072841558310
  %shifted.i.i.i21.i1340 = lshr i64 %product.i.i.i20.i1339, 32
  %xored.i.i.i22.i1341 = xor i64 %shifted.i.i.i21.i1340, %product.i.i.i20.i1339
  %hash.i.i.i23.i1342 = and i64 %xored.i.i.i22.i1341, %tbl_size.i.i18.i1337
  %offset_ptr.i.i24.i1343 = getelementptr i32, ptr %offset_tbl.i.i19.i1338, i64 %hash.i.i.i23.i1342
  %offset.i.i39.i1344 = load i32, ptr %offset_ptr.i.i24.i1343, align 4, !noalias !225
  %1652 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1653 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1654 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1655

1655:                                             ; preds = %.cont.i1368, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2136
  %.0308.i1346 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2136 ], [ %1688, %.cont.i1368 ]
  %.070307.i1347 = phi i1 [ true, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2136 ], [ %1689, %.cont.i1368 ]
  %.sroa.0.0306.i1348 = phi ptr [ %1506, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2136 ], [ %1678, %.cont.i1368 ]
  %.sroa.6.0305.i1349.in = phi i64 [ %1508, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2136 ], [ %1680, %.cont.i1368 ]
  %.sroa.12.0304.i1350.in = phi i64 [ %1509, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2136 ], [ %1681, %.cont.i1368 ]
  %.sroa.17.0303.i1351 = phi i32 [ %offset.i.i39.i1344, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2136 ], [ %offset.i.i71.i1382, %.cont.i1368 ]
  %.sroa.12.0304.i1350 = inttoptr i64 %.sroa.12.0304.i1350.in to ptr
  %.sroa.6.0305.i1349 = inttoptr i64 %.sroa.6.0305.i1349.in to ptr
  %1656 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1348, 0
  %1657 = insertvalue { ptr, ptr, ptr, i32 } %1656, ptr %.sroa.6.0305.i1349, 1
  %1658 = insertvalue { ptr, ptr, ptr, i32 } %1657, ptr %.sroa.12.0304.i1350, 2
  %1659 = insertvalue { ptr, ptr, ptr, i32 } %1658, i32 %.sroa.17.0303.i1351, 3
  %1660 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1348)
  %1661 = sext i32 %.sroa.17.0303.i1351 to i64
  %1662 = getelementptr ptr, ptr %.sroa.0.0306.i1348, i64 %1661
  %1663 = getelementptr i8, ptr %1662, i64 64
  %1664 = load ptr, ptr %1663, align 8
  %result.i43.i1352 = call ptr %1664({ ptr, ptr, ptr, i32 } %1659, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1665 = call i32 %result.i43.i1352({ ptr, ptr, ptr, i32 } %1659, { ptr, ptr, ptr, i32 } %1659, ptr nonnull align 8 %2) #42
  %..i1353 = select i1 %.070307.i1347, ptr %52, ptr %54
  %.184.i1354 = select i1 %.070307.i1347, i64 104, i64 112
  %.185.i1355 = select i1 %.070307.i1347, ptr %53, ptr %55
  %.186.i1356 = select i1 %.070307.i1347, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1353, align 8
  %1666 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1353)
  %1667 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1354
  %1668 = load ptr, ptr %1667, align 8
  store ptr @i32_typ, ptr %.185.i1355, align 8
  %result.i44.i1357 = call ptr %1668({ ptr, ptr, ptr, i32 } %113, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1355) #45
  %1669 = call i32 %result.i44.i1357({ ptr, ptr, ptr, i32 } %113, { ptr, ptr, ptr, i32 } %113, ptr nonnull align 8 dereferenceable(8) %..i1353, i32 %1665) #42
  %1670 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1671 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1356
  %1672 = load ptr, ptr %1671, align 8
  %1673 = load ptr, ptr %1672, align 8
  %1674 = call { ptr } %1673(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i1358 = extractvalue { ptr } %1674, 0
  %1675 = sext i32 %1669 to i64
  %1676 = shl nsw i64 %1675, 5
  %1677 = getelementptr i8, ptr %.fca.0.extract53.i1358, i64 %1676
  %1678 = load ptr, ptr %1677, align 8
  %1679 = getelementptr i8, ptr %1677, i64 8
  %1680 = load i64, ptr %1679, align 4
  %.sroa_idx.i1359 = getelementptr i8, ptr %1677, i64 16
  %1681 = load i64, ptr %.sroa_idx.i1359, align 4
  %1682 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1683 = call { ptr } %1673(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i1360 = extractvalue { ptr } %1683, 0
  %1684 = getelementptr i8, ptr %.fca.0.extract51.i1360, i64 %1676
  store ptr %.sroa.0.0306.i1348, ptr %1684, align 8
  %1685 = getelementptr i8, ptr %1684, i64 8
  store i64 %.sroa.6.0305.i1349.in, ptr %1685, align 4
  %.sroa_idx100.i1361 = getelementptr i8, ptr %1684, i64 16
  store i64 %.sroa.12.0304.i1350.in, ptr %.sroa_idx100.i1361, align 4
  %.sroa_idx101.i1362 = getelementptr i8, ptr %1684, i64 24
  store i32 %.sroa.17.0303.i1351, ptr %.sroa_idx101.i1362, align 4
  %1686 = icmp ne ptr %1678, @nil_typ
  %1687 = icmp ne ptr %1678, null
  %.not90.i1363 = and i1 %1686, %1687
  br i1 %.not90.i1363, label %.cont.i1368, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1391

.cont.i1368:                                      ; preds = %1655
  %1688 = add nuw nsw i32 %.0308.i1346, 1
  %1689 = xor i1 %.070307.i1347, true
  %hash_coef_ptr.i.i60.i1371 = getelementptr i8, ptr %1678, i64 8
  %tbl_size_ptr.i.i61.i1372 = getelementptr i8, ptr %1678, i64 16
  %offset_tbl_ptr.i.i62.i1373 = getelementptr i8, ptr %1678, i64 40
  %hash_coef.i.i63.i1374 = load i64, ptr %hash_coef_ptr.i.i60.i1371, align 4
  %tbl_size.i.i64.i1375 = load i64, ptr %tbl_size_ptr.i.i61.i1372, align 4
  %offset_tbl.i.i65.i1376 = load ptr, ptr %offset_tbl_ptr.i.i62.i1373, align 8
  %product.i.i.i66.i1377 = mul i64 %hash_coef.i.i63.i1374, 4015701072841558310
  %shifted.i.i.i67.i1378 = lshr i64 %product.i.i.i66.i1377, 32
  %xored.i.i.i68.i1379 = xor i64 %shifted.i.i.i67.i1378, %product.i.i.i66.i1377
  %hash.i.i.i69.i1380 = and i64 %xored.i.i.i68.i1379, %tbl_size.i.i64.i1375
  %offset_ptr.i.i70.i1381 = getelementptr i32, ptr %offset_tbl.i.i65.i1376, i64 %hash.i.i.i69.i1380
  %offset.i.i71.i1382 = load i32, ptr %offset_ptr.i.i70.i1381, align 4
  %1690 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1691 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1692 = icmp ult i32 %.0308.i1346, 99
  br i1 %1692, label %1655, label %1696

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1391: ; preds = %1655
  %1693 = load i32, ptr %110, align 4
  %1694 = add i32 %1693, 1
  %1695 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1694, ptr %110, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %52)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %53)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %54)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %55)
  br label %CuckooMap_insert_keyK_valueV.exit527

1696:                                             ; preds = %.cont.i1368
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %52)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %53)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %54)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %55)
  %1697 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1698 = load ptr, ptr %101, align 8
  %1699 = load ptr, ptr %102, align 8
  %1700 = load i32, ptr %100, align 8
  %1701 = shl i32 %1700, 1
  %spec.select.i1407 = call i32 @llvm.smax.i32(i32 %1701, i32 noundef 16) #37
  store i32 %spec.select.i1407, ptr %100, align 8
  %1702 = zext nneg i32 %spec.select.i1407 to i64
  %1703 = shl nuw nsw i64 %1702, 5
  %result.i.i1408 = call noalias ptr @bump_malloc_inner(i64 noundef %1703, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i1408, ptr %101, align 8
  %result.i1.i1409 = call noalias ptr @bump_malloc_inner(i64 noundef %1703, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i1409, ptr %102, align 8
  store i32 0, ptr %110, align 4
  %1704 = icmp sgt i32 %1700, 0
  br i1 %1704, label %.lr.ph.i2138, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2171.thread

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2171.thread: ; preds = %1696
  %1705 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %CuckooMap_insert_keyK_valueV.exit527

.lr.ph.i2138:                                     ; preds = %1696, %._crit_edge.i2153
  %.045.i2151 = phi i32 [ %1762, %._crit_edge.i2153 ], [ 0, %1696 ]
  %1706 = zext nneg i32 %.045.i2151 to i64
  %1707 = shl nuw nsw i64 %1706, 5
  %1708 = getelementptr i8, ptr %1698, i64 %1707
  %1709 = load ptr, ptr %1708, align 8
  %1710 = icmp ne ptr %1709, @nil_typ
  %1711 = icmp ne ptr %1709, null
  %.not16.i2152 = and i1 %1710, %1711
  br i1 %.not16.i2152, label %1712, label %._crit_edge.i2153

1712:                                             ; preds = %.lr.ph.i2138
  %1713 = getelementptr i8, ptr %1708, i64 8
  %1714 = load i64, ptr %1713, align 4
  %.sroa_idx.i2154 = getelementptr i8, ptr %1708, i64 16
  %1715 = load i64, ptr %.sroa_idx.i2154, align 4
  %hash_coef_ptr.i.i3.i2155 = getelementptr i8, ptr %1709, i64 8
  %tbl_size_ptr.i.i4.i2156 = getelementptr i8, ptr %1709, i64 16
  %offset_tbl_ptr.i.i5.i2157 = getelementptr i8, ptr %1709, i64 40
  %1716 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %8)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %9)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %10)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %11)
  %hash_coef.i.i17.i3019 = load i64, ptr %hash_coef_ptr.i.i3.i2155, align 4, !noalias !23
  %tbl_size.i.i18.i3020 = load i64, ptr %tbl_size_ptr.i.i4.i2156, align 4, !noalias !23
  %offset_tbl.i.i19.i3021 = load ptr, ptr %offset_tbl_ptr.i.i5.i2157, align 8, !noalias !23
  %product.i.i.i20.i3022 = mul i64 %hash_coef.i.i17.i3019, 4015701072841558310
  %shifted.i.i.i21.i3023 = lshr i64 %product.i.i.i20.i3022, 32
  %xored.i.i.i22.i3024 = xor i64 %shifted.i.i.i21.i3023, %product.i.i.i20.i3022
  %hash.i.i.i23.i3025 = and i64 %xored.i.i.i22.i3024, %tbl_size.i.i18.i3020
  %offset_ptr.i.i24.i3026 = getelementptr i32, ptr %offset_tbl.i.i19.i3021, i64 %hash.i.i.i23.i3025
  %offset.i.i39.i3027 = load i32, ptr %offset_ptr.i.i24.i3026, align 4, !noalias !228
  %1717 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1718 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1719 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1720

1720:                                             ; preds = %.cont.i3050, %1712
  %.0308.i3028 = phi i32 [ 0, %1712 ], [ %1753, %.cont.i3050 ]
  %.070307.i3029 = phi i1 [ true, %1712 ], [ %1754, %.cont.i3050 ]
  %.sroa.0.0306.i3030 = phi ptr [ %1709, %1712 ], [ %1743, %.cont.i3050 ]
  %.sroa.6.0305.i3031.in = phi i64 [ %1714, %1712 ], [ %1745, %.cont.i3050 ]
  %.sroa.12.0304.i3032.in = phi i64 [ %1715, %1712 ], [ %1746, %.cont.i3050 ]
  %.sroa.17.0303.i3033 = phi i32 [ %offset.i.i39.i3027, %1712 ], [ %offset.i.i71.i3064, %.cont.i3050 ]
  %.sroa.12.0304.i3032 = inttoptr i64 %.sroa.12.0304.i3032.in to ptr
  %.sroa.6.0305.i3031 = inttoptr i64 %.sroa.6.0305.i3031.in to ptr
  %1721 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i3030, 0
  %1722 = insertvalue { ptr, ptr, ptr, i32 } %1721, ptr %.sroa.6.0305.i3031, 1
  %1723 = insertvalue { ptr, ptr, ptr, i32 } %1722, ptr %.sroa.12.0304.i3032, 2
  %1724 = insertvalue { ptr, ptr, ptr, i32 } %1723, i32 %.sroa.17.0303.i3033, 3
  %1725 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i3030)
  %1726 = sext i32 %.sroa.17.0303.i3033 to i64
  %1727 = getelementptr ptr, ptr %.sroa.0.0306.i3030, i64 %1726
  %1728 = getelementptr i8, ptr %1727, i64 64
  %1729 = load ptr, ptr %1728, align 8
  %result.i43.i3034 = call ptr %1729({ ptr, ptr, ptr, i32 } %1724, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1730 = call i32 %result.i43.i3034({ ptr, ptr, ptr, i32 } %1724, { ptr, ptr, ptr, i32 } %1724, ptr nonnull align 8 %2) #42
  %..i3035 = select i1 %.070307.i3029, ptr %8, ptr %10
  %.184.i3036 = select i1 %.070307.i3029, i64 104, i64 112
  %.185.i3037 = select i1 %.070307.i3029, ptr %9, ptr %11
  %.186.i3038 = select i1 %.070307.i3029, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i3035, align 8
  %1731 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i3035)
  %1732 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i3036
  %1733 = load ptr, ptr %1732, align 8
  store ptr @i32_typ, ptr %.185.i3037, align 8
  %result.i44.i3039 = call ptr %1733({ ptr, ptr, ptr, i32 } %118, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i3037) #45
  %1734 = call i32 %result.i44.i3039({ ptr, ptr, ptr, i32 } %118, { ptr, ptr, ptr, i32 } %118, ptr nonnull align 8 dereferenceable(8) %..i3035, i32 %1730) #42
  %1735 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1736 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i3038
  %1737 = load ptr, ptr %1736, align 8
  %1738 = load ptr, ptr %1737, align 8
  %1739 = call { ptr } %1738(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i3040 = extractvalue { ptr } %1739, 0
  %1740 = sext i32 %1734 to i64
  %1741 = shl nsw i64 %1740, 5
  %1742 = getelementptr i8, ptr %.fca.0.extract53.i3040, i64 %1741
  %1743 = load ptr, ptr %1742, align 8
  %1744 = getelementptr i8, ptr %1742, i64 8
  %1745 = load i64, ptr %1744, align 4
  %.sroa_idx.i3041 = getelementptr i8, ptr %1742, i64 16
  %1746 = load i64, ptr %.sroa_idx.i3041, align 4
  %1747 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1748 = call { ptr } %1738(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i3042 = extractvalue { ptr } %1748, 0
  %1749 = getelementptr i8, ptr %.fca.0.extract51.i3042, i64 %1741
  store ptr %.sroa.0.0306.i3030, ptr %1749, align 8
  %1750 = getelementptr i8, ptr %1749, i64 8
  store i64 %.sroa.6.0305.i3031.in, ptr %1750, align 4
  %.sroa_idx100.i3043 = getelementptr i8, ptr %1749, i64 16
  store i64 %.sroa.12.0304.i3032.in, ptr %.sroa_idx100.i3043, align 4
  %.sroa_idx101.i3044 = getelementptr i8, ptr %1749, i64 24
  store i32 %.sroa.17.0303.i3033, ptr %.sroa_idx101.i3044, align 4
  %1751 = icmp ne ptr %1743, @nil_typ
  %1752 = icmp ne ptr %1743, null
  %.not90.i3045 = and i1 %1751, %1752
  br i1 %.not90.i3045, label %.cont.i3050, label %1758

.cont.i3050:                                      ; preds = %1720
  %1753 = add nuw nsw i32 %.0308.i3028, 1
  %1754 = xor i1 %.070307.i3029, true
  %hash_coef_ptr.i.i60.i3053 = getelementptr i8, ptr %1743, i64 8
  %tbl_size_ptr.i.i61.i3054 = getelementptr i8, ptr %1743, i64 16
  %offset_tbl_ptr.i.i62.i3055 = getelementptr i8, ptr %1743, i64 40
  %hash_coef.i.i63.i3056 = load i64, ptr %hash_coef_ptr.i.i60.i3053, align 4
  %tbl_size.i.i64.i3057 = load i64, ptr %tbl_size_ptr.i.i61.i3054, align 4
  %offset_tbl.i.i65.i3058 = load ptr, ptr %offset_tbl_ptr.i.i62.i3055, align 8
  %product.i.i.i66.i3059 = mul i64 %hash_coef.i.i63.i3056, 4015701072841558310
  %shifted.i.i.i67.i3060 = lshr i64 %product.i.i.i66.i3059, 32
  %xored.i.i.i68.i3061 = xor i64 %shifted.i.i.i67.i3060, %product.i.i.i66.i3059
  %hash.i.i.i69.i3062 = and i64 %xored.i.i.i68.i3061, %tbl_size.i.i64.i3057
  %offset_ptr.i.i70.i3063 = getelementptr i32, ptr %offset_tbl.i.i65.i3058, i64 %hash.i.i.i69.i3062
  %offset.i.i71.i3064 = load i32, ptr %offset_ptr.i.i70.i3063, align 4
  %1755 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1756 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1757 = icmp ult i32 %.0308.i3028, 99
  br i1 %1757, label %1720, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3073

1758:                                             ; preds = %1720
  %1759 = load i32, ptr %110, align 4
  %1760 = add i32 %1759, 1
  %1761 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1760, ptr %110, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3073

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3073: ; preds = %.cont.i3050, %1758
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %8)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %9)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %10)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %11)
  br label %._crit_edge.i2153

._crit_edge.i2153:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3073, %.lr.ph.i2138
  %1762 = add nuw nsw i32 %.045.i2151, 1
  %1763 = icmp slt i32 %1762, %1700
  br i1 %1763, label %.lr.ph.i2138, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2171

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2171: ; preds = %._crit_edge.i2153
  %1764 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %1765

1765:                                             ; preds = %._crit_edge.i2188, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2171
  %.045.i2186 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2171 ], [ %1822, %._crit_edge.i2188 ]
  %1766 = zext nneg i32 %.045.i2186 to i64
  %1767 = shl nuw nsw i64 %1766, 5
  %1768 = getelementptr i8, ptr %1699, i64 %1767
  %1769 = load ptr, ptr %1768, align 8
  %1770 = icmp ne ptr %1769, @nil_typ
  %1771 = icmp ne ptr %1769, null
  %.not16.i2187 = and i1 %1770, %1771
  br i1 %.not16.i2187, label %1772, label %._crit_edge.i2188

1772:                                             ; preds = %1765
  %1773 = getelementptr i8, ptr %1768, i64 8
  %1774 = load i64, ptr %1773, align 4
  %.sroa_idx.i2189 = getelementptr i8, ptr %1768, i64 16
  %1775 = load i64, ptr %.sroa_idx.i2189, align 4
  %hash_coef_ptr.i.i3.i2190 = getelementptr i8, ptr %1769, i64 8
  %tbl_size_ptr.i.i4.i2191 = getelementptr i8, ptr %1769, i64 16
  %offset_tbl_ptr.i.i5.i2192 = getelementptr i8, ptr %1769, i64 40
  %1776 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %4)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %5)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %6)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %7)
  %hash_coef.i.i17.i3091 = load i64, ptr %hash_coef_ptr.i.i3.i2190, align 4, !noalias !23
  %tbl_size.i.i18.i3092 = load i64, ptr %tbl_size_ptr.i.i4.i2191, align 4, !noalias !23
  %offset_tbl.i.i19.i3093 = load ptr, ptr %offset_tbl_ptr.i.i5.i2192, align 8, !noalias !23
  %product.i.i.i20.i3094 = mul i64 %hash_coef.i.i17.i3091, 4015701072841558310
  %shifted.i.i.i21.i3095 = lshr i64 %product.i.i.i20.i3094, 32
  %xored.i.i.i22.i3096 = xor i64 %shifted.i.i.i21.i3095, %product.i.i.i20.i3094
  %hash.i.i.i23.i3097 = and i64 %xored.i.i.i22.i3096, %tbl_size.i.i18.i3092
  %offset_ptr.i.i24.i3098 = getelementptr i32, ptr %offset_tbl.i.i19.i3093, i64 %hash.i.i.i23.i3097
  %offset.i.i39.i3099 = load i32, ptr %offset_ptr.i.i24.i3098, align 4, !noalias !231
  %1777 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1778 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1779 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1780

1780:                                             ; preds = %.cont.i3122, %1772
  %.0308.i3100 = phi i32 [ 0, %1772 ], [ %1813, %.cont.i3122 ]
  %.070307.i3101 = phi i1 [ true, %1772 ], [ %1814, %.cont.i3122 ]
  %.sroa.0.0306.i3102 = phi ptr [ %1769, %1772 ], [ %1803, %.cont.i3122 ]
  %.sroa.6.0305.i3103.in = phi i64 [ %1774, %1772 ], [ %1805, %.cont.i3122 ]
  %.sroa.12.0304.i3104.in = phi i64 [ %1775, %1772 ], [ %1806, %.cont.i3122 ]
  %.sroa.17.0303.i3105 = phi i32 [ %offset.i.i39.i3099, %1772 ], [ %offset.i.i71.i3136, %.cont.i3122 ]
  %.sroa.12.0304.i3104 = inttoptr i64 %.sroa.12.0304.i3104.in to ptr
  %.sroa.6.0305.i3103 = inttoptr i64 %.sroa.6.0305.i3103.in to ptr
  %1781 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i3102, 0
  %1782 = insertvalue { ptr, ptr, ptr, i32 } %1781, ptr %.sroa.6.0305.i3103, 1
  %1783 = insertvalue { ptr, ptr, ptr, i32 } %1782, ptr %.sroa.12.0304.i3104, 2
  %1784 = insertvalue { ptr, ptr, ptr, i32 } %1783, i32 %.sroa.17.0303.i3105, 3
  %1785 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i3102)
  %1786 = sext i32 %.sroa.17.0303.i3105 to i64
  %1787 = getelementptr ptr, ptr %.sroa.0.0306.i3102, i64 %1786
  %1788 = getelementptr i8, ptr %1787, i64 64
  %1789 = load ptr, ptr %1788, align 8
  %result.i43.i3106 = call ptr %1789({ ptr, ptr, ptr, i32 } %1784, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1790 = call i32 %result.i43.i3106({ ptr, ptr, ptr, i32 } %1784, { ptr, ptr, ptr, i32 } %1784, ptr nonnull align 8 %2) #42
  %..i3107 = select i1 %.070307.i3101, ptr %4, ptr %6
  %.184.i3108 = select i1 %.070307.i3101, i64 104, i64 112
  %.185.i3109 = select i1 %.070307.i3101, ptr %5, ptr %7
  %.186.i3110 = select i1 %.070307.i3101, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i3107, align 8
  %1791 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i3107)
  %1792 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i3108
  %1793 = load ptr, ptr %1792, align 8
  store ptr @i32_typ, ptr %.185.i3109, align 8
  %result.i44.i3111 = call ptr %1793({ ptr, ptr, ptr, i32 } %118, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i3109) #45
  %1794 = call i32 %result.i44.i3111({ ptr, ptr, ptr, i32 } %118, { ptr, ptr, ptr, i32 } %118, ptr nonnull align 8 dereferenceable(8) %..i3107, i32 %1790) #42
  %1795 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1796 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i3110
  %1797 = load ptr, ptr %1796, align 8
  %1798 = load ptr, ptr %1797, align 8
  %1799 = call { ptr } %1798(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i3112 = extractvalue { ptr } %1799, 0
  %1800 = sext i32 %1794 to i64
  %1801 = shl nsw i64 %1800, 5
  %1802 = getelementptr i8, ptr %.fca.0.extract53.i3112, i64 %1801
  %1803 = load ptr, ptr %1802, align 8
  %1804 = getelementptr i8, ptr %1802, i64 8
  %1805 = load i64, ptr %1804, align 4
  %.sroa_idx.i3113 = getelementptr i8, ptr %1802, i64 16
  %1806 = load i64, ptr %.sroa_idx.i3113, align 4
  %1807 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1808 = call { ptr } %1798(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i3114 = extractvalue { ptr } %1808, 0
  %1809 = getelementptr i8, ptr %.fca.0.extract51.i3114, i64 %1801
  store ptr %.sroa.0.0306.i3102, ptr %1809, align 8
  %1810 = getelementptr i8, ptr %1809, i64 8
  store i64 %.sroa.6.0305.i3103.in, ptr %1810, align 4
  %.sroa_idx100.i3115 = getelementptr i8, ptr %1809, i64 16
  store i64 %.sroa.12.0304.i3104.in, ptr %.sroa_idx100.i3115, align 4
  %.sroa_idx101.i3116 = getelementptr i8, ptr %1809, i64 24
  store i32 %.sroa.17.0303.i3105, ptr %.sroa_idx101.i3116, align 4
  %1811 = icmp ne ptr %1803, @nil_typ
  %1812 = icmp ne ptr %1803, null
  %.not90.i3117 = and i1 %1811, %1812
  br i1 %.not90.i3117, label %.cont.i3122, label %1818

.cont.i3122:                                      ; preds = %1780
  %1813 = add nuw nsw i32 %.0308.i3100, 1
  %1814 = xor i1 %.070307.i3101, true
  %hash_coef_ptr.i.i60.i3125 = getelementptr i8, ptr %1803, i64 8
  %tbl_size_ptr.i.i61.i3126 = getelementptr i8, ptr %1803, i64 16
  %offset_tbl_ptr.i.i62.i3127 = getelementptr i8, ptr %1803, i64 40
  %hash_coef.i.i63.i3128 = load i64, ptr %hash_coef_ptr.i.i60.i3125, align 4
  %tbl_size.i.i64.i3129 = load i64, ptr %tbl_size_ptr.i.i61.i3126, align 4
  %offset_tbl.i.i65.i3130 = load ptr, ptr %offset_tbl_ptr.i.i62.i3127, align 8
  %product.i.i.i66.i3131 = mul i64 %hash_coef.i.i63.i3128, 4015701072841558310
  %shifted.i.i.i67.i3132 = lshr i64 %product.i.i.i66.i3131, 32
  %xored.i.i.i68.i3133 = xor i64 %shifted.i.i.i67.i3132, %product.i.i.i66.i3131
  %hash.i.i.i69.i3134 = and i64 %xored.i.i.i68.i3133, %tbl_size.i.i64.i3129
  %offset_ptr.i.i70.i3135 = getelementptr i32, ptr %offset_tbl.i.i65.i3130, i64 %hash.i.i.i69.i3134
  %offset.i.i71.i3136 = load i32, ptr %offset_ptr.i.i70.i3135, align 4
  %1815 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1816 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1817 = icmp ult i32 %.0308.i3100, 99
  br i1 %1817, label %1780, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3145

1818:                                             ; preds = %1780
  %1819 = load i32, ptr %110, align 4
  %1820 = add i32 %1819, 1
  %1821 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1820, ptr %110, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3145

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3145: ; preds = %.cont.i3122, %1818
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %6)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %7)
  br label %._crit_edge.i2188

._crit_edge.i2188:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3145, %1765
  %1822 = add nuw nsw i32 %.045.i2186, 1
  %1823 = icmp slt i32 %1822, %1700
  br i1 %1823, label %1765, label %CuckooMap_insert_keyK_valueV.exit527

CuckooMap_insert_keyK_valueV.exit527:             ; preds = %._crit_edge.i2188, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2171.thread, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1391, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1295, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1199, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1140
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1824 = sext i32 %242 to i64
  %1825 = add i64 %.0275235, %1824
  %1826 = add nsw i32 %.0266236, 1
  br label %._crit_edge1

._crit_edge1:                                     ; preds = %CuckooMap_get_keyK.exit, %CuckooMap_insert_keyK_valueV.exit527
  %.1276 = phi i64 [ %1825, %CuckooMap_insert_keyK_valueV.exit527 ], [ %.0275235, %CuckooMap_get_keyK.exit ]
  %.1267 = phi i32 [ %1826, %CuckooMap_insert_keyK_valueV.exit527 ], [ %.0266236, %CuckooMap_get_keyK.exit ]
  %1827 = add nuw nsw i32 %.0264237, 1
  %1828 = icmp slt i32 %.1267, %0
  %1829 = icmp slt i32 %1827, %104
  %spec.select = select i1 %1828, i1 %1829, i1 false
  br i1 %spec.select, label %120, label %._crit_edge3._crit_edge

._crit_edge3._crit_edge:                          ; preds = %._crit_edge1, %1
  %.0275.lcssa = phi i64 [ 0, %1 ], [ %.1276, %._crit_edge1 ]
  %.0266.lcssa = phi i32 [ 0, %1 ], [ %.1267, %._crit_edge1 ]
  %1830 = icmp slt i32 %.0266.lcssa, %0
  br i1 %1830, label %._crit_edge.lr.ph.i, label %._crit_edge4

._crit_edge.lr.ph.i:                              ; preds = %._crit_edge3._crit_edge
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1831 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1832 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <29 x i8> <i8 87, i8 97, i8 114, i8 110, i8 105, i8 110, i8 103, i8 58, i8 32, i8 67, i8 111, i8 117, i8 108, i8 100, i8 32, i8 111, i8 110, i8 108, i8 121, i8 32, i8 103, i8 101, i8 110, i8 101, i8 114, i8 97, i8 116, i8 101, i8 32>, ptr %result.i.i1427.h2s3377, align 32
  %1833 = getelementptr inbounds i8, ptr %result.i.i1427.h2s3377, i64 29
  store i8 0, ptr %1833, align 1
  %puts.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(30) %result.i.i1427.h2s3377) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1834 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %.0266.lcssa) #42
  %1835 = load <33 x i8>, ptr @nuqee__unique_keys_for_random_hit_test, align 64
  %1836 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1837 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1838 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <33 x i8> %1835, ptr %result.i.i1442.h2s3375, align 64
  %1839 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %1840 = getelementptr inbounds i8, ptr %result.i.i1442.h2s3375, i64 33
  store i8 0, ptr %1840, align 1
  %puts.i563 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(34) %result.i.i1442.h2s3375) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %._crit_edge4

._crit_edge4:                                     ; preds = %._crit_edge.lr.ph.i, %._crit_edge3._crit_edge
  %.0274 = phi i32 [ %.0266.lcssa, %._crit_edge.lr.ph.i ], [ %0, %._crit_edge3._crit_edge ]
  %1841 = call i64 @clock()
  %1842 = icmp sgt i32 %.0274, 0
  br i1 %1842, label %.lr.ph245.preheader, label %._crit_edge.lr.ph.i1603

.lr.ph245.preheader:                              ; preds = %._crit_edge4
  %1843 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 16 dereferenceable(744) @Array) #50
  %1844 = load ptr, ptr %91, align 8
  %1845 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  br label %.lr.ph245

.lr.ph245:                                        ; preds = %.lr.ph245.preheader, %._crit_edge5
  %.0263244 = phi i64 [ %.1, %._crit_edge5 ], [ 0, %.lr.ph245.preheader ]
  %.0269243 = phi i1 [ %.1270, %._crit_edge5 ], [ true, %.lr.ph245.preheader ]
  %.0272242 = phi i32 [ %1977, %._crit_edge5 ], [ 0, %.lr.ph245.preheader ]
  %1846 = zext nneg i32 %.0272242 to i64
  %1847 = shl nuw nsw i64 %1846, 2
  %1848 = getelementptr i8, ptr %1844, i64 %1847
  %1849 = load i32, ptr %1848, align 1
  %.sroa.2.sroa.0.0.insert.ext.i = zext i32 %1849 to i160
  %1850 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.2.sroa.0.0.insert.ext.i, 1
  %1851 = load ptr, ptr %81, align 8
  %1852 = call i32 %1851({ ptr, i160 } %1850) #42
  %1853 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %1854 = load i32, ptr %83, align 8
  %1855 = add i32 %1854, -1
  %1856 = and i32 %1855, %1852
  %1857 = load ptr, ptr %84, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1858 = sext i32 %1856 to i64
  %1859 = shl nsw i64 %1858, 5
  %1860 = getelementptr i8, ptr %1857, i64 %1859
  %1861 = load ptr, ptr %1860, align 8
  %1862 = icmp ne ptr %1861, @nil_typ
  %1863 = icmp ne ptr %1861, null
  %.not44.i1489 = and i1 %1862, %1863
  br i1 %.not44.i1489, label %1864, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1514.thread

1864:                                             ; preds = %.lr.ph245
  %1865 = getelementptr i8, ptr %1860, i64 8
  %1866 = load i64, ptr %1865, align 4
  %.sroa_idx.i1494 = getelementptr i8, ptr %1860, i64 16
  %1867 = load i64, ptr %.sroa_idx.i1494, align 4
  %1868 = inttoptr i64 %1866 to ptr
  %1869 = inttoptr i64 %1867 to ptr
  %hash_coef_ptr.i.i2.i1495 = getelementptr i8, ptr %1861, i64 8
  %tbl_size_ptr.i.i3.i1496 = getelementptr i8, ptr %1861, i64 16
  %offset_tbl_ptr.i.i4.i1497 = getelementptr i8, ptr %1861, i64 40
  %hash_coef.i.i5.i1498 = load i64, ptr %hash_coef_ptr.i.i2.i1495, align 4, !noalias !234
  %tbl_size.i.i6.i1499 = load i64, ptr %tbl_size_ptr.i.i3.i1496, align 4, !noalias !234
  %offset_tbl.i.i7.i1500 = load ptr, ptr %offset_tbl_ptr.i.i4.i1497, align 8, !noalias !234
  %product.i.i.i8.i1501 = mul i64 %hash_coef.i.i5.i1498, 4015701072841558310
  %shifted.i.i.i9.i1502 = lshr i64 %product.i.i.i8.i1501, 32
  %xored.i.i.i10.i1503 = xor i64 %shifted.i.i.i9.i1502, %product.i.i.i8.i1501
  %hash.i.i.i11.i1504 = and i64 %xored.i.i.i10.i1503, %tbl_size.i.i6.i1499
  %offset_ptr.i.i12.i1505 = getelementptr i32, ptr %offset_tbl.i.i7.i1500, i64 %hash.i.i.i11.i1504
  %offset.i.i13.i1506 = load i32, ptr %offset_ptr.i.i12.i1505, align 4, !noalias !234
  %1870 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1861, 0
  %1871 = insertvalue { ptr, ptr, ptr, i32 } %1870, ptr %1868, 1
  %1872 = insertvalue { ptr, ptr, ptr, i32 } %1871, ptr %1869, 2
  %1873 = insertvalue { ptr, ptr, ptr, i32 } %1872, i32 %offset.i.i13.i1506, 3
  %1874 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1875 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1861) #37
  %1876 = sext i32 %offset.i.i13.i1506 to i64
  %1877 = getelementptr ptr, ptr %1861, i64 %1876
  %1878 = getelementptr i8, ptr %1877, i64 64
  %1879 = load ptr, ptr %1878, align 8
  %result.i.i1507 = call ptr %1879({ ptr, ptr, ptr, i32 } %1873, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1880 = call i32 %result.i.i1507({ ptr, ptr, ptr, i32 } %1873, { ptr, ptr, ptr, i32 } %1873, ptr nonnull align 8 %2) #42
  %1881 = icmp eq i32 %1880, %1852
  br i1 %1881, label %._crit_edge.i1508, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1514.thread

._crit_edge.i1508:                                ; preds = %1864
  %1882 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1883 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1861)
  %1884 = getelementptr i8, ptr %1877, i64 48
  %1885 = load ptr, ptr %1884, align 8
  %result.i15.i1509 = call ptr %1885({ ptr, ptr, ptr, i32 } %1873, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1886 = call { ptr, i160 } %result.i15.i1509({ ptr, ptr, ptr, i32 } %1873, { ptr, ptr, ptr, i32 } %1873, ptr nonnull align 8 %2) #42
  %1887 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1888 = load ptr, ptr %82, align 8
  %1889 = call i1 %1888({ ptr, i160 } %1886, { ptr, i160 } %1850) #42
  br i1 %1889, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1514, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1514.thread

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1514.thread: ; preds = %._crit_edge.i1508, %.lr.ph245, %1864
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1898

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1514: ; preds = %._crit_edge.i1508
  %1890 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1891 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1861)
  %1892 = getelementptr i8, ptr %1877, i64 56
  %1893 = load ptr, ptr %1892, align 8
  %result.i16.i1511 = call ptr %1893({ ptr, ptr, ptr, i32 } %1873, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1894 = call { ptr, i160 } %result.i16.i1511({ ptr, ptr, ptr, i32 } %1873, { ptr, ptr, ptr, i32 } %1873, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i1512 = extractvalue { ptr, i160 } %1894, 0
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1895 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1896 = icmp ne ptr %.fca.0.extract21.i1512, @nil_typ
  %1897 = icmp ne ptr %.fca.0.extract21.i1512, null
  %.not63.i601 = and i1 %1896, %1897
  br i1 %.not63.i601, label %CuckooMap_get_keyK.exit613, label %1898

1898:                                             ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1514.thread, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1514
  %1899 = add i32 %1852, 2127912214
  %1900 = shl i32 %1852, 12
  %1901 = add i32 %1899, %1900
  %1902 = ashr i32 %1901, 19
  %1903 = xor i32 %1901, %1902
  %1904 = xor i32 %1903, -949894596
  %1905 = add i32 %1904, 374761393
  %1906 = shl i32 %1904, 5
  %1907 = add i32 %1905, %1906
  %1908 = add i32 %1907, -744332180
  %1909 = shl i32 %1907, 9
  %1910 = xor i32 %1908, %1909
  %1911 = add i32 %1910, -42973499
  %1912 = shl i32 %1910, 3
  %1913 = add i32 %1911, %1912
  %1914 = ashr i32 %1913, 16
  %1915 = xor i32 %1913, %1914
  %1916 = xor i32 %1915, -1252372727
  %1917 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1918 = load i32, ptr %83, align 8
  %1919 = add i32 %1918, -1
  %1920 = and i32 %1919, %1916
  %1921 = load ptr, ptr %85, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1922 = sext i32 %1920 to i64
  %1923 = shl nsw i64 %1922, 5
  %1924 = getelementptr i8, ptr %1921, i64 %1923
  %1925 = load ptr, ptr %1924, align 8
  %1926 = icmp ne ptr %1925, @nil_typ
  %1927 = icmp ne ptr %1925, null
  %.not44.i1544 = and i1 %1926, %1927
  br i1 %.not44.i1544, label %1928, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1569

1928:                                             ; preds = %1898
  %1929 = getelementptr i8, ptr %1924, i64 8
  %1930 = load i64, ptr %1929, align 4
  %.sroa_idx.i1549 = getelementptr i8, ptr %1924, i64 16
  %1931 = load i64, ptr %.sroa_idx.i1549, align 4
  %1932 = inttoptr i64 %1930 to ptr
  %1933 = inttoptr i64 %1931 to ptr
  %hash_coef_ptr.i.i2.i1550 = getelementptr i8, ptr %1925, i64 8
  %tbl_size_ptr.i.i3.i1551 = getelementptr i8, ptr %1925, i64 16
  %offset_tbl_ptr.i.i4.i1552 = getelementptr i8, ptr %1925, i64 40
  %hash_coef.i.i5.i1553 = load i64, ptr %hash_coef_ptr.i.i2.i1550, align 4, !noalias !237
  %tbl_size.i.i6.i1554 = load i64, ptr %tbl_size_ptr.i.i3.i1551, align 4, !noalias !237
  %offset_tbl.i.i7.i1555 = load ptr, ptr %offset_tbl_ptr.i.i4.i1552, align 8, !noalias !237
  %product.i.i.i8.i1556 = mul i64 %hash_coef.i.i5.i1553, 4015701072841558310
  %shifted.i.i.i9.i1557 = lshr i64 %product.i.i.i8.i1556, 32
  %xored.i.i.i10.i1558 = xor i64 %shifted.i.i.i9.i1557, %product.i.i.i8.i1556
  %hash.i.i.i11.i1559 = and i64 %xored.i.i.i10.i1558, %tbl_size.i.i6.i1554
  %offset_ptr.i.i12.i1560 = getelementptr i32, ptr %offset_tbl.i.i7.i1555, i64 %hash.i.i.i11.i1559
  %offset.i.i13.i1561 = load i32, ptr %offset_ptr.i.i12.i1560, align 4, !noalias !237
  %1934 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1925, 0
  %1935 = insertvalue { ptr, ptr, ptr, i32 } %1934, ptr %1932, 1
  %1936 = insertvalue { ptr, ptr, ptr, i32 } %1935, ptr %1933, 2
  %1937 = insertvalue { ptr, ptr, ptr, i32 } %1936, i32 %offset.i.i13.i1561, 3
  %1938 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1939 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1925) #37
  %1940 = sext i32 %offset.i.i13.i1561 to i64
  %1941 = getelementptr ptr, ptr %1925, i64 %1940
  %1942 = getelementptr i8, ptr %1941, i64 64
  %1943 = load ptr, ptr %1942, align 8
  %result.i.i1562 = call ptr %1943({ ptr, ptr, ptr, i32 } %1937, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1944 = call i32 %result.i.i1562({ ptr, ptr, ptr, i32 } %1937, { ptr, ptr, ptr, i32 } %1937, ptr nonnull align 8 %2) #42
  %1945 = icmp eq i32 %1944, %1852
  br i1 %1945, label %._crit_edge.i1563, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1569

._crit_edge.i1563:                                ; preds = %1928
  %1946 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1947 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1925)
  %1948 = getelementptr i8, ptr %1941, i64 48
  %1949 = load ptr, ptr %1948, align 8
  %result.i15.i1564 = call ptr %1949({ ptr, ptr, ptr, i32 } %1937, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1950 = call { ptr, i160 } %result.i15.i1564({ ptr, ptr, ptr, i32 } %1937, { ptr, ptr, ptr, i32 } %1937, ptr nonnull align 8 %2) #42
  %1951 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1952 = load ptr, ptr %82, align 8
  %1953 = call i1 %1952({ ptr, i160 } %1950, { ptr, i160 } %1850) #42
  br i1 %1953, label %1954, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1569

1954:                                             ; preds = %._crit_edge.i1563
  %1955 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1956 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1925)
  %1957 = getelementptr i8, ptr %1941, i64 56
  %1958 = load ptr, ptr %1957, align 8
  %result.i16.i1566 = call ptr %1958({ ptr, ptr, ptr, i32 } %1937, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1959 = call { ptr, i160 } %result.i16.i1566({ ptr, ptr, ptr, i32 } %1937, { ptr, ptr, ptr, i32 } %1937, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i1567 = extractvalue { ptr, i160 } %1959, 0
  %.fca.1.extract22.i1568 = extractvalue { ptr, i160 } %1959, 1
  br label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1569

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1569: ; preds = %1898, %1928, %._crit_edge.i1563, %1954
  %.reg2mem43.sroa.3.0.i1545 = phi i160 [ %.fca.1.extract22.i1568, %1954 ], [ poison, %._crit_edge.i1563 ], [ poison, %1898 ], [ poison, %1928 ]
  %.reg2mem41.0.i1546 = phi ptr [ %.fca.0.extract21.i1567, %1954 ], [ @nil_typ, %._crit_edge.i1563 ], [ @nil_typ, %1898 ], [ @nil_typ, %1928 ]
  %.reload40.fca.0.insert.i1547 = insertvalue { ptr, i160 } poison, ptr %.reg2mem41.0.i1546, 0
  %.reload40.fca.1.insert.i1548 = insertvalue { ptr, i160 } %.reload40.fca.0.insert.i1547, i160 %.reg2mem43.sroa.3.0.i1545, 1
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1960 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1961 = icmp ne ptr %.reg2mem41.0.i1546, @nil_typ
  %1962 = icmp ne ptr %.reg2mem41.0.i1546, null
  %.not65.not.not.i607 = and i1 %1961, %1962
  %cond.fr27.i608 = freeze i1 %.not65.not.not.i607
  %spec.select.i609 = select i1 %cond.fr27.i608, ptr %.reg2mem41.0.i1546, ptr @nil_typ
  br label %CuckooMap_get_keyK.exit613

CuckooMap_get_keyK.exit613:                       ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1514, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1569
  %1963 = phi ptr [ %spec.select.i609, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1569 ], [ %.fca.0.extract21.i1512, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1514 ]
  %.pn.i610 = phi { ptr, i160 } [ %.reload40.fca.1.insert.i1548, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1569 ], [ %1894, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1514 ]
  %1964 = icmp ne ptr %1963, @nil_typ
  %1965 = icmp ne ptr %1963, null
  %.not281 = and i1 %1964, %1965
  br i1 %.not281, label %1966, label %._crit_edge.lr.ph.i1584

1966:                                             ; preds = %CuckooMap_get_keyK.exit613
  %1967 = extractvalue { ptr, i160 } %.pn.i610, 1
  %.sroa.2.8.extract.trunc = trunc i160 %1967 to i32
  %1968 = sext i32 %.sroa.2.8.extract.trunc to i64
  %1969 = add i64 %.0263244, %1968
  br label %._crit_edge5

._crit_edge.lr.ph.i1584:                          ; preds = %CuckooMap_get_keyK.exit613
  %result.i93.h2s3381 = alloca [52 x i8], align 64
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 64 dereferenceable(52) %result.i93.h2s3381, i8 0, i64 52, i1 false)
  %1970 = load <51 x i8>, ptr @afqmt_Error_Nil_returned_during_random_hit_test_for_key_, align 64
  store <51 x i8> %1970, ptr %result.i93.h2s3381, align 64
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1971 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1972 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %result.i.i1583.h2s3382 = alloca [52 x i8], align 1
  call void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture nofree noundef nonnull writeonly align 1 dereferenceable(52) %result.i.i1583.h2s3382, ptr noalias nocapture nofree noundef nonnull readonly align 64 dereferenceable(52) %result.i93.h2s3381, i64 noundef 51, i1 noundef false)
  %1973 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %1974 = getelementptr inbounds i8, ptr %result.i.i1583.h2s3382, i64 51
  store i8 0, ptr %1974, align 1
  %puts.i633 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(52) %result.i.i1583.h2s3382) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1975 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  %1976 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %1849) #42
  br label %._crit_edge5

._crit_edge5:                                     ; preds = %1966, %._crit_edge.lr.ph.i1584
  %.1270 = phi i1 [ %.0269243, %1966 ], [ false, %._crit_edge.lr.ph.i1584 ]
  %.1 = phi i64 [ %1969, %1966 ], [ %.0263244, %._crit_edge.lr.ph.i1584 ]
  %1977 = add nuw nsw i32 %.0272242, 1
  %1978 = icmp slt i32 %1977, %.0274
  br i1 %1978, label %.lr.ph245, label %._crit_edge.lr.ph.i1603

._crit_edge.lr.ph.i1603:                          ; preds = %._crit_edge5, %._crit_edge4
  %.0269.lcssa = phi i1 [ true, %._crit_edge4 ], [ %.1270, %._crit_edge5 ]
  %.0263.lcssa = phi i64 [ 0, %._crit_edge4 ], [ %.1, %._crit_edge5 ]
  %1979 = call i64 @clock()
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1980 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1981 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <14 x i8> <i8 71, i8 101, i8 116, i8 32, i8 82, i8 97, i8 110, i8 100, i8 111, i8 109, i8 32, i8 72, i8 105, i8 116>, ptr %result.i.i1602.h2s3373, align 16
  %1982 = sub i64 %1979, %1841
  %1983 = getelementptr inbounds i8, ptr %result.i.i1602.h2s3373, i64 14
  store i8 0, ptr %1983, align 2
  %puts.i653 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(15) %result.i.i1602.h2s3373) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  store <14 x i8> <i8 32, i8 32, i8 79, i8 112, i8 101, i8 114, i8 97, i8 116, i8 105, i8 111, i8 110, i8 115, i8 58, i8 32>, ptr %result.i.i268.i.h2s3371, align 16
  %puts.i.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(15) %result.i.i268.i.h2s3371) #42
  %1984 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %.0274) #42
  store <14 x i8> <i8 32, i8 32, i8 84, i8 111, i8 116, i8 97, i8 108, i8 32, i8 84, i8 105, i8 109, i8 101, i8 58, i8 32>, ptr %result.i.i282.i.h2s3369, align 16
  %puts.i206.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(15) %result.i.i282.i.h2s3369) #42
  %1985 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(6) @i64_string, i64 %1982) #42
  store <3 x i8> <i8 32, i8 109, i8 115>, ptr %result.i.i301.i.h2s3367, align 4
  %puts.i226.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(4) %result.i.i301.i.h2s3367) #42
  br i1 %1842, label %._crit_edge1.i, label %._crit_edge.lr.ph.i1622

._crit_edge1.i:                                   ; preds = %._crit_edge.lr.ph.i1603
  %1986 = icmp sgt i64 %1982, 0
  br i1 %1986, label %1987, label %._crit_edge.lr.ph.i321.i

1987:                                             ; preds = %._crit_edge1.i
  %1988 = mul i64 %1982, 1000000
  %1989 = zext nneg i32 %.0274 to i64
  %1990 = sdiv i64 %1988, %1989
  br label %._crit_edge.lr.ph.i321.i

._crit_edge.lr.ph.i321.i:                         ; preds = %1987, %._crit_edge1.i
  %.0.i = phi i64 [ %1990, %1987 ], [ 0, %._crit_edge1.i ]
  store <15 x i8> <i8 32, i8 32, i8 84, i8 105, i8 109, i8 101, i8 47, i8 79, i8 112, i8 58, i8 32, i8 32, i8 32, i8 32, i8 126>, ptr %result.i.i320.i.h2s3365, align 16
  %puts.i246.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(16) %result.i.i320.i.h2s3365) #42
  %1991 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(6) @i64_string, i64 %.0.i) #42
  %1992 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  store <3 x i8> <i8 32, i8 110, i8 115>, ptr %result.i.i339.i.h2s3363, align 4
  %1993 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %puts.i266.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(4) %result.i.i339.i.h2s3363) #42
  br label %._crit_edge.lr.ph.i1622

._crit_edge.lr.ph.i1622:                          ; preds = %._crit_edge.lr.ph.i1603, %._crit_edge.lr.ph.i321.i
  %.not = icmp eq i64 %.0263.lcssa, %.0275.lcssa
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1994 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1995 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <18 x i8> <i8 32, i8 32, i8 32, i8 32, i8 86, i8 101, i8 114, i8 105, i8 102, i8 105, i8 99, i8 97, i8 116, i8 105, i8 111, i8 110, i8 58, i8 32>, ptr %result.i.i1621.h2s3361, align 32
  %spec.select282 = select i1 %.not, i1 %.0269.lcssa, i1 false
  %1996 = getelementptr inbounds i8, ptr %result.i.i1621.h2s3361, i64 18
  store i8 0, ptr %1996, align 2
  %puts.i673 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(19) %result.i.i1621.h2s3361) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %. = select i1 %spec.select282, <4 x i8> <i8 80, i8 65, i8 83, i8 83>, <4 x i8> <i8 70, i8 65, i8 73, i8 76>
  %.325 = select i1 %spec.select282, ptr %68, ptr %72
  %.326 = select i1 %spec.select282, ptr %69, ptr %73
  %.327 = select i1 %spec.select282, ptr %70, ptr %74
  %.328 = select i1 %spec.select282, ptr %71, ptr %75
  store ptr @_parameterization_Bufferi8, ptr %.325, align 8
  %.325.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %spec.select282, ptr %68, ptr %72
  %.325.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.325.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 8
  store ptr @_parameterization_i32, ptr %.325.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %.325.sroa.sel337.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %spec.select282, ptr %68, ptr %72
  %.325.sroa.sel337.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.325.sroa.sel337.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 16
  store ptr @_parameterization_i32, ptr %.325.sroa.sel337.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %1997 = call ptr @llvm.invariant.start.p0(i64 noundef 9, ptr nocapture nofree noundef nonnull align 8 dereferenceable(24) %.325)
  store ptr @buffer_typ, ptr %.326, align 8
  %.326.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %spec.select282, ptr %69, ptr %73
  %.326.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.326.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 8
  store ptr @i32_typ, ptr %.326.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %.326.sroa.sel332.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %spec.select282, ptr %69, ptr %73
  %.326.sroa.sel332.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.326.sroa.sel332.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 16
  store ptr @i32_typ, ptr %.326.sroa.sel332.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %1998 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(24) %.326)
  store ptr @_parameterization_String, ptr %.327, align 8
  %1999 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %.327)
  %2000 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  store ptr @String, ptr %.328, align 8
  %2001 = call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %.328) #37
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2002 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %2003 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <4 x i8> %., ptr %result.i.i1640.h2s3360, align 4
  %2004 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %2005 = getelementptr inbounds i8, ptr %result.i.i1640.h2s3360, i64 4
  store i8 0, ptr %2005, align 4
  %puts.i693 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(5) %result.i.i1640.h2s3360) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  ret void
}

define void @benchmark_get_random_miss(i32 %0) local_unnamed_addr #10 {
  %2 = alloca {}, align 8
  %result.i.i2000.h2s3778 = alloca [2 x i8], align 2
  store i16 0, ptr %result.i.i2000.h2s3778, align 2
  %result.i.i1981.h2s3779 = alloca [9 x i8], align 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(9) %result.i.i1981.h2s3779, i8 0, i64 9, i1 false)
  %result.i.i1962.h2s3780 = alloca [14 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(14) %result.i.i1962.h2s3780, i8 0, i64 14, i1 false)
  %result.i.i1943.h2s3782 = alloca [5 x i8], align 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(5) %result.i.i1943.h2s3782, i8 0, i64 5, i1 false)
  %result.i.i1924.h2s3783 = alloca [19 x i8], align 32
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 32 dereferenceable(19) %result.i.i1924.h2s3783, i8 0, i64 19, i1 false)
  %result.i.i339.i.h2s3785 = alloca [4 x i8], align 4
  store i32 0, ptr %result.i.i339.i.h2s3785, align 4
  %result.i.i320.i.h2s3787 = alloca [16 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %result.i.i320.i.h2s3787, i8 0, i64 16, i1 false)
  %result.i.i301.i.h2s3789 = alloca [4 x i8], align 4
  store i32 0, ptr %result.i.i301.i.h2s3789, align 4
  %result.i.i282.i.h2s3791 = alloca [15 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(15) %result.i.i282.i.h2s3791, i8 0, i64 15, i1 false)
  %result.i.i268.i.h2s3793 = alloca [15 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(15) %result.i.i268.i.h2s3793, i8 0, i64 15, i1 false)
  %result.i.i1905.h2s3795 = alloca [16 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %result.i.i1905.h2s3795, i8 0, i64 16, i1 false)
  %result.i.i1764.h2s3797 = alloca [23 x i8], align 32
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 32 dereferenceable(23) %result.i.i1764.h2s3797, i8 0, i64 23, i1 false)
  %result.i.i1749.h2s3799 = alloca [30 x i8], align 32
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 32 dereferenceable(30) %result.i.i1749.h2s3799, i8 0, i64 30, i1 false)
  %3 = alloca [1 x ptr], align 8
  %4 = alloca { ptr }, align 8
  %5 = alloca [1 x ptr], align 8
  %6 = alloca { ptr }, align 8
  %7 = alloca [1 x ptr], align 8
  %8 = alloca { ptr }, align 8
  %9 = alloca [1 x ptr], align 8
  %10 = alloca { ptr }, align 8
  %11 = alloca [1 x ptr], align 8
  %12 = alloca { ptr }, align 8
  %13 = alloca [1 x ptr], align 8
  %14 = alloca { ptr }, align 8
  %15 = alloca [1 x ptr], align 8
  %16 = alloca { ptr }, align 8
  %17 = alloca [1 x ptr], align 8
  %18 = alloca { ptr }, align 8
  %19 = alloca [1 x ptr], align 8
  %20 = alloca { ptr }, align 8
  %21 = alloca [1 x ptr], align 8
  %22 = alloca { ptr }, align 8
  %23 = alloca [1 x ptr], align 8
  %24 = alloca { ptr }, align 8
  %25 = alloca [1 x ptr], align 8
  %26 = alloca { ptr }, align 8
  %27 = alloca [1 x ptr], align 8
  %28 = alloca { ptr }, align 8
  %29 = alloca [1 x ptr], align 8
  %30 = alloca { ptr }, align 8
  %31 = alloca [1 x ptr], align 8
  %32 = alloca { ptr }, align 8
  %33 = alloca [1 x ptr], align 8
  %34 = alloca { ptr }, align 8
  %35 = alloca [1 x ptr], align 8
  %36 = alloca { ptr }, align 8
  %37 = alloca [1 x ptr], align 8
  %38 = alloca { ptr }, align 8
  %39 = alloca [1 x ptr], align 8
  %40 = alloca { ptr }, align 8
  %41 = alloca [1 x ptr], align 8
  %42 = alloca { ptr }, align 8
  %43 = alloca [1 x ptr], align 8
  %44 = alloca { ptr }, align 8
  %45 = alloca [1 x ptr], align 8
  %46 = alloca { ptr }, align 8
  %47 = alloca [1 x ptr], align 8
  %48 = alloca { ptr }, align 8
  %49 = alloca [1 x ptr], align 8
  %50 = alloca { ptr }, align 8
  %51 = alloca [1 x ptr], align 8
  %52 = alloca { ptr }, align 8
  %53 = alloca [1 x ptr], align 8
  %54 = alloca { ptr }, align 8
  %55 = alloca [1 x ptr], align 8
  %56 = alloca { ptr }, align 8
  %57 = alloca [1 x ptr], align 8
  %58 = alloca { ptr }, align 8
  %59 = alloca [1 x ptr], align 8
  %60 = alloca { ptr }, align 8
  %61 = alloca [1 x ptr], align 8
  %62 = alloca { ptr }, align 8
  %63 = alloca [1 x ptr], align 8
  %64 = alloca { ptr }, align 8
  %65 = alloca [1 x ptr], align 8
  %66 = alloca { ptr }, align 8
  %oldProtect.i57 = alloca i32, align 4
  %oldProtect.i53 = alloca i32, align 4
  %oldProtect.i12 = alloca i32, align 4
  %oldProtect.i = alloca i32, align 4
  %.sroa.0323.sroa.0 = alloca i8, align 8
  %67 = alloca [3 x ptr], align 8
  %68 = alloca { ptr, ptr, ptr }, align 8
  %69 = alloca [1 x ptr], align 8
  %70 = alloca { ptr }, align 8
  %71 = alloca [3 x ptr], align 8
  %72 = alloca { ptr, ptr, ptr }, align 8
  %73 = alloca [1 x ptr], align 8
  %74 = alloca { ptr }, align 8
  %result.i8 = call noalias nonnull align 8 dereferenceable(64) ptr @bump_malloc_inner(i64 noundef 64, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr @_parameterization_i32, ptr %result.i8, align 8
  %75 = getelementptr inbounds i8, ptr %result.i8, i64 8
  store ptr @_parameterization_i32, ptr %75, align 8
  %76 = getelementptr inbounds i8, ptr %result.i8, i64 16
  store ptr @_parameterization_Pairi32._i32, ptr %76, align 8
  %77 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(64) %result.i8) #37
  %result.i9 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i) #37
  %result.i10 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i9, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i9, ptr noalias nofree noundef nonnull readnone @euzwsrfdqb, ptr noalias nofree noundef nonnull readnone @i32_hasher) #37
  %ret.i = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i9) #48
  %78 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i9) #37
  %result.i11 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i12) #37
  %result.i13 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i11, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i12) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i12) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i11, ptr noalias nofree noundef nonnull readnone @saopqjqbse, ptr noalias nofree noundef nonnull readnone @i32_eq) #37
  %ret.i14 = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i11) #48
  %79 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i11) #37
  %80 = getelementptr inbounds i8, ptr %result.i8, i64 48
  store ptr %ret.i, ptr %80, align 8
  %81 = getelementptr inbounds i8, ptr %result.i8, i64 56
  store ptr %ret.i14, ptr %81, align 8
  %82 = getelementptr inbounds i8, ptr %result.i8, i64 40
  store i32 8, ptr %82, align 8
  %result.i.i336 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %83 = getelementptr inbounds i8, ptr %result.i8, i64 24
  store ptr %result.i.i336, ptr %83, align 8
  %result.i1.i337 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %84 = getelementptr inbounds i8, ptr %result.i8, i64 32
  store ptr %result.i1.i337, ptr %84, align 8
  %85 = call ptr @llvm.invariant.start.p0(i64 noundef 40, ptr nocapture nofree noundef nonnull align 16 dereferenceable(120) @PRNG) #37
  %result.i51 = call noalias nonnull align 8 dereferenceable(64) ptr @bump_malloc_inner(i64 noundef 64, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr @_parameterization_i32, ptr %result.i51, align 8
  %86 = getelementptr inbounds i8, ptr %result.i51, i64 8
  store ptr @_parameterization_i1, ptr %86, align 8
  %87 = getelementptr inbounds i8, ptr %result.i51, i64 16
  store ptr @_parameterization_Pairi32._i1, ptr %87, align 8
  %88 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(64) %result.i51) #37
  %result.i52 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i53) #37
  %result.i54 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i52, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i53) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i53) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i52, ptr noalias nofree noundef nonnull readnone @hznlcnrizt, ptr noalias nofree noundef nonnull readnone @i32_hasher) #37
  %ret.i55 = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i52) #48
  %89 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i52) #37
  %result.i56 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i57) #37
  %result.i58 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i56, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i57) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i57) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i56, ptr noalias nofree noundef nonnull readnone @hjevcjjaie, ptr noalias nofree noundef nonnull readnone @i32_eq) #37
  %ret.i59 = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i56) #48
  %90 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i56) #37
  %91 = getelementptr inbounds i8, ptr %result.i51, i64 48
  store ptr %ret.i55, ptr %91, align 8
  %92 = getelementptr inbounds i8, ptr %result.i51, i64 56
  store ptr %ret.i59, ptr %92, align 8
  %93 = getelementptr inbounds i8, ptr %result.i51, i64 40
  store i32 8, ptr %93, align 8
  %result.i.i376 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %94 = getelementptr inbounds i8, ptr %result.i51, i64 24
  store ptr %result.i.i376, ptr %94, align 8
  %result.i1.i377 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %95 = getelementptr inbounds i8, ptr %result.i51, i64 32
  store ptr %result.i1.i377, ptr %95, align 8
  %96 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %97 = mul i32 %0, 10
  %98 = icmp sgt i32 %0, 0
  %99 = icmp sgt i32 %97, 0
  %spec.select309 = and i1 %98, %99
  br i1 %spec.select309, label %.lr.ph, label %._crit_edge3._crit_edge

.lr.ph:                                           ; preds = %1
  %100 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %101 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2) #37
  %102 = getelementptr inbounds i8, ptr %result.i8, i64 44
  %103 = getelementptr inbounds i8, ptr %result.i51, i64 44
  %104 = insertvalue { ptr, ptr, ptr, i32 } { ptr @CuckooMap, ptr undef, ptr undef, i32 undef }, ptr %result.i51, 1
  %105 = insertvalue { ptr, ptr, ptr, i32 } %104, ptr undef, 2
  %106 = insertvalue { ptr, ptr, ptr, i32 } %105, i32 10, 3
  %107 = insertvalue { ptr, ptr, ptr, i32 } { ptr @CuckooMap, ptr undef, ptr undef, i32 undef }, ptr %result.i8, 1
  %108 = insertvalue { ptr, ptr, ptr, i32 } %107, ptr undef, 2
  %109 = insertvalue { ptr, ptr, ptr, i32 } %108, i32 10, 3
  %110 = insertvalue { ptr, ptr, ptr, i32 } %107, i32 10, 3
  %111 = insertvalue { ptr, ptr, ptr, i32 } %104, i32 10, 3
  %112 = call ptr @llvm.invariant.start.p0(i64 noundef 40, ptr nocapture nofree noundef nonnull align 16 dereferenceable(120) @PRNG) #37
  br label %113

113:                                              ; preds = %.lr.ph, %._crit_edge1
  %result.i17.h2s3802.sroa.0.0 = phi i32 [ 789, %.lr.ph ], [ %116, %._crit_edge1 ]
  %.0358311 = phi i32 [ 0, %.lr.ph ], [ %1813, %._crit_edge1 ]
  %.0361310 = phi i32 [ 0, %.lr.ph ], [ %.1362, %._crit_edge1 ]
  %114 = mul i32 %result.i17.h2s3802.sroa.0.0, 1103515245
  %115 = add i32 %114, 12345
  %116 = and i32 %115, 2147483647
  %.sroa.0347.0.insert.ext = zext nneg i32 %116 to i160
  %117 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0347.0.insert.ext, 1
  %118 = load ptr, ptr %91, align 8
  %119 = call i32 %118({ ptr, i160 } %117) #42
  %120 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %121 = load i32, ptr %93, align 8
  %122 = add i32 %121, -1
  %123 = and i32 %122, %119
  %124 = load ptr, ptr %94, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %125 = sext i32 %123 to i64
  %126 = shl nsw i64 %125, 5
  %127 = getelementptr i8, ptr %124, i64 %126
  %128 = load ptr, ptr %127, align 8
  %129 = icmp ne ptr %128, @nil_typ
  %130 = icmp ne ptr %128, null
  %.not44.i = and i1 %129, %130
  br i1 %.not44.i, label %131, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

131:                                              ; preds = %113
  %132 = getelementptr i8, ptr %127, i64 8
  %133 = load i64, ptr %132, align 4
  %.sroa_idx.i = getelementptr i8, ptr %127, i64 16
  %134 = load i64, ptr %.sroa_idx.i, align 4
  %135 = inttoptr i64 %133 to ptr
  %136 = inttoptr i64 %134 to ptr
  %hash_coef_ptr.i.i2.i = getelementptr i8, ptr %128, i64 8
  %tbl_size_ptr.i.i3.i = getelementptr i8, ptr %128, i64 16
  %offset_tbl_ptr.i.i4.i = getelementptr i8, ptr %128, i64 40
  %hash_coef.i.i5.i = load i64, ptr %hash_coef_ptr.i.i2.i, align 4, !noalias !240
  %tbl_size.i.i6.i = load i64, ptr %tbl_size_ptr.i.i3.i, align 4, !noalias !240
  %offset_tbl.i.i7.i = load ptr, ptr %offset_tbl_ptr.i.i4.i, align 8, !noalias !240
  %product.i.i.i8.i = mul i64 %hash_coef.i.i5.i, 4015701072841558310
  %shifted.i.i.i9.i = lshr i64 %product.i.i.i8.i, 32
  %xored.i.i.i10.i = xor i64 %shifted.i.i.i9.i, %product.i.i.i8.i
  %hash.i.i.i11.i = and i64 %xored.i.i.i10.i, %tbl_size.i.i6.i
  %offset_ptr.i.i12.i = getelementptr i32, ptr %offset_tbl.i.i7.i, i64 %hash.i.i.i11.i
  %offset.i.i13.i = load i32, ptr %offset_ptr.i.i12.i, align 4, !noalias !240
  %137 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %128, 0
  %138 = insertvalue { ptr, ptr, ptr, i32 } %137, ptr %135, 1
  %139 = insertvalue { ptr, ptr, ptr, i32 } %138, ptr %136, 2
  %140 = insertvalue { ptr, ptr, ptr, i32 } %139, i32 %offset.i.i13.i, 3
  %141 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %142 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %128) #37
  %143 = sext i32 %offset.i.i13.i to i64
  %144 = getelementptr ptr, ptr %128, i64 %143
  %145 = getelementptr i8, ptr %144, i64 64
  %146 = load ptr, ptr %145, align 8
  %result.i.i = call ptr %146({ ptr, ptr, ptr, i32 } %140, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %147 = call i32 %result.i.i({ ptr, ptr, ptr, i32 } %140, { ptr, ptr, ptr, i32 } %140, ptr nonnull align 8 %2) #42
  %148 = icmp eq i32 %147, %119
  br i1 %148, label %._crit_edge.i953, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

._crit_edge.i953:                                 ; preds = %131
  %149 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %150 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %128)
  %151 = getelementptr i8, ptr %144, i64 48
  %152 = load ptr, ptr %151, align 8
  %result.i15.i954 = call ptr %152({ ptr, ptr, ptr, i32 } %140, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %153 = call { ptr, i160 } %result.i15.i954({ ptr, ptr, ptr, i32 } %140, { ptr, ptr, ptr, i32 } %140, ptr nonnull align 8 %2) #42
  %154 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %155 = load ptr, ptr %92, align 8
  %156 = call i1 %155({ ptr, i160 } %153, { ptr, i160 } %117) #42
  br i1 %156, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread: ; preds = %._crit_edge.i953, %113, %131
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %165

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit: ; preds = %._crit_edge.i953
  %157 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %158 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %128)
  %159 = getelementptr i8, ptr %144, i64 56
  %160 = load ptr, ptr %159, align 8
  %result.i16.i955 = call ptr %160({ ptr, ptr, ptr, i32 } %140, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %161 = call { ptr, i160 } %result.i16.i955({ ptr, ptr, ptr, i32 } %140, { ptr, ptr, ptr, i32 } %140, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i = extractvalue { ptr, i160 } %161, 0
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %162 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %163 = icmp ne ptr %.fca.0.extract21.i, @nil_typ
  %164 = icmp ne ptr %.fca.0.extract21.i, null
  %.not63.i = and i1 %163, %164
  br i1 %.not63.i, label %CuckooMap_get_keyK.exit, label %165

165:                                              ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit
  %166 = add i32 %119, 2127912214
  %167 = shl i32 %119, 12
  %168 = add i32 %166, %167
  %169 = ashr i32 %168, 19
  %170 = xor i32 %168, %169
  %171 = xor i32 %170, -949894596
  %172 = add i32 %171, 374761393
  %173 = shl i32 %171, 5
  %174 = add i32 %172, %173
  %175 = add i32 %174, -744332180
  %176 = shl i32 %174, 9
  %177 = xor i32 %175, %176
  %178 = add i32 %177, -42973499
  %179 = shl i32 %177, 3
  %180 = add i32 %178, %179
  %181 = ashr i32 %180, 16
  %182 = xor i32 %180, %181
  %183 = xor i32 %182, -1252372727
  %184 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %185 = load i32, ptr %93, align 8
  %186 = add i32 %185, -1
  %187 = and i32 %186, %183
  %188 = load ptr, ptr %95, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %189 = sext i32 %187 to i64
  %190 = shl nsw i64 %189, 5
  %191 = getelementptr i8, ptr %188, i64 %190
  %192 = load ptr, ptr %191, align 8
  %193 = icmp ne ptr %192, @nil_typ
  %194 = icmp ne ptr %192, null
  %.not44.i984 = and i1 %193, %194
  br i1 %.not44.i984, label %195, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1009

195:                                              ; preds = %165
  %196 = getelementptr i8, ptr %191, i64 8
  %197 = load i64, ptr %196, align 4
  %.sroa_idx.i989 = getelementptr i8, ptr %191, i64 16
  %198 = load i64, ptr %.sroa_idx.i989, align 4
  %199 = inttoptr i64 %197 to ptr
  %200 = inttoptr i64 %198 to ptr
  %hash_coef_ptr.i.i2.i990 = getelementptr i8, ptr %192, i64 8
  %tbl_size_ptr.i.i3.i991 = getelementptr i8, ptr %192, i64 16
  %offset_tbl_ptr.i.i4.i992 = getelementptr i8, ptr %192, i64 40
  %hash_coef.i.i5.i993 = load i64, ptr %hash_coef_ptr.i.i2.i990, align 4, !noalias !243
  %tbl_size.i.i6.i994 = load i64, ptr %tbl_size_ptr.i.i3.i991, align 4, !noalias !243
  %offset_tbl.i.i7.i995 = load ptr, ptr %offset_tbl_ptr.i.i4.i992, align 8, !noalias !243
  %product.i.i.i8.i996 = mul i64 %hash_coef.i.i5.i993, 4015701072841558310
  %shifted.i.i.i9.i997 = lshr i64 %product.i.i.i8.i996, 32
  %xored.i.i.i10.i998 = xor i64 %shifted.i.i.i9.i997, %product.i.i.i8.i996
  %hash.i.i.i11.i999 = and i64 %xored.i.i.i10.i998, %tbl_size.i.i6.i994
  %offset_ptr.i.i12.i1000 = getelementptr i32, ptr %offset_tbl.i.i7.i995, i64 %hash.i.i.i11.i999
  %offset.i.i13.i1001 = load i32, ptr %offset_ptr.i.i12.i1000, align 4, !noalias !243
  %201 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %192, 0
  %202 = insertvalue { ptr, ptr, ptr, i32 } %201, ptr %199, 1
  %203 = insertvalue { ptr, ptr, ptr, i32 } %202, ptr %200, 2
  %204 = insertvalue { ptr, ptr, ptr, i32 } %203, i32 %offset.i.i13.i1001, 3
  %205 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %206 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %192) #37
  %207 = sext i32 %offset.i.i13.i1001 to i64
  %208 = getelementptr ptr, ptr %192, i64 %207
  %209 = getelementptr i8, ptr %208, i64 64
  %210 = load ptr, ptr %209, align 8
  %result.i.i1002 = call ptr %210({ ptr, ptr, ptr, i32 } %204, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %211 = call i32 %result.i.i1002({ ptr, ptr, ptr, i32 } %204, { ptr, ptr, ptr, i32 } %204, ptr nonnull align 8 %2) #42
  %212 = icmp eq i32 %211, %119
  br i1 %212, label %._crit_edge.i1003, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1009

._crit_edge.i1003:                                ; preds = %195
  %213 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %214 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %192)
  %215 = getelementptr i8, ptr %208, i64 48
  %216 = load ptr, ptr %215, align 8
  %result.i15.i1004 = call ptr %216({ ptr, ptr, ptr, i32 } %204, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %217 = call { ptr, i160 } %result.i15.i1004({ ptr, ptr, ptr, i32 } %204, { ptr, ptr, ptr, i32 } %204, ptr nonnull align 8 %2) #42
  %218 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %219 = load ptr, ptr %92, align 8
  %220 = call i1 %219({ ptr, i160 } %217, { ptr, i160 } %117) #42
  br i1 %220, label %221, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1009

221:                                              ; preds = %._crit_edge.i1003
  %222 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %223 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %192)
  %224 = getelementptr i8, ptr %208, i64 56
  %225 = load ptr, ptr %224, align 8
  %result.i16.i1006 = call ptr %225({ ptr, ptr, ptr, i32 } %204, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %226 = call { ptr, i160 } %result.i16.i1006({ ptr, ptr, ptr, i32 } %204, { ptr, ptr, ptr, i32 } %204, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i1007 = extractvalue { ptr, i160 } %226, 0
  br label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1009

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1009: ; preds = %165, %195, %._crit_edge.i1003, %221
  %.reg2mem41.0.i986 = phi ptr [ %.fca.0.extract21.i1007, %221 ], [ @nil_typ, %._crit_edge.i1003 ], [ @nil_typ, %165 ], [ @nil_typ, %195 ]
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %227 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %228 = icmp ne ptr %.reg2mem41.0.i986, @nil_typ
  %229 = icmp ne ptr %.reg2mem41.0.i986, null
  %.not65.not.not.i = and i1 %228, %229
  %cond.fr27.i = freeze i1 %.not65.not.not.i
  %spec.select.i = select i1 %cond.fr27.i, ptr %.reg2mem41.0.i986, ptr @nil_typ
  br label %CuckooMap_get_keyK.exit

CuckooMap_get_keyK.exit:                          ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1009
  %230 = phi ptr [ %spec.select.i, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1009 ], [ %.fca.0.extract21.i, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit ]
  %231 = icmp eq ptr %230, @nil_typ
  %232 = icmp eq ptr %230, null
  %233 = or i1 %231, %232
  br i1 %233, label %234, label %._crit_edge1

234:                                              ; preds = %CuckooMap_get_keyK.exit
  %235 = add nuw i32 %116, 1
  %.sroa.0330.0.insert.ext = zext i32 %235 to i160
  %236 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0330.0.insert.ext, 1
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %237 = load ptr, ptr %80, align 8
  %238 = call i32 %237({ ptr, i160 } %117) #42
  %239 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %240 = load i32, ptr %82, align 8
  %241 = add i32 %240, -1
  %242 = and i32 %241, %238
  %243 = load ptr, ptr %83, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %244 = sext i32 %242 to i64
  %245 = shl nsw i64 %244, 5
  %246 = getelementptr i8, ptr %243, i64 %245
  %247 = load ptr, ptr %246, align 8
  %248 = getelementptr i8, ptr %246, i64 8
  %249 = icmp ne ptr %247, @nil_typ
  %250 = icmp ne ptr %247, null
  %.not64.i = and i1 %249, %250
  br i1 %.not64.i, label %251, label %349

251:                                              ; preds = %234
  %252 = load i64, ptr %248, align 4
  %.sroa_idx.i1050 = getelementptr i8, ptr %246, i64 16
  %253 = load i64, ptr %.sroa_idx.i1050, align 4
  %254 = inttoptr i64 %252 to ptr
  %255 = inttoptr i64 %253 to ptr
  %hash_coef_ptr.i.i3.i = getelementptr i8, ptr %247, i64 8
  %tbl_size_ptr.i.i4.i = getelementptr i8, ptr %247, i64 16
  %offset_tbl_ptr.i.i5.i = getelementptr i8, ptr %247, i64 40
  %hash_coef.i.i6.i = load i64, ptr %hash_coef_ptr.i.i3.i, align 4, !noalias !246
  %tbl_size.i.i7.i = load i64, ptr %tbl_size_ptr.i.i4.i, align 4, !noalias !246
  %offset_tbl.i.i8.i = load ptr, ptr %offset_tbl_ptr.i.i5.i, align 8, !noalias !246
  %product.i.i.i9.i = mul i64 %hash_coef.i.i6.i, 4015701072841558310
  %shifted.i.i.i10.i = lshr i64 %product.i.i.i9.i, 32
  %xored.i.i.i11.i = xor i64 %shifted.i.i.i10.i, %product.i.i.i9.i
  %hash.i.i.i12.i = and i64 %xored.i.i.i11.i, %tbl_size.i.i7.i
  %offset_ptr.i.i13.i = getelementptr i32, ptr %offset_tbl.i.i8.i, i64 %hash.i.i.i12.i
  %offset.i.i14.i = load i32, ptr %offset_ptr.i.i13.i, align 4, !noalias !246
  %256 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %247, 0
  %257 = insertvalue { ptr, ptr, ptr, i32 } %256, ptr %254, 1
  %258 = insertvalue { ptr, ptr, ptr, i32 } %257, ptr %255, 2
  %259 = insertvalue { ptr, ptr, ptr, i32 } %258, i32 %offset.i.i14.i, 3
  %260 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %261 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %247) #37
  %262 = sext i32 %offset.i.i14.i to i64
  %263 = getelementptr ptr, ptr %247, i64 %262
  %264 = getelementptr i8, ptr %263, i64 64
  %265 = load ptr, ptr %264, align 8
  %result.i.i1051 = call ptr %265({ ptr, ptr, ptr, i32 } %259, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %266 = call i32 %result.i.i1051({ ptr, ptr, ptr, i32 } %259, { ptr, ptr, ptr, i32 } %259, ptr nonnull align 8 %2) #42
  %267 = icmp eq i32 %266, %238
  br i1 %267, label %._crit_edge.i1052, label %349

._crit_edge.i1052:                                ; preds = %251
  %268 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %269 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %247)
  %270 = getelementptr i8, ptr %263, i64 48
  %271 = load ptr, ptr %270, align 8
  %result.i16.i1053 = call ptr %271({ ptr, ptr, ptr, i32 } %259, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %272 = call { ptr, i160 } %result.i16.i1053({ ptr, ptr, ptr, i32 } %259, { ptr, ptr, ptr, i32 } %259, ptr nonnull align 8 %2) #42
  %273 = load ptr, ptr %81, align 8
  %274 = call i1 %273({ ptr, i160 } %272, { ptr, i160 } %117) #42
  br i1 %274, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, label %349

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit: ; preds = %._crit_edge.i1052
  %275 = load ptr, ptr %result.i8, align 8
  %276 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %277 = load ptr, ptr %75, align 8
  %278 = load ptr, ptr %275, align 8, !alias.scope !249
  %279 = getelementptr i8, ptr %278, i64 72
  %280 = load ptr, ptr %279, align 8, !alias.scope !249
  %result.i.i.i1054 = call { i64, i64 } %280(ptr nocapture nofree nonnull readonly align 8 %275) #41, !alias.scope !249
  %281 = extractvalue { i64, i64 } %result.i.i.i1054, 0
  %282 = extractvalue { i64, i64 } %result.i.i.i1054, 1
  %283 = urem i64 20, %282
  %284 = icmp eq i64 %283, 0
  %285 = sub i64 %282, %283
  %286 = select i1 %284, i64 0, i64 %285
  %287 = add i64 %281, 20
  %288 = add i64 %287, %286
  %289 = load ptr, ptr %277, align 8, !alias.scope !249
  %290 = getelementptr i8, ptr %289, i64 72
  %291 = load ptr, ptr %290, align 8, !alias.scope !249
  %result.i1.i.i1055 = call { i64, i64 } %291(ptr nocapture nofree nonnull readonly align 8 %277) #41, !alias.scope !249
  %292 = extractvalue { i64, i64 } %result.i1.i.i1055, 0
  %293 = extractvalue { i64, i64 } %result.i1.i.i1055, 1
  %294 = call i64 @llvm.umax.i64(i64 %282, i64 %293) #38
  %295 = call i64 @llvm.umax.i64(i64 %294, i64 noundef 8) #38, !range !16
  %296 = urem i64 %288, %293
  %297 = icmp eq i64 %296, 0
  %298 = sub i64 %293, %296
  %299 = select i1 %297, i64 0, i64 %298
  %300 = add i64 %292, %288
  %301 = add i64 %300, %299
  %302 = urem i64 %301, %295
  %303 = icmp eq i64 %302, 0
  %304 = sub i64 %295, %302
  %305 = select i1 %303, i64 0, i64 %304
  %306 = add i64 %305, %301
  %result.i20.i1056 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %306, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %275, ptr %result.i20.i1056, align 8
  %307 = getelementptr inbounds i8, ptr %result.i20.i1056, i64 8
  store ptr %277, ptr %307, align 8
  %308 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i1056)
  %309 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %310 = load ptr, ptr %275, align 8
  %311 = getelementptr i8, ptr %310, i64 72
  %312 = load ptr, ptr %311, align 8
  %result.i.i54.i = call { i64, i64 } %312(ptr nocapture nofree nonnull readonly align 8 %275) #41
  %313 = extractvalue { i64, i64 } %result.i.i54.i, 1
  %314 = urem i64 20, %313
  %315 = icmp eq i64 %314, 0
  %reass.sub3827 = sub i64 %313, %314
  %316 = add i64 %reass.sub3827, 20
  %317 = select i1 %315, i64 20, i64 %316
  %318 = getelementptr i8, ptr %result.i20.i1056, i64 %317
  %319 = getelementptr i8, ptr %310, i64 64
  %320 = load ptr, ptr %319, align 8
  call void %320({ ptr, i160 } %117, ptr nocapture nofree nonnull readonly align 8 %275, ptr nocapture nofree writeonly %318) #49
  %321 = load ptr, ptr %result.i20.i1056, align 8
  %322 = load ptr, ptr %321, align 8
  %323 = getelementptr i8, ptr %322, i64 72
  %324 = load ptr, ptr %323, align 8
  %result.i.i55.i = call { i64, i64 } %324(ptr nocapture nofree nonnull readonly align 8 %321) #41
  %325 = extractvalue { i64, i64 } %result.i.i55.i, 0
  %326 = extractvalue { i64, i64 } %result.i.i55.i, 1
  %327 = urem i64 20, %326
  %328 = icmp eq i64 %327, 0
  %329 = sub i64 %326, %327
  %330 = select i1 %328, i64 0, i64 %329
  %331 = add i64 %325, 20
  %332 = add i64 %331, %330
  %333 = load ptr, ptr %307, align 8
  %334 = load ptr, ptr %333, align 8
  %335 = getelementptr i8, ptr %334, i64 72
  %336 = load ptr, ptr %335, align 8
  %result.i1.i56.i = call { i64, i64 } %336(ptr nocapture nofree nonnull readonly align 8 %333) #41
  %337 = extractvalue { i64, i64 } %result.i1.i56.i, 1
  %338 = urem i64 %332, %337
  %339 = icmp eq i64 %338, 0
  %340 = sub i64 %337, %338
  %341 = select i1 %339, i64 0, i64 %340
  %342 = getelementptr i8, ptr %result.i20.i1056, i64 %332
  %343 = getelementptr i8, ptr %342, i64 %341
  %344 = getelementptr i8, ptr %334, i64 64
  %345 = load ptr, ptr %344, align 8
  call void %345({ ptr, i160 } %236, ptr nocapture nofree nonnull readonly align 8 %333, ptr nocapture nofree writeonly %343) #49
  %346 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %347 = getelementptr inbounds i8, ptr %result.i20.i1056, i64 16
  store i32 %238, ptr %347, align 8
  store ptr @Entry, ptr %246, align 8
  %348 = ptrtoint ptr %result.i20.i1056 to i64
  store i64 %348, ptr %248, align 4
  %.sroa_idx28.i = getelementptr i8, ptr %246, i64 24
  store i32 10, ptr %.sroa_idx28.i, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit

349:                                              ; preds = %._crit_edge.i1052, %234, %251
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %350 = add i32 %238, 2127912214
  %351 = shl i32 %238, 12
  %352 = add i32 %350, %351
  %353 = ashr i32 %352, 19
  %354 = xor i32 %352, %353
  %355 = xor i32 %354, -949894596
  %356 = add i32 %355, 374761393
  %357 = shl i32 %355, 5
  %358 = add i32 %356, %357
  %359 = add i32 %358, -744332180
  %360 = shl i32 %358, 9
  %361 = xor i32 %359, %360
  %362 = add i32 %361, -42973499
  %363 = shl i32 %361, 3
  %364 = add i32 %362, %363
  %365 = ashr i32 %364, 16
  %366 = xor i32 %364, %365
  %367 = xor i32 %366, -1252372727
  %368 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %369 = load i32, ptr %82, align 8
  %370 = add i32 %369, -1
  %371 = and i32 %370, %367
  %372 = load ptr, ptr %84, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %373 = sext i32 %371 to i64
  %374 = shl nsw i64 %373, 5
  %375 = getelementptr i8, ptr %372, i64 %374
  %376 = load ptr, ptr %375, align 8
  %377 = getelementptr i8, ptr %375, i64 8
  %378 = icmp ne ptr %376, @nil_typ
  %379 = icmp ne ptr %376, null
  %.not64.i1086 = and i1 %378, %379
  br i1 %.not64.i1086, label %380, label %478

380:                                              ; preds = %349
  %381 = load i64, ptr %377, align 4
  %.sroa_idx.i1088 = getelementptr i8, ptr %375, i64 16
  %382 = load i64, ptr %.sroa_idx.i1088, align 4
  %383 = inttoptr i64 %381 to ptr
  %384 = inttoptr i64 %382 to ptr
  %hash_coef_ptr.i.i3.i1089 = getelementptr i8, ptr %376, i64 8
  %tbl_size_ptr.i.i4.i1090 = getelementptr i8, ptr %376, i64 16
  %offset_tbl_ptr.i.i5.i1091 = getelementptr i8, ptr %376, i64 40
  %hash_coef.i.i6.i1092 = load i64, ptr %hash_coef_ptr.i.i3.i1089, align 4, !noalias !252
  %tbl_size.i.i7.i1093 = load i64, ptr %tbl_size_ptr.i.i4.i1090, align 4, !noalias !252
  %offset_tbl.i.i8.i1094 = load ptr, ptr %offset_tbl_ptr.i.i5.i1091, align 8, !noalias !252
  %product.i.i.i9.i1095 = mul i64 %hash_coef.i.i6.i1092, 4015701072841558310
  %shifted.i.i.i10.i1096 = lshr i64 %product.i.i.i9.i1095, 32
  %xored.i.i.i11.i1097 = xor i64 %shifted.i.i.i10.i1096, %product.i.i.i9.i1095
  %hash.i.i.i12.i1098 = and i64 %xored.i.i.i11.i1097, %tbl_size.i.i7.i1093
  %offset_ptr.i.i13.i1099 = getelementptr i32, ptr %offset_tbl.i.i8.i1094, i64 %hash.i.i.i12.i1098
  %offset.i.i14.i1100 = load i32, ptr %offset_ptr.i.i13.i1099, align 4, !noalias !252
  %385 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %376, 0
  %386 = insertvalue { ptr, ptr, ptr, i32 } %385, ptr %383, 1
  %387 = insertvalue { ptr, ptr, ptr, i32 } %386, ptr %384, 2
  %388 = insertvalue { ptr, ptr, ptr, i32 } %387, i32 %offset.i.i14.i1100, 3
  %389 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %390 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %376) #37
  %391 = sext i32 %offset.i.i14.i1100 to i64
  %392 = getelementptr ptr, ptr %376, i64 %391
  %393 = getelementptr i8, ptr %392, i64 64
  %394 = load ptr, ptr %393, align 8
  %result.i.i1101 = call ptr %394({ ptr, ptr, ptr, i32 } %388, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %395 = call i32 %result.i.i1101({ ptr, ptr, ptr, i32 } %388, { ptr, ptr, ptr, i32 } %388, ptr nonnull align 8 %2) #42
  %396 = icmp eq i32 %395, %238
  br i1 %396, label %._crit_edge.i1102, label %478

._crit_edge.i1102:                                ; preds = %380
  %397 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %398 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %376)
  %399 = getelementptr i8, ptr %392, i64 48
  %400 = load ptr, ptr %399, align 8
  %result.i16.i1103 = call ptr %400({ ptr, ptr, ptr, i32 } %388, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %401 = call { ptr, i160 } %result.i16.i1103({ ptr, ptr, ptr, i32 } %388, { ptr, ptr, ptr, i32 } %388, ptr nonnull align 8 %2) #42
  %402 = load ptr, ptr %81, align 8
  %403 = call i1 %402({ ptr, i160 } %401, { ptr, i160 } %117) #42
  br i1 %403, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1115, label %478

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1115: ; preds = %._crit_edge.i1102
  %404 = load ptr, ptr %result.i8, align 8
  %405 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %406 = load ptr, ptr %75, align 8
  %407 = load ptr, ptr %404, align 8, !alias.scope !255
  %408 = getelementptr i8, ptr %407, i64 72
  %409 = load ptr, ptr %408, align 8, !alias.scope !255
  %result.i.i.i1107 = call { i64, i64 } %409(ptr nocapture nofree nonnull readonly align 8 %404) #41, !alias.scope !255
  %410 = extractvalue { i64, i64 } %result.i.i.i1107, 0
  %411 = extractvalue { i64, i64 } %result.i.i.i1107, 1
  %412 = urem i64 20, %411
  %413 = icmp eq i64 %412, 0
  %414 = sub i64 %411, %412
  %415 = select i1 %413, i64 0, i64 %414
  %416 = add i64 %410, 20
  %417 = add i64 %416, %415
  %418 = load ptr, ptr %406, align 8, !alias.scope !255
  %419 = getelementptr i8, ptr %418, i64 72
  %420 = load ptr, ptr %419, align 8, !alias.scope !255
  %result.i1.i.i1108 = call { i64, i64 } %420(ptr nocapture nofree nonnull readonly align 8 %406) #41, !alias.scope !255
  %421 = extractvalue { i64, i64 } %result.i1.i.i1108, 0
  %422 = extractvalue { i64, i64 } %result.i1.i.i1108, 1
  %423 = call i64 @llvm.umax.i64(i64 %411, i64 %422) #38
  %424 = call i64 @llvm.umax.i64(i64 %423, i64 noundef 8) #38, !range !16
  %425 = urem i64 %417, %422
  %426 = icmp eq i64 %425, 0
  %427 = sub i64 %422, %425
  %428 = select i1 %426, i64 0, i64 %427
  %429 = add i64 %421, %417
  %430 = add i64 %429, %428
  %431 = urem i64 %430, %424
  %432 = icmp eq i64 %431, 0
  %433 = sub i64 %424, %431
  %434 = select i1 %432, i64 0, i64 %433
  %435 = add i64 %434, %430
  %result.i20.i1109 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %435, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %404, ptr %result.i20.i1109, align 8
  %436 = getelementptr inbounds i8, ptr %result.i20.i1109, i64 8
  store ptr %406, ptr %436, align 8
  %437 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i1109)
  %438 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %439 = load ptr, ptr %404, align 8
  %440 = getelementptr i8, ptr %439, i64 72
  %441 = load ptr, ptr %440, align 8
  %result.i.i54.i1110 = call { i64, i64 } %441(ptr nocapture nofree nonnull readonly align 8 %404) #41
  %442 = extractvalue { i64, i64 } %result.i.i54.i1110, 1
  %443 = urem i64 20, %442
  %444 = icmp eq i64 %443, 0
  %reass.sub3826 = sub i64 %442, %443
  %445 = add i64 %reass.sub3826, 20
  %446 = select i1 %444, i64 20, i64 %445
  %447 = getelementptr i8, ptr %result.i20.i1109, i64 %446
  %448 = getelementptr i8, ptr %439, i64 64
  %449 = load ptr, ptr %448, align 8
  call void %449({ ptr, i160 } %117, ptr nocapture nofree nonnull readonly align 8 %404, ptr nocapture nofree writeonly %447) #49
  %450 = load ptr, ptr %result.i20.i1109, align 8
  %451 = load ptr, ptr %450, align 8
  %452 = getelementptr i8, ptr %451, i64 72
  %453 = load ptr, ptr %452, align 8
  %result.i.i55.i1112 = call { i64, i64 } %453(ptr nocapture nofree nonnull readonly align 8 %450) #41
  %454 = extractvalue { i64, i64 } %result.i.i55.i1112, 0
  %455 = extractvalue { i64, i64 } %result.i.i55.i1112, 1
  %456 = urem i64 20, %455
  %457 = icmp eq i64 %456, 0
  %458 = sub i64 %455, %456
  %459 = select i1 %457, i64 0, i64 %458
  %460 = add i64 %454, 20
  %461 = add i64 %460, %459
  %462 = load ptr, ptr %436, align 8
  %463 = load ptr, ptr %462, align 8
  %464 = getelementptr i8, ptr %463, i64 72
  %465 = load ptr, ptr %464, align 8
  %result.i1.i56.i1113 = call { i64, i64 } %465(ptr nocapture nofree nonnull readonly align 8 %462) #41
  %466 = extractvalue { i64, i64 } %result.i1.i56.i1113, 1
  %467 = urem i64 %461, %466
  %468 = icmp eq i64 %467, 0
  %469 = sub i64 %466, %467
  %470 = select i1 %468, i64 0, i64 %469
  %471 = getelementptr i8, ptr %result.i20.i1109, i64 %461
  %472 = getelementptr i8, ptr %471, i64 %470
  %473 = getelementptr i8, ptr %463, i64 64
  %474 = load ptr, ptr %473, align 8
  call void %474({ ptr, i160 } %236, ptr nocapture nofree nonnull readonly align 8 %462, ptr nocapture nofree writeonly %472) #49
  %475 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %476 = getelementptr inbounds i8, ptr %result.i20.i1109, i64 16
  store i32 %238, ptr %476, align 8
  store ptr @Entry, ptr %375, align 8
  %477 = ptrtoint ptr %result.i20.i1109 to i64
  store i64 %477, ptr %377, align 4
  %.sroa_idx28.i1114 = getelementptr i8, ptr %375, i64 24
  store i32 10, ptr %.sroa_idx28.i1114, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit

478:                                              ; preds = %._crit_edge.i1102, %349, %380
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %479 = load i32, ptr %102, align 4
  %480 = load i32, ptr %82, align 8
  %.not.i = icmp slt i32 %479, %480
  br i1 %.not.i, label %._crit_edge.i, label %481

481:                                              ; preds = %478
  %482 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %483 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %484 = load ptr, ptr %83, align 8
  %485 = load ptr, ptr %84, align 8
  %486 = shl i32 %480, 1
  %spec.select.i1130 = call i32 @llvm.smax.i32(i32 %486, i32 noundef 16) #37
  store i32 %spec.select.i1130, ptr %82, align 8
  %487 = zext nneg i32 %spec.select.i1130 to i64
  %488 = shl nuw nsw i64 %487, 5
  %result.i.i1131 = call noalias ptr @bump_malloc_inner(i64 noundef %488, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i1131, ptr %83, align 8
  %result.i1.i = call noalias ptr @bump_malloc_inner(i64 noundef %488, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i, ptr %84, align 8
  store i32 0, ptr %102, align 4
  %489 = icmp sgt i32 %480, 0
  br i1 %489, label %.lr.ph.i, label %._crit_edge.i

.lr.ph.i:                                         ; preds = %481, %._crit_edge.i2191
  %.045.i = phi i32 [ %546, %._crit_edge.i2191 ], [ 0, %481 ]
  %490 = zext nneg i32 %.045.i to i64
  %491 = shl nuw nsw i64 %490, 5
  %492 = getelementptr i8, ptr %484, i64 %491
  %493 = load ptr, ptr %492, align 8
  %494 = icmp ne ptr %493, @nil_typ
  %495 = icmp ne ptr %493, null
  %.not16.i = and i1 %494, %495
  br i1 %.not16.i, label %496, label %._crit_edge.i2191

496:                                              ; preds = %.lr.ph.i
  %497 = getelementptr i8, ptr %492, i64 8
  %498 = load i64, ptr %497, align 4
  %.sroa_idx.i2192 = getelementptr i8, ptr %492, i64 16
  %499 = load i64, ptr %.sroa_idx.i2192, align 4
  %hash_coef_ptr.i.i3.i2193 = getelementptr i8, ptr %493, i64 8
  %tbl_size_ptr.i.i4.i2194 = getelementptr i8, ptr %493, i64 16
  %offset_tbl_ptr.i.i5.i2195 = getelementptr i8, ptr %493, i64 40
  %500 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %47)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %48)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %49)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %50)
  %hash_coef.i.i17.i = load i64, ptr %hash_coef_ptr.i.i3.i2193, align 4, !noalias !23
  %tbl_size.i.i18.i = load i64, ptr %tbl_size_ptr.i.i4.i2194, align 4, !noalias !23
  %offset_tbl.i.i19.i = load ptr, ptr %offset_tbl_ptr.i.i5.i2195, align 8, !noalias !23
  %product.i.i.i20.i = mul i64 %hash_coef.i.i17.i, 4015701072841558310
  %shifted.i.i.i21.i = lshr i64 %product.i.i.i20.i, 32
  %xored.i.i.i22.i = xor i64 %shifted.i.i.i21.i, %product.i.i.i20.i
  %hash.i.i.i23.i = and i64 %xored.i.i.i22.i, %tbl_size.i.i18.i
  %offset_ptr.i.i24.i = getelementptr i32, ptr %offset_tbl.i.i19.i, i64 %hash.i.i.i23.i
  %offset.i.i39.i = load i32, ptr %offset_ptr.i.i24.i, align 4, !noalias !258
  %501 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %502 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %503 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %504

504:                                              ; preds = %.cont.i2733, %496
  %.0308.i2716 = phi i32 [ 0, %496 ], [ %537, %.cont.i2733 ]
  %.070307.i2717 = phi i1 [ true, %496 ], [ %538, %.cont.i2733 ]
  %.sroa.0.0306.i2718 = phi ptr [ %493, %496 ], [ %527, %.cont.i2733 ]
  %.sroa.6.0305.i2719.in = phi i64 [ %498, %496 ], [ %529, %.cont.i2733 ]
  %.sroa.12.0304.i2720.in = phi i64 [ %499, %496 ], [ %530, %.cont.i2733 ]
  %.sroa.17.0303.i2721 = phi i32 [ %offset.i.i39.i, %496 ], [ %offset.i.i71.i2747, %.cont.i2733 ]
  %.sroa.12.0304.i2720 = inttoptr i64 %.sroa.12.0304.i2720.in to ptr
  %.sroa.6.0305.i2719 = inttoptr i64 %.sroa.6.0305.i2719.in to ptr
  %505 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2718, 0
  %506 = insertvalue { ptr, ptr, ptr, i32 } %505, ptr %.sroa.6.0305.i2719, 1
  %507 = insertvalue { ptr, ptr, ptr, i32 } %506, ptr %.sroa.12.0304.i2720, 2
  %508 = insertvalue { ptr, ptr, ptr, i32 } %507, i32 %.sroa.17.0303.i2721, 3
  %509 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2718)
  %510 = sext i32 %.sroa.17.0303.i2721 to i64
  %511 = getelementptr ptr, ptr %.sroa.0.0306.i2718, i64 %510
  %512 = getelementptr i8, ptr %511, i64 64
  %513 = load ptr, ptr %512, align 8
  %result.i43.i2722 = call ptr %513({ ptr, ptr, ptr, i32 } %508, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %514 = call i32 %result.i43.i2722({ ptr, ptr, ptr, i32 } %508, { ptr, ptr, ptr, i32 } %508, ptr nonnull align 8 %2) #42
  %..i2723 = select i1 %.070307.i2717, ptr %47, ptr %49
  %.184.i2724 = select i1 %.070307.i2717, i64 104, i64 112
  %.185.i2725 = select i1 %.070307.i2717, ptr %48, ptr %50
  %.186.i2726 = select i1 %.070307.i2717, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2723, align 8
  %515 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2723)
  %516 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2724
  %517 = load ptr, ptr %516, align 8
  store ptr @i32_typ, ptr %.185.i2725, align 8
  %result.i44.i2727 = call ptr %517({ ptr, ptr, ptr, i32 } %110, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2725) #45
  %518 = call i32 %result.i44.i2727({ ptr, ptr, ptr, i32 } %110, { ptr, ptr, ptr, i32 } %110, ptr nonnull align 8 dereferenceable(8) %..i2723, i32 %514) #42
  %519 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %520 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2726
  %521 = load ptr, ptr %520, align 8
  %522 = load ptr, ptr %521, align 8
  %523 = call { ptr } %522(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i2728 = extractvalue { ptr } %523, 0
  %524 = sext i32 %518 to i64
  %525 = shl nsw i64 %524, 5
  %526 = getelementptr i8, ptr %.fca.0.extract53.i2728, i64 %525
  %527 = load ptr, ptr %526, align 8
  %528 = getelementptr i8, ptr %526, i64 8
  %529 = load i64, ptr %528, align 4
  %.sroa_idx.i2729 = getelementptr i8, ptr %526, i64 16
  %530 = load i64, ptr %.sroa_idx.i2729, align 4
  %531 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %532 = call { ptr } %522(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i = extractvalue { ptr } %532, 0
  %533 = getelementptr i8, ptr %.fca.0.extract51.i, i64 %525
  store ptr %.sroa.0.0306.i2718, ptr %533, align 8
  %534 = getelementptr i8, ptr %533, i64 8
  store i64 %.sroa.6.0305.i2719.in, ptr %534, align 4
  %.sroa_idx100.i2730 = getelementptr i8, ptr %533, i64 16
  store i64 %.sroa.12.0304.i2720.in, ptr %.sroa_idx100.i2730, align 4
  %.sroa_idx101.i2731 = getelementptr i8, ptr %533, i64 24
  store i32 %.sroa.17.0303.i2721, ptr %.sroa_idx101.i2731, align 4
  %535 = icmp ne ptr %527, @nil_typ
  %536 = icmp ne ptr %527, null
  %.not90.i2732 = and i1 %535, %536
  br i1 %.not90.i2732, label %.cont.i2733, label %542

.cont.i2733:                                      ; preds = %504
  %537 = add nuw nsw i32 %.0308.i2716, 1
  %538 = xor i1 %.070307.i2717, true
  %hash_coef_ptr.i.i60.i2736 = getelementptr i8, ptr %527, i64 8
  %tbl_size_ptr.i.i61.i2737 = getelementptr i8, ptr %527, i64 16
  %offset_tbl_ptr.i.i62.i2738 = getelementptr i8, ptr %527, i64 40
  %hash_coef.i.i63.i2739 = load i64, ptr %hash_coef_ptr.i.i60.i2736, align 4
  %tbl_size.i.i64.i2740 = load i64, ptr %tbl_size_ptr.i.i61.i2737, align 4
  %offset_tbl.i.i65.i2741 = load ptr, ptr %offset_tbl_ptr.i.i62.i2738, align 8
  %product.i.i.i66.i2742 = mul i64 %hash_coef.i.i63.i2739, 4015701072841558310
  %shifted.i.i.i67.i2743 = lshr i64 %product.i.i.i66.i2742, 32
  %xored.i.i.i68.i2744 = xor i64 %shifted.i.i.i67.i2743, %product.i.i.i66.i2742
  %hash.i.i.i69.i2745 = and i64 %xored.i.i.i68.i2744, %tbl_size.i.i64.i2740
  %offset_ptr.i.i70.i2746 = getelementptr i32, ptr %offset_tbl.i.i65.i2741, i64 %hash.i.i.i69.i2745
  %offset.i.i71.i2747 = load i32, ptr %offset_ptr.i.i70.i2746, align 4
  %539 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %540 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %541 = icmp ult i32 %.0308.i2716, 99
  br i1 %541, label %504, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2749

542:                                              ; preds = %504
  %543 = load i32, ptr %102, align 4
  %544 = add i32 %543, 1
  %545 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %544, ptr %102, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2749

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2749: ; preds = %.cont.i2733, %542
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %47)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %48)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %49)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %50)
  br label %._crit_edge.i2191

._crit_edge.i2191:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2749, %.lr.ph.i
  %546 = add nuw nsw i32 %.045.i, 1
  %547 = icmp slt i32 %546, %480
  br i1 %547, label %.lr.ph.i, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit: ; preds = %._crit_edge.i2191, %._crit_edge.i2221
  %.045.i2219 = phi i32 [ %604, %._crit_edge.i2221 ], [ 0, %._crit_edge.i2191 ]
  %548 = zext nneg i32 %.045.i2219 to i64
  %549 = shl nuw nsw i64 %548, 5
  %550 = getelementptr i8, ptr %485, i64 %549
  %551 = load ptr, ptr %550, align 8
  %552 = icmp ne ptr %551, @nil_typ
  %553 = icmp ne ptr %551, null
  %.not16.i2220 = and i1 %552, %553
  br i1 %.not16.i2220, label %554, label %._crit_edge.i2221

554:                                              ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit
  %555 = getelementptr i8, ptr %550, i64 8
  %556 = load i64, ptr %555, align 4
  %.sroa_idx.i2222 = getelementptr i8, ptr %550, i64 16
  %557 = load i64, ptr %.sroa_idx.i2222, align 4
  %hash_coef_ptr.i.i3.i2223 = getelementptr i8, ptr %551, i64 8
  %tbl_size_ptr.i.i4.i2224 = getelementptr i8, ptr %551, i64 16
  %offset_tbl_ptr.i.i5.i2225 = getelementptr i8, ptr %551, i64 40
  %558 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %43)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %44)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %45)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %46)
  %hash_coef.i.i17.i2767 = load i64, ptr %hash_coef_ptr.i.i3.i2223, align 4, !noalias !23
  %tbl_size.i.i18.i2768 = load i64, ptr %tbl_size_ptr.i.i4.i2224, align 4, !noalias !23
  %offset_tbl.i.i19.i2769 = load ptr, ptr %offset_tbl_ptr.i.i5.i2225, align 8, !noalias !23
  %product.i.i.i20.i2770 = mul i64 %hash_coef.i.i17.i2767, 4015701072841558310
  %shifted.i.i.i21.i2771 = lshr i64 %product.i.i.i20.i2770, 32
  %xored.i.i.i22.i2772 = xor i64 %shifted.i.i.i21.i2771, %product.i.i.i20.i2770
  %hash.i.i.i23.i2773 = and i64 %xored.i.i.i22.i2772, %tbl_size.i.i18.i2768
  %offset_ptr.i.i24.i2774 = getelementptr i32, ptr %offset_tbl.i.i19.i2769, i64 %hash.i.i.i23.i2773
  %offset.i.i39.i2775 = load i32, ptr %offset_ptr.i.i24.i2774, align 4, !noalias !261
  %559 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %560 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %561 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %562

562:                                              ; preds = %.cont.i2798, %554
  %.0308.i2776 = phi i32 [ 0, %554 ], [ %595, %.cont.i2798 ]
  %.070307.i2777 = phi i1 [ true, %554 ], [ %596, %.cont.i2798 ]
  %.sroa.0.0306.i2778 = phi ptr [ %551, %554 ], [ %585, %.cont.i2798 ]
  %.sroa.6.0305.i2779.in = phi i64 [ %556, %554 ], [ %587, %.cont.i2798 ]
  %.sroa.12.0304.i2780.in = phi i64 [ %557, %554 ], [ %588, %.cont.i2798 ]
  %.sroa.17.0303.i2781 = phi i32 [ %offset.i.i39.i2775, %554 ], [ %offset.i.i71.i2812, %.cont.i2798 ]
  %.sroa.12.0304.i2780 = inttoptr i64 %.sroa.12.0304.i2780.in to ptr
  %.sroa.6.0305.i2779 = inttoptr i64 %.sroa.6.0305.i2779.in to ptr
  %563 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2778, 0
  %564 = insertvalue { ptr, ptr, ptr, i32 } %563, ptr %.sroa.6.0305.i2779, 1
  %565 = insertvalue { ptr, ptr, ptr, i32 } %564, ptr %.sroa.12.0304.i2780, 2
  %566 = insertvalue { ptr, ptr, ptr, i32 } %565, i32 %.sroa.17.0303.i2781, 3
  %567 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2778)
  %568 = sext i32 %.sroa.17.0303.i2781 to i64
  %569 = getelementptr ptr, ptr %.sroa.0.0306.i2778, i64 %568
  %570 = getelementptr i8, ptr %569, i64 64
  %571 = load ptr, ptr %570, align 8
  %result.i43.i2782 = call ptr %571({ ptr, ptr, ptr, i32 } %566, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %572 = call i32 %result.i43.i2782({ ptr, ptr, ptr, i32 } %566, { ptr, ptr, ptr, i32 } %566, ptr nonnull align 8 %2) #42
  %..i2783 = select i1 %.070307.i2777, ptr %43, ptr %45
  %.184.i2784 = select i1 %.070307.i2777, i64 104, i64 112
  %.185.i2785 = select i1 %.070307.i2777, ptr %44, ptr %46
  %.186.i2786 = select i1 %.070307.i2777, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2783, align 8
  %573 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2783)
  %574 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2784
  %575 = load ptr, ptr %574, align 8
  store ptr @i32_typ, ptr %.185.i2785, align 8
  %result.i44.i2787 = call ptr %575({ ptr, ptr, ptr, i32 } %110, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2785) #45
  %576 = call i32 %result.i44.i2787({ ptr, ptr, ptr, i32 } %110, { ptr, ptr, ptr, i32 } %110, ptr nonnull align 8 dereferenceable(8) %..i2783, i32 %572) #42
  %577 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %578 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2786
  %579 = load ptr, ptr %578, align 8
  %580 = load ptr, ptr %579, align 8
  %581 = call { ptr } %580(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i2788 = extractvalue { ptr } %581, 0
  %582 = sext i32 %576 to i64
  %583 = shl nsw i64 %582, 5
  %584 = getelementptr i8, ptr %.fca.0.extract53.i2788, i64 %583
  %585 = load ptr, ptr %584, align 8
  %586 = getelementptr i8, ptr %584, i64 8
  %587 = load i64, ptr %586, align 4
  %.sroa_idx.i2789 = getelementptr i8, ptr %584, i64 16
  %588 = load i64, ptr %.sroa_idx.i2789, align 4
  %589 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %590 = call { ptr } %580(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i2790 = extractvalue { ptr } %590, 0
  %591 = getelementptr i8, ptr %.fca.0.extract51.i2790, i64 %583
  store ptr %.sroa.0.0306.i2778, ptr %591, align 8
  %592 = getelementptr i8, ptr %591, i64 8
  store i64 %.sroa.6.0305.i2779.in, ptr %592, align 4
  %.sroa_idx100.i2791 = getelementptr i8, ptr %591, i64 16
  store i64 %.sroa.12.0304.i2780.in, ptr %.sroa_idx100.i2791, align 4
  %.sroa_idx101.i2792 = getelementptr i8, ptr %591, i64 24
  store i32 %.sroa.17.0303.i2781, ptr %.sroa_idx101.i2792, align 4
  %593 = icmp ne ptr %585, @nil_typ
  %594 = icmp ne ptr %585, null
  %.not90.i2793 = and i1 %593, %594
  br i1 %.not90.i2793, label %.cont.i2798, label %600

.cont.i2798:                                      ; preds = %562
  %595 = add nuw nsw i32 %.0308.i2776, 1
  %596 = xor i1 %.070307.i2777, true
  %hash_coef_ptr.i.i60.i2801 = getelementptr i8, ptr %585, i64 8
  %tbl_size_ptr.i.i61.i2802 = getelementptr i8, ptr %585, i64 16
  %offset_tbl_ptr.i.i62.i2803 = getelementptr i8, ptr %585, i64 40
  %hash_coef.i.i63.i2804 = load i64, ptr %hash_coef_ptr.i.i60.i2801, align 4
  %tbl_size.i.i64.i2805 = load i64, ptr %tbl_size_ptr.i.i61.i2802, align 4
  %offset_tbl.i.i65.i2806 = load ptr, ptr %offset_tbl_ptr.i.i62.i2803, align 8
  %product.i.i.i66.i2807 = mul i64 %hash_coef.i.i63.i2804, 4015701072841558310
  %shifted.i.i.i67.i2808 = lshr i64 %product.i.i.i66.i2807, 32
  %xored.i.i.i68.i2809 = xor i64 %shifted.i.i.i67.i2808, %product.i.i.i66.i2807
  %hash.i.i.i69.i2810 = and i64 %xored.i.i.i68.i2809, %tbl_size.i.i64.i2805
  %offset_ptr.i.i70.i2811 = getelementptr i32, ptr %offset_tbl.i.i65.i2806, i64 %hash.i.i.i69.i2810
  %offset.i.i71.i2812 = load i32, ptr %offset_ptr.i.i70.i2811, align 4
  %597 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %598 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %599 = icmp ult i32 %.0308.i2776, 99
  br i1 %599, label %562, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2821

600:                                              ; preds = %562
  %601 = load i32, ptr %102, align 4
  %602 = add i32 %601, 1
  %603 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %602, ptr %102, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2821

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2821: ; preds = %.cont.i2798, %600
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %43)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %44)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %45)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %46)
  br label %._crit_edge.i2221

._crit_edge.i2221:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2821, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit
  %604 = add nuw nsw i32 %.045.i2219, 1
  %605 = icmp slt i32 %604, %480
  br i1 %605, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %._crit_edge.i2221, %481, %478
  %606 = load ptr, ptr %result.i8, align 8
  %607 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %608 = load ptr, ptr %75, align 8
  %609 = load ptr, ptr %606, align 8
  %610 = getelementptr i8, ptr %609, i64 72
  %611 = load ptr, ptr %610, align 8
  %result.i.i.i = call { i64, i64 } %611(ptr nocapture nofree nonnull readonly align 8 %606) #41
  %612 = extractvalue { i64, i64 } %result.i.i.i, 0
  %613 = extractvalue { i64, i64 } %result.i.i.i, 1
  %614 = urem i64 20, %613
  %615 = icmp eq i64 %614, 0
  %616 = sub i64 %613, %614
  %617 = select i1 %615, i64 0, i64 %616
  %618 = add i64 %612, 20
  %619 = add i64 %618, %617
  %620 = load ptr, ptr %608, align 8
  %621 = getelementptr i8, ptr %620, i64 72
  %622 = load ptr, ptr %621, align 8
  %result.i1.i.i = call { i64, i64 } %622(ptr nocapture nofree nonnull readonly align 8 %608) #41
  %623 = extractvalue { i64, i64 } %result.i1.i.i, 0
  %624 = extractvalue { i64, i64 } %result.i1.i.i, 1
  %625 = call i64 @llvm.umax.i64(i64 %613, i64 %624) #38
  %626 = call i64 @llvm.umax.i64(i64 %625, i64 noundef 8) #38, !range !16
  %627 = urem i64 %619, %624
  %628 = icmp eq i64 %627, 0
  %629 = sub i64 %624, %627
  %630 = select i1 %628, i64 0, i64 %629
  %631 = add i64 %623, %619
  %632 = add i64 %631, %630
  %633 = urem i64 %632, %626
  %634 = icmp eq i64 %633, 0
  %635 = sub i64 %626, %633
  %636 = select i1 %634, i64 0, i64 %635
  %637 = add i64 %636, %632
  %result.i16.i = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %637, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %606, ptr %result.i16.i, align 8
  %638 = getelementptr inbounds i8, ptr %result.i16.i, i64 8
  store ptr %608, ptr %638, align 8
  %639 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i16.i)
  %640 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %641 = load ptr, ptr %606, align 8
  %642 = getelementptr i8, ptr %641, i64 72
  %643 = load ptr, ptr %642, align 8
  %result.i.i110.i = call { i64, i64 } %643(ptr nocapture nofree nonnull readonly align 8 %606) #41
  %644 = extractvalue { i64, i64 } %result.i.i110.i, 1
  %645 = urem i64 20, %644
  %646 = icmp eq i64 %645, 0
  %reass.sub3825 = sub i64 %644, %645
  %647 = add i64 %reass.sub3825, 20
  %648 = select i1 %646, i64 20, i64 %647
  %649 = getelementptr i8, ptr %result.i16.i, i64 %648
  %650 = getelementptr i8, ptr %641, i64 64
  %651 = load ptr, ptr %650, align 8
  call void %651({ ptr, i160 } %117, ptr nocapture nofree nonnull readonly align 8 %606, ptr nocapture nofree writeonly %649) #49
  %652 = load ptr, ptr %result.i16.i, align 8
  %653 = load ptr, ptr %652, align 8
  %654 = getelementptr i8, ptr %653, i64 72
  %655 = load ptr, ptr %654, align 8
  %result.i.i111.i = call { i64, i64 } %655(ptr nocapture nofree nonnull readonly align 8 %652) #41
  %656 = extractvalue { i64, i64 } %result.i.i111.i, 0
  %657 = extractvalue { i64, i64 } %result.i.i111.i, 1
  %658 = urem i64 20, %657
  %659 = icmp eq i64 %658, 0
  %660 = sub i64 %657, %658
  %661 = select i1 %659, i64 0, i64 %660
  %662 = add i64 %656, 20
  %663 = add i64 %662, %661
  %664 = load ptr, ptr %638, align 8
  %665 = load ptr, ptr %664, align 8
  %666 = getelementptr i8, ptr %665, i64 72
  %667 = load ptr, ptr %666, align 8
  %result.i1.i112.i = call { i64, i64 } %667(ptr nocapture nofree nonnull readonly align 8 %664) #41
  %668 = extractvalue { i64, i64 } %result.i1.i112.i, 1
  %669 = urem i64 %663, %668
  %670 = icmp eq i64 %669, 0
  %671 = sub i64 %668, %669
  %672 = select i1 %670, i64 0, i64 %671
  %673 = getelementptr i8, ptr %result.i16.i, i64 %663
  %674 = getelementptr i8, ptr %673, i64 %672
  %675 = getelementptr i8, ptr %665, i64 64
  %676 = load ptr, ptr %675, align 8
  call void %676({ ptr, i160 } %236, ptr nocapture nofree nonnull readonly align 8 %664, ptr nocapture nofree writeonly %674) #49
  %677 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %678 = getelementptr inbounds i8, ptr %result.i16.i, i64 16
  store i32 %238, ptr %678, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %63)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %64)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %65)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %66)
  %679 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %680 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %681 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %682

682:                                              ; preds = %.cont.i, %._crit_edge.i
  %.0308.i = phi i32 [ 0, %._crit_edge.i ], [ %717, %.cont.i ]
  %.070307.i = phi i1 [ true, %._crit_edge.i ], [ %718, %.cont.i ]
  %.sroa.0.0306.i = phi ptr [ @Entry, %._crit_edge.i ], [ %705, %.cont.i ]
  %.sroa.6.0305.i = phi ptr [ %result.i16.i, %._crit_edge.i ], [ %.sroa.speculated111.i, %.cont.i ]
  %.sroa.12.0304.i = phi ptr [ undef, %._crit_edge.i ], [ %.sroa.speculated105.i, %.cont.i ]
  %.sroa.17.0303.i = phi i32 [ 10, %._crit_edge.i ], [ %offset.i.i71.i, %.cont.i ]
  %683 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i, 0
  %684 = insertvalue { ptr, ptr, ptr, i32 } %683, ptr %.sroa.6.0305.i, 1
  %685 = insertvalue { ptr, ptr, ptr, i32 } %684, ptr %.sroa.12.0304.i, 2
  %686 = insertvalue { ptr, ptr, ptr, i32 } %685, i32 %.sroa.17.0303.i, 3
  %687 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i)
  %688 = sext i32 %.sroa.17.0303.i to i64
  %689 = getelementptr ptr, ptr %.sroa.0.0306.i, i64 %688
  %690 = getelementptr i8, ptr %689, i64 64
  %691 = load ptr, ptr %690, align 8
  %result.i43.i = call ptr %691({ ptr, ptr, ptr, i32 } %686, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %692 = call i32 %result.i43.i({ ptr, ptr, ptr, i32 } %686, { ptr, ptr, ptr, i32 } %686, ptr nonnull align 8 %2) #42
  %..i = select i1 %.070307.i, ptr %63, ptr %65
  %.184.i = select i1 %.070307.i, i64 104, i64 112
  %.185.i = select i1 %.070307.i, ptr %64, ptr %66
  %.186.i = select i1 %.070307.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i, align 8
  %693 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i)
  %694 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i
  %695 = load ptr, ptr %694, align 8
  store ptr @i32_typ, ptr %.185.i, align 8
  %result.i44.i = call ptr %695({ ptr, ptr, ptr, i32 } %109, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i) #45
  %696 = call i32 %result.i44.i({ ptr, ptr, ptr, i32 } %109, { ptr, ptr, ptr, i32 } %109, ptr nonnull align 8 dereferenceable(8) %..i, i32 %692) #42
  %697 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %698 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i
  %699 = load ptr, ptr %698, align 8
  %700 = load ptr, ptr %699, align 8
  %701 = call { ptr } %700(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i = extractvalue { ptr } %701, 0
  %702 = sext i32 %696 to i64
  %703 = shl nsw i64 %702, 5
  %704 = getelementptr i8, ptr %.fca.0.extract53.i, i64 %703
  %705 = load ptr, ptr %704, align 8
  %706 = getelementptr i8, ptr %704, i64 8
  %707 = load i64, ptr %706, align 4
  %.sroa_idx.i1149 = getelementptr i8, ptr %704, i64 16
  %708 = load i64, ptr %.sroa_idx.i1149, align 4
  %709 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %710 = call { ptr } %700(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i1150 = extractvalue { ptr } %710, 0
  %711 = getelementptr i8, ptr %.fca.0.extract51.i1150, i64 %703
  store ptr %.sroa.0.0306.i, ptr %711, align 8
  %712 = getelementptr i8, ptr %711, i64 8
  %713 = ptrtoint ptr %.sroa.6.0305.i to i64
  %714 = ptrtoint ptr %.sroa.12.0304.i to i64
  store i64 %713, ptr %712, align 4
  %.sroa_idx100.i = getelementptr i8, ptr %711, i64 16
  store i64 %714, ptr %.sroa_idx100.i, align 4
  %.sroa_idx101.i = getelementptr i8, ptr %711, i64 24
  store i32 %.sroa.17.0303.i, ptr %.sroa_idx101.i, align 4
  %715 = icmp ne ptr %705, @nil_typ
  %716 = icmp ne ptr %705, null
  %.not90.i = and i1 %715, %716
  br i1 %.not90.i, label %.cont.i, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit

.cont.i:                                          ; preds = %682
  %717 = add nuw nsw i32 %.0308.i, 1
  %718 = xor i1 %.070307.i, true
  %.sroa.speculated111.i = inttoptr i64 %707 to ptr
  %.sroa.speculated105.i = inttoptr i64 %708 to ptr
  %hash_coef_ptr.i.i60.i = getelementptr i8, ptr %705, i64 8
  %tbl_size_ptr.i.i61.i = getelementptr i8, ptr %705, i64 16
  %offset_tbl_ptr.i.i62.i = getelementptr i8, ptr %705, i64 40
  %hash_coef.i.i63.i = load i64, ptr %hash_coef_ptr.i.i60.i, align 4
  %tbl_size.i.i64.i = load i64, ptr %tbl_size_ptr.i.i61.i, align 4
  %offset_tbl.i.i65.i = load ptr, ptr %offset_tbl_ptr.i.i62.i, align 8
  %product.i.i.i66.i = mul i64 %hash_coef.i.i63.i, 4015701072841558310
  %shifted.i.i.i67.i = lshr i64 %product.i.i.i66.i, 32
  %xored.i.i.i68.i = xor i64 %shifted.i.i.i67.i, %product.i.i.i66.i
  %hash.i.i.i69.i = and i64 %xored.i.i.i68.i, %tbl_size.i.i64.i
  %offset_ptr.i.i70.i = getelementptr i32, ptr %offset_tbl.i.i65.i, i64 %hash.i.i.i69.i
  %offset.i.i71.i = load i32, ptr %offset_ptr.i.i70.i, align 4
  %719 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %720 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %721 = icmp ult i32 %.0308.i, 99
  br i1 %721, label %682, label %725

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit: ; preds = %682
  %722 = load i32, ptr %102, align 4
  %723 = add i32 %722, 1
  %724 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %723, ptr %102, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %63)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %64)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %65)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %66)
  br label %CuckooMap_insert_keyK_valueV.exit

725:                                              ; preds = %.cont.i
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %63)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %64)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %65)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %66)
  %726 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %727 = load ptr, ptr %83, align 8
  %728 = load ptr, ptr %84, align 8
  %729 = load i32, ptr %82, align 8
  %730 = shl i32 %729, 1
  %spec.select.i1167 = call i32 @llvm.smax.i32(i32 %730, i32 noundef 16) #37
  store i32 %spec.select.i1167, ptr %82, align 8
  %731 = zext nneg i32 %spec.select.i1167 to i64
  %732 = shl nuw nsw i64 %731, 5
  %result.i.i1168 = call noalias ptr @bump_malloc_inner(i64 noundef %732, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i1168, ptr %83, align 8
  %result.i1.i1169 = call noalias ptr @bump_malloc_inner(i64 noundef %732, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i1169, ptr %84, align 8
  store i32 0, ptr %102, align 4
  %733 = icmp sgt i32 %729, 0
  br i1 %733, label %.lr.ph.i2241, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2274.thread

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2274.thread: ; preds = %725
  %734 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2309

.lr.ph.i2241:                                     ; preds = %725, %._crit_edge.i2256
  %.045.i2254 = phi i32 [ %791, %._crit_edge.i2256 ], [ 0, %725 ]
  %735 = zext nneg i32 %.045.i2254 to i64
  %736 = shl nuw nsw i64 %735, 5
  %737 = getelementptr i8, ptr %727, i64 %736
  %738 = load ptr, ptr %737, align 8
  %739 = icmp ne ptr %738, @nil_typ
  %740 = icmp ne ptr %738, null
  %.not16.i2255 = and i1 %739, %740
  br i1 %.not16.i2255, label %741, label %._crit_edge.i2256

741:                                              ; preds = %.lr.ph.i2241
  %742 = getelementptr i8, ptr %737, i64 8
  %743 = load i64, ptr %742, align 4
  %.sroa_idx.i2257 = getelementptr i8, ptr %737, i64 16
  %744 = load i64, ptr %.sroa_idx.i2257, align 4
  %hash_coef_ptr.i.i3.i2258 = getelementptr i8, ptr %738, i64 8
  %tbl_size_ptr.i.i4.i2259 = getelementptr i8, ptr %738, i64 16
  %offset_tbl_ptr.i.i5.i2260 = getelementptr i8, ptr %738, i64 40
  %745 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %39)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %40)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %41)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %42)
  %hash_coef.i.i17.i2839 = load i64, ptr %hash_coef_ptr.i.i3.i2258, align 4, !noalias !23
  %tbl_size.i.i18.i2840 = load i64, ptr %tbl_size_ptr.i.i4.i2259, align 4, !noalias !23
  %offset_tbl.i.i19.i2841 = load ptr, ptr %offset_tbl_ptr.i.i5.i2260, align 8, !noalias !23
  %product.i.i.i20.i2842 = mul i64 %hash_coef.i.i17.i2839, 4015701072841558310
  %shifted.i.i.i21.i2843 = lshr i64 %product.i.i.i20.i2842, 32
  %xored.i.i.i22.i2844 = xor i64 %shifted.i.i.i21.i2843, %product.i.i.i20.i2842
  %hash.i.i.i23.i2845 = and i64 %xored.i.i.i22.i2844, %tbl_size.i.i18.i2840
  %offset_ptr.i.i24.i2846 = getelementptr i32, ptr %offset_tbl.i.i19.i2841, i64 %hash.i.i.i23.i2845
  %offset.i.i39.i2847 = load i32, ptr %offset_ptr.i.i24.i2846, align 4, !noalias !264
  %746 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %747 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %748 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %749

749:                                              ; preds = %.cont.i2870, %741
  %.0308.i2848 = phi i32 [ 0, %741 ], [ %782, %.cont.i2870 ]
  %.070307.i2849 = phi i1 [ true, %741 ], [ %783, %.cont.i2870 ]
  %.sroa.0.0306.i2850 = phi ptr [ %738, %741 ], [ %772, %.cont.i2870 ]
  %.sroa.6.0305.i2851.in = phi i64 [ %743, %741 ], [ %774, %.cont.i2870 ]
  %.sroa.12.0304.i2852.in = phi i64 [ %744, %741 ], [ %775, %.cont.i2870 ]
  %.sroa.17.0303.i2853 = phi i32 [ %offset.i.i39.i2847, %741 ], [ %offset.i.i71.i2884, %.cont.i2870 ]
  %.sroa.12.0304.i2852 = inttoptr i64 %.sroa.12.0304.i2852.in to ptr
  %.sroa.6.0305.i2851 = inttoptr i64 %.sroa.6.0305.i2851.in to ptr
  %750 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2850, 0
  %751 = insertvalue { ptr, ptr, ptr, i32 } %750, ptr %.sroa.6.0305.i2851, 1
  %752 = insertvalue { ptr, ptr, ptr, i32 } %751, ptr %.sroa.12.0304.i2852, 2
  %753 = insertvalue { ptr, ptr, ptr, i32 } %752, i32 %.sroa.17.0303.i2853, 3
  %754 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2850)
  %755 = sext i32 %.sroa.17.0303.i2853 to i64
  %756 = getelementptr ptr, ptr %.sroa.0.0306.i2850, i64 %755
  %757 = getelementptr i8, ptr %756, i64 64
  %758 = load ptr, ptr %757, align 8
  %result.i43.i2854 = call ptr %758({ ptr, ptr, ptr, i32 } %753, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %759 = call i32 %result.i43.i2854({ ptr, ptr, ptr, i32 } %753, { ptr, ptr, ptr, i32 } %753, ptr nonnull align 8 %2) #42
  %..i2855 = select i1 %.070307.i2849, ptr %39, ptr %41
  %.184.i2856 = select i1 %.070307.i2849, i64 104, i64 112
  %.185.i2857 = select i1 %.070307.i2849, ptr %40, ptr %42
  %.186.i2858 = select i1 %.070307.i2849, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2855, align 8
  %760 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2855)
  %761 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2856
  %762 = load ptr, ptr %761, align 8
  store ptr @i32_typ, ptr %.185.i2857, align 8
  %result.i44.i2859 = call ptr %762({ ptr, ptr, ptr, i32 } %110, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2857) #45
  %763 = call i32 %result.i44.i2859({ ptr, ptr, ptr, i32 } %110, { ptr, ptr, ptr, i32 } %110, ptr nonnull align 8 dereferenceable(8) %..i2855, i32 %759) #42
  %764 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %765 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2858
  %766 = load ptr, ptr %765, align 8
  %767 = load ptr, ptr %766, align 8
  %768 = call { ptr } %767(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i2860 = extractvalue { ptr } %768, 0
  %769 = sext i32 %763 to i64
  %770 = shl nsw i64 %769, 5
  %771 = getelementptr i8, ptr %.fca.0.extract53.i2860, i64 %770
  %772 = load ptr, ptr %771, align 8
  %773 = getelementptr i8, ptr %771, i64 8
  %774 = load i64, ptr %773, align 4
  %.sroa_idx.i2861 = getelementptr i8, ptr %771, i64 16
  %775 = load i64, ptr %.sroa_idx.i2861, align 4
  %776 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %777 = call { ptr } %767(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i2862 = extractvalue { ptr } %777, 0
  %778 = getelementptr i8, ptr %.fca.0.extract51.i2862, i64 %770
  store ptr %.sroa.0.0306.i2850, ptr %778, align 8
  %779 = getelementptr i8, ptr %778, i64 8
  store i64 %.sroa.6.0305.i2851.in, ptr %779, align 4
  %.sroa_idx100.i2863 = getelementptr i8, ptr %778, i64 16
  store i64 %.sroa.12.0304.i2852.in, ptr %.sroa_idx100.i2863, align 4
  %.sroa_idx101.i2864 = getelementptr i8, ptr %778, i64 24
  store i32 %.sroa.17.0303.i2853, ptr %.sroa_idx101.i2864, align 4
  %780 = icmp ne ptr %772, @nil_typ
  %781 = icmp ne ptr %772, null
  %.not90.i2865 = and i1 %780, %781
  br i1 %.not90.i2865, label %.cont.i2870, label %787

.cont.i2870:                                      ; preds = %749
  %782 = add nuw nsw i32 %.0308.i2848, 1
  %783 = xor i1 %.070307.i2849, true
  %hash_coef_ptr.i.i60.i2873 = getelementptr i8, ptr %772, i64 8
  %tbl_size_ptr.i.i61.i2874 = getelementptr i8, ptr %772, i64 16
  %offset_tbl_ptr.i.i62.i2875 = getelementptr i8, ptr %772, i64 40
  %hash_coef.i.i63.i2876 = load i64, ptr %hash_coef_ptr.i.i60.i2873, align 4
  %tbl_size.i.i64.i2877 = load i64, ptr %tbl_size_ptr.i.i61.i2874, align 4
  %offset_tbl.i.i65.i2878 = load ptr, ptr %offset_tbl_ptr.i.i62.i2875, align 8
  %product.i.i.i66.i2879 = mul i64 %hash_coef.i.i63.i2876, 4015701072841558310
  %shifted.i.i.i67.i2880 = lshr i64 %product.i.i.i66.i2879, 32
  %xored.i.i.i68.i2881 = xor i64 %shifted.i.i.i67.i2880, %product.i.i.i66.i2879
  %hash.i.i.i69.i2882 = and i64 %xored.i.i.i68.i2881, %tbl_size.i.i64.i2877
  %offset_ptr.i.i70.i2883 = getelementptr i32, ptr %offset_tbl.i.i65.i2878, i64 %hash.i.i.i69.i2882
  %offset.i.i71.i2884 = load i32, ptr %offset_ptr.i.i70.i2883, align 4
  %784 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %785 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %786 = icmp ult i32 %.0308.i2848, 99
  br i1 %786, label %749, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2893

787:                                              ; preds = %749
  %788 = load i32, ptr %102, align 4
  %789 = add i32 %788, 1
  %790 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %789, ptr %102, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2893

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2893: ; preds = %.cont.i2870, %787
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %39)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %40)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %41)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %42)
  br label %._crit_edge.i2256

._crit_edge.i2256:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2893, %.lr.ph.i2241
  %791 = add nuw nsw i32 %.045.i2254, 1
  %792 = icmp slt i32 %791, %729
  br i1 %792, label %.lr.ph.i2241, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2274

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2274: ; preds = %._crit_edge.i2256
  %793 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %794

794:                                              ; preds = %._crit_edge.i2291, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2274
  %.045.i2289 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2274 ], [ %851, %._crit_edge.i2291 ]
  %795 = zext nneg i32 %.045.i2289 to i64
  %796 = shl nuw nsw i64 %795, 5
  %797 = getelementptr i8, ptr %728, i64 %796
  %798 = load ptr, ptr %797, align 8
  %799 = icmp ne ptr %798, @nil_typ
  %800 = icmp ne ptr %798, null
  %.not16.i2290 = and i1 %799, %800
  br i1 %.not16.i2290, label %801, label %._crit_edge.i2291

801:                                              ; preds = %794
  %802 = getelementptr i8, ptr %797, i64 8
  %803 = load i64, ptr %802, align 4
  %.sroa_idx.i2292 = getelementptr i8, ptr %797, i64 16
  %804 = load i64, ptr %.sroa_idx.i2292, align 4
  %hash_coef_ptr.i.i3.i2293 = getelementptr i8, ptr %798, i64 8
  %tbl_size_ptr.i.i4.i2294 = getelementptr i8, ptr %798, i64 16
  %offset_tbl_ptr.i.i5.i2295 = getelementptr i8, ptr %798, i64 40
  %805 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %35)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %36)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %37)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %38)
  %hash_coef.i.i17.i2911 = load i64, ptr %hash_coef_ptr.i.i3.i2293, align 4, !noalias !23
  %tbl_size.i.i18.i2912 = load i64, ptr %tbl_size_ptr.i.i4.i2294, align 4, !noalias !23
  %offset_tbl.i.i19.i2913 = load ptr, ptr %offset_tbl_ptr.i.i5.i2295, align 8, !noalias !23
  %product.i.i.i20.i2914 = mul i64 %hash_coef.i.i17.i2911, 4015701072841558310
  %shifted.i.i.i21.i2915 = lshr i64 %product.i.i.i20.i2914, 32
  %xored.i.i.i22.i2916 = xor i64 %shifted.i.i.i21.i2915, %product.i.i.i20.i2914
  %hash.i.i.i23.i2917 = and i64 %xored.i.i.i22.i2916, %tbl_size.i.i18.i2912
  %offset_ptr.i.i24.i2918 = getelementptr i32, ptr %offset_tbl.i.i19.i2913, i64 %hash.i.i.i23.i2917
  %offset.i.i39.i2919 = load i32, ptr %offset_ptr.i.i24.i2918, align 4, !noalias !267
  %806 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %807 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %808 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %809

809:                                              ; preds = %.cont.i2942, %801
  %.0308.i2920 = phi i32 [ 0, %801 ], [ %842, %.cont.i2942 ]
  %.070307.i2921 = phi i1 [ true, %801 ], [ %843, %.cont.i2942 ]
  %.sroa.0.0306.i2922 = phi ptr [ %798, %801 ], [ %832, %.cont.i2942 ]
  %.sroa.6.0305.i2923.in = phi i64 [ %803, %801 ], [ %834, %.cont.i2942 ]
  %.sroa.12.0304.i2924.in = phi i64 [ %804, %801 ], [ %835, %.cont.i2942 ]
  %.sroa.17.0303.i2925 = phi i32 [ %offset.i.i39.i2919, %801 ], [ %offset.i.i71.i2956, %.cont.i2942 ]
  %.sroa.12.0304.i2924 = inttoptr i64 %.sroa.12.0304.i2924.in to ptr
  %.sroa.6.0305.i2923 = inttoptr i64 %.sroa.6.0305.i2923.in to ptr
  %810 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2922, 0
  %811 = insertvalue { ptr, ptr, ptr, i32 } %810, ptr %.sroa.6.0305.i2923, 1
  %812 = insertvalue { ptr, ptr, ptr, i32 } %811, ptr %.sroa.12.0304.i2924, 2
  %813 = insertvalue { ptr, ptr, ptr, i32 } %812, i32 %.sroa.17.0303.i2925, 3
  %814 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2922)
  %815 = sext i32 %.sroa.17.0303.i2925 to i64
  %816 = getelementptr ptr, ptr %.sroa.0.0306.i2922, i64 %815
  %817 = getelementptr i8, ptr %816, i64 64
  %818 = load ptr, ptr %817, align 8
  %result.i43.i2926 = call ptr %818({ ptr, ptr, ptr, i32 } %813, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %819 = call i32 %result.i43.i2926({ ptr, ptr, ptr, i32 } %813, { ptr, ptr, ptr, i32 } %813, ptr nonnull align 8 %2) #42
  %..i2927 = select i1 %.070307.i2921, ptr %35, ptr %37
  %.184.i2928 = select i1 %.070307.i2921, i64 104, i64 112
  %.185.i2929 = select i1 %.070307.i2921, ptr %36, ptr %38
  %.186.i2930 = select i1 %.070307.i2921, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2927, align 8
  %820 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2927)
  %821 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2928
  %822 = load ptr, ptr %821, align 8
  store ptr @i32_typ, ptr %.185.i2929, align 8
  %result.i44.i2931 = call ptr %822({ ptr, ptr, ptr, i32 } %110, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2929) #45
  %823 = call i32 %result.i44.i2931({ ptr, ptr, ptr, i32 } %110, { ptr, ptr, ptr, i32 } %110, ptr nonnull align 8 dereferenceable(8) %..i2927, i32 %819) #42
  %824 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %825 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2930
  %826 = load ptr, ptr %825, align 8
  %827 = load ptr, ptr %826, align 8
  %828 = call { ptr } %827(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i2932 = extractvalue { ptr } %828, 0
  %829 = sext i32 %823 to i64
  %830 = shl nsw i64 %829, 5
  %831 = getelementptr i8, ptr %.fca.0.extract53.i2932, i64 %830
  %832 = load ptr, ptr %831, align 8
  %833 = getelementptr i8, ptr %831, i64 8
  %834 = load i64, ptr %833, align 4
  %.sroa_idx.i2933 = getelementptr i8, ptr %831, i64 16
  %835 = load i64, ptr %.sroa_idx.i2933, align 4
  %836 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %837 = call { ptr } %827(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i2934 = extractvalue { ptr } %837, 0
  %838 = getelementptr i8, ptr %.fca.0.extract51.i2934, i64 %830
  store ptr %.sroa.0.0306.i2922, ptr %838, align 8
  %839 = getelementptr i8, ptr %838, i64 8
  store i64 %.sroa.6.0305.i2923.in, ptr %839, align 4
  %.sroa_idx100.i2935 = getelementptr i8, ptr %838, i64 16
  store i64 %.sroa.12.0304.i2924.in, ptr %.sroa_idx100.i2935, align 4
  %.sroa_idx101.i2936 = getelementptr i8, ptr %838, i64 24
  store i32 %.sroa.17.0303.i2925, ptr %.sroa_idx101.i2936, align 4
  %840 = icmp ne ptr %832, @nil_typ
  %841 = icmp ne ptr %832, null
  %.not90.i2937 = and i1 %840, %841
  br i1 %.not90.i2937, label %.cont.i2942, label %847

.cont.i2942:                                      ; preds = %809
  %842 = add nuw nsw i32 %.0308.i2920, 1
  %843 = xor i1 %.070307.i2921, true
  %hash_coef_ptr.i.i60.i2945 = getelementptr i8, ptr %832, i64 8
  %tbl_size_ptr.i.i61.i2946 = getelementptr i8, ptr %832, i64 16
  %offset_tbl_ptr.i.i62.i2947 = getelementptr i8, ptr %832, i64 40
  %hash_coef.i.i63.i2948 = load i64, ptr %hash_coef_ptr.i.i60.i2945, align 4
  %tbl_size.i.i64.i2949 = load i64, ptr %tbl_size_ptr.i.i61.i2946, align 4
  %offset_tbl.i.i65.i2950 = load ptr, ptr %offset_tbl_ptr.i.i62.i2947, align 8
  %product.i.i.i66.i2951 = mul i64 %hash_coef.i.i63.i2948, 4015701072841558310
  %shifted.i.i.i67.i2952 = lshr i64 %product.i.i.i66.i2951, 32
  %xored.i.i.i68.i2953 = xor i64 %shifted.i.i.i67.i2952, %product.i.i.i66.i2951
  %hash.i.i.i69.i2954 = and i64 %xored.i.i.i68.i2953, %tbl_size.i.i64.i2949
  %offset_ptr.i.i70.i2955 = getelementptr i32, ptr %offset_tbl.i.i65.i2950, i64 %hash.i.i.i69.i2954
  %offset.i.i71.i2956 = load i32, ptr %offset_ptr.i.i70.i2955, align 4
  %844 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %845 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %846 = icmp ult i32 %.0308.i2920, 99
  br i1 %846, label %809, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2965

847:                                              ; preds = %809
  %848 = load i32, ptr %102, align 4
  %849 = add i32 %848, 1
  %850 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %849, ptr %102, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2965

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2965: ; preds = %.cont.i2942, %847
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %35)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %36)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %37)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %38)
  br label %._crit_edge.i2291

._crit_edge.i2291:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2965, %794
  %851 = add nuw nsw i32 %.045.i2289, 1
  %852 = icmp slt i32 %851, %729
  br i1 %852, label %794, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2309

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2309: ; preds = %._crit_edge.i2291, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2274.thread
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %59)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %60)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %61)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %62)
  %hash_coef.i.i17.i1192 = load i64, ptr %hash_coef_ptr.i.i60.i, align 4, !noalias !23
  %tbl_size.i.i18.i1193 = load i64, ptr %tbl_size_ptr.i.i61.i, align 4, !noalias !23
  %offset_tbl.i.i19.i1194 = load ptr, ptr %offset_tbl_ptr.i.i62.i, align 8, !noalias !23
  %product.i.i.i20.i1195 = mul i64 %hash_coef.i.i17.i1192, 4015701072841558310
  %shifted.i.i.i21.i1196 = lshr i64 %product.i.i.i20.i1195, 32
  %xored.i.i.i22.i1197 = xor i64 %shifted.i.i.i21.i1196, %product.i.i.i20.i1195
  %hash.i.i.i23.i1198 = and i64 %xored.i.i.i22.i1197, %tbl_size.i.i18.i1193
  %offset_ptr.i.i24.i1199 = getelementptr i32, ptr %offset_tbl.i.i19.i1194, i64 %hash.i.i.i23.i1198
  %offset.i.i39.i1200 = load i32, ptr %offset_ptr.i.i24.i1199, align 4, !noalias !270
  %853 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %854 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %855 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %856

856:                                              ; preds = %.cont.i1224, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2309
  %.0308.i1202 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2309 ], [ %889, %.cont.i1224 ]
  %.070307.i1203 = phi i1 [ true, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2309 ], [ %890, %.cont.i1224 ]
  %.sroa.0.0306.i1204 = phi ptr [ %705, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2309 ], [ %879, %.cont.i1224 ]
  %.sroa.6.0305.i1205.in = phi i64 [ %707, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2309 ], [ %881, %.cont.i1224 ]
  %.sroa.12.0304.i1206.in = phi i64 [ %708, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2309 ], [ %882, %.cont.i1224 ]
  %.sroa.17.0303.i1207 = phi i32 [ %offset.i.i39.i1200, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2309 ], [ %offset.i.i71.i1238, %.cont.i1224 ]
  %.sroa.12.0304.i1206 = inttoptr i64 %.sroa.12.0304.i1206.in to ptr
  %.sroa.6.0305.i1205 = inttoptr i64 %.sroa.6.0305.i1205.in to ptr
  %857 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1204, 0
  %858 = insertvalue { ptr, ptr, ptr, i32 } %857, ptr %.sroa.6.0305.i1205, 1
  %859 = insertvalue { ptr, ptr, ptr, i32 } %858, ptr %.sroa.12.0304.i1206, 2
  %860 = insertvalue { ptr, ptr, ptr, i32 } %859, i32 %.sroa.17.0303.i1207, 3
  %861 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1204)
  %862 = sext i32 %.sroa.17.0303.i1207 to i64
  %863 = getelementptr ptr, ptr %.sroa.0.0306.i1204, i64 %862
  %864 = getelementptr i8, ptr %863, i64 64
  %865 = load ptr, ptr %864, align 8
  %result.i43.i1208 = call ptr %865({ ptr, ptr, ptr, i32 } %860, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %866 = call i32 %result.i43.i1208({ ptr, ptr, ptr, i32 } %860, { ptr, ptr, ptr, i32 } %860, ptr nonnull align 8 %2) #42
  %..i1209 = select i1 %.070307.i1203, ptr %59, ptr %61
  %.184.i1210 = select i1 %.070307.i1203, i64 104, i64 112
  %.185.i1211 = select i1 %.070307.i1203, ptr %60, ptr %62
  %.186.i1212 = select i1 %.070307.i1203, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1209, align 8
  %867 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1209)
  %868 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1210
  %869 = load ptr, ptr %868, align 8
  store ptr @i32_typ, ptr %.185.i1211, align 8
  %result.i44.i1213 = call ptr %869({ ptr, ptr, ptr, i32 } %109, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1211) #45
  %870 = call i32 %result.i44.i1213({ ptr, ptr, ptr, i32 } %109, { ptr, ptr, ptr, i32 } %109, ptr nonnull align 8 dereferenceable(8) %..i1209, i32 %866) #42
  %871 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %872 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1212
  %873 = load ptr, ptr %872, align 8
  %874 = load ptr, ptr %873, align 8
  %875 = call { ptr } %874(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i1214 = extractvalue { ptr } %875, 0
  %876 = sext i32 %870 to i64
  %877 = shl nsw i64 %876, 5
  %878 = getelementptr i8, ptr %.fca.0.extract53.i1214, i64 %877
  %879 = load ptr, ptr %878, align 8
  %880 = getelementptr i8, ptr %878, i64 8
  %881 = load i64, ptr %880, align 4
  %.sroa_idx.i1215 = getelementptr i8, ptr %878, i64 16
  %882 = load i64, ptr %.sroa_idx.i1215, align 4
  %883 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %884 = call { ptr } %874(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i1216 = extractvalue { ptr } %884, 0
  %885 = getelementptr i8, ptr %.fca.0.extract51.i1216, i64 %877
  store ptr %.sroa.0.0306.i1204, ptr %885, align 8
  %886 = getelementptr i8, ptr %885, i64 8
  store i64 %.sroa.6.0305.i1205.in, ptr %886, align 4
  %.sroa_idx100.i1217 = getelementptr i8, ptr %885, i64 16
  store i64 %.sroa.12.0304.i1206.in, ptr %.sroa_idx100.i1217, align 4
  %.sroa_idx101.i1218 = getelementptr i8, ptr %885, i64 24
  store i32 %.sroa.17.0303.i1207, ptr %.sroa_idx101.i1218, align 4
  %887 = icmp ne ptr %879, @nil_typ
  %888 = icmp ne ptr %879, null
  %.not90.i1219 = and i1 %887, %888
  br i1 %.not90.i1219, label %.cont.i1224, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1247

.cont.i1224:                                      ; preds = %856
  %889 = add nuw nsw i32 %.0308.i1202, 1
  %890 = xor i1 %.070307.i1203, true
  %hash_coef_ptr.i.i60.i1227 = getelementptr i8, ptr %879, i64 8
  %tbl_size_ptr.i.i61.i1228 = getelementptr i8, ptr %879, i64 16
  %offset_tbl_ptr.i.i62.i1229 = getelementptr i8, ptr %879, i64 40
  %hash_coef.i.i63.i1230 = load i64, ptr %hash_coef_ptr.i.i60.i1227, align 4
  %tbl_size.i.i64.i1231 = load i64, ptr %tbl_size_ptr.i.i61.i1228, align 4
  %offset_tbl.i.i65.i1232 = load ptr, ptr %offset_tbl_ptr.i.i62.i1229, align 8
  %product.i.i.i66.i1233 = mul i64 %hash_coef.i.i63.i1230, 4015701072841558310
  %shifted.i.i.i67.i1234 = lshr i64 %product.i.i.i66.i1233, 32
  %xored.i.i.i68.i1235 = xor i64 %shifted.i.i.i67.i1234, %product.i.i.i66.i1233
  %hash.i.i.i69.i1236 = and i64 %xored.i.i.i68.i1235, %tbl_size.i.i64.i1231
  %offset_ptr.i.i70.i1237 = getelementptr i32, ptr %offset_tbl.i.i65.i1232, i64 %hash.i.i.i69.i1236
  %offset.i.i71.i1238 = load i32, ptr %offset_ptr.i.i70.i1237, align 4
  %891 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %892 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %893 = icmp ult i32 %.0308.i1202, 99
  br i1 %893, label %856, label %897

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1247: ; preds = %856
  %894 = load i32, ptr %102, align 4
  %895 = add i32 %894, 1
  %896 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %895, ptr %102, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %59)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %60)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %61)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %62)
  br label %CuckooMap_insert_keyK_valueV.exit

897:                                              ; preds = %.cont.i1224
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %59)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %60)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %61)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %62)
  %898 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %899 = load ptr, ptr %83, align 8
  %900 = load ptr, ptr %84, align 8
  %901 = load i32, ptr %82, align 8
  %902 = shl i32 %901, 1
  %spec.select.i1263 = call i32 @llvm.smax.i32(i32 %902, i32 noundef 16) #37
  store i32 %spec.select.i1263, ptr %82, align 8
  %903 = zext nneg i32 %spec.select.i1263 to i64
  %904 = shl nuw nsw i64 %903, 5
  %result.i.i1264 = call noalias ptr @bump_malloc_inner(i64 noundef %904, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i1264, ptr %83, align 8
  %result.i1.i1265 = call noalias ptr @bump_malloc_inner(i64 noundef %904, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i1265, ptr %84, align 8
  store i32 0, ptr %102, align 4
  %905 = icmp sgt i32 %901, 0
  br i1 %905, label %.lr.ph.i2311, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2344.thread

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2344.thread: ; preds = %897
  %906 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %CuckooMap_insert_keyK_valueV.exit

.lr.ph.i2311:                                     ; preds = %897, %._crit_edge.i2326
  %.045.i2324 = phi i32 [ %963, %._crit_edge.i2326 ], [ 0, %897 ]
  %907 = zext nneg i32 %.045.i2324 to i64
  %908 = shl nuw nsw i64 %907, 5
  %909 = getelementptr i8, ptr %899, i64 %908
  %910 = load ptr, ptr %909, align 8
  %911 = icmp ne ptr %910, @nil_typ
  %912 = icmp ne ptr %910, null
  %.not16.i2325 = and i1 %911, %912
  br i1 %.not16.i2325, label %913, label %._crit_edge.i2326

913:                                              ; preds = %.lr.ph.i2311
  %914 = getelementptr i8, ptr %909, i64 8
  %915 = load i64, ptr %914, align 4
  %.sroa_idx.i2327 = getelementptr i8, ptr %909, i64 16
  %916 = load i64, ptr %.sroa_idx.i2327, align 4
  %hash_coef_ptr.i.i3.i2328 = getelementptr i8, ptr %910, i64 8
  %tbl_size_ptr.i.i4.i2329 = getelementptr i8, ptr %910, i64 16
  %offset_tbl_ptr.i.i5.i2330 = getelementptr i8, ptr %910, i64 40
  %917 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %31)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %32)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %33)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %34)
  %hash_coef.i.i17.i2983 = load i64, ptr %hash_coef_ptr.i.i3.i2328, align 4, !noalias !23
  %tbl_size.i.i18.i2984 = load i64, ptr %tbl_size_ptr.i.i4.i2329, align 4, !noalias !23
  %offset_tbl.i.i19.i2985 = load ptr, ptr %offset_tbl_ptr.i.i5.i2330, align 8, !noalias !23
  %product.i.i.i20.i2986 = mul i64 %hash_coef.i.i17.i2983, 4015701072841558310
  %shifted.i.i.i21.i2987 = lshr i64 %product.i.i.i20.i2986, 32
  %xored.i.i.i22.i2988 = xor i64 %shifted.i.i.i21.i2987, %product.i.i.i20.i2986
  %hash.i.i.i23.i2989 = and i64 %xored.i.i.i22.i2988, %tbl_size.i.i18.i2984
  %offset_ptr.i.i24.i2990 = getelementptr i32, ptr %offset_tbl.i.i19.i2985, i64 %hash.i.i.i23.i2989
  %offset.i.i39.i2991 = load i32, ptr %offset_ptr.i.i24.i2990, align 4, !noalias !273
  %918 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %919 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %920 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %921

921:                                              ; preds = %.cont.i3014, %913
  %.0308.i2992 = phi i32 [ 0, %913 ], [ %954, %.cont.i3014 ]
  %.070307.i2993 = phi i1 [ true, %913 ], [ %955, %.cont.i3014 ]
  %.sroa.0.0306.i2994 = phi ptr [ %910, %913 ], [ %944, %.cont.i3014 ]
  %.sroa.6.0305.i2995.in = phi i64 [ %915, %913 ], [ %946, %.cont.i3014 ]
  %.sroa.12.0304.i2996.in = phi i64 [ %916, %913 ], [ %947, %.cont.i3014 ]
  %.sroa.17.0303.i2997 = phi i32 [ %offset.i.i39.i2991, %913 ], [ %offset.i.i71.i3028, %.cont.i3014 ]
  %.sroa.12.0304.i2996 = inttoptr i64 %.sroa.12.0304.i2996.in to ptr
  %.sroa.6.0305.i2995 = inttoptr i64 %.sroa.6.0305.i2995.in to ptr
  %922 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2994, 0
  %923 = insertvalue { ptr, ptr, ptr, i32 } %922, ptr %.sroa.6.0305.i2995, 1
  %924 = insertvalue { ptr, ptr, ptr, i32 } %923, ptr %.sroa.12.0304.i2996, 2
  %925 = insertvalue { ptr, ptr, ptr, i32 } %924, i32 %.sroa.17.0303.i2997, 3
  %926 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2994)
  %927 = sext i32 %.sroa.17.0303.i2997 to i64
  %928 = getelementptr ptr, ptr %.sroa.0.0306.i2994, i64 %927
  %929 = getelementptr i8, ptr %928, i64 64
  %930 = load ptr, ptr %929, align 8
  %result.i43.i2998 = call ptr %930({ ptr, ptr, ptr, i32 } %925, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %931 = call i32 %result.i43.i2998({ ptr, ptr, ptr, i32 } %925, { ptr, ptr, ptr, i32 } %925, ptr nonnull align 8 %2) #42
  %..i2999 = select i1 %.070307.i2993, ptr %31, ptr %33
  %.184.i3000 = select i1 %.070307.i2993, i64 104, i64 112
  %.185.i3001 = select i1 %.070307.i2993, ptr %32, ptr %34
  %.186.i3002 = select i1 %.070307.i2993, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2999, align 8
  %932 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2999)
  %933 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i3000
  %934 = load ptr, ptr %933, align 8
  store ptr @i32_typ, ptr %.185.i3001, align 8
  %result.i44.i3003 = call ptr %934({ ptr, ptr, ptr, i32 } %110, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i3001) #45
  %935 = call i32 %result.i44.i3003({ ptr, ptr, ptr, i32 } %110, { ptr, ptr, ptr, i32 } %110, ptr nonnull align 8 dereferenceable(8) %..i2999, i32 %931) #42
  %936 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %937 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i3002
  %938 = load ptr, ptr %937, align 8
  %939 = load ptr, ptr %938, align 8
  %940 = call { ptr } %939(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i3004 = extractvalue { ptr } %940, 0
  %941 = sext i32 %935 to i64
  %942 = shl nsw i64 %941, 5
  %943 = getelementptr i8, ptr %.fca.0.extract53.i3004, i64 %942
  %944 = load ptr, ptr %943, align 8
  %945 = getelementptr i8, ptr %943, i64 8
  %946 = load i64, ptr %945, align 4
  %.sroa_idx.i3005 = getelementptr i8, ptr %943, i64 16
  %947 = load i64, ptr %.sroa_idx.i3005, align 4
  %948 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %949 = call { ptr } %939(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i3006 = extractvalue { ptr } %949, 0
  %950 = getelementptr i8, ptr %.fca.0.extract51.i3006, i64 %942
  store ptr %.sroa.0.0306.i2994, ptr %950, align 8
  %951 = getelementptr i8, ptr %950, i64 8
  store i64 %.sroa.6.0305.i2995.in, ptr %951, align 4
  %.sroa_idx100.i3007 = getelementptr i8, ptr %950, i64 16
  store i64 %.sroa.12.0304.i2996.in, ptr %.sroa_idx100.i3007, align 4
  %.sroa_idx101.i3008 = getelementptr i8, ptr %950, i64 24
  store i32 %.sroa.17.0303.i2997, ptr %.sroa_idx101.i3008, align 4
  %952 = icmp ne ptr %944, @nil_typ
  %953 = icmp ne ptr %944, null
  %.not90.i3009 = and i1 %952, %953
  br i1 %.not90.i3009, label %.cont.i3014, label %959

.cont.i3014:                                      ; preds = %921
  %954 = add nuw nsw i32 %.0308.i2992, 1
  %955 = xor i1 %.070307.i2993, true
  %hash_coef_ptr.i.i60.i3017 = getelementptr i8, ptr %944, i64 8
  %tbl_size_ptr.i.i61.i3018 = getelementptr i8, ptr %944, i64 16
  %offset_tbl_ptr.i.i62.i3019 = getelementptr i8, ptr %944, i64 40
  %hash_coef.i.i63.i3020 = load i64, ptr %hash_coef_ptr.i.i60.i3017, align 4
  %tbl_size.i.i64.i3021 = load i64, ptr %tbl_size_ptr.i.i61.i3018, align 4
  %offset_tbl.i.i65.i3022 = load ptr, ptr %offset_tbl_ptr.i.i62.i3019, align 8
  %product.i.i.i66.i3023 = mul i64 %hash_coef.i.i63.i3020, 4015701072841558310
  %shifted.i.i.i67.i3024 = lshr i64 %product.i.i.i66.i3023, 32
  %xored.i.i.i68.i3025 = xor i64 %shifted.i.i.i67.i3024, %product.i.i.i66.i3023
  %hash.i.i.i69.i3026 = and i64 %xored.i.i.i68.i3025, %tbl_size.i.i64.i3021
  %offset_ptr.i.i70.i3027 = getelementptr i32, ptr %offset_tbl.i.i65.i3022, i64 %hash.i.i.i69.i3026
  %offset.i.i71.i3028 = load i32, ptr %offset_ptr.i.i70.i3027, align 4
  %956 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %957 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %958 = icmp ult i32 %.0308.i2992, 99
  br i1 %958, label %921, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3037

959:                                              ; preds = %921
  %960 = load i32, ptr %102, align 4
  %961 = add i32 %960, 1
  %962 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %961, ptr %102, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3037

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3037: ; preds = %.cont.i3014, %959
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %31)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %32)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %33)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %34)
  br label %._crit_edge.i2326

._crit_edge.i2326:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3037, %.lr.ph.i2311
  %963 = add nuw nsw i32 %.045.i2324, 1
  %964 = icmp slt i32 %963, %901
  br i1 %964, label %.lr.ph.i2311, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2344

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2344: ; preds = %._crit_edge.i2326
  %965 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %966

966:                                              ; preds = %._crit_edge.i2361, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2344
  %.045.i2359 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2344 ], [ %1023, %._crit_edge.i2361 ]
  %967 = zext nneg i32 %.045.i2359 to i64
  %968 = shl nuw nsw i64 %967, 5
  %969 = getelementptr i8, ptr %900, i64 %968
  %970 = load ptr, ptr %969, align 8
  %971 = icmp ne ptr %970, @nil_typ
  %972 = icmp ne ptr %970, null
  %.not16.i2360 = and i1 %971, %972
  br i1 %.not16.i2360, label %973, label %._crit_edge.i2361

973:                                              ; preds = %966
  %974 = getelementptr i8, ptr %969, i64 8
  %975 = load i64, ptr %974, align 4
  %.sroa_idx.i2362 = getelementptr i8, ptr %969, i64 16
  %976 = load i64, ptr %.sroa_idx.i2362, align 4
  %hash_coef_ptr.i.i3.i2363 = getelementptr i8, ptr %970, i64 8
  %tbl_size_ptr.i.i4.i2364 = getelementptr i8, ptr %970, i64 16
  %offset_tbl_ptr.i.i5.i2365 = getelementptr i8, ptr %970, i64 40
  %977 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %27)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %28)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %29)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %30)
  %hash_coef.i.i17.i3055 = load i64, ptr %hash_coef_ptr.i.i3.i2363, align 4, !noalias !23
  %tbl_size.i.i18.i3056 = load i64, ptr %tbl_size_ptr.i.i4.i2364, align 4, !noalias !23
  %offset_tbl.i.i19.i3057 = load ptr, ptr %offset_tbl_ptr.i.i5.i2365, align 8, !noalias !23
  %product.i.i.i20.i3058 = mul i64 %hash_coef.i.i17.i3055, 4015701072841558310
  %shifted.i.i.i21.i3059 = lshr i64 %product.i.i.i20.i3058, 32
  %xored.i.i.i22.i3060 = xor i64 %shifted.i.i.i21.i3059, %product.i.i.i20.i3058
  %hash.i.i.i23.i3061 = and i64 %xored.i.i.i22.i3060, %tbl_size.i.i18.i3056
  %offset_ptr.i.i24.i3062 = getelementptr i32, ptr %offset_tbl.i.i19.i3057, i64 %hash.i.i.i23.i3061
  %offset.i.i39.i3063 = load i32, ptr %offset_ptr.i.i24.i3062, align 4, !noalias !276
  %978 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %979 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %980 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %981

981:                                              ; preds = %.cont.i3086, %973
  %.0308.i3064 = phi i32 [ 0, %973 ], [ %1014, %.cont.i3086 ]
  %.070307.i3065 = phi i1 [ true, %973 ], [ %1015, %.cont.i3086 ]
  %.sroa.0.0306.i3066 = phi ptr [ %970, %973 ], [ %1004, %.cont.i3086 ]
  %.sroa.6.0305.i3067.in = phi i64 [ %975, %973 ], [ %1006, %.cont.i3086 ]
  %.sroa.12.0304.i3068.in = phi i64 [ %976, %973 ], [ %1007, %.cont.i3086 ]
  %.sroa.17.0303.i3069 = phi i32 [ %offset.i.i39.i3063, %973 ], [ %offset.i.i71.i3100, %.cont.i3086 ]
  %.sroa.12.0304.i3068 = inttoptr i64 %.sroa.12.0304.i3068.in to ptr
  %.sroa.6.0305.i3067 = inttoptr i64 %.sroa.6.0305.i3067.in to ptr
  %982 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i3066, 0
  %983 = insertvalue { ptr, ptr, ptr, i32 } %982, ptr %.sroa.6.0305.i3067, 1
  %984 = insertvalue { ptr, ptr, ptr, i32 } %983, ptr %.sroa.12.0304.i3068, 2
  %985 = insertvalue { ptr, ptr, ptr, i32 } %984, i32 %.sroa.17.0303.i3069, 3
  %986 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i3066)
  %987 = sext i32 %.sroa.17.0303.i3069 to i64
  %988 = getelementptr ptr, ptr %.sroa.0.0306.i3066, i64 %987
  %989 = getelementptr i8, ptr %988, i64 64
  %990 = load ptr, ptr %989, align 8
  %result.i43.i3070 = call ptr %990({ ptr, ptr, ptr, i32 } %985, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %991 = call i32 %result.i43.i3070({ ptr, ptr, ptr, i32 } %985, { ptr, ptr, ptr, i32 } %985, ptr nonnull align 8 %2) #42
  %..i3071 = select i1 %.070307.i3065, ptr %27, ptr %29
  %.184.i3072 = select i1 %.070307.i3065, i64 104, i64 112
  %.185.i3073 = select i1 %.070307.i3065, ptr %28, ptr %30
  %.186.i3074 = select i1 %.070307.i3065, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i3071, align 8
  %992 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i3071)
  %993 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i3072
  %994 = load ptr, ptr %993, align 8
  store ptr @i32_typ, ptr %.185.i3073, align 8
  %result.i44.i3075 = call ptr %994({ ptr, ptr, ptr, i32 } %110, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i3073) #45
  %995 = call i32 %result.i44.i3075({ ptr, ptr, ptr, i32 } %110, { ptr, ptr, ptr, i32 } %110, ptr nonnull align 8 dereferenceable(8) %..i3071, i32 %991) #42
  %996 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %997 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i3074
  %998 = load ptr, ptr %997, align 8
  %999 = load ptr, ptr %998, align 8
  %1000 = call { ptr } %999(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i3076 = extractvalue { ptr } %1000, 0
  %1001 = sext i32 %995 to i64
  %1002 = shl nsw i64 %1001, 5
  %1003 = getelementptr i8, ptr %.fca.0.extract53.i3076, i64 %1002
  %1004 = load ptr, ptr %1003, align 8
  %1005 = getelementptr i8, ptr %1003, i64 8
  %1006 = load i64, ptr %1005, align 4
  %.sroa_idx.i3077 = getelementptr i8, ptr %1003, i64 16
  %1007 = load i64, ptr %.sroa_idx.i3077, align 4
  %1008 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1009 = call { ptr } %999(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i3078 = extractvalue { ptr } %1009, 0
  %1010 = getelementptr i8, ptr %.fca.0.extract51.i3078, i64 %1002
  store ptr %.sroa.0.0306.i3066, ptr %1010, align 8
  %1011 = getelementptr i8, ptr %1010, i64 8
  store i64 %.sroa.6.0305.i3067.in, ptr %1011, align 4
  %.sroa_idx100.i3079 = getelementptr i8, ptr %1010, i64 16
  store i64 %.sroa.12.0304.i3068.in, ptr %.sroa_idx100.i3079, align 4
  %.sroa_idx101.i3080 = getelementptr i8, ptr %1010, i64 24
  store i32 %.sroa.17.0303.i3069, ptr %.sroa_idx101.i3080, align 4
  %1012 = icmp ne ptr %1004, @nil_typ
  %1013 = icmp ne ptr %1004, null
  %.not90.i3081 = and i1 %1012, %1013
  br i1 %.not90.i3081, label %.cont.i3086, label %1019

.cont.i3086:                                      ; preds = %981
  %1014 = add nuw nsw i32 %.0308.i3064, 1
  %1015 = xor i1 %.070307.i3065, true
  %hash_coef_ptr.i.i60.i3089 = getelementptr i8, ptr %1004, i64 8
  %tbl_size_ptr.i.i61.i3090 = getelementptr i8, ptr %1004, i64 16
  %offset_tbl_ptr.i.i62.i3091 = getelementptr i8, ptr %1004, i64 40
  %hash_coef.i.i63.i3092 = load i64, ptr %hash_coef_ptr.i.i60.i3089, align 4
  %tbl_size.i.i64.i3093 = load i64, ptr %tbl_size_ptr.i.i61.i3090, align 4
  %offset_tbl.i.i65.i3094 = load ptr, ptr %offset_tbl_ptr.i.i62.i3091, align 8
  %product.i.i.i66.i3095 = mul i64 %hash_coef.i.i63.i3092, 4015701072841558310
  %shifted.i.i.i67.i3096 = lshr i64 %product.i.i.i66.i3095, 32
  %xored.i.i.i68.i3097 = xor i64 %shifted.i.i.i67.i3096, %product.i.i.i66.i3095
  %hash.i.i.i69.i3098 = and i64 %xored.i.i.i68.i3097, %tbl_size.i.i64.i3093
  %offset_ptr.i.i70.i3099 = getelementptr i32, ptr %offset_tbl.i.i65.i3094, i64 %hash.i.i.i69.i3098
  %offset.i.i71.i3100 = load i32, ptr %offset_ptr.i.i70.i3099, align 4
  %1016 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1017 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1018 = icmp ult i32 %.0308.i3064, 99
  br i1 %1018, label %981, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3109

1019:                                             ; preds = %981
  %1020 = load i32, ptr %102, align 4
  %1021 = add i32 %1020, 1
  %1022 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1021, ptr %102, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3109

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3109: ; preds = %.cont.i3086, %1019
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %27)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %28)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %29)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %30)
  br label %._crit_edge.i2361

._crit_edge.i2361:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3109, %966
  %1023 = add nuw nsw i32 %.045.i2359, 1
  %1024 = icmp slt i32 %1023, %901
  br i1 %1024, label %966, label %CuckooMap_insert_keyK_valueV.exit

CuckooMap_insert_keyK_valueV.exit:                ; preds = %._crit_edge.i2361, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2344.thread, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1247, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1115, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  store i1 true, ptr %.sroa.0323.sroa.0, align 8
  %.sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.0. = load i8, ptr %.sroa.0323.sroa.0, align 8
  %.sroa.0323.0.insert.ext = zext i8 %.sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.sroa.0.0..sroa.0323.0. to i160
  %1025 = insertvalue { ptr, i160 } { ptr @bool_typ, i160 undef }, i160 %.sroa.0323.0.insert.ext, 1
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1026 = load ptr, ptr %91, align 8
  %1027 = call i32 %1026({ ptr, i160 } %117) #42
  %1028 = load i32, ptr %93, align 8
  %1029 = add i32 %1028, -1
  %1030 = and i32 %1029, %1027
  %1031 = load ptr, ptr %94, align 8
  %1032 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1033 = sext i32 %1030 to i64
  %1034 = shl nsw i64 %1033, 5
  %1035 = getelementptr i8, ptr %1031, i64 %1034
  %1036 = load ptr, ptr %1035, align 8
  %1037 = getelementptr i8, ptr %1035, i64 8
  %1038 = icmp ne ptr %1036, @nil_typ
  %1039 = icmp ne ptr %1036, null
  %.not64.i1311 = and i1 %1038, %1039
  br i1 %.not64.i1311, label %1040, label %1138

1040:                                             ; preds = %CuckooMap_insert_keyK_valueV.exit
  %1041 = load i64, ptr %1037, align 4
  %.sroa_idx.i1313 = getelementptr i8, ptr %1035, i64 16
  %1042 = load i64, ptr %.sroa_idx.i1313, align 4
  %1043 = inttoptr i64 %1041 to ptr
  %1044 = inttoptr i64 %1042 to ptr
  %hash_coef_ptr.i.i3.i1314 = getelementptr i8, ptr %1036, i64 8
  %tbl_size_ptr.i.i4.i1315 = getelementptr i8, ptr %1036, i64 16
  %offset_tbl_ptr.i.i5.i1316 = getelementptr i8, ptr %1036, i64 40
  %hash_coef.i.i6.i1317 = load i64, ptr %hash_coef_ptr.i.i3.i1314, align 4, !noalias !279
  %tbl_size.i.i7.i1318 = load i64, ptr %tbl_size_ptr.i.i4.i1315, align 4, !noalias !279
  %offset_tbl.i.i8.i1319 = load ptr, ptr %offset_tbl_ptr.i.i5.i1316, align 8, !noalias !279
  %product.i.i.i9.i1320 = mul i64 %hash_coef.i.i6.i1317, 4015701072841558310
  %shifted.i.i.i10.i1321 = lshr i64 %product.i.i.i9.i1320, 32
  %xored.i.i.i11.i1322 = xor i64 %shifted.i.i.i10.i1321, %product.i.i.i9.i1320
  %hash.i.i.i12.i1323 = and i64 %xored.i.i.i11.i1322, %tbl_size.i.i7.i1318
  %offset_ptr.i.i13.i1324 = getelementptr i32, ptr %offset_tbl.i.i8.i1319, i64 %hash.i.i.i12.i1323
  %offset.i.i14.i1325 = load i32, ptr %offset_ptr.i.i13.i1324, align 4, !noalias !279
  %1045 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1036, 0
  %1046 = insertvalue { ptr, ptr, ptr, i32 } %1045, ptr %1043, 1
  %1047 = insertvalue { ptr, ptr, ptr, i32 } %1046, ptr %1044, 2
  %1048 = insertvalue { ptr, ptr, ptr, i32 } %1047, i32 %offset.i.i14.i1325, 3
  %1049 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1050 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1036) #37
  %1051 = sext i32 %offset.i.i14.i1325 to i64
  %1052 = getelementptr ptr, ptr %1036, i64 %1051
  %1053 = getelementptr i8, ptr %1052, i64 64
  %1054 = load ptr, ptr %1053, align 8
  %result.i.i1326 = call ptr %1054({ ptr, ptr, ptr, i32 } %1048, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1055 = call i32 %result.i.i1326({ ptr, ptr, ptr, i32 } %1048, { ptr, ptr, ptr, i32 } %1048, ptr nonnull align 8 %2) #42
  %1056 = icmp eq i32 %1055, %1027
  br i1 %1056, label %._crit_edge.i1327, label %1138

._crit_edge.i1327:                                ; preds = %1040
  %1057 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1058 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1036)
  %1059 = getelementptr i8, ptr %1052, i64 48
  %1060 = load ptr, ptr %1059, align 8
  %result.i16.i1328 = call ptr %1060({ ptr, ptr, ptr, i32 } %1048, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1061 = call { ptr, i160 } %result.i16.i1328({ ptr, ptr, ptr, i32 } %1048, { ptr, ptr, ptr, i32 } %1048, ptr nonnull align 8 %2) #42
  %1062 = load ptr, ptr %92, align 8
  %1063 = call i1 %1062({ ptr, i160 } %1061, { ptr, i160 } %117) #42
  br i1 %1063, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1340, label %1138

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1340: ; preds = %._crit_edge.i1327
  %1064 = load ptr, ptr %result.i51, align 8
  %1065 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1066 = load ptr, ptr %86, align 8
  %1067 = load ptr, ptr %1064, align 8, !alias.scope !282
  %1068 = getelementptr i8, ptr %1067, i64 72
  %1069 = load ptr, ptr %1068, align 8, !alias.scope !282
  %result.i.i.i1332 = call { i64, i64 } %1069(ptr nocapture nofree nonnull readonly align 8 %1064) #41, !alias.scope !282
  %1070 = extractvalue { i64, i64 } %result.i.i.i1332, 0
  %1071 = extractvalue { i64, i64 } %result.i.i.i1332, 1
  %1072 = urem i64 20, %1071
  %1073 = icmp eq i64 %1072, 0
  %1074 = sub i64 %1071, %1072
  %1075 = select i1 %1073, i64 0, i64 %1074
  %1076 = add i64 %1070, 20
  %1077 = add i64 %1076, %1075
  %1078 = load ptr, ptr %1066, align 8, !alias.scope !282
  %1079 = getelementptr i8, ptr %1078, i64 72
  %1080 = load ptr, ptr %1079, align 8, !alias.scope !282
  %result.i1.i.i1333 = call { i64, i64 } %1080(ptr nocapture nofree nonnull readonly align 8 %1066) #41, !alias.scope !282
  %1081 = extractvalue { i64, i64 } %result.i1.i.i1333, 0
  %1082 = extractvalue { i64, i64 } %result.i1.i.i1333, 1
  %1083 = call i64 @llvm.umax.i64(i64 %1071, i64 %1082) #38
  %1084 = call i64 @llvm.umax.i64(i64 %1083, i64 noundef 8) #38, !range !16
  %1085 = urem i64 %1077, %1082
  %1086 = icmp eq i64 %1085, 0
  %1087 = sub i64 %1082, %1085
  %1088 = select i1 %1086, i64 0, i64 %1087
  %1089 = add i64 %1081, %1077
  %1090 = add i64 %1089, %1088
  %1091 = urem i64 %1090, %1084
  %1092 = icmp eq i64 %1091, 0
  %1093 = sub i64 %1084, %1091
  %1094 = select i1 %1092, i64 0, i64 %1093
  %1095 = add i64 %1094, %1090
  %result.i20.i1334 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %1095, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %1064, ptr %result.i20.i1334, align 8
  %1096 = getelementptr inbounds i8, ptr %result.i20.i1334, i64 8
  store ptr %1066, ptr %1096, align 8
  %1097 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i1334)
  %1098 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1099 = load ptr, ptr %1064, align 8
  %1100 = getelementptr i8, ptr %1099, i64 72
  %1101 = load ptr, ptr %1100, align 8
  %result.i.i54.i1335 = call { i64, i64 } %1101(ptr nocapture nofree nonnull readonly align 8 %1064) #41
  %1102 = extractvalue { i64, i64 } %result.i.i54.i1335, 1
  %1103 = urem i64 20, %1102
  %1104 = icmp eq i64 %1103, 0
  %reass.sub3829 = sub i64 %1102, %1103
  %1105 = add i64 %reass.sub3829, 20
  %1106 = select i1 %1104, i64 20, i64 %1105
  %1107 = getelementptr i8, ptr %result.i20.i1334, i64 %1106
  %1108 = getelementptr i8, ptr %1099, i64 64
  %1109 = load ptr, ptr %1108, align 8
  call void %1109({ ptr, i160 } %117, ptr nocapture nofree nonnull readonly align 8 %1064, ptr nocapture nofree writeonly %1107) #49
  %1110 = load ptr, ptr %result.i20.i1334, align 8
  %1111 = load ptr, ptr %1110, align 8
  %1112 = getelementptr i8, ptr %1111, i64 72
  %1113 = load ptr, ptr %1112, align 8
  %result.i.i55.i1337 = call { i64, i64 } %1113(ptr nocapture nofree nonnull readonly align 8 %1110) #41
  %1114 = extractvalue { i64, i64 } %result.i.i55.i1337, 0
  %1115 = extractvalue { i64, i64 } %result.i.i55.i1337, 1
  %1116 = urem i64 20, %1115
  %1117 = icmp eq i64 %1116, 0
  %1118 = sub i64 %1115, %1116
  %1119 = select i1 %1117, i64 0, i64 %1118
  %1120 = add i64 %1114, 20
  %1121 = add i64 %1120, %1119
  %1122 = load ptr, ptr %1096, align 8
  %1123 = load ptr, ptr %1122, align 8
  %1124 = getelementptr i8, ptr %1123, i64 72
  %1125 = load ptr, ptr %1124, align 8
  %result.i1.i56.i1338 = call { i64, i64 } %1125(ptr nocapture nofree nonnull readonly align 8 %1122) #41
  %1126 = extractvalue { i64, i64 } %result.i1.i56.i1338, 1
  %1127 = urem i64 %1121, %1126
  %1128 = icmp eq i64 %1127, 0
  %1129 = sub i64 %1126, %1127
  %1130 = select i1 %1128, i64 0, i64 %1129
  %1131 = getelementptr i8, ptr %result.i20.i1334, i64 %1121
  %1132 = getelementptr i8, ptr %1131, i64 %1130
  %1133 = getelementptr i8, ptr %1123, i64 64
  %1134 = load ptr, ptr %1133, align 8
  call void %1134({ ptr, i160 } %1025, ptr nocapture nofree nonnull readonly align 8 %1122, ptr nocapture nofree writeonly %1132) #49
  %1135 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %1136 = getelementptr inbounds i8, ptr %result.i20.i1334, i64 16
  store i32 %1027, ptr %1136, align 8
  store ptr @Entry, ptr %1035, align 8
  %1137 = ptrtoint ptr %result.i20.i1334 to i64
  store i64 %1137, ptr %1037, align 4
  %.sroa_idx28.i1339 = getelementptr i8, ptr %1035, i64 24
  store i32 10, ptr %.sroa_idx28.i1339, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit625

1138:                                             ; preds = %._crit_edge.i1327, %CuckooMap_insert_keyK_valueV.exit, %1040
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1139 = add i32 %1027, 2127912214
  %1140 = shl i32 %1027, 12
  %1141 = add i32 %1139, %1140
  %1142 = ashr i32 %1141, 19
  %1143 = xor i32 %1141, %1142
  %1144 = xor i32 %1143, -949894596
  %1145 = add i32 %1144, 374761393
  %1146 = shl i32 %1144, 5
  %1147 = add i32 %1145, %1146
  %1148 = add i32 %1147, -744332180
  %1149 = shl i32 %1147, 9
  %1150 = xor i32 %1148, %1149
  %1151 = add i32 %1150, -42973499
  %1152 = shl i32 %1150, 3
  %1153 = add i32 %1151, %1152
  %1154 = ashr i32 %1153, 16
  %1155 = xor i32 %1153, %1154
  %1156 = xor i32 %1155, -1252372727
  %1157 = load i32, ptr %93, align 8
  %1158 = add i32 %1157, -1
  %1159 = and i32 %1158, %1156
  %1160 = load ptr, ptr %95, align 8
  %1161 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1162 = sext i32 %1159 to i64
  %1163 = shl nsw i64 %1162, 5
  %1164 = getelementptr i8, ptr %1160, i64 %1163
  %1165 = load ptr, ptr %1164, align 8
  %1166 = getelementptr i8, ptr %1164, i64 8
  %1167 = icmp ne ptr %1165, @nil_typ
  %1168 = icmp ne ptr %1165, null
  %.not64.i1370 = and i1 %1167, %1168
  br i1 %.not64.i1370, label %1169, label %1267

1169:                                             ; preds = %1138
  %1170 = load i64, ptr %1166, align 4
  %.sroa_idx.i1372 = getelementptr i8, ptr %1164, i64 16
  %1171 = load i64, ptr %.sroa_idx.i1372, align 4
  %1172 = inttoptr i64 %1170 to ptr
  %1173 = inttoptr i64 %1171 to ptr
  %hash_coef_ptr.i.i3.i1373 = getelementptr i8, ptr %1165, i64 8
  %tbl_size_ptr.i.i4.i1374 = getelementptr i8, ptr %1165, i64 16
  %offset_tbl_ptr.i.i5.i1375 = getelementptr i8, ptr %1165, i64 40
  %hash_coef.i.i6.i1376 = load i64, ptr %hash_coef_ptr.i.i3.i1373, align 4, !noalias !285
  %tbl_size.i.i7.i1377 = load i64, ptr %tbl_size_ptr.i.i4.i1374, align 4, !noalias !285
  %offset_tbl.i.i8.i1378 = load ptr, ptr %offset_tbl_ptr.i.i5.i1375, align 8, !noalias !285
  %product.i.i.i9.i1379 = mul i64 %hash_coef.i.i6.i1376, 4015701072841558310
  %shifted.i.i.i10.i1380 = lshr i64 %product.i.i.i9.i1379, 32
  %xored.i.i.i11.i1381 = xor i64 %shifted.i.i.i10.i1380, %product.i.i.i9.i1379
  %hash.i.i.i12.i1382 = and i64 %xored.i.i.i11.i1381, %tbl_size.i.i7.i1377
  %offset_ptr.i.i13.i1383 = getelementptr i32, ptr %offset_tbl.i.i8.i1378, i64 %hash.i.i.i12.i1382
  %offset.i.i14.i1384 = load i32, ptr %offset_ptr.i.i13.i1383, align 4, !noalias !285
  %1174 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1165, 0
  %1175 = insertvalue { ptr, ptr, ptr, i32 } %1174, ptr %1172, 1
  %1176 = insertvalue { ptr, ptr, ptr, i32 } %1175, ptr %1173, 2
  %1177 = insertvalue { ptr, ptr, ptr, i32 } %1176, i32 %offset.i.i14.i1384, 3
  %1178 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1179 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1165) #37
  %1180 = sext i32 %offset.i.i14.i1384 to i64
  %1181 = getelementptr ptr, ptr %1165, i64 %1180
  %1182 = getelementptr i8, ptr %1181, i64 64
  %1183 = load ptr, ptr %1182, align 8
  %result.i.i1385 = call ptr %1183({ ptr, ptr, ptr, i32 } %1177, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1184 = call i32 %result.i.i1385({ ptr, ptr, ptr, i32 } %1177, { ptr, ptr, ptr, i32 } %1177, ptr nonnull align 8 %2) #42
  %1185 = icmp eq i32 %1184, %1027
  br i1 %1185, label %._crit_edge.i1386, label %1267

._crit_edge.i1386:                                ; preds = %1169
  %1186 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1187 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1165)
  %1188 = getelementptr i8, ptr %1181, i64 48
  %1189 = load ptr, ptr %1188, align 8
  %result.i16.i1387 = call ptr %1189({ ptr, ptr, ptr, i32 } %1177, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1190 = call { ptr, i160 } %result.i16.i1387({ ptr, ptr, ptr, i32 } %1177, { ptr, ptr, ptr, i32 } %1177, ptr nonnull align 8 %2) #42
  %1191 = load ptr, ptr %92, align 8
  %1192 = call i1 %1191({ ptr, i160 } %1190, { ptr, i160 } %117) #42
  br i1 %1192, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1399, label %1267

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1399: ; preds = %._crit_edge.i1386
  %1193 = load ptr, ptr %result.i51, align 8
  %1194 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1195 = load ptr, ptr %86, align 8
  %1196 = load ptr, ptr %1193, align 8, !alias.scope !288
  %1197 = getelementptr i8, ptr %1196, i64 72
  %1198 = load ptr, ptr %1197, align 8, !alias.scope !288
  %result.i.i.i1391 = call { i64, i64 } %1198(ptr nocapture nofree nonnull readonly align 8 %1193) #41, !alias.scope !288
  %1199 = extractvalue { i64, i64 } %result.i.i.i1391, 0
  %1200 = extractvalue { i64, i64 } %result.i.i.i1391, 1
  %1201 = urem i64 20, %1200
  %1202 = icmp eq i64 %1201, 0
  %1203 = sub i64 %1200, %1201
  %1204 = select i1 %1202, i64 0, i64 %1203
  %1205 = add i64 %1199, 20
  %1206 = add i64 %1205, %1204
  %1207 = load ptr, ptr %1195, align 8, !alias.scope !288
  %1208 = getelementptr i8, ptr %1207, i64 72
  %1209 = load ptr, ptr %1208, align 8, !alias.scope !288
  %result.i1.i.i1392 = call { i64, i64 } %1209(ptr nocapture nofree nonnull readonly align 8 %1195) #41, !alias.scope !288
  %1210 = extractvalue { i64, i64 } %result.i1.i.i1392, 0
  %1211 = extractvalue { i64, i64 } %result.i1.i.i1392, 1
  %1212 = call i64 @llvm.umax.i64(i64 %1200, i64 %1211) #38
  %1213 = call i64 @llvm.umax.i64(i64 %1212, i64 noundef 8) #38, !range !16
  %1214 = urem i64 %1206, %1211
  %1215 = icmp eq i64 %1214, 0
  %1216 = sub i64 %1211, %1214
  %1217 = select i1 %1215, i64 0, i64 %1216
  %1218 = add i64 %1210, %1206
  %1219 = add i64 %1218, %1217
  %1220 = urem i64 %1219, %1213
  %1221 = icmp eq i64 %1220, 0
  %1222 = sub i64 %1213, %1220
  %1223 = select i1 %1221, i64 0, i64 %1222
  %1224 = add i64 %1223, %1219
  %result.i20.i1393 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %1224, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %1193, ptr %result.i20.i1393, align 8
  %1225 = getelementptr inbounds i8, ptr %result.i20.i1393, i64 8
  store ptr %1195, ptr %1225, align 8
  %1226 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i1393)
  %1227 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1228 = load ptr, ptr %1193, align 8
  %1229 = getelementptr i8, ptr %1228, i64 72
  %1230 = load ptr, ptr %1229, align 8
  %result.i.i54.i1394 = call { i64, i64 } %1230(ptr nocapture nofree nonnull readonly align 8 %1193) #41
  %1231 = extractvalue { i64, i64 } %result.i.i54.i1394, 1
  %1232 = urem i64 20, %1231
  %1233 = icmp eq i64 %1232, 0
  %reass.sub3828 = sub i64 %1231, %1232
  %1234 = add i64 %reass.sub3828, 20
  %1235 = select i1 %1233, i64 20, i64 %1234
  %1236 = getelementptr i8, ptr %result.i20.i1393, i64 %1235
  %1237 = getelementptr i8, ptr %1228, i64 64
  %1238 = load ptr, ptr %1237, align 8
  call void %1238({ ptr, i160 } %117, ptr nocapture nofree nonnull readonly align 8 %1193, ptr nocapture nofree writeonly %1236) #49
  %1239 = load ptr, ptr %result.i20.i1393, align 8
  %1240 = load ptr, ptr %1239, align 8
  %1241 = getelementptr i8, ptr %1240, i64 72
  %1242 = load ptr, ptr %1241, align 8
  %result.i.i55.i1396 = call { i64, i64 } %1242(ptr nocapture nofree nonnull readonly align 8 %1239) #41
  %1243 = extractvalue { i64, i64 } %result.i.i55.i1396, 0
  %1244 = extractvalue { i64, i64 } %result.i.i55.i1396, 1
  %1245 = urem i64 20, %1244
  %1246 = icmp eq i64 %1245, 0
  %1247 = sub i64 %1244, %1245
  %1248 = select i1 %1246, i64 0, i64 %1247
  %1249 = add i64 %1243, 20
  %1250 = add i64 %1249, %1248
  %1251 = load ptr, ptr %1225, align 8
  %1252 = load ptr, ptr %1251, align 8
  %1253 = getelementptr i8, ptr %1252, i64 72
  %1254 = load ptr, ptr %1253, align 8
  %result.i1.i56.i1397 = call { i64, i64 } %1254(ptr nocapture nofree nonnull readonly align 8 %1251) #41
  %1255 = extractvalue { i64, i64 } %result.i1.i56.i1397, 1
  %1256 = urem i64 %1250, %1255
  %1257 = icmp eq i64 %1256, 0
  %1258 = sub i64 %1255, %1256
  %1259 = select i1 %1257, i64 0, i64 %1258
  %1260 = getelementptr i8, ptr %result.i20.i1393, i64 %1250
  %1261 = getelementptr i8, ptr %1260, i64 %1259
  %1262 = getelementptr i8, ptr %1252, i64 64
  %1263 = load ptr, ptr %1262, align 8
  call void %1263({ ptr, i160 } %1025, ptr nocapture nofree nonnull readonly align 8 %1251, ptr nocapture nofree writeonly %1261) #49
  %1264 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %1265 = getelementptr inbounds i8, ptr %result.i20.i1393, i64 16
  store i32 %1027, ptr %1265, align 8
  store ptr @Entry, ptr %1164, align 8
  %1266 = ptrtoint ptr %result.i20.i1393 to i64
  store i64 %1266, ptr %1166, align 4
  %.sroa_idx28.i1398 = getelementptr i8, ptr %1164, i64 24
  store i32 10, ptr %.sroa_idx28.i1398, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit625

1267:                                             ; preds = %._crit_edge.i1386, %1138, %1169
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1268 = load i32, ptr %103, align 4
  %1269 = load i32, ptr %93, align 8
  %.not.i581 = icmp slt i32 %1268, %1269
  br i1 %.not.i581, label %._crit_edge.i583, label %1270

1270:                                             ; preds = %1267
  %1271 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1272 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1273 = load ptr, ptr %94, align 8
  %1274 = load ptr, ptr %95, align 8
  %1275 = shl i32 %1269, 1
  %spec.select.i1415 = call i32 @llvm.smax.i32(i32 %1275, i32 noundef 16) #37
  store i32 %spec.select.i1415, ptr %93, align 8
  %1276 = zext nneg i32 %spec.select.i1415 to i64
  %1277 = shl nuw nsw i64 %1276, 5
  %result.i.i1416 = call noalias ptr @bump_malloc_inner(i64 noundef %1277, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i1416, ptr %94, align 8
  %result.i1.i1417 = call noalias ptr @bump_malloc_inner(i64 noundef %1277, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i1417, ptr %95, align 8
  store i32 0, ptr %103, align 4
  %1278 = icmp sgt i32 %1269, 0
  br i1 %1278, label %.lr.ph.i2381, label %._crit_edge.i583

.lr.ph.i2381:                                     ; preds = %1270, %._crit_edge.i2396
  %.045.i2394 = phi i32 [ %1335, %._crit_edge.i2396 ], [ 0, %1270 ]
  %1279 = zext nneg i32 %.045.i2394 to i64
  %1280 = shl nuw nsw i64 %1279, 5
  %1281 = getelementptr i8, ptr %1273, i64 %1280
  %1282 = load ptr, ptr %1281, align 8
  %1283 = icmp ne ptr %1282, @nil_typ
  %1284 = icmp ne ptr %1282, null
  %.not16.i2395 = and i1 %1283, %1284
  br i1 %.not16.i2395, label %1285, label %._crit_edge.i2396

1285:                                             ; preds = %.lr.ph.i2381
  %1286 = getelementptr i8, ptr %1281, i64 8
  %1287 = load i64, ptr %1286, align 4
  %.sroa_idx.i2397 = getelementptr i8, ptr %1281, i64 16
  %1288 = load i64, ptr %.sroa_idx.i2397, align 4
  %hash_coef_ptr.i.i3.i2398 = getelementptr i8, ptr %1282, i64 8
  %tbl_size_ptr.i.i4.i2399 = getelementptr i8, ptr %1282, i64 16
  %offset_tbl_ptr.i.i5.i2400 = getelementptr i8, ptr %1282, i64 40
  %1289 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %23)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %24)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %25)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %26)
  %hash_coef.i.i17.i3127 = load i64, ptr %hash_coef_ptr.i.i3.i2398, align 4, !noalias !23
  %tbl_size.i.i18.i3128 = load i64, ptr %tbl_size_ptr.i.i4.i2399, align 4, !noalias !23
  %offset_tbl.i.i19.i3129 = load ptr, ptr %offset_tbl_ptr.i.i5.i2400, align 8, !noalias !23
  %product.i.i.i20.i3130 = mul i64 %hash_coef.i.i17.i3127, 4015701072841558310
  %shifted.i.i.i21.i3131 = lshr i64 %product.i.i.i20.i3130, 32
  %xored.i.i.i22.i3132 = xor i64 %shifted.i.i.i21.i3131, %product.i.i.i20.i3130
  %hash.i.i.i23.i3133 = and i64 %xored.i.i.i22.i3132, %tbl_size.i.i18.i3128
  %offset_ptr.i.i24.i3134 = getelementptr i32, ptr %offset_tbl.i.i19.i3129, i64 %hash.i.i.i23.i3133
  %offset.i.i39.i3135 = load i32, ptr %offset_ptr.i.i24.i3134, align 4, !noalias !291
  %1290 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1291 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1292 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1293

1293:                                             ; preds = %.cont.i3158, %1285
  %.0308.i3136 = phi i32 [ 0, %1285 ], [ %1326, %.cont.i3158 ]
  %.070307.i3137 = phi i1 [ true, %1285 ], [ %1327, %.cont.i3158 ]
  %.sroa.0.0306.i3138 = phi ptr [ %1282, %1285 ], [ %1316, %.cont.i3158 ]
  %.sroa.6.0305.i3139.in = phi i64 [ %1287, %1285 ], [ %1318, %.cont.i3158 ]
  %.sroa.12.0304.i3140.in = phi i64 [ %1288, %1285 ], [ %1319, %.cont.i3158 ]
  %.sroa.17.0303.i3141 = phi i32 [ %offset.i.i39.i3135, %1285 ], [ %offset.i.i71.i3172, %.cont.i3158 ]
  %.sroa.12.0304.i3140 = inttoptr i64 %.sroa.12.0304.i3140.in to ptr
  %.sroa.6.0305.i3139 = inttoptr i64 %.sroa.6.0305.i3139.in to ptr
  %1294 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i3138, 0
  %1295 = insertvalue { ptr, ptr, ptr, i32 } %1294, ptr %.sroa.6.0305.i3139, 1
  %1296 = insertvalue { ptr, ptr, ptr, i32 } %1295, ptr %.sroa.12.0304.i3140, 2
  %1297 = insertvalue { ptr, ptr, ptr, i32 } %1296, i32 %.sroa.17.0303.i3141, 3
  %1298 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i3138)
  %1299 = sext i32 %.sroa.17.0303.i3141 to i64
  %1300 = getelementptr ptr, ptr %.sroa.0.0306.i3138, i64 %1299
  %1301 = getelementptr i8, ptr %1300, i64 64
  %1302 = load ptr, ptr %1301, align 8
  %result.i43.i3142 = call ptr %1302({ ptr, ptr, ptr, i32 } %1297, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1303 = call i32 %result.i43.i3142({ ptr, ptr, ptr, i32 } %1297, { ptr, ptr, ptr, i32 } %1297, ptr nonnull align 8 %2) #42
  %..i3143 = select i1 %.070307.i3137, ptr %23, ptr %25
  %.184.i3144 = select i1 %.070307.i3137, i64 104, i64 112
  %.185.i3145 = select i1 %.070307.i3137, ptr %24, ptr %26
  %.186.i3146 = select i1 %.070307.i3137, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i3143, align 8
  %1304 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i3143)
  %1305 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i3144
  %1306 = load ptr, ptr %1305, align 8
  store ptr @i32_typ, ptr %.185.i3145, align 8
  %result.i44.i3147 = call ptr %1306({ ptr, ptr, ptr, i32 } %111, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i3145) #45
  %1307 = call i32 %result.i44.i3147({ ptr, ptr, ptr, i32 } %111, { ptr, ptr, ptr, i32 } %111, ptr nonnull align 8 dereferenceable(8) %..i3143, i32 %1303) #42
  %1308 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1309 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i3146
  %1310 = load ptr, ptr %1309, align 8
  %1311 = load ptr, ptr %1310, align 8
  %1312 = call { ptr } %1311(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i3148 = extractvalue { ptr } %1312, 0
  %1313 = sext i32 %1307 to i64
  %1314 = shl nsw i64 %1313, 5
  %1315 = getelementptr i8, ptr %.fca.0.extract53.i3148, i64 %1314
  %1316 = load ptr, ptr %1315, align 8
  %1317 = getelementptr i8, ptr %1315, i64 8
  %1318 = load i64, ptr %1317, align 4
  %.sroa_idx.i3149 = getelementptr i8, ptr %1315, i64 16
  %1319 = load i64, ptr %.sroa_idx.i3149, align 4
  %1320 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1321 = call { ptr } %1311(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i3150 = extractvalue { ptr } %1321, 0
  %1322 = getelementptr i8, ptr %.fca.0.extract51.i3150, i64 %1314
  store ptr %.sroa.0.0306.i3138, ptr %1322, align 8
  %1323 = getelementptr i8, ptr %1322, i64 8
  store i64 %.sroa.6.0305.i3139.in, ptr %1323, align 4
  %.sroa_idx100.i3151 = getelementptr i8, ptr %1322, i64 16
  store i64 %.sroa.12.0304.i3140.in, ptr %.sroa_idx100.i3151, align 4
  %.sroa_idx101.i3152 = getelementptr i8, ptr %1322, i64 24
  store i32 %.sroa.17.0303.i3141, ptr %.sroa_idx101.i3152, align 4
  %1324 = icmp ne ptr %1316, @nil_typ
  %1325 = icmp ne ptr %1316, null
  %.not90.i3153 = and i1 %1324, %1325
  br i1 %.not90.i3153, label %.cont.i3158, label %1331

.cont.i3158:                                      ; preds = %1293
  %1326 = add nuw nsw i32 %.0308.i3136, 1
  %1327 = xor i1 %.070307.i3137, true
  %hash_coef_ptr.i.i60.i3161 = getelementptr i8, ptr %1316, i64 8
  %tbl_size_ptr.i.i61.i3162 = getelementptr i8, ptr %1316, i64 16
  %offset_tbl_ptr.i.i62.i3163 = getelementptr i8, ptr %1316, i64 40
  %hash_coef.i.i63.i3164 = load i64, ptr %hash_coef_ptr.i.i60.i3161, align 4
  %tbl_size.i.i64.i3165 = load i64, ptr %tbl_size_ptr.i.i61.i3162, align 4
  %offset_tbl.i.i65.i3166 = load ptr, ptr %offset_tbl_ptr.i.i62.i3163, align 8
  %product.i.i.i66.i3167 = mul i64 %hash_coef.i.i63.i3164, 4015701072841558310
  %shifted.i.i.i67.i3168 = lshr i64 %product.i.i.i66.i3167, 32
  %xored.i.i.i68.i3169 = xor i64 %shifted.i.i.i67.i3168, %product.i.i.i66.i3167
  %hash.i.i.i69.i3170 = and i64 %xored.i.i.i68.i3169, %tbl_size.i.i64.i3165
  %offset_ptr.i.i70.i3171 = getelementptr i32, ptr %offset_tbl.i.i65.i3166, i64 %hash.i.i.i69.i3170
  %offset.i.i71.i3172 = load i32, ptr %offset_ptr.i.i70.i3171, align 4
  %1328 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1329 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1330 = icmp ult i32 %.0308.i3136, 99
  br i1 %1330, label %1293, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3181

1331:                                             ; preds = %1293
  %1332 = load i32, ptr %103, align 4
  %1333 = add i32 %1332, 1
  %1334 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1333, ptr %103, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3181

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3181: ; preds = %.cont.i3158, %1331
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %23)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %24)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %25)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %26)
  br label %._crit_edge.i2396

._crit_edge.i2396:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3181, %.lr.ph.i2381
  %1335 = add nuw nsw i32 %.045.i2394, 1
  %1336 = icmp slt i32 %1335, %1269
  br i1 %1336, label %.lr.ph.i2381, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2414

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2414: ; preds = %._crit_edge.i2396, %._crit_edge.i2431
  %.045.i2429 = phi i32 [ %1393, %._crit_edge.i2431 ], [ 0, %._crit_edge.i2396 ]
  %1337 = zext nneg i32 %.045.i2429 to i64
  %1338 = shl nuw nsw i64 %1337, 5
  %1339 = getelementptr i8, ptr %1274, i64 %1338
  %1340 = load ptr, ptr %1339, align 8
  %1341 = icmp ne ptr %1340, @nil_typ
  %1342 = icmp ne ptr %1340, null
  %.not16.i2430 = and i1 %1341, %1342
  br i1 %.not16.i2430, label %1343, label %._crit_edge.i2431

1343:                                             ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2414
  %1344 = getelementptr i8, ptr %1339, i64 8
  %1345 = load i64, ptr %1344, align 4
  %.sroa_idx.i2432 = getelementptr i8, ptr %1339, i64 16
  %1346 = load i64, ptr %.sroa_idx.i2432, align 4
  %hash_coef_ptr.i.i3.i2433 = getelementptr i8, ptr %1340, i64 8
  %tbl_size_ptr.i.i4.i2434 = getelementptr i8, ptr %1340, i64 16
  %offset_tbl_ptr.i.i5.i2435 = getelementptr i8, ptr %1340, i64 40
  %1347 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %19)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %20)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %21)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %22)
  %hash_coef.i.i17.i3199 = load i64, ptr %hash_coef_ptr.i.i3.i2433, align 4, !noalias !23
  %tbl_size.i.i18.i3200 = load i64, ptr %tbl_size_ptr.i.i4.i2434, align 4, !noalias !23
  %offset_tbl.i.i19.i3201 = load ptr, ptr %offset_tbl_ptr.i.i5.i2435, align 8, !noalias !23
  %product.i.i.i20.i3202 = mul i64 %hash_coef.i.i17.i3199, 4015701072841558310
  %shifted.i.i.i21.i3203 = lshr i64 %product.i.i.i20.i3202, 32
  %xored.i.i.i22.i3204 = xor i64 %shifted.i.i.i21.i3203, %product.i.i.i20.i3202
  %hash.i.i.i23.i3205 = and i64 %xored.i.i.i22.i3204, %tbl_size.i.i18.i3200
  %offset_ptr.i.i24.i3206 = getelementptr i32, ptr %offset_tbl.i.i19.i3201, i64 %hash.i.i.i23.i3205
  %offset.i.i39.i3207 = load i32, ptr %offset_ptr.i.i24.i3206, align 4, !noalias !294
  %1348 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1349 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1350 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1351

1351:                                             ; preds = %.cont.i3230, %1343
  %.0308.i3208 = phi i32 [ 0, %1343 ], [ %1384, %.cont.i3230 ]
  %.070307.i3209 = phi i1 [ true, %1343 ], [ %1385, %.cont.i3230 ]
  %.sroa.0.0306.i3210 = phi ptr [ %1340, %1343 ], [ %1374, %.cont.i3230 ]
  %.sroa.6.0305.i3211.in = phi i64 [ %1345, %1343 ], [ %1376, %.cont.i3230 ]
  %.sroa.12.0304.i3212.in = phi i64 [ %1346, %1343 ], [ %1377, %.cont.i3230 ]
  %.sroa.17.0303.i3213 = phi i32 [ %offset.i.i39.i3207, %1343 ], [ %offset.i.i71.i3244, %.cont.i3230 ]
  %.sroa.12.0304.i3212 = inttoptr i64 %.sroa.12.0304.i3212.in to ptr
  %.sroa.6.0305.i3211 = inttoptr i64 %.sroa.6.0305.i3211.in to ptr
  %1352 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i3210, 0
  %1353 = insertvalue { ptr, ptr, ptr, i32 } %1352, ptr %.sroa.6.0305.i3211, 1
  %1354 = insertvalue { ptr, ptr, ptr, i32 } %1353, ptr %.sroa.12.0304.i3212, 2
  %1355 = insertvalue { ptr, ptr, ptr, i32 } %1354, i32 %.sroa.17.0303.i3213, 3
  %1356 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i3210)
  %1357 = sext i32 %.sroa.17.0303.i3213 to i64
  %1358 = getelementptr ptr, ptr %.sroa.0.0306.i3210, i64 %1357
  %1359 = getelementptr i8, ptr %1358, i64 64
  %1360 = load ptr, ptr %1359, align 8
  %result.i43.i3214 = call ptr %1360({ ptr, ptr, ptr, i32 } %1355, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1361 = call i32 %result.i43.i3214({ ptr, ptr, ptr, i32 } %1355, { ptr, ptr, ptr, i32 } %1355, ptr nonnull align 8 %2) #42
  %..i3215 = select i1 %.070307.i3209, ptr %19, ptr %21
  %.184.i3216 = select i1 %.070307.i3209, i64 104, i64 112
  %.185.i3217 = select i1 %.070307.i3209, ptr %20, ptr %22
  %.186.i3218 = select i1 %.070307.i3209, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i3215, align 8
  %1362 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i3215)
  %1363 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i3216
  %1364 = load ptr, ptr %1363, align 8
  store ptr @i32_typ, ptr %.185.i3217, align 8
  %result.i44.i3219 = call ptr %1364({ ptr, ptr, ptr, i32 } %111, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i3217) #45
  %1365 = call i32 %result.i44.i3219({ ptr, ptr, ptr, i32 } %111, { ptr, ptr, ptr, i32 } %111, ptr nonnull align 8 dereferenceable(8) %..i3215, i32 %1361) #42
  %1366 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1367 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i3218
  %1368 = load ptr, ptr %1367, align 8
  %1369 = load ptr, ptr %1368, align 8
  %1370 = call { ptr } %1369(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i3220 = extractvalue { ptr } %1370, 0
  %1371 = sext i32 %1365 to i64
  %1372 = shl nsw i64 %1371, 5
  %1373 = getelementptr i8, ptr %.fca.0.extract53.i3220, i64 %1372
  %1374 = load ptr, ptr %1373, align 8
  %1375 = getelementptr i8, ptr %1373, i64 8
  %1376 = load i64, ptr %1375, align 4
  %.sroa_idx.i3221 = getelementptr i8, ptr %1373, i64 16
  %1377 = load i64, ptr %.sroa_idx.i3221, align 4
  %1378 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1379 = call { ptr } %1369(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i3222 = extractvalue { ptr } %1379, 0
  %1380 = getelementptr i8, ptr %.fca.0.extract51.i3222, i64 %1372
  store ptr %.sroa.0.0306.i3210, ptr %1380, align 8
  %1381 = getelementptr i8, ptr %1380, i64 8
  store i64 %.sroa.6.0305.i3211.in, ptr %1381, align 4
  %.sroa_idx100.i3223 = getelementptr i8, ptr %1380, i64 16
  store i64 %.sroa.12.0304.i3212.in, ptr %.sroa_idx100.i3223, align 4
  %.sroa_idx101.i3224 = getelementptr i8, ptr %1380, i64 24
  store i32 %.sroa.17.0303.i3213, ptr %.sroa_idx101.i3224, align 4
  %1382 = icmp ne ptr %1374, @nil_typ
  %1383 = icmp ne ptr %1374, null
  %.not90.i3225 = and i1 %1382, %1383
  br i1 %.not90.i3225, label %.cont.i3230, label %1389

.cont.i3230:                                      ; preds = %1351
  %1384 = add nuw nsw i32 %.0308.i3208, 1
  %1385 = xor i1 %.070307.i3209, true
  %hash_coef_ptr.i.i60.i3233 = getelementptr i8, ptr %1374, i64 8
  %tbl_size_ptr.i.i61.i3234 = getelementptr i8, ptr %1374, i64 16
  %offset_tbl_ptr.i.i62.i3235 = getelementptr i8, ptr %1374, i64 40
  %hash_coef.i.i63.i3236 = load i64, ptr %hash_coef_ptr.i.i60.i3233, align 4
  %tbl_size.i.i64.i3237 = load i64, ptr %tbl_size_ptr.i.i61.i3234, align 4
  %offset_tbl.i.i65.i3238 = load ptr, ptr %offset_tbl_ptr.i.i62.i3235, align 8
  %product.i.i.i66.i3239 = mul i64 %hash_coef.i.i63.i3236, 4015701072841558310
  %shifted.i.i.i67.i3240 = lshr i64 %product.i.i.i66.i3239, 32
  %xored.i.i.i68.i3241 = xor i64 %shifted.i.i.i67.i3240, %product.i.i.i66.i3239
  %hash.i.i.i69.i3242 = and i64 %xored.i.i.i68.i3241, %tbl_size.i.i64.i3237
  %offset_ptr.i.i70.i3243 = getelementptr i32, ptr %offset_tbl.i.i65.i3238, i64 %hash.i.i.i69.i3242
  %offset.i.i71.i3244 = load i32, ptr %offset_ptr.i.i70.i3243, align 4
  %1386 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1387 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1388 = icmp ult i32 %.0308.i3208, 99
  br i1 %1388, label %1351, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3253

1389:                                             ; preds = %1351
  %1390 = load i32, ptr %103, align 4
  %1391 = add i32 %1390, 1
  %1392 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1391, ptr %103, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3253

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3253: ; preds = %.cont.i3230, %1389
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %19)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %20)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %21)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %22)
  br label %._crit_edge.i2431

._crit_edge.i2431:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3253, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2414
  %1393 = add nuw nsw i32 %.045.i2429, 1
  %1394 = icmp slt i32 %1393, %1269
  br i1 %1394, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2414, label %._crit_edge.i583

._crit_edge.i583:                                 ; preds = %._crit_edge.i2431, %1270, %1267
  %1395 = load ptr, ptr %result.i51, align 8
  %1396 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1397 = load ptr, ptr %86, align 8
  %1398 = load ptr, ptr %1395, align 8
  %1399 = getelementptr i8, ptr %1398, i64 72
  %1400 = load ptr, ptr %1399, align 8
  %result.i.i.i586 = call { i64, i64 } %1400(ptr nocapture nofree nonnull readonly align 8 %1395) #41
  %1401 = extractvalue { i64, i64 } %result.i.i.i586, 0
  %1402 = extractvalue { i64, i64 } %result.i.i.i586, 1
  %1403 = urem i64 20, %1402
  %1404 = icmp eq i64 %1403, 0
  %1405 = sub i64 %1402, %1403
  %1406 = select i1 %1404, i64 0, i64 %1405
  %1407 = add i64 %1401, 20
  %1408 = add i64 %1407, %1406
  %1409 = load ptr, ptr %1397, align 8
  %1410 = getelementptr i8, ptr %1409, i64 72
  %1411 = load ptr, ptr %1410, align 8
  %result.i1.i.i587 = call { i64, i64 } %1411(ptr nocapture nofree nonnull readonly align 8 %1397) #41
  %1412 = extractvalue { i64, i64 } %result.i1.i.i587, 0
  %1413 = extractvalue { i64, i64 } %result.i1.i.i587, 1
  %1414 = call i64 @llvm.umax.i64(i64 %1402, i64 %1413) #38
  %1415 = call i64 @llvm.umax.i64(i64 %1414, i64 noundef 8) #38, !range !16
  %1416 = urem i64 %1408, %1413
  %1417 = icmp eq i64 %1416, 0
  %1418 = sub i64 %1413, %1416
  %1419 = select i1 %1417, i64 0, i64 %1418
  %1420 = add i64 %1412, %1408
  %1421 = add i64 %1420, %1419
  %1422 = urem i64 %1421, %1415
  %1423 = icmp eq i64 %1422, 0
  %1424 = sub i64 %1415, %1422
  %1425 = select i1 %1423, i64 0, i64 %1424
  %1426 = add i64 %1425, %1421
  %result.i16.i588 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %1426, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %1395, ptr %result.i16.i588, align 8
  %1427 = getelementptr inbounds i8, ptr %result.i16.i588, i64 8
  store ptr %1397, ptr %1427, align 8
  %1428 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i16.i588)
  %1429 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1430 = load ptr, ptr %1395, align 8
  %1431 = getelementptr i8, ptr %1430, i64 72
  %1432 = load ptr, ptr %1431, align 8
  %result.i.i110.i589 = call { i64, i64 } %1432(ptr nocapture nofree nonnull readonly align 8 %1395) #41
  %1433 = extractvalue { i64, i64 } %result.i.i110.i589, 1
  %1434 = urem i64 20, %1433
  %1435 = icmp eq i64 %1434, 0
  %reass.sub = sub i64 %1433, %1434
  %1436 = add i64 %reass.sub, 20
  %1437 = select i1 %1435, i64 20, i64 %1436
  %1438 = getelementptr i8, ptr %result.i16.i588, i64 %1437
  %1439 = getelementptr i8, ptr %1430, i64 64
  %1440 = load ptr, ptr %1439, align 8
  call void %1440({ ptr, i160 } %117, ptr nocapture nofree nonnull readonly align 8 %1395, ptr nocapture nofree writeonly %1438) #49
  %1441 = load ptr, ptr %result.i16.i588, align 8
  %1442 = load ptr, ptr %1441, align 8
  %1443 = getelementptr i8, ptr %1442, i64 72
  %1444 = load ptr, ptr %1443, align 8
  %result.i.i111.i591 = call { i64, i64 } %1444(ptr nocapture nofree nonnull readonly align 8 %1441) #41
  %1445 = extractvalue { i64, i64 } %result.i.i111.i591, 0
  %1446 = extractvalue { i64, i64 } %result.i.i111.i591, 1
  %1447 = urem i64 20, %1446
  %1448 = icmp eq i64 %1447, 0
  %1449 = sub i64 %1446, %1447
  %1450 = select i1 %1448, i64 0, i64 %1449
  %1451 = add i64 %1445, 20
  %1452 = add i64 %1451, %1450
  %1453 = load ptr, ptr %1427, align 8
  %1454 = load ptr, ptr %1453, align 8
  %1455 = getelementptr i8, ptr %1454, i64 72
  %1456 = load ptr, ptr %1455, align 8
  %result.i1.i112.i592 = call { i64, i64 } %1456(ptr nocapture nofree nonnull readonly align 8 %1453) #41
  %1457 = extractvalue { i64, i64 } %result.i1.i112.i592, 1
  %1458 = urem i64 %1452, %1457
  %1459 = icmp eq i64 %1458, 0
  %1460 = sub i64 %1457, %1458
  %1461 = select i1 %1459, i64 0, i64 %1460
  %1462 = getelementptr i8, ptr %result.i16.i588, i64 %1452
  %1463 = getelementptr i8, ptr %1462, i64 %1461
  %1464 = getelementptr i8, ptr %1454, i64 64
  %1465 = load ptr, ptr %1464, align 8
  call void %1465({ ptr, i160 } %1025, ptr nocapture nofree nonnull readonly align 8 %1453, ptr nocapture nofree writeonly %1463) #49
  %1466 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %1467 = getelementptr inbounds i8, ptr %result.i16.i588, i64 16
  store i32 %1027, ptr %1467, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %55)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %56)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %57)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %58)
  %1468 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1469 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1470 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1471

1471:                                             ; preds = %.cont.i1472, %._crit_edge.i583
  %.0308.i1450 = phi i32 [ 0, %._crit_edge.i583 ], [ %1506, %.cont.i1472 ]
  %.070307.i1451 = phi i1 [ true, %._crit_edge.i583 ], [ %1507, %.cont.i1472 ]
  %.sroa.0.0306.i1452 = phi ptr [ @Entry, %._crit_edge.i583 ], [ %1494, %.cont.i1472 ]
  %.sroa.6.0305.i1453 = phi ptr [ %result.i16.i588, %._crit_edge.i583 ], [ %.sroa.speculated111.i1473, %.cont.i1472 ]
  %.sroa.12.0304.i1454 = phi ptr [ undef, %._crit_edge.i583 ], [ %.sroa.speculated105.i1474, %.cont.i1472 ]
  %.sroa.17.0303.i1455 = phi i32 [ 10, %._crit_edge.i583 ], [ %offset.i.i71.i1486, %.cont.i1472 ]
  %1472 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1452, 0
  %1473 = insertvalue { ptr, ptr, ptr, i32 } %1472, ptr %.sroa.6.0305.i1453, 1
  %1474 = insertvalue { ptr, ptr, ptr, i32 } %1473, ptr %.sroa.12.0304.i1454, 2
  %1475 = insertvalue { ptr, ptr, ptr, i32 } %1474, i32 %.sroa.17.0303.i1455, 3
  %1476 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1452)
  %1477 = sext i32 %.sroa.17.0303.i1455 to i64
  %1478 = getelementptr ptr, ptr %.sroa.0.0306.i1452, i64 %1477
  %1479 = getelementptr i8, ptr %1478, i64 64
  %1480 = load ptr, ptr %1479, align 8
  %result.i43.i1456 = call ptr %1480({ ptr, ptr, ptr, i32 } %1475, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1481 = call i32 %result.i43.i1456({ ptr, ptr, ptr, i32 } %1475, { ptr, ptr, ptr, i32 } %1475, ptr nonnull align 8 %2) #42
  %..i1457 = select i1 %.070307.i1451, ptr %55, ptr %57
  %.184.i1458 = select i1 %.070307.i1451, i64 104, i64 112
  %.185.i1459 = select i1 %.070307.i1451, ptr %56, ptr %58
  %.186.i1460 = select i1 %.070307.i1451, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1457, align 8
  %1482 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1457)
  %1483 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1458
  %1484 = load ptr, ptr %1483, align 8
  store ptr @i32_typ, ptr %.185.i1459, align 8
  %result.i44.i1461 = call ptr %1484({ ptr, ptr, ptr, i32 } %106, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1459) #45
  %1485 = call i32 %result.i44.i1461({ ptr, ptr, ptr, i32 } %106, { ptr, ptr, ptr, i32 } %106, ptr nonnull align 8 dereferenceable(8) %..i1457, i32 %1481) #42
  %1486 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1487 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1460
  %1488 = load ptr, ptr %1487, align 8
  %1489 = load ptr, ptr %1488, align 8
  %1490 = call { ptr } %1489(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i1462 = extractvalue { ptr } %1490, 0
  %1491 = sext i32 %1485 to i64
  %1492 = shl nsw i64 %1491, 5
  %1493 = getelementptr i8, ptr %.fca.0.extract53.i1462, i64 %1492
  %1494 = load ptr, ptr %1493, align 8
  %1495 = getelementptr i8, ptr %1493, i64 8
  %1496 = load i64, ptr %1495, align 4
  %.sroa_idx.i1463 = getelementptr i8, ptr %1493, i64 16
  %1497 = load i64, ptr %.sroa_idx.i1463, align 4
  %1498 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1499 = call { ptr } %1489(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i1464 = extractvalue { ptr } %1499, 0
  %1500 = getelementptr i8, ptr %.fca.0.extract51.i1464, i64 %1492
  store ptr %.sroa.0.0306.i1452, ptr %1500, align 8
  %1501 = getelementptr i8, ptr %1500, i64 8
  %1502 = ptrtoint ptr %.sroa.6.0305.i1453 to i64
  %1503 = ptrtoint ptr %.sroa.12.0304.i1454 to i64
  store i64 %1502, ptr %1501, align 4
  %.sroa_idx100.i1465 = getelementptr i8, ptr %1500, i64 16
  store i64 %1503, ptr %.sroa_idx100.i1465, align 4
  %.sroa_idx101.i1466 = getelementptr i8, ptr %1500, i64 24
  store i32 %.sroa.17.0303.i1455, ptr %.sroa_idx101.i1466, align 4
  %1504 = icmp ne ptr %1494, @nil_typ
  %1505 = icmp ne ptr %1494, null
  %.not90.i1467 = and i1 %1504, %1505
  br i1 %.not90.i1467, label %.cont.i1472, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1495

.cont.i1472:                                      ; preds = %1471
  %1506 = add nuw nsw i32 %.0308.i1450, 1
  %1507 = xor i1 %.070307.i1451, true
  %.sroa.speculated111.i1473 = inttoptr i64 %1496 to ptr
  %.sroa.speculated105.i1474 = inttoptr i64 %1497 to ptr
  %hash_coef_ptr.i.i60.i1475 = getelementptr i8, ptr %1494, i64 8
  %tbl_size_ptr.i.i61.i1476 = getelementptr i8, ptr %1494, i64 16
  %offset_tbl_ptr.i.i62.i1477 = getelementptr i8, ptr %1494, i64 40
  %hash_coef.i.i63.i1478 = load i64, ptr %hash_coef_ptr.i.i60.i1475, align 4
  %tbl_size.i.i64.i1479 = load i64, ptr %tbl_size_ptr.i.i61.i1476, align 4
  %offset_tbl.i.i65.i1480 = load ptr, ptr %offset_tbl_ptr.i.i62.i1477, align 8
  %product.i.i.i66.i1481 = mul i64 %hash_coef.i.i63.i1478, 4015701072841558310
  %shifted.i.i.i67.i1482 = lshr i64 %product.i.i.i66.i1481, 32
  %xored.i.i.i68.i1483 = xor i64 %shifted.i.i.i67.i1482, %product.i.i.i66.i1481
  %hash.i.i.i69.i1484 = and i64 %xored.i.i.i68.i1483, %tbl_size.i.i64.i1479
  %offset_ptr.i.i70.i1485 = getelementptr i32, ptr %offset_tbl.i.i65.i1480, i64 %hash.i.i.i69.i1484
  %offset.i.i71.i1486 = load i32, ptr %offset_ptr.i.i70.i1485, align 4
  %1508 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1509 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1510 = icmp ult i32 %.0308.i1450, 99
  br i1 %1510, label %1471, label %1514

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1495: ; preds = %1471
  %1511 = load i32, ptr %103, align 4
  %1512 = add i32 %1511, 1
  %1513 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1512, ptr %103, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %55)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %56)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %57)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %58)
  br label %CuckooMap_insert_keyK_valueV.exit625

1514:                                             ; preds = %.cont.i1472
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %55)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %56)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %57)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %58)
  %1515 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1516 = load ptr, ptr %94, align 8
  %1517 = load ptr, ptr %95, align 8
  %1518 = load i32, ptr %93, align 8
  %1519 = shl i32 %1518, 1
  %spec.select.i1511 = call i32 @llvm.smax.i32(i32 %1519, i32 noundef 16) #37
  store i32 %spec.select.i1511, ptr %93, align 8
  %1520 = zext nneg i32 %spec.select.i1511 to i64
  %1521 = shl nuw nsw i64 %1520, 5
  %result.i.i1512 = call noalias ptr @bump_malloc_inner(i64 noundef %1521, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i1512, ptr %94, align 8
  %result.i1.i1513 = call noalias ptr @bump_malloc_inner(i64 noundef %1521, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i1513, ptr %95, align 8
  store i32 0, ptr %103, align 4
  %1522 = icmp sgt i32 %1518, 0
  br i1 %1522, label %.lr.ph.i2451, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2519

.lr.ph.i2451:                                     ; preds = %1514, %._crit_edge.i2466
  %.045.i2464 = phi i32 [ %1579, %._crit_edge.i2466 ], [ 0, %1514 ]
  %1523 = zext nneg i32 %.045.i2464 to i64
  %1524 = shl nuw nsw i64 %1523, 5
  %1525 = getelementptr i8, ptr %1516, i64 %1524
  %1526 = load ptr, ptr %1525, align 8
  %1527 = icmp ne ptr %1526, @nil_typ
  %1528 = icmp ne ptr %1526, null
  %.not16.i2465 = and i1 %1527, %1528
  br i1 %.not16.i2465, label %1529, label %._crit_edge.i2466

1529:                                             ; preds = %.lr.ph.i2451
  %1530 = getelementptr i8, ptr %1525, i64 8
  %1531 = load i64, ptr %1530, align 4
  %.sroa_idx.i2467 = getelementptr i8, ptr %1525, i64 16
  %1532 = load i64, ptr %.sroa_idx.i2467, align 4
  %hash_coef_ptr.i.i3.i2468 = getelementptr i8, ptr %1526, i64 8
  %tbl_size_ptr.i.i4.i2469 = getelementptr i8, ptr %1526, i64 16
  %offset_tbl_ptr.i.i5.i2470 = getelementptr i8, ptr %1526, i64 40
  %1533 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %15)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %16)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %17)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %18)
  %hash_coef.i.i17.i3271 = load i64, ptr %hash_coef_ptr.i.i3.i2468, align 4, !noalias !23
  %tbl_size.i.i18.i3272 = load i64, ptr %tbl_size_ptr.i.i4.i2469, align 4, !noalias !23
  %offset_tbl.i.i19.i3273 = load ptr, ptr %offset_tbl_ptr.i.i5.i2470, align 8, !noalias !23
  %product.i.i.i20.i3274 = mul i64 %hash_coef.i.i17.i3271, 4015701072841558310
  %shifted.i.i.i21.i3275 = lshr i64 %product.i.i.i20.i3274, 32
  %xored.i.i.i22.i3276 = xor i64 %shifted.i.i.i21.i3275, %product.i.i.i20.i3274
  %hash.i.i.i23.i3277 = and i64 %xored.i.i.i22.i3276, %tbl_size.i.i18.i3272
  %offset_ptr.i.i24.i3278 = getelementptr i32, ptr %offset_tbl.i.i19.i3273, i64 %hash.i.i.i23.i3277
  %offset.i.i39.i3279 = load i32, ptr %offset_ptr.i.i24.i3278, align 4, !noalias !297
  %1534 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1535 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1536 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1537

1537:                                             ; preds = %.cont.i3302, %1529
  %.0308.i3280 = phi i32 [ 0, %1529 ], [ %1570, %.cont.i3302 ]
  %.070307.i3281 = phi i1 [ true, %1529 ], [ %1571, %.cont.i3302 ]
  %.sroa.0.0306.i3282 = phi ptr [ %1526, %1529 ], [ %1560, %.cont.i3302 ]
  %.sroa.6.0305.i3283.in = phi i64 [ %1531, %1529 ], [ %1562, %.cont.i3302 ]
  %.sroa.12.0304.i3284.in = phi i64 [ %1532, %1529 ], [ %1563, %.cont.i3302 ]
  %.sroa.17.0303.i3285 = phi i32 [ %offset.i.i39.i3279, %1529 ], [ %offset.i.i71.i3316, %.cont.i3302 ]
  %.sroa.12.0304.i3284 = inttoptr i64 %.sroa.12.0304.i3284.in to ptr
  %.sroa.6.0305.i3283 = inttoptr i64 %.sroa.6.0305.i3283.in to ptr
  %1538 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i3282, 0
  %1539 = insertvalue { ptr, ptr, ptr, i32 } %1538, ptr %.sroa.6.0305.i3283, 1
  %1540 = insertvalue { ptr, ptr, ptr, i32 } %1539, ptr %.sroa.12.0304.i3284, 2
  %1541 = insertvalue { ptr, ptr, ptr, i32 } %1540, i32 %.sroa.17.0303.i3285, 3
  %1542 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i3282)
  %1543 = sext i32 %.sroa.17.0303.i3285 to i64
  %1544 = getelementptr ptr, ptr %.sroa.0.0306.i3282, i64 %1543
  %1545 = getelementptr i8, ptr %1544, i64 64
  %1546 = load ptr, ptr %1545, align 8
  %result.i43.i3286 = call ptr %1546({ ptr, ptr, ptr, i32 } %1541, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1547 = call i32 %result.i43.i3286({ ptr, ptr, ptr, i32 } %1541, { ptr, ptr, ptr, i32 } %1541, ptr nonnull align 8 %2) #42
  %..i3287 = select i1 %.070307.i3281, ptr %15, ptr %17
  %.184.i3288 = select i1 %.070307.i3281, i64 104, i64 112
  %.185.i3289 = select i1 %.070307.i3281, ptr %16, ptr %18
  %.186.i3290 = select i1 %.070307.i3281, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i3287, align 8
  %1548 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i3287)
  %1549 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i3288
  %1550 = load ptr, ptr %1549, align 8
  store ptr @i32_typ, ptr %.185.i3289, align 8
  %result.i44.i3291 = call ptr %1550({ ptr, ptr, ptr, i32 } %111, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i3289) #45
  %1551 = call i32 %result.i44.i3291({ ptr, ptr, ptr, i32 } %111, { ptr, ptr, ptr, i32 } %111, ptr nonnull align 8 dereferenceable(8) %..i3287, i32 %1547) #42
  %1552 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1553 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i3290
  %1554 = load ptr, ptr %1553, align 8
  %1555 = load ptr, ptr %1554, align 8
  %1556 = call { ptr } %1555(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i3292 = extractvalue { ptr } %1556, 0
  %1557 = sext i32 %1551 to i64
  %1558 = shl nsw i64 %1557, 5
  %1559 = getelementptr i8, ptr %.fca.0.extract53.i3292, i64 %1558
  %1560 = load ptr, ptr %1559, align 8
  %1561 = getelementptr i8, ptr %1559, i64 8
  %1562 = load i64, ptr %1561, align 4
  %.sroa_idx.i3293 = getelementptr i8, ptr %1559, i64 16
  %1563 = load i64, ptr %.sroa_idx.i3293, align 4
  %1564 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1565 = call { ptr } %1555(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i3294 = extractvalue { ptr } %1565, 0
  %1566 = getelementptr i8, ptr %.fca.0.extract51.i3294, i64 %1558
  store ptr %.sroa.0.0306.i3282, ptr %1566, align 8
  %1567 = getelementptr i8, ptr %1566, i64 8
  store i64 %.sroa.6.0305.i3283.in, ptr %1567, align 4
  %.sroa_idx100.i3295 = getelementptr i8, ptr %1566, i64 16
  store i64 %.sroa.12.0304.i3284.in, ptr %.sroa_idx100.i3295, align 4
  %.sroa_idx101.i3296 = getelementptr i8, ptr %1566, i64 24
  store i32 %.sroa.17.0303.i3285, ptr %.sroa_idx101.i3296, align 4
  %1568 = icmp ne ptr %1560, @nil_typ
  %1569 = icmp ne ptr %1560, null
  %.not90.i3297 = and i1 %1568, %1569
  br i1 %.not90.i3297, label %.cont.i3302, label %1575

.cont.i3302:                                      ; preds = %1537
  %1570 = add nuw nsw i32 %.0308.i3280, 1
  %1571 = xor i1 %.070307.i3281, true
  %hash_coef_ptr.i.i60.i3305 = getelementptr i8, ptr %1560, i64 8
  %tbl_size_ptr.i.i61.i3306 = getelementptr i8, ptr %1560, i64 16
  %offset_tbl_ptr.i.i62.i3307 = getelementptr i8, ptr %1560, i64 40
  %hash_coef.i.i63.i3308 = load i64, ptr %hash_coef_ptr.i.i60.i3305, align 4
  %tbl_size.i.i64.i3309 = load i64, ptr %tbl_size_ptr.i.i61.i3306, align 4
  %offset_tbl.i.i65.i3310 = load ptr, ptr %offset_tbl_ptr.i.i62.i3307, align 8
  %product.i.i.i66.i3311 = mul i64 %hash_coef.i.i63.i3308, 4015701072841558310
  %shifted.i.i.i67.i3312 = lshr i64 %product.i.i.i66.i3311, 32
  %xored.i.i.i68.i3313 = xor i64 %shifted.i.i.i67.i3312, %product.i.i.i66.i3311
  %hash.i.i.i69.i3314 = and i64 %xored.i.i.i68.i3313, %tbl_size.i.i64.i3309
  %offset_ptr.i.i70.i3315 = getelementptr i32, ptr %offset_tbl.i.i65.i3310, i64 %hash.i.i.i69.i3314
  %offset.i.i71.i3316 = load i32, ptr %offset_ptr.i.i70.i3315, align 4
  %1572 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1573 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1574 = icmp ult i32 %.0308.i3280, 99
  br i1 %1574, label %1537, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3325

1575:                                             ; preds = %1537
  %1576 = load i32, ptr %103, align 4
  %1577 = add i32 %1576, 1
  %1578 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1577, ptr %103, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3325

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3325: ; preds = %.cont.i3302, %1575
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %15)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %16)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %17)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %18)
  br label %._crit_edge.i2466

._crit_edge.i2466:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3325, %.lr.ph.i2451
  %1579 = add nuw nsw i32 %.045.i2464, 1
  %1580 = icmp slt i32 %1579, %1518
  br i1 %1580, label %.lr.ph.i2451, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2484

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2484: ; preds = %._crit_edge.i2466, %._crit_edge.i2501
  %.045.i2499 = phi i32 [ %1637, %._crit_edge.i2501 ], [ 0, %._crit_edge.i2466 ]
  %1581 = zext nneg i32 %.045.i2499 to i64
  %1582 = shl nuw nsw i64 %1581, 5
  %1583 = getelementptr i8, ptr %1517, i64 %1582
  %1584 = load ptr, ptr %1583, align 8
  %1585 = icmp ne ptr %1584, @nil_typ
  %1586 = icmp ne ptr %1584, null
  %.not16.i2500 = and i1 %1585, %1586
  br i1 %.not16.i2500, label %1587, label %._crit_edge.i2501

1587:                                             ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2484
  %1588 = getelementptr i8, ptr %1583, i64 8
  %1589 = load i64, ptr %1588, align 4
  %.sroa_idx.i2502 = getelementptr i8, ptr %1583, i64 16
  %1590 = load i64, ptr %.sroa_idx.i2502, align 4
  %hash_coef_ptr.i.i3.i2503 = getelementptr i8, ptr %1584, i64 8
  %tbl_size_ptr.i.i4.i2504 = getelementptr i8, ptr %1584, i64 16
  %offset_tbl_ptr.i.i5.i2505 = getelementptr i8, ptr %1584, i64 40
  %1591 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %11)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %12)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %13)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %14)
  %hash_coef.i.i17.i3343 = load i64, ptr %hash_coef_ptr.i.i3.i2503, align 4, !noalias !23
  %tbl_size.i.i18.i3344 = load i64, ptr %tbl_size_ptr.i.i4.i2504, align 4, !noalias !23
  %offset_tbl.i.i19.i3345 = load ptr, ptr %offset_tbl_ptr.i.i5.i2505, align 8, !noalias !23
  %product.i.i.i20.i3346 = mul i64 %hash_coef.i.i17.i3343, 4015701072841558310
  %shifted.i.i.i21.i3347 = lshr i64 %product.i.i.i20.i3346, 32
  %xored.i.i.i22.i3348 = xor i64 %shifted.i.i.i21.i3347, %product.i.i.i20.i3346
  %hash.i.i.i23.i3349 = and i64 %xored.i.i.i22.i3348, %tbl_size.i.i18.i3344
  %offset_ptr.i.i24.i3350 = getelementptr i32, ptr %offset_tbl.i.i19.i3345, i64 %hash.i.i.i23.i3349
  %offset.i.i39.i3351 = load i32, ptr %offset_ptr.i.i24.i3350, align 4, !noalias !300
  %1592 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1593 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1594 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1595

1595:                                             ; preds = %.cont.i3374, %1587
  %.0308.i3352 = phi i32 [ 0, %1587 ], [ %1628, %.cont.i3374 ]
  %.070307.i3353 = phi i1 [ true, %1587 ], [ %1629, %.cont.i3374 ]
  %.sroa.0.0306.i3354 = phi ptr [ %1584, %1587 ], [ %1618, %.cont.i3374 ]
  %.sroa.6.0305.i3355.in = phi i64 [ %1589, %1587 ], [ %1620, %.cont.i3374 ]
  %.sroa.12.0304.i3356.in = phi i64 [ %1590, %1587 ], [ %1621, %.cont.i3374 ]
  %.sroa.17.0303.i3357 = phi i32 [ %offset.i.i39.i3351, %1587 ], [ %offset.i.i71.i3388, %.cont.i3374 ]
  %.sroa.12.0304.i3356 = inttoptr i64 %.sroa.12.0304.i3356.in to ptr
  %.sroa.6.0305.i3355 = inttoptr i64 %.sroa.6.0305.i3355.in to ptr
  %1596 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i3354, 0
  %1597 = insertvalue { ptr, ptr, ptr, i32 } %1596, ptr %.sroa.6.0305.i3355, 1
  %1598 = insertvalue { ptr, ptr, ptr, i32 } %1597, ptr %.sroa.12.0304.i3356, 2
  %1599 = insertvalue { ptr, ptr, ptr, i32 } %1598, i32 %.sroa.17.0303.i3357, 3
  %1600 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i3354)
  %1601 = sext i32 %.sroa.17.0303.i3357 to i64
  %1602 = getelementptr ptr, ptr %.sroa.0.0306.i3354, i64 %1601
  %1603 = getelementptr i8, ptr %1602, i64 64
  %1604 = load ptr, ptr %1603, align 8
  %result.i43.i3358 = call ptr %1604({ ptr, ptr, ptr, i32 } %1599, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1605 = call i32 %result.i43.i3358({ ptr, ptr, ptr, i32 } %1599, { ptr, ptr, ptr, i32 } %1599, ptr nonnull align 8 %2) #42
  %..i3359 = select i1 %.070307.i3353, ptr %11, ptr %13
  %.184.i3360 = select i1 %.070307.i3353, i64 104, i64 112
  %.185.i3361 = select i1 %.070307.i3353, ptr %12, ptr %14
  %.186.i3362 = select i1 %.070307.i3353, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i3359, align 8
  %1606 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i3359)
  %1607 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i3360
  %1608 = load ptr, ptr %1607, align 8
  store ptr @i32_typ, ptr %.185.i3361, align 8
  %result.i44.i3363 = call ptr %1608({ ptr, ptr, ptr, i32 } %111, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i3361) #45
  %1609 = call i32 %result.i44.i3363({ ptr, ptr, ptr, i32 } %111, { ptr, ptr, ptr, i32 } %111, ptr nonnull align 8 dereferenceable(8) %..i3359, i32 %1605) #42
  %1610 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1611 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i3362
  %1612 = load ptr, ptr %1611, align 8
  %1613 = load ptr, ptr %1612, align 8
  %1614 = call { ptr } %1613(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i3364 = extractvalue { ptr } %1614, 0
  %1615 = sext i32 %1609 to i64
  %1616 = shl nsw i64 %1615, 5
  %1617 = getelementptr i8, ptr %.fca.0.extract53.i3364, i64 %1616
  %1618 = load ptr, ptr %1617, align 8
  %1619 = getelementptr i8, ptr %1617, i64 8
  %1620 = load i64, ptr %1619, align 4
  %.sroa_idx.i3365 = getelementptr i8, ptr %1617, i64 16
  %1621 = load i64, ptr %.sroa_idx.i3365, align 4
  %1622 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1623 = call { ptr } %1613(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i3366 = extractvalue { ptr } %1623, 0
  %1624 = getelementptr i8, ptr %.fca.0.extract51.i3366, i64 %1616
  store ptr %.sroa.0.0306.i3354, ptr %1624, align 8
  %1625 = getelementptr i8, ptr %1624, i64 8
  store i64 %.sroa.6.0305.i3355.in, ptr %1625, align 4
  %.sroa_idx100.i3367 = getelementptr i8, ptr %1624, i64 16
  store i64 %.sroa.12.0304.i3356.in, ptr %.sroa_idx100.i3367, align 4
  %.sroa_idx101.i3368 = getelementptr i8, ptr %1624, i64 24
  store i32 %.sroa.17.0303.i3357, ptr %.sroa_idx101.i3368, align 4
  %1626 = icmp ne ptr %1618, @nil_typ
  %1627 = icmp ne ptr %1618, null
  %.not90.i3369 = and i1 %1626, %1627
  br i1 %.not90.i3369, label %.cont.i3374, label %1633

.cont.i3374:                                      ; preds = %1595
  %1628 = add nuw nsw i32 %.0308.i3352, 1
  %1629 = xor i1 %.070307.i3353, true
  %hash_coef_ptr.i.i60.i3377 = getelementptr i8, ptr %1618, i64 8
  %tbl_size_ptr.i.i61.i3378 = getelementptr i8, ptr %1618, i64 16
  %offset_tbl_ptr.i.i62.i3379 = getelementptr i8, ptr %1618, i64 40
  %hash_coef.i.i63.i3380 = load i64, ptr %hash_coef_ptr.i.i60.i3377, align 4
  %tbl_size.i.i64.i3381 = load i64, ptr %tbl_size_ptr.i.i61.i3378, align 4
  %offset_tbl.i.i65.i3382 = load ptr, ptr %offset_tbl_ptr.i.i62.i3379, align 8
  %product.i.i.i66.i3383 = mul i64 %hash_coef.i.i63.i3380, 4015701072841558310
  %shifted.i.i.i67.i3384 = lshr i64 %product.i.i.i66.i3383, 32
  %xored.i.i.i68.i3385 = xor i64 %shifted.i.i.i67.i3384, %product.i.i.i66.i3383
  %hash.i.i.i69.i3386 = and i64 %xored.i.i.i68.i3385, %tbl_size.i.i64.i3381
  %offset_ptr.i.i70.i3387 = getelementptr i32, ptr %offset_tbl.i.i65.i3382, i64 %hash.i.i.i69.i3386
  %offset.i.i71.i3388 = load i32, ptr %offset_ptr.i.i70.i3387, align 4
  %1630 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1631 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1632 = icmp ult i32 %.0308.i3352, 99
  br i1 %1632, label %1595, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3397

1633:                                             ; preds = %1595
  %1634 = load i32, ptr %103, align 4
  %1635 = add i32 %1634, 1
  %1636 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1635, ptr %103, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3397

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3397: ; preds = %.cont.i3374, %1633
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %11)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %12)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %13)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %14)
  br label %._crit_edge.i2501

._crit_edge.i2501:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3397, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2484
  %1637 = add nuw nsw i32 %.045.i2499, 1
  %1638 = icmp slt i32 %1637, %1518
  br i1 %1638, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2484, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2519

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2519: ; preds = %._crit_edge.i2501, %1514
  %1639 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %51)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %52)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %53)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %54)
  %hash_coef.i.i17.i1536 = load i64, ptr %hash_coef_ptr.i.i60.i1475, align 4, !noalias !23
  %tbl_size.i.i18.i1537 = load i64, ptr %tbl_size_ptr.i.i61.i1476, align 4, !noalias !23
  %offset_tbl.i.i19.i1538 = load ptr, ptr %offset_tbl_ptr.i.i62.i1477, align 8, !noalias !23
  %product.i.i.i20.i1539 = mul i64 %hash_coef.i.i17.i1536, 4015701072841558310
  %shifted.i.i.i21.i1540 = lshr i64 %product.i.i.i20.i1539, 32
  %xored.i.i.i22.i1541 = xor i64 %shifted.i.i.i21.i1540, %product.i.i.i20.i1539
  %hash.i.i.i23.i1542 = and i64 %xored.i.i.i22.i1541, %tbl_size.i.i18.i1537
  %offset_ptr.i.i24.i1543 = getelementptr i32, ptr %offset_tbl.i.i19.i1538, i64 %hash.i.i.i23.i1542
  %offset.i.i39.i1544 = load i32, ptr %offset_ptr.i.i24.i1543, align 4, !noalias !303
  %1640 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1641 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1642 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1643

1643:                                             ; preds = %.cont.i1568, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2519
  %.0308.i1546 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2519 ], [ %1676, %.cont.i1568 ]
  %.070307.i1547 = phi i1 [ true, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2519 ], [ %1677, %.cont.i1568 ]
  %.sroa.0.0306.i1548 = phi ptr [ %1494, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2519 ], [ %1666, %.cont.i1568 ]
  %.sroa.6.0305.i1549.in = phi i64 [ %1496, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2519 ], [ %1668, %.cont.i1568 ]
  %.sroa.12.0304.i1550.in = phi i64 [ %1497, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2519 ], [ %1669, %.cont.i1568 ]
  %.sroa.17.0303.i1551 = phi i32 [ %offset.i.i39.i1544, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2519 ], [ %offset.i.i71.i1582, %.cont.i1568 ]
  %.sroa.12.0304.i1550 = inttoptr i64 %.sroa.12.0304.i1550.in to ptr
  %.sroa.6.0305.i1549 = inttoptr i64 %.sroa.6.0305.i1549.in to ptr
  %1644 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1548, 0
  %1645 = insertvalue { ptr, ptr, ptr, i32 } %1644, ptr %.sroa.6.0305.i1549, 1
  %1646 = insertvalue { ptr, ptr, ptr, i32 } %1645, ptr %.sroa.12.0304.i1550, 2
  %1647 = insertvalue { ptr, ptr, ptr, i32 } %1646, i32 %.sroa.17.0303.i1551, 3
  %1648 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1548)
  %1649 = sext i32 %.sroa.17.0303.i1551 to i64
  %1650 = getelementptr ptr, ptr %.sroa.0.0306.i1548, i64 %1649
  %1651 = getelementptr i8, ptr %1650, i64 64
  %1652 = load ptr, ptr %1651, align 8
  %result.i43.i1552 = call ptr %1652({ ptr, ptr, ptr, i32 } %1647, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1653 = call i32 %result.i43.i1552({ ptr, ptr, ptr, i32 } %1647, { ptr, ptr, ptr, i32 } %1647, ptr nonnull align 8 %2) #42
  %..i1553 = select i1 %.070307.i1547, ptr %51, ptr %53
  %.184.i1554 = select i1 %.070307.i1547, i64 104, i64 112
  %.185.i1555 = select i1 %.070307.i1547, ptr %52, ptr %54
  %.186.i1556 = select i1 %.070307.i1547, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1553, align 8
  %1654 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1553)
  %1655 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1554
  %1656 = load ptr, ptr %1655, align 8
  store ptr @i32_typ, ptr %.185.i1555, align 8
  %result.i44.i1557 = call ptr %1656({ ptr, ptr, ptr, i32 } %106, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1555) #45
  %1657 = call i32 %result.i44.i1557({ ptr, ptr, ptr, i32 } %106, { ptr, ptr, ptr, i32 } %106, ptr nonnull align 8 dereferenceable(8) %..i1553, i32 %1653) #42
  %1658 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1659 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1556
  %1660 = load ptr, ptr %1659, align 8
  %1661 = load ptr, ptr %1660, align 8
  %1662 = call { ptr } %1661(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i1558 = extractvalue { ptr } %1662, 0
  %1663 = sext i32 %1657 to i64
  %1664 = shl nsw i64 %1663, 5
  %1665 = getelementptr i8, ptr %.fca.0.extract53.i1558, i64 %1664
  %1666 = load ptr, ptr %1665, align 8
  %1667 = getelementptr i8, ptr %1665, i64 8
  %1668 = load i64, ptr %1667, align 4
  %.sroa_idx.i1559 = getelementptr i8, ptr %1665, i64 16
  %1669 = load i64, ptr %.sroa_idx.i1559, align 4
  %1670 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1671 = call { ptr } %1661(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i1560 = extractvalue { ptr } %1671, 0
  %1672 = getelementptr i8, ptr %.fca.0.extract51.i1560, i64 %1664
  store ptr %.sroa.0.0306.i1548, ptr %1672, align 8
  %1673 = getelementptr i8, ptr %1672, i64 8
  store i64 %.sroa.6.0305.i1549.in, ptr %1673, align 4
  %.sroa_idx100.i1561 = getelementptr i8, ptr %1672, i64 16
  store i64 %.sroa.12.0304.i1550.in, ptr %.sroa_idx100.i1561, align 4
  %.sroa_idx101.i1562 = getelementptr i8, ptr %1672, i64 24
  store i32 %.sroa.17.0303.i1551, ptr %.sroa_idx101.i1562, align 4
  %1674 = icmp ne ptr %1666, @nil_typ
  %1675 = icmp ne ptr %1666, null
  %.not90.i1563 = and i1 %1674, %1675
  br i1 %.not90.i1563, label %.cont.i1568, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1591

.cont.i1568:                                      ; preds = %1643
  %1676 = add nuw nsw i32 %.0308.i1546, 1
  %1677 = xor i1 %.070307.i1547, true
  %hash_coef_ptr.i.i60.i1571 = getelementptr i8, ptr %1666, i64 8
  %tbl_size_ptr.i.i61.i1572 = getelementptr i8, ptr %1666, i64 16
  %offset_tbl_ptr.i.i62.i1573 = getelementptr i8, ptr %1666, i64 40
  %hash_coef.i.i63.i1574 = load i64, ptr %hash_coef_ptr.i.i60.i1571, align 4
  %tbl_size.i.i64.i1575 = load i64, ptr %tbl_size_ptr.i.i61.i1572, align 4
  %offset_tbl.i.i65.i1576 = load ptr, ptr %offset_tbl_ptr.i.i62.i1573, align 8
  %product.i.i.i66.i1577 = mul i64 %hash_coef.i.i63.i1574, 4015701072841558310
  %shifted.i.i.i67.i1578 = lshr i64 %product.i.i.i66.i1577, 32
  %xored.i.i.i68.i1579 = xor i64 %shifted.i.i.i67.i1578, %product.i.i.i66.i1577
  %hash.i.i.i69.i1580 = and i64 %xored.i.i.i68.i1579, %tbl_size.i.i64.i1575
  %offset_ptr.i.i70.i1581 = getelementptr i32, ptr %offset_tbl.i.i65.i1576, i64 %hash.i.i.i69.i1580
  %offset.i.i71.i1582 = load i32, ptr %offset_ptr.i.i70.i1581, align 4
  %1678 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1679 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1680 = icmp ult i32 %.0308.i1546, 99
  br i1 %1680, label %1643, label %1684

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1591: ; preds = %1643
  %1681 = load i32, ptr %103, align 4
  %1682 = add i32 %1681, 1
  %1683 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1682, ptr %103, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %51)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %52)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %53)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %54)
  br label %CuckooMap_insert_keyK_valueV.exit625

1684:                                             ; preds = %.cont.i1568
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %51)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %52)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %53)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %54)
  %1685 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1686 = load ptr, ptr %94, align 8
  %1687 = load ptr, ptr %95, align 8
  %1688 = load i32, ptr %93, align 8
  %1689 = shl i32 %1688, 1
  %spec.select.i1607 = call i32 @llvm.smax.i32(i32 %1689, i32 noundef 16) #37
  store i32 %spec.select.i1607, ptr %93, align 8
  %1690 = zext nneg i32 %spec.select.i1607 to i64
  %1691 = shl nuw nsw i64 %1690, 5
  %result.i.i1608 = call noalias ptr @bump_malloc_inner(i64 noundef %1691, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i1608, ptr %94, align 8
  %result.i1.i1609 = call noalias ptr @bump_malloc_inner(i64 noundef %1691, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i1609, ptr %95, align 8
  store i32 0, ptr %103, align 4
  %1692 = icmp sgt i32 %1688, 0
  br i1 %1692, label %.lr.ph.i2521, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2554.thread

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2554.thread: ; preds = %1684
  %1693 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %CuckooMap_insert_keyK_valueV.exit625

.lr.ph.i2521:                                     ; preds = %1684, %._crit_edge.i2536
  %.045.i2534 = phi i32 [ %1750, %._crit_edge.i2536 ], [ 0, %1684 ]
  %1694 = zext nneg i32 %.045.i2534 to i64
  %1695 = shl nuw nsw i64 %1694, 5
  %1696 = getelementptr i8, ptr %1686, i64 %1695
  %1697 = load ptr, ptr %1696, align 8
  %1698 = icmp ne ptr %1697, @nil_typ
  %1699 = icmp ne ptr %1697, null
  %.not16.i2535 = and i1 %1698, %1699
  br i1 %.not16.i2535, label %1700, label %._crit_edge.i2536

1700:                                             ; preds = %.lr.ph.i2521
  %1701 = getelementptr i8, ptr %1696, i64 8
  %1702 = load i64, ptr %1701, align 4
  %.sroa_idx.i2537 = getelementptr i8, ptr %1696, i64 16
  %1703 = load i64, ptr %.sroa_idx.i2537, align 4
  %hash_coef_ptr.i.i3.i2538 = getelementptr i8, ptr %1697, i64 8
  %tbl_size_ptr.i.i4.i2539 = getelementptr i8, ptr %1697, i64 16
  %offset_tbl_ptr.i.i5.i2540 = getelementptr i8, ptr %1697, i64 40
  %1704 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %7)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %8)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %9)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %10)
  %hash_coef.i.i17.i3415 = load i64, ptr %hash_coef_ptr.i.i3.i2538, align 4, !noalias !23
  %tbl_size.i.i18.i3416 = load i64, ptr %tbl_size_ptr.i.i4.i2539, align 4, !noalias !23
  %offset_tbl.i.i19.i3417 = load ptr, ptr %offset_tbl_ptr.i.i5.i2540, align 8, !noalias !23
  %product.i.i.i20.i3418 = mul i64 %hash_coef.i.i17.i3415, 4015701072841558310
  %shifted.i.i.i21.i3419 = lshr i64 %product.i.i.i20.i3418, 32
  %xored.i.i.i22.i3420 = xor i64 %shifted.i.i.i21.i3419, %product.i.i.i20.i3418
  %hash.i.i.i23.i3421 = and i64 %xored.i.i.i22.i3420, %tbl_size.i.i18.i3416
  %offset_ptr.i.i24.i3422 = getelementptr i32, ptr %offset_tbl.i.i19.i3417, i64 %hash.i.i.i23.i3421
  %offset.i.i39.i3423 = load i32, ptr %offset_ptr.i.i24.i3422, align 4, !noalias !306
  %1705 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1706 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1707 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1708

1708:                                             ; preds = %.cont.i3446, %1700
  %.0308.i3424 = phi i32 [ 0, %1700 ], [ %1741, %.cont.i3446 ]
  %.070307.i3425 = phi i1 [ true, %1700 ], [ %1742, %.cont.i3446 ]
  %.sroa.0.0306.i3426 = phi ptr [ %1697, %1700 ], [ %1731, %.cont.i3446 ]
  %.sroa.6.0305.i3427.in = phi i64 [ %1702, %1700 ], [ %1733, %.cont.i3446 ]
  %.sroa.12.0304.i3428.in = phi i64 [ %1703, %1700 ], [ %1734, %.cont.i3446 ]
  %.sroa.17.0303.i3429 = phi i32 [ %offset.i.i39.i3423, %1700 ], [ %offset.i.i71.i3460, %.cont.i3446 ]
  %.sroa.12.0304.i3428 = inttoptr i64 %.sroa.12.0304.i3428.in to ptr
  %.sroa.6.0305.i3427 = inttoptr i64 %.sroa.6.0305.i3427.in to ptr
  %1709 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i3426, 0
  %1710 = insertvalue { ptr, ptr, ptr, i32 } %1709, ptr %.sroa.6.0305.i3427, 1
  %1711 = insertvalue { ptr, ptr, ptr, i32 } %1710, ptr %.sroa.12.0304.i3428, 2
  %1712 = insertvalue { ptr, ptr, ptr, i32 } %1711, i32 %.sroa.17.0303.i3429, 3
  %1713 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i3426)
  %1714 = sext i32 %.sroa.17.0303.i3429 to i64
  %1715 = getelementptr ptr, ptr %.sroa.0.0306.i3426, i64 %1714
  %1716 = getelementptr i8, ptr %1715, i64 64
  %1717 = load ptr, ptr %1716, align 8
  %result.i43.i3430 = call ptr %1717({ ptr, ptr, ptr, i32 } %1712, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1718 = call i32 %result.i43.i3430({ ptr, ptr, ptr, i32 } %1712, { ptr, ptr, ptr, i32 } %1712, ptr nonnull align 8 %2) #42
  %..i3431 = select i1 %.070307.i3425, ptr %7, ptr %9
  %.184.i3432 = select i1 %.070307.i3425, i64 104, i64 112
  %.185.i3433 = select i1 %.070307.i3425, ptr %8, ptr %10
  %.186.i3434 = select i1 %.070307.i3425, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i3431, align 8
  %1719 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i3431)
  %1720 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i3432
  %1721 = load ptr, ptr %1720, align 8
  store ptr @i32_typ, ptr %.185.i3433, align 8
  %result.i44.i3435 = call ptr %1721({ ptr, ptr, ptr, i32 } %111, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i3433) #45
  %1722 = call i32 %result.i44.i3435({ ptr, ptr, ptr, i32 } %111, { ptr, ptr, ptr, i32 } %111, ptr nonnull align 8 dereferenceable(8) %..i3431, i32 %1718) #42
  %1723 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1724 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i3434
  %1725 = load ptr, ptr %1724, align 8
  %1726 = load ptr, ptr %1725, align 8
  %1727 = call { ptr } %1726(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i3436 = extractvalue { ptr } %1727, 0
  %1728 = sext i32 %1722 to i64
  %1729 = shl nsw i64 %1728, 5
  %1730 = getelementptr i8, ptr %.fca.0.extract53.i3436, i64 %1729
  %1731 = load ptr, ptr %1730, align 8
  %1732 = getelementptr i8, ptr %1730, i64 8
  %1733 = load i64, ptr %1732, align 4
  %.sroa_idx.i3437 = getelementptr i8, ptr %1730, i64 16
  %1734 = load i64, ptr %.sroa_idx.i3437, align 4
  %1735 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1736 = call { ptr } %1726(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i3438 = extractvalue { ptr } %1736, 0
  %1737 = getelementptr i8, ptr %.fca.0.extract51.i3438, i64 %1729
  store ptr %.sroa.0.0306.i3426, ptr %1737, align 8
  %1738 = getelementptr i8, ptr %1737, i64 8
  store i64 %.sroa.6.0305.i3427.in, ptr %1738, align 4
  %.sroa_idx100.i3439 = getelementptr i8, ptr %1737, i64 16
  store i64 %.sroa.12.0304.i3428.in, ptr %.sroa_idx100.i3439, align 4
  %.sroa_idx101.i3440 = getelementptr i8, ptr %1737, i64 24
  store i32 %.sroa.17.0303.i3429, ptr %.sroa_idx101.i3440, align 4
  %1739 = icmp ne ptr %1731, @nil_typ
  %1740 = icmp ne ptr %1731, null
  %.not90.i3441 = and i1 %1739, %1740
  br i1 %.not90.i3441, label %.cont.i3446, label %1746

.cont.i3446:                                      ; preds = %1708
  %1741 = add nuw nsw i32 %.0308.i3424, 1
  %1742 = xor i1 %.070307.i3425, true
  %hash_coef_ptr.i.i60.i3449 = getelementptr i8, ptr %1731, i64 8
  %tbl_size_ptr.i.i61.i3450 = getelementptr i8, ptr %1731, i64 16
  %offset_tbl_ptr.i.i62.i3451 = getelementptr i8, ptr %1731, i64 40
  %hash_coef.i.i63.i3452 = load i64, ptr %hash_coef_ptr.i.i60.i3449, align 4
  %tbl_size.i.i64.i3453 = load i64, ptr %tbl_size_ptr.i.i61.i3450, align 4
  %offset_tbl.i.i65.i3454 = load ptr, ptr %offset_tbl_ptr.i.i62.i3451, align 8
  %product.i.i.i66.i3455 = mul i64 %hash_coef.i.i63.i3452, 4015701072841558310
  %shifted.i.i.i67.i3456 = lshr i64 %product.i.i.i66.i3455, 32
  %xored.i.i.i68.i3457 = xor i64 %shifted.i.i.i67.i3456, %product.i.i.i66.i3455
  %hash.i.i.i69.i3458 = and i64 %xored.i.i.i68.i3457, %tbl_size.i.i64.i3453
  %offset_ptr.i.i70.i3459 = getelementptr i32, ptr %offset_tbl.i.i65.i3454, i64 %hash.i.i.i69.i3458
  %offset.i.i71.i3460 = load i32, ptr %offset_ptr.i.i70.i3459, align 4
  %1743 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1744 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1745 = icmp ult i32 %.0308.i3424, 99
  br i1 %1745, label %1708, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3469

1746:                                             ; preds = %1708
  %1747 = load i32, ptr %103, align 4
  %1748 = add i32 %1747, 1
  %1749 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1748, ptr %103, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3469

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3469: ; preds = %.cont.i3446, %1746
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %8)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %9)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %10)
  br label %._crit_edge.i2536

._crit_edge.i2536:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3469, %.lr.ph.i2521
  %1750 = add nuw nsw i32 %.045.i2534, 1
  %1751 = icmp slt i32 %1750, %1688
  br i1 %1751, label %.lr.ph.i2521, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2554

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2554: ; preds = %._crit_edge.i2536
  %1752 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %1753

1753:                                             ; preds = %._crit_edge.i2571, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2554
  %.045.i2569 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2554 ], [ %1810, %._crit_edge.i2571 ]
  %1754 = zext nneg i32 %.045.i2569 to i64
  %1755 = shl nuw nsw i64 %1754, 5
  %1756 = getelementptr i8, ptr %1687, i64 %1755
  %1757 = load ptr, ptr %1756, align 8
  %1758 = icmp ne ptr %1757, @nil_typ
  %1759 = icmp ne ptr %1757, null
  %.not16.i2570 = and i1 %1758, %1759
  br i1 %.not16.i2570, label %1760, label %._crit_edge.i2571

1760:                                             ; preds = %1753
  %1761 = getelementptr i8, ptr %1756, i64 8
  %1762 = load i64, ptr %1761, align 4
  %.sroa_idx.i2572 = getelementptr i8, ptr %1756, i64 16
  %1763 = load i64, ptr %.sroa_idx.i2572, align 4
  %hash_coef_ptr.i.i3.i2573 = getelementptr i8, ptr %1757, i64 8
  %tbl_size_ptr.i.i4.i2574 = getelementptr i8, ptr %1757, i64 16
  %offset_tbl_ptr.i.i5.i2575 = getelementptr i8, ptr %1757, i64 40
  %1764 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %3)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %4)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %5)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %6)
  %hash_coef.i.i17.i3487 = load i64, ptr %hash_coef_ptr.i.i3.i2573, align 4, !noalias !23
  %tbl_size.i.i18.i3488 = load i64, ptr %tbl_size_ptr.i.i4.i2574, align 4, !noalias !23
  %offset_tbl.i.i19.i3489 = load ptr, ptr %offset_tbl_ptr.i.i5.i2575, align 8, !noalias !23
  %product.i.i.i20.i3490 = mul i64 %hash_coef.i.i17.i3487, 4015701072841558310
  %shifted.i.i.i21.i3491 = lshr i64 %product.i.i.i20.i3490, 32
  %xored.i.i.i22.i3492 = xor i64 %shifted.i.i.i21.i3491, %product.i.i.i20.i3490
  %hash.i.i.i23.i3493 = and i64 %xored.i.i.i22.i3492, %tbl_size.i.i18.i3488
  %offset_ptr.i.i24.i3494 = getelementptr i32, ptr %offset_tbl.i.i19.i3489, i64 %hash.i.i.i23.i3493
  %offset.i.i39.i3495 = load i32, ptr %offset_ptr.i.i24.i3494, align 4, !noalias !309
  %1765 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1766 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1767 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1768

1768:                                             ; preds = %.cont.i3518, %1760
  %.0308.i3496 = phi i32 [ 0, %1760 ], [ %1801, %.cont.i3518 ]
  %.070307.i3497 = phi i1 [ true, %1760 ], [ %1802, %.cont.i3518 ]
  %.sroa.0.0306.i3498 = phi ptr [ %1757, %1760 ], [ %1791, %.cont.i3518 ]
  %.sroa.6.0305.i3499.in = phi i64 [ %1762, %1760 ], [ %1793, %.cont.i3518 ]
  %.sroa.12.0304.i3500.in = phi i64 [ %1763, %1760 ], [ %1794, %.cont.i3518 ]
  %.sroa.17.0303.i3501 = phi i32 [ %offset.i.i39.i3495, %1760 ], [ %offset.i.i71.i3532, %.cont.i3518 ]
  %.sroa.12.0304.i3500 = inttoptr i64 %.sroa.12.0304.i3500.in to ptr
  %.sroa.6.0305.i3499 = inttoptr i64 %.sroa.6.0305.i3499.in to ptr
  %1769 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i3498, 0
  %1770 = insertvalue { ptr, ptr, ptr, i32 } %1769, ptr %.sroa.6.0305.i3499, 1
  %1771 = insertvalue { ptr, ptr, ptr, i32 } %1770, ptr %.sroa.12.0304.i3500, 2
  %1772 = insertvalue { ptr, ptr, ptr, i32 } %1771, i32 %.sroa.17.0303.i3501, 3
  %1773 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i3498)
  %1774 = sext i32 %.sroa.17.0303.i3501 to i64
  %1775 = getelementptr ptr, ptr %.sroa.0.0306.i3498, i64 %1774
  %1776 = getelementptr i8, ptr %1775, i64 64
  %1777 = load ptr, ptr %1776, align 8
  %result.i43.i3502 = call ptr %1777({ ptr, ptr, ptr, i32 } %1772, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1778 = call i32 %result.i43.i3502({ ptr, ptr, ptr, i32 } %1772, { ptr, ptr, ptr, i32 } %1772, ptr nonnull align 8 %2) #42
  %..i3503 = select i1 %.070307.i3497, ptr %3, ptr %5
  %.184.i3504 = select i1 %.070307.i3497, i64 104, i64 112
  %.185.i3505 = select i1 %.070307.i3497, ptr %4, ptr %6
  %.186.i3506 = select i1 %.070307.i3497, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i3503, align 8
  %1779 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i3503)
  %1780 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i3504
  %1781 = load ptr, ptr %1780, align 8
  store ptr @i32_typ, ptr %.185.i3505, align 8
  %result.i44.i3507 = call ptr %1781({ ptr, ptr, ptr, i32 } %111, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i3505) #45
  %1782 = call i32 %result.i44.i3507({ ptr, ptr, ptr, i32 } %111, { ptr, ptr, ptr, i32 } %111, ptr nonnull align 8 dereferenceable(8) %..i3503, i32 %1778) #42
  %1783 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1784 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i3506
  %1785 = load ptr, ptr %1784, align 8
  %1786 = load ptr, ptr %1785, align 8
  %1787 = call { ptr } %1786(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i3508 = extractvalue { ptr } %1787, 0
  %1788 = sext i32 %1782 to i64
  %1789 = shl nsw i64 %1788, 5
  %1790 = getelementptr i8, ptr %.fca.0.extract53.i3508, i64 %1789
  %1791 = load ptr, ptr %1790, align 8
  %1792 = getelementptr i8, ptr %1790, i64 8
  %1793 = load i64, ptr %1792, align 4
  %.sroa_idx.i3509 = getelementptr i8, ptr %1790, i64 16
  %1794 = load i64, ptr %.sroa_idx.i3509, align 4
  %1795 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1796 = call { ptr } %1786(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i3510 = extractvalue { ptr } %1796, 0
  %1797 = getelementptr i8, ptr %.fca.0.extract51.i3510, i64 %1789
  store ptr %.sroa.0.0306.i3498, ptr %1797, align 8
  %1798 = getelementptr i8, ptr %1797, i64 8
  store i64 %.sroa.6.0305.i3499.in, ptr %1798, align 4
  %.sroa_idx100.i3511 = getelementptr i8, ptr %1797, i64 16
  store i64 %.sroa.12.0304.i3500.in, ptr %.sroa_idx100.i3511, align 4
  %.sroa_idx101.i3512 = getelementptr i8, ptr %1797, i64 24
  store i32 %.sroa.17.0303.i3501, ptr %.sroa_idx101.i3512, align 4
  %1799 = icmp ne ptr %1791, @nil_typ
  %1800 = icmp ne ptr %1791, null
  %.not90.i3513 = and i1 %1799, %1800
  br i1 %.not90.i3513, label %.cont.i3518, label %1806

.cont.i3518:                                      ; preds = %1768
  %1801 = add nuw nsw i32 %.0308.i3496, 1
  %1802 = xor i1 %.070307.i3497, true
  %hash_coef_ptr.i.i60.i3521 = getelementptr i8, ptr %1791, i64 8
  %tbl_size_ptr.i.i61.i3522 = getelementptr i8, ptr %1791, i64 16
  %offset_tbl_ptr.i.i62.i3523 = getelementptr i8, ptr %1791, i64 40
  %hash_coef.i.i63.i3524 = load i64, ptr %hash_coef_ptr.i.i60.i3521, align 4
  %tbl_size.i.i64.i3525 = load i64, ptr %tbl_size_ptr.i.i61.i3522, align 4
  %offset_tbl.i.i65.i3526 = load ptr, ptr %offset_tbl_ptr.i.i62.i3523, align 8
  %product.i.i.i66.i3527 = mul i64 %hash_coef.i.i63.i3524, 4015701072841558310
  %shifted.i.i.i67.i3528 = lshr i64 %product.i.i.i66.i3527, 32
  %xored.i.i.i68.i3529 = xor i64 %shifted.i.i.i67.i3528, %product.i.i.i66.i3527
  %hash.i.i.i69.i3530 = and i64 %xored.i.i.i68.i3529, %tbl_size.i.i64.i3525
  %offset_ptr.i.i70.i3531 = getelementptr i32, ptr %offset_tbl.i.i65.i3526, i64 %hash.i.i.i69.i3530
  %offset.i.i71.i3532 = load i32, ptr %offset_ptr.i.i70.i3531, align 4
  %1803 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1804 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1805 = icmp ult i32 %.0308.i3496, 99
  br i1 %1805, label %1768, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3541

1806:                                             ; preds = %1768
  %1807 = load i32, ptr %103, align 4
  %1808 = add i32 %1807, 1
  %1809 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1808, ptr %103, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3541

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3541: ; preds = %.cont.i3518, %1806
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %6)
  br label %._crit_edge.i2571

._crit_edge.i2571:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3541, %1753
  %1810 = add nuw nsw i32 %.045.i2569, 1
  %1811 = icmp slt i32 %1810, %1688
  br i1 %1811, label %1753, label %CuckooMap_insert_keyK_valueV.exit625

CuckooMap_insert_keyK_valueV.exit625:             ; preds = %._crit_edge.i2571, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2554.thread, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1591, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1495, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1399, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1340
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1812 = add nsw i32 %.0361310, 1
  br label %._crit_edge1

._crit_edge1:                                     ; preds = %CuckooMap_get_keyK.exit, %CuckooMap_insert_keyK_valueV.exit625
  %.1362 = phi i32 [ %1812, %CuckooMap_insert_keyK_valueV.exit625 ], [ %.0361310, %CuckooMap_get_keyK.exit ]
  %1813 = add nuw nsw i32 %.0358311, 1
  %1814 = icmp slt i32 %.1362, %0
  %1815 = icmp slt i32 %1813, %97
  %spec.select = select i1 %1814, i1 %1815, i1 false
  br i1 %spec.select, label %113, label %._crit_edge3._crit_edge

._crit_edge3._crit_edge:                          ; preds = %._crit_edge1, %1
  %1816 = sext i32 %0 to i64
  %1817 = shl nsw i64 %1816, 2
  %result.i2.i = call noalias ptr @bump_malloc_inner(i64 noundef %1817, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %1818 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 16 dereferenceable(744) @Array) #37
  %1819 = mul i32 %0, 20
  %1820 = icmp sgt i32 %1819, 0
  %spec.select384312 = and i1 %98, %1820
  br i1 %spec.select384312, label %.lr.ph315, label %._crit_edge7._crit_edge

.lr.ph315:                                        ; preds = %._crit_edge3._crit_edge
  %1821 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1822 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1823 = call ptr @llvm.invariant.start.p0(i64 noundef 40, ptr nocapture nofree noundef nonnull align 16 dereferenceable(120) @PRNG) #37
  br label %1824

1824:                                             ; preds = %.lr.ph315, %._crit_edge5
  %1825 = phi i32 [ 987, %.lr.ph315 ], [ %1828, %._crit_edge5 ]
  %.0357314 = phi i32 [ 0, %.lr.ph315 ], [ %.1, %._crit_edge5 ]
  %.2360313 = phi i32 [ 0, %.lr.ph315 ], [ %1952, %._crit_edge5 ]
  %1826 = mul i32 %1825, 1103515245
  %1827 = add i32 %1826, 12345
  %1828 = and i32 %1827, 2147483647
  %.sroa.0285.0.insert.ext = zext nneg i32 %1828 to i160
  %1829 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0285.0.insert.ext, 1
  %1830 = load ptr, ptr %91, align 8
  %1831 = call i32 %1830({ ptr, i160 } %1829) #42
  %1832 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %1833 = load i32, ptr %93, align 8
  %1834 = add i32 %1833, -1
  %1835 = and i32 %1834, %1831
  %1836 = load ptr, ptr %94, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1837 = sext i32 %1835 to i64
  %1838 = shl nsw i64 %1837, 5
  %1839 = getelementptr i8, ptr %1836, i64 %1838
  %1840 = load ptr, ptr %1839, align 8
  %1841 = icmp ne ptr %1840, @nil_typ
  %1842 = icmp ne ptr %1840, null
  %.not44.i1655 = and i1 %1841, %1842
  br i1 %.not44.i1655, label %1843, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1680.thread

1843:                                             ; preds = %1824
  %1844 = getelementptr i8, ptr %1839, i64 8
  %1845 = load i64, ptr %1844, align 4
  %.sroa_idx.i1660 = getelementptr i8, ptr %1839, i64 16
  %1846 = load i64, ptr %.sroa_idx.i1660, align 4
  %1847 = inttoptr i64 %1845 to ptr
  %1848 = inttoptr i64 %1846 to ptr
  %hash_coef_ptr.i.i2.i1661 = getelementptr i8, ptr %1840, i64 8
  %tbl_size_ptr.i.i3.i1662 = getelementptr i8, ptr %1840, i64 16
  %offset_tbl_ptr.i.i4.i1663 = getelementptr i8, ptr %1840, i64 40
  %hash_coef.i.i5.i1664 = load i64, ptr %hash_coef_ptr.i.i2.i1661, align 4, !noalias !312
  %tbl_size.i.i6.i1665 = load i64, ptr %tbl_size_ptr.i.i3.i1662, align 4, !noalias !312
  %offset_tbl.i.i7.i1666 = load ptr, ptr %offset_tbl_ptr.i.i4.i1663, align 8, !noalias !312
  %product.i.i.i8.i1667 = mul i64 %hash_coef.i.i5.i1664, 4015701072841558310
  %shifted.i.i.i9.i1668 = lshr i64 %product.i.i.i8.i1667, 32
  %xored.i.i.i10.i1669 = xor i64 %shifted.i.i.i9.i1668, %product.i.i.i8.i1667
  %hash.i.i.i11.i1670 = and i64 %xored.i.i.i10.i1669, %tbl_size.i.i6.i1665
  %offset_ptr.i.i12.i1671 = getelementptr i32, ptr %offset_tbl.i.i7.i1666, i64 %hash.i.i.i11.i1670
  %offset.i.i13.i1672 = load i32, ptr %offset_ptr.i.i12.i1671, align 4, !noalias !312
  %1849 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1840, 0
  %1850 = insertvalue { ptr, ptr, ptr, i32 } %1849, ptr %1847, 1
  %1851 = insertvalue { ptr, ptr, ptr, i32 } %1850, ptr %1848, 2
  %1852 = insertvalue { ptr, ptr, ptr, i32 } %1851, i32 %offset.i.i13.i1672, 3
  %1853 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1854 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1840) #37
  %1855 = sext i32 %offset.i.i13.i1672 to i64
  %1856 = getelementptr ptr, ptr %1840, i64 %1855
  %1857 = getelementptr i8, ptr %1856, i64 64
  %1858 = load ptr, ptr %1857, align 8
  %result.i.i1673 = call ptr %1858({ ptr, ptr, ptr, i32 } %1852, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1859 = call i32 %result.i.i1673({ ptr, ptr, ptr, i32 } %1852, { ptr, ptr, ptr, i32 } %1852, ptr nonnull align 8 %2) #42
  %1860 = icmp eq i32 %1859, %1831
  br i1 %1860, label %._crit_edge.i1674, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1680.thread

._crit_edge.i1674:                                ; preds = %1843
  %1861 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1862 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1840)
  %1863 = getelementptr i8, ptr %1856, i64 48
  %1864 = load ptr, ptr %1863, align 8
  %result.i15.i1675 = call ptr %1864({ ptr, ptr, ptr, i32 } %1852, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1865 = call { ptr, i160 } %result.i15.i1675({ ptr, ptr, ptr, i32 } %1852, { ptr, ptr, ptr, i32 } %1852, ptr nonnull align 8 %2) #42
  %1866 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1867 = load ptr, ptr %92, align 8
  %1868 = call i1 %1867({ ptr, i160 } %1865, { ptr, i160 } %1829) #42
  br i1 %1868, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1680, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1680.thread

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1680.thread: ; preds = %._crit_edge.i1674, %1824, %1843
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1877

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1680: ; preds = %._crit_edge.i1674
  %1869 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1870 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1840)
  %1871 = getelementptr i8, ptr %1856, i64 56
  %1872 = load ptr, ptr %1871, align 8
  %result.i16.i1677 = call ptr %1872({ ptr, ptr, ptr, i32 } %1852, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1873 = call { ptr, i160 } %result.i16.i1677({ ptr, ptr, ptr, i32 } %1852, { ptr, ptr, ptr, i32 } %1852, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i1678 = extractvalue { ptr, i160 } %1873, 0
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1874 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1875 = icmp ne ptr %.fca.0.extract21.i1678, @nil_typ
  %1876 = icmp ne ptr %.fca.0.extract21.i1678, null
  %.not63.i661 = and i1 %1875, %1876
  br i1 %.not63.i661, label %CuckooMap_get_keyK.exit673, label %1877

1877:                                             ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1680.thread, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1680
  %1878 = add i32 %1831, 2127912214
  %1879 = shl i32 %1831, 12
  %1880 = add i32 %1878, %1879
  %1881 = ashr i32 %1880, 19
  %1882 = xor i32 %1880, %1881
  %1883 = xor i32 %1882, -949894596
  %1884 = add i32 %1883, 374761393
  %1885 = shl i32 %1883, 5
  %1886 = add i32 %1884, %1885
  %1887 = add i32 %1886, -744332180
  %1888 = shl i32 %1886, 9
  %1889 = xor i32 %1887, %1888
  %1890 = add i32 %1889, -42973499
  %1891 = shl i32 %1889, 3
  %1892 = add i32 %1890, %1891
  %1893 = ashr i32 %1892, 16
  %1894 = xor i32 %1892, %1893
  %1895 = xor i32 %1894, -1252372727
  %1896 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1897 = load i32, ptr %93, align 8
  %1898 = add i32 %1897, -1
  %1899 = and i32 %1898, %1895
  %1900 = load ptr, ptr %95, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1901 = sext i32 %1899 to i64
  %1902 = shl nsw i64 %1901, 5
  %1903 = getelementptr i8, ptr %1900, i64 %1902
  %1904 = load ptr, ptr %1903, align 8
  %1905 = icmp ne ptr %1904, @nil_typ
  %1906 = icmp ne ptr %1904, null
  %.not44.i1710 = and i1 %1905, %1906
  br i1 %.not44.i1710, label %1907, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1735

1907:                                             ; preds = %1877
  %1908 = getelementptr i8, ptr %1903, i64 8
  %1909 = load i64, ptr %1908, align 4
  %.sroa_idx.i1715 = getelementptr i8, ptr %1903, i64 16
  %1910 = load i64, ptr %.sroa_idx.i1715, align 4
  %1911 = inttoptr i64 %1909 to ptr
  %1912 = inttoptr i64 %1910 to ptr
  %hash_coef_ptr.i.i2.i1716 = getelementptr i8, ptr %1904, i64 8
  %tbl_size_ptr.i.i3.i1717 = getelementptr i8, ptr %1904, i64 16
  %offset_tbl_ptr.i.i4.i1718 = getelementptr i8, ptr %1904, i64 40
  %hash_coef.i.i5.i1719 = load i64, ptr %hash_coef_ptr.i.i2.i1716, align 4, !noalias !315
  %tbl_size.i.i6.i1720 = load i64, ptr %tbl_size_ptr.i.i3.i1717, align 4, !noalias !315
  %offset_tbl.i.i7.i1721 = load ptr, ptr %offset_tbl_ptr.i.i4.i1718, align 8, !noalias !315
  %product.i.i.i8.i1722 = mul i64 %hash_coef.i.i5.i1719, 4015701072841558310
  %shifted.i.i.i9.i1723 = lshr i64 %product.i.i.i8.i1722, 32
  %xored.i.i.i10.i1724 = xor i64 %shifted.i.i.i9.i1723, %product.i.i.i8.i1722
  %hash.i.i.i11.i1725 = and i64 %xored.i.i.i10.i1724, %tbl_size.i.i6.i1720
  %offset_ptr.i.i12.i1726 = getelementptr i32, ptr %offset_tbl.i.i7.i1721, i64 %hash.i.i.i11.i1725
  %offset.i.i13.i1727 = load i32, ptr %offset_ptr.i.i12.i1726, align 4, !noalias !315
  %1913 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1904, 0
  %1914 = insertvalue { ptr, ptr, ptr, i32 } %1913, ptr %1911, 1
  %1915 = insertvalue { ptr, ptr, ptr, i32 } %1914, ptr %1912, 2
  %1916 = insertvalue { ptr, ptr, ptr, i32 } %1915, i32 %offset.i.i13.i1727, 3
  %1917 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1918 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1904) #37
  %1919 = sext i32 %offset.i.i13.i1727 to i64
  %1920 = getelementptr ptr, ptr %1904, i64 %1919
  %1921 = getelementptr i8, ptr %1920, i64 64
  %1922 = load ptr, ptr %1921, align 8
  %result.i.i1728 = call ptr %1922({ ptr, ptr, ptr, i32 } %1916, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1923 = call i32 %result.i.i1728({ ptr, ptr, ptr, i32 } %1916, { ptr, ptr, ptr, i32 } %1916, ptr nonnull align 8 %2) #42
  %1924 = icmp eq i32 %1923, %1831
  br i1 %1924, label %._crit_edge.i1729, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1735

._crit_edge.i1729:                                ; preds = %1907
  %1925 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1926 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1904)
  %1927 = getelementptr i8, ptr %1920, i64 48
  %1928 = load ptr, ptr %1927, align 8
  %result.i15.i1730 = call ptr %1928({ ptr, ptr, ptr, i32 } %1916, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1929 = call { ptr, i160 } %result.i15.i1730({ ptr, ptr, ptr, i32 } %1916, { ptr, ptr, ptr, i32 } %1916, ptr nonnull align 8 %2) #42
  %1930 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1931 = load ptr, ptr %92, align 8
  %1932 = call i1 %1931({ ptr, i160 } %1929, { ptr, i160 } %1829) #42
  br i1 %1932, label %1933, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1735

1933:                                             ; preds = %._crit_edge.i1729
  %1934 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1935 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1904)
  %1936 = getelementptr i8, ptr %1920, i64 56
  %1937 = load ptr, ptr %1936, align 8
  %result.i16.i1732 = call ptr %1937({ ptr, ptr, ptr, i32 } %1916, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1938 = call { ptr, i160 } %result.i16.i1732({ ptr, ptr, ptr, i32 } %1916, { ptr, ptr, ptr, i32 } %1916, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i1733 = extractvalue { ptr, i160 } %1938, 0
  br label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1735

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1735: ; preds = %1877, %1907, %._crit_edge.i1729, %1933
  %.reg2mem41.0.i1712 = phi ptr [ %.fca.0.extract21.i1733, %1933 ], [ @nil_typ, %._crit_edge.i1729 ], [ @nil_typ, %1877 ], [ @nil_typ, %1907 ]
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1939 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1940 = icmp ne ptr %.reg2mem41.0.i1712, @nil_typ
  %1941 = icmp ne ptr %.reg2mem41.0.i1712, null
  %.not65.not.not.i667 = and i1 %1940, %1941
  %cond.fr27.i668 = freeze i1 %.not65.not.not.i667
  %spec.select.i669 = select i1 %cond.fr27.i668, ptr %.reg2mem41.0.i1712, ptr @nil_typ
  br label %CuckooMap_get_keyK.exit673

CuckooMap_get_keyK.exit673:                       ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1680, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1735
  %1942 = phi ptr [ %spec.select.i669, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1735 ], [ %.fca.0.extract21.i1678, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1680 ]
  %1943 = icmp eq ptr %1942, @nil_typ
  %1944 = icmp eq ptr %1942, null
  %1945 = or i1 %1943, %1944
  br i1 %1945, label %1946, label %._crit_edge5

1946:                                             ; preds = %CuckooMap_get_keyK.exit673
  %1947 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 16 dereferenceable(744) @Array) #50
  %1948 = sext i32 %.0357314 to i64
  %1949 = shl nsw i64 %1948, 2
  %1950 = getelementptr i8, ptr %result.i2.i, i64 %1949
  store i32 %1828, ptr %1950, align 1
  %1951 = add nsw i32 %.0357314, 1
  br label %._crit_edge5

._crit_edge5:                                     ; preds = %CuckooMap_get_keyK.exit673, %1946
  %.1 = phi i32 [ %1951, %1946 ], [ %.0357314, %CuckooMap_get_keyK.exit673 ]
  %1952 = add nuw nsw i32 %.2360313, 1
  %1953 = icmp slt i32 %.1, %0
  %1954 = icmp slt i32 %1952, %1819
  %spec.select384 = select i1 %1953, i1 %1954, i1 false
  br i1 %spec.select384, label %1824, label %._crit_edge7._crit_edge

._crit_edge7._crit_edge:                          ; preds = %._crit_edge5, %._crit_edge3._crit_edge
  %.0357.lcssa = phi i32 [ 0, %._crit_edge3._crit_edge ], [ %.1, %._crit_edge5 ]
  %1955 = icmp slt i32 %.0357.lcssa, %0
  br i1 %1955, label %._crit_edge.lr.ph.i, label %._crit_edge8

._crit_edge.lr.ph.i:                              ; preds = %._crit_edge7._crit_edge
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1956 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1957 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <29 x i8> <i8 87, i8 97, i8 114, i8 110, i8 105, i8 110, i8 103, i8 58, i8 32, i8 67, i8 111, i8 117, i8 108, i8 100, i8 32, i8 111, i8 110, i8 108, i8 121, i8 32, i8 103, i8 101, i8 110, i8 101, i8 114, i8 97, i8 116, i8 101, i8 32>, ptr %result.i.i1749.h2s3799, align 32
  %1958 = getelementptr inbounds i8, ptr %result.i.i1749.h2s3799, i64 29
  store i8 0, ptr %1958, align 1
  %puts.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(30) %result.i.i1749.h2s3799) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1959 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %.0357.lcssa) #42
  %1960 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1961 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1962 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <22 x i8> <i8 32, i8 103, i8 117, i8 97, i8 114, i8 97, i8 110, i8 116, i8 101, i8 101, i8 100, i8 32, i8 109, i8 105, i8 115, i8 115, i8 32, i8 107, i8 101, i8 121, i8 115, i8 46>, ptr %result.i.i1764.h2s3797, align 32
  %1963 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %1964 = getelementptr inbounds i8, ptr %result.i.i1764.h2s3797, i64 22
  store i8 0, ptr %1964, align 2
  %puts.i724 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(23) %result.i.i1764.h2s3797) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %._crit_edge8

._crit_edge8:                                     ; preds = %._crit_edge.lr.ph.i, %._crit_edge7._crit_edge
  %.0380 = phi i32 [ %.0357.lcssa, %._crit_edge.lr.ph.i ], [ %0, %._crit_edge7._crit_edge ]
  %1965 = call i64 @clock()
  %1966 = icmp sgt i32 %.0380, 0
  br i1 %1966, label %._crit_edge9.preheader, label %2097

._crit_edge9.preheader:                           ; preds = %._crit_edge8
  %1967 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 16 dereferenceable(744) @Array) #50
  br label %._crit_edge9

._crit_edge9:                                     ; preds = %._crit_edge9.preheader, %CuckooMap_get_keyK.exit774
  %.0365318 = phi i32 [ %.2367, %CuckooMap_get_keyK.exit774 ], [ 0, %._crit_edge9.preheader ]
  %.0368317 = phi i32 [ %.2370, %CuckooMap_get_keyK.exit774 ], [ 0, %._crit_edge9.preheader ]
  %.0371316 = phi i32 [ %2090, %CuckooMap_get_keyK.exit774 ], [ 0, %._crit_edge9.preheader ]
  %1968 = zext nneg i32 %.0371316 to i64
  %1969 = shl nuw nsw i64 %1968, 2
  %1970 = getelementptr i8, ptr %result.i2.i, i64 %1969
  %1971 = load i32, ptr %1970, align 1
  %.sroa.2.sroa.0.0.insert.ext.i = zext i32 %1971 to i160
  %1972 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.2.sroa.0.0.insert.ext.i, 1
  %1973 = load ptr, ptr %80, align 8
  %1974 = call i32 %1973({ ptr, i160 } %1972) #42
  %1975 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %1976 = load i32, ptr %82, align 8
  %1977 = add i32 %1976, -1
  %1978 = and i32 %1977, %1974
  %1979 = load ptr, ptr %83, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1980 = sext i32 %1978 to i64
  %1981 = shl nsw i64 %1980, 5
  %1982 = getelementptr i8, ptr %1979, i64 %1981
  %1983 = load ptr, ptr %1982, align 8
  %1984 = icmp ne ptr %1983, @nil_typ
  %1985 = icmp ne ptr %1983, null
  %.not44.i1811 = and i1 %1984, %1985
  br i1 %.not44.i1811, label %1986, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1836.thread

1986:                                             ; preds = %._crit_edge9
  %1987 = getelementptr i8, ptr %1982, i64 8
  %1988 = load i64, ptr %1987, align 4
  %.sroa_idx.i1816 = getelementptr i8, ptr %1982, i64 16
  %1989 = load i64, ptr %.sroa_idx.i1816, align 4
  %1990 = inttoptr i64 %1988 to ptr
  %1991 = inttoptr i64 %1989 to ptr
  %hash_coef_ptr.i.i2.i1817 = getelementptr i8, ptr %1983, i64 8
  %tbl_size_ptr.i.i3.i1818 = getelementptr i8, ptr %1983, i64 16
  %offset_tbl_ptr.i.i4.i1819 = getelementptr i8, ptr %1983, i64 40
  %hash_coef.i.i5.i1820 = load i64, ptr %hash_coef_ptr.i.i2.i1817, align 4, !noalias !318
  %tbl_size.i.i6.i1821 = load i64, ptr %tbl_size_ptr.i.i3.i1818, align 4, !noalias !318
  %offset_tbl.i.i7.i1822 = load ptr, ptr %offset_tbl_ptr.i.i4.i1819, align 8, !noalias !318
  %product.i.i.i8.i1823 = mul i64 %hash_coef.i.i5.i1820, 4015701072841558310
  %shifted.i.i.i9.i1824 = lshr i64 %product.i.i.i8.i1823, 32
  %xored.i.i.i10.i1825 = xor i64 %shifted.i.i.i9.i1824, %product.i.i.i8.i1823
  %hash.i.i.i11.i1826 = and i64 %xored.i.i.i10.i1825, %tbl_size.i.i6.i1821
  %offset_ptr.i.i12.i1827 = getelementptr i32, ptr %offset_tbl.i.i7.i1822, i64 %hash.i.i.i11.i1826
  %offset.i.i13.i1828 = load i32, ptr %offset_ptr.i.i12.i1827, align 4, !noalias !318
  %1992 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1983, 0
  %1993 = insertvalue { ptr, ptr, ptr, i32 } %1992, ptr %1990, 1
  %1994 = insertvalue { ptr, ptr, ptr, i32 } %1993, ptr %1991, 2
  %1995 = insertvalue { ptr, ptr, ptr, i32 } %1994, i32 %offset.i.i13.i1828, 3
  %1996 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1997 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1983) #37
  %1998 = sext i32 %offset.i.i13.i1828 to i64
  %1999 = getelementptr ptr, ptr %1983, i64 %1998
  %2000 = getelementptr i8, ptr %1999, i64 64
  %2001 = load ptr, ptr %2000, align 8
  %result.i.i1829 = call ptr %2001({ ptr, ptr, ptr, i32 } %1995, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %2002 = call i32 %result.i.i1829({ ptr, ptr, ptr, i32 } %1995, { ptr, ptr, ptr, i32 } %1995, ptr nonnull align 8 %2) #42
  %2003 = icmp eq i32 %2002, %1974
  br i1 %2003, label %._crit_edge.i1830, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1836.thread

._crit_edge.i1830:                                ; preds = %1986
  %2004 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2005 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1983)
  %2006 = getelementptr i8, ptr %1999, i64 48
  %2007 = load ptr, ptr %2006, align 8
  %result.i15.i1831 = call ptr %2007({ ptr, ptr, ptr, i32 } %1995, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %2008 = call { ptr, i160 } %result.i15.i1831({ ptr, ptr, ptr, i32 } %1995, { ptr, ptr, ptr, i32 } %1995, ptr nonnull align 8 %2) #42
  %2009 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %2010 = load ptr, ptr %81, align 8
  %2011 = call i1 %2010({ ptr, i160 } %2008, { ptr, i160 } %1972) #42
  br i1 %2011, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1836, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1836.thread

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1836.thread: ; preds = %._crit_edge.i1830, %._crit_edge9, %1986
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %2020

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1836: ; preds = %._crit_edge.i1830
  %2012 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2013 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1983)
  %2014 = getelementptr i8, ptr %1999, i64 56
  %2015 = load ptr, ptr %2014, align 8
  %result.i16.i1833 = call ptr %2015({ ptr, ptr, ptr, i32 } %1995, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %2016 = call { ptr, i160 } %result.i16.i1833({ ptr, ptr, ptr, i32 } %1995, { ptr, ptr, ptr, i32 } %1995, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i1834 = extractvalue { ptr, i160 } %2016, 0
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2017 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %2018 = icmp ne ptr %.fca.0.extract21.i1834, @nil_typ
  %2019 = icmp ne ptr %.fca.0.extract21.i1834, null
  %.not63.i762 = and i1 %2018, %2019
  br i1 %.not63.i762, label %CuckooMap_get_keyK.exit774, label %2020

2020:                                             ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1836.thread, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1836
  %2021 = add i32 %1974, 2127912214
  %2022 = shl i32 %1974, 12
  %2023 = add i32 %2021, %2022
  %2024 = ashr i32 %2023, 19
  %2025 = xor i32 %2023, %2024
  %2026 = xor i32 %2025, -949894596
  %2027 = add i32 %2026, 374761393
  %2028 = shl i32 %2026, 5
  %2029 = add i32 %2027, %2028
  %2030 = add i32 %2029, -744332180
  %2031 = shl i32 %2029, 9
  %2032 = xor i32 %2030, %2031
  %2033 = add i32 %2032, -42973499
  %2034 = shl i32 %2032, 3
  %2035 = add i32 %2033, %2034
  %2036 = ashr i32 %2035, 16
  %2037 = xor i32 %2035, %2036
  %2038 = xor i32 %2037, -1252372727
  %2039 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %2040 = load i32, ptr %82, align 8
  %2041 = add i32 %2040, -1
  %2042 = and i32 %2041, %2038
  %2043 = load ptr, ptr %84, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2044 = sext i32 %2042 to i64
  %2045 = shl nsw i64 %2044, 5
  %2046 = getelementptr i8, ptr %2043, i64 %2045
  %2047 = load ptr, ptr %2046, align 8
  %2048 = icmp ne ptr %2047, @nil_typ
  %2049 = icmp ne ptr %2047, null
  %.not44.i1866 = and i1 %2048, %2049
  br i1 %.not44.i1866, label %2050, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1891

2050:                                             ; preds = %2020
  %2051 = getelementptr i8, ptr %2046, i64 8
  %2052 = load i64, ptr %2051, align 4
  %.sroa_idx.i1871 = getelementptr i8, ptr %2046, i64 16
  %2053 = load i64, ptr %.sroa_idx.i1871, align 4
  %2054 = inttoptr i64 %2052 to ptr
  %2055 = inttoptr i64 %2053 to ptr
  %hash_coef_ptr.i.i2.i1872 = getelementptr i8, ptr %2047, i64 8
  %tbl_size_ptr.i.i3.i1873 = getelementptr i8, ptr %2047, i64 16
  %offset_tbl_ptr.i.i4.i1874 = getelementptr i8, ptr %2047, i64 40
  %hash_coef.i.i5.i1875 = load i64, ptr %hash_coef_ptr.i.i2.i1872, align 4, !noalias !321
  %tbl_size.i.i6.i1876 = load i64, ptr %tbl_size_ptr.i.i3.i1873, align 4, !noalias !321
  %offset_tbl.i.i7.i1877 = load ptr, ptr %offset_tbl_ptr.i.i4.i1874, align 8, !noalias !321
  %product.i.i.i8.i1878 = mul i64 %hash_coef.i.i5.i1875, 4015701072841558310
  %shifted.i.i.i9.i1879 = lshr i64 %product.i.i.i8.i1878, 32
  %xored.i.i.i10.i1880 = xor i64 %shifted.i.i.i9.i1879, %product.i.i.i8.i1878
  %hash.i.i.i11.i1881 = and i64 %xored.i.i.i10.i1880, %tbl_size.i.i6.i1876
  %offset_ptr.i.i12.i1882 = getelementptr i32, ptr %offset_tbl.i.i7.i1877, i64 %hash.i.i.i11.i1881
  %offset.i.i13.i1883 = load i32, ptr %offset_ptr.i.i12.i1882, align 4, !noalias !321
  %2056 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %2047, 0
  %2057 = insertvalue { ptr, ptr, ptr, i32 } %2056, ptr %2054, 1
  %2058 = insertvalue { ptr, ptr, ptr, i32 } %2057, ptr %2055, 2
  %2059 = insertvalue { ptr, ptr, ptr, i32 } %2058, i32 %offset.i.i13.i1883, 3
  %2060 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %2061 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %2047) #37
  %2062 = sext i32 %offset.i.i13.i1883 to i64
  %2063 = getelementptr ptr, ptr %2047, i64 %2062
  %2064 = getelementptr i8, ptr %2063, i64 64
  %2065 = load ptr, ptr %2064, align 8
  %result.i.i1884 = call ptr %2065({ ptr, ptr, ptr, i32 } %2059, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %2066 = call i32 %result.i.i1884({ ptr, ptr, ptr, i32 } %2059, { ptr, ptr, ptr, i32 } %2059, ptr nonnull align 8 %2) #42
  %2067 = icmp eq i32 %2066, %1974
  br i1 %2067, label %._crit_edge.i1885, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1891

._crit_edge.i1885:                                ; preds = %2050
  %2068 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2069 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %2047)
  %2070 = getelementptr i8, ptr %2063, i64 48
  %2071 = load ptr, ptr %2070, align 8
  %result.i15.i1886 = call ptr %2071({ ptr, ptr, ptr, i32 } %2059, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %2072 = call { ptr, i160 } %result.i15.i1886({ ptr, ptr, ptr, i32 } %2059, { ptr, ptr, ptr, i32 } %2059, ptr nonnull align 8 %2) #42
  %2073 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %2074 = load ptr, ptr %81, align 8
  %2075 = call i1 %2074({ ptr, i160 } %2072, { ptr, i160 } %1972) #42
  br i1 %2075, label %2076, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1891

2076:                                             ; preds = %._crit_edge.i1885
  %2077 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2078 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %2047)
  %2079 = getelementptr i8, ptr %2063, i64 56
  %2080 = load ptr, ptr %2079, align 8
  %result.i16.i1888 = call ptr %2080({ ptr, ptr, ptr, i32 } %2059, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %2081 = call { ptr, i160 } %result.i16.i1888({ ptr, ptr, ptr, i32 } %2059, { ptr, ptr, ptr, i32 } %2059, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i1889 = extractvalue { ptr, i160 } %2081, 0
  br label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1891

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1891: ; preds = %2020, %2050, %._crit_edge.i1885, %2076
  %.reg2mem41.0.i1868 = phi ptr [ %.fca.0.extract21.i1889, %2076 ], [ @nil_typ, %._crit_edge.i1885 ], [ @nil_typ, %2020 ], [ @nil_typ, %2050 ]
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2082 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %2083 = icmp ne ptr %.reg2mem41.0.i1868, @nil_typ
  %2084 = icmp ne ptr %.reg2mem41.0.i1868, null
  %.not65.not.not.i768 = and i1 %2083, %2084
  %cond.fr27.i769 = freeze i1 %.not65.not.not.i768
  %spec.select.i770 = select i1 %cond.fr27.i769, ptr %.reg2mem41.0.i1868, ptr @nil_typ
  br label %CuckooMap_get_keyK.exit774

CuckooMap_get_keyK.exit774:                       ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1836, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1891
  %2085 = phi ptr [ %spec.select.i770, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1891 ], [ %.fca.0.extract21.i1834, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1836 ]
  %2086 = icmp eq ptr %2085, @nil_typ
  %2087 = icmp eq ptr %2085, null
  %2088 = or i1 %2086, %2087
  %.0365..0368 = select i1 %2088, i32 %.0365318, i32 %.0368317
  %2089 = add i32 %.0365..0368, 1
  %.2370 = select i1 %2088, i32 %.0368317, i32 %2089
  %.2367 = select i1 %2088, i32 %2089, i32 %.0365318
  %2090 = add nuw nsw i32 %.0371316, 1
  %2091 = icmp slt i32 %2090, %.0380
  br i1 %2091, label %._crit_edge9, label %2092

2092:                                             ; preds = %CuckooMap_get_keyK.exit774
  %2093 = call i64 @clock()
  %2094 = mul i32 %.2370, 100
  %2095 = sdiv i32 %2094, %.0380
  %2096 = icmp slt i32 %2095, 5
  br label %._crit_edge.lr.ph.i1906

2097:                                             ; preds = %._crit_edge8
  %2098 = call i64 @clock()
  br label %._crit_edge.lr.ph.i1906

._crit_edge.lr.ph.i1906:                          ; preds = %2092, %2097
  %2099 = phi i64 [ %2093, %2092 ], [ %2098, %2097 ]
  %.0365.lcssa332 = phi i32 [ %.2367, %2092 ], [ 0, %2097 ]
  %.0368.lcssa331 = phi i32 [ %.2370, %2092 ], [ 0, %2097 ]
  %.reg2mem27.0.in = phi i1 [ %2096, %2092 ], [ true, %2097 ]
  %2100 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO) #37
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2101 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %2102 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <15 x i8> <i8 71, i8 101, i8 116, i8 32, i8 82, i8 97, i8 110, i8 100, i8 111, i8 109, i8 32, i8 77, i8 105, i8 115, i8 115>, ptr %result.i.i1905.h2s3795, align 16
  %2103 = sub i64 %2099, %1965
  %2104 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %2105 = getelementptr inbounds i8, ptr %result.i.i1905.h2s3795, i64 15
  store i8 0, ptr %2105, align 1
  %puts.i794 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(16) %result.i.i1905.h2s3795) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  store <14 x i8> <i8 32, i8 32, i8 79, i8 112, i8 101, i8 114, i8 97, i8 116, i8 105, i8 111, i8 110, i8 115, i8 58, i8 32>, ptr %result.i.i268.i.h2s3793, align 16
  %puts.i.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(15) %result.i.i268.i.h2s3793) #42
  %2106 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %.0380) #42
  store <14 x i8> <i8 32, i8 32, i8 84, i8 111, i8 116, i8 97, i8 108, i8 32, i8 84, i8 105, i8 109, i8 101, i8 58, i8 32>, ptr %result.i.i282.i.h2s3791, align 16
  %puts.i206.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(15) %result.i.i282.i.h2s3791) #42
  %2107 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(6) @i64_string, i64 %2103) #42
  store <3 x i8> <i8 32, i8 109, i8 115>, ptr %result.i.i301.i.h2s3789, align 4
  %puts.i226.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(4) %result.i.i301.i.h2s3789) #42
  br i1 %1966, label %._crit_edge1.i, label %._crit_edge.lr.ph.i1925

._crit_edge1.i:                                   ; preds = %._crit_edge.lr.ph.i1906
  %2108 = icmp sgt i64 %2103, 0
  br i1 %2108, label %2109, label %._crit_edge.lr.ph.i321.i

2109:                                             ; preds = %._crit_edge1.i
  %2110 = mul i64 %2103, 1000000
  %2111 = zext nneg i32 %.0380 to i64
  %2112 = sdiv i64 %2110, %2111
  br label %._crit_edge.lr.ph.i321.i

._crit_edge.lr.ph.i321.i:                         ; preds = %2109, %._crit_edge1.i
  %.0.i = phi i64 [ %2112, %2109 ], [ 0, %._crit_edge1.i ]
  store <15 x i8> <i8 32, i8 32, i8 84, i8 105, i8 109, i8 101, i8 47, i8 79, i8 112, i8 58, i8 32, i8 32, i8 32, i8 32, i8 126>, ptr %result.i.i320.i.h2s3787, align 16
  %puts.i246.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(16) %result.i.i320.i.h2s3787) #42
  %2113 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(6) @i64_string, i64 %.0.i) #42
  store <3 x i8> <i8 32, i8 110, i8 115>, ptr %result.i.i339.i.h2s3785, align 4
  %puts.i266.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(4) %result.i.i339.i.h2s3785) #42
  br label %._crit_edge.lr.ph.i1925

._crit_edge.lr.ph.i1925:                          ; preds = %._crit_edge.lr.ph.i1906, %._crit_edge.lr.ph.i321.i
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2114 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %2115 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <18 x i8> <i8 32, i8 32, i8 32, i8 32, i8 86, i8 101, i8 114, i8 105, i8 102, i8 105, i8 99, i8 97, i8 116, i8 105, i8 111, i8 110, i8 58, i8 32>, ptr %result.i.i1924.h2s3783, align 32
  %2116 = getelementptr inbounds i8, ptr %result.i.i1924.h2s3783, i64 18
  store i8 0, ptr %2116, align 2
  %puts.i814 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(19) %result.i.i1924.h2s3783) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %. = select i1 %.reg2mem27.0.in, <4 x i8> <i8 80, i8 65, i8 83, i8 83>, <4 x i8> <i8 70, i8 65, i8 73, i8 76>
  %.431 = select i1 %.reg2mem27.0.in, ptr %67, ptr %71
  %.432 = select i1 %.reg2mem27.0.in, ptr %68, ptr %72
  %.433 = select i1 %.reg2mem27.0.in, ptr %69, ptr %73
  %.434 = select i1 %.reg2mem27.0.in, ptr %70, ptr %74
  store ptr @_parameterization_Bufferi8, ptr %.431, align 8
  %.431.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %.reg2mem27.0.in, ptr %67, ptr %71
  %.431.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.431.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 8
  store ptr @_parameterization_i32, ptr %.431.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %.431.sroa.sel443.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %.reg2mem27.0.in, ptr %67, ptr %71
  %.431.sroa.sel443.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.431.sroa.sel443.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 16
  store ptr @_parameterization_i32, ptr %.431.sroa.sel443.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %2117 = call ptr @llvm.invariant.start.p0(i64 noundef 9, ptr nocapture nofree noundef nonnull align 8 dereferenceable(24) %.431)
  store ptr @buffer_typ, ptr %.432, align 8
  %.432.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %.reg2mem27.0.in, ptr %68, ptr %72
  %.432.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.432.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 8
  store ptr @i32_typ, ptr %.432.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %.432.sroa.sel438.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %.reg2mem27.0.in, ptr %68, ptr %72
  %.432.sroa.sel438.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.432.sroa.sel438.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 16
  store ptr @i32_typ, ptr %.432.sroa.sel438.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %2118 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(24) %.432)
  store ptr @_parameterization_String, ptr %.433, align 8
  %2119 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %.433)
  store ptr @String, ptr %.434, align 8
  %2120 = call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %.434) #37
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2121 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %2122 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <4 x i8> %., ptr %result.i.i1943.h2s3782, align 4
  %2123 = getelementptr inbounds i8, ptr %result.i.i1943.h2s3782, i64 4
  store i8 0, ptr %2123, align 4
  %puts.i834 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(5) %result.i.i1943.h2s3782) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2124 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %2125 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <13 x i8> <i8 32, i8 32, i8 32, i8 32, i8 40, i8 77, i8 105, i8 115, i8 115, i8 101, i8 115, i8 58, i8 32>, ptr %result.i.i1962.h2s3780, align 16
  %2126 = getelementptr inbounds i8, ptr %result.i.i1962.h2s3780, i64 13
  store i8 0, ptr %2126, align 1
  %puts.i854 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(14) %result.i.i1962.h2s3780) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2127 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %.0365.lcssa332) #42
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2128 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %2129 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store i64 2322295501682647084, ptr %result.i.i1981.h2s3779, align 8
  %2130 = getelementptr inbounds i8, ptr %result.i.i1981.h2s3779, i64 8
  store i8 0, ptr %2130, align 8
  %puts.i874 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(9) %result.i.i1981.h2s3779) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2131 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %.0368.lcssa331) #42
  %2132 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2133 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %2134 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store i8 41, ptr %result.i.i2000.h2s3778, align 2
  %2135 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %2136 = getelementptr inbounds i8, ptr %result.i.i2000.h2s3778, i64 1
  store i8 0, ptr %2136, align 1
  %puts.i894 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(2) %result.i.i2000.h2s3778) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  ret void
}

define void @benchmark_remove_random(i32 %0) local_unnamed_addr #10 {
  %2 = alloca {}, align 8
  %result.i.i2073.h2s3807 = alloca [2 x i8], align 2
  store i16 0, ptr %result.i.i2073.h2s3807, align 2
  %result.i.i2054.h2s3808 = alloca [21 x i8], align 32
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 32 dereferenceable(21) %result.i.i2054.h2s3808, i8 0, i64 21, i1 false)
  %result.i.i2035.h2s3810 = alloca [5 x i8], align 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(5) %result.i.i2035.h2s3810, i8 0, i64 5, i1 false)
  %result.i.i2016.h2s3811 = alloca [19 x i8], align 32
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 32 dereferenceable(19) %result.i.i2016.h2s3811, i8 0, i64 19, i1 false)
  %result.i.i339.i.h2s3813 = alloca [4 x i8], align 4
  store i32 0, ptr %result.i.i339.i.h2s3813, align 4
  %result.i.i320.i.h2s3815 = alloca [16 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %result.i.i320.i.h2s3815, i8 0, i64 16, i1 false)
  %result.i.i301.i.h2s3817 = alloca [4 x i8], align 4
  store i32 0, ptr %result.i.i301.i.h2s3817, align 4
  %result.i.i282.i.h2s3819 = alloca [15 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(15) %result.i.i282.i.h2s3819, i8 0, i64 15, i1 false)
  %result.i.i268.i.h2s3821 = alloca [15 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(15) %result.i.i268.i.h2s3821, i8 0, i64 15, i1 false)
  %result.i.i1997.h2s3823 = alloca [14 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(14) %result.i.i1997.h2s3823, i8 0, i64 14, i1 false)
  %result.i.i1703.h2s3825 = alloca [30 x i8], align 32
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 32 dereferenceable(30) %result.i.i1703.h2s3825, i8 0, i64 30, i1 false)
  %result.i.i1688.h2s3827 = alloca [30 x i8], align 32
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 32 dereferenceable(30) %result.i.i1688.h2s3827, i8 0, i64 30, i1 false)
  %result.i34.h2s3829 = alloca [24 x i8], align 8
  %3 = getelementptr inbounds i8, ptr %result.i34.h2s3829, i64 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %3, i8 0, i64 16, i1 false)
  %4 = alloca [1 x ptr], align 8
  %5 = alloca { ptr }, align 8
  %6 = alloca [1 x ptr], align 8
  %7 = alloca { ptr }, align 8
  %8 = alloca [1 x ptr], align 8
  %9 = alloca { ptr }, align 8
  %10 = alloca [1 x ptr], align 8
  %11 = alloca { ptr }, align 8
  %12 = alloca [1 x ptr], align 8
  %13 = alloca { ptr }, align 8
  %14 = alloca [1 x ptr], align 8
  %15 = alloca { ptr }, align 8
  %16 = alloca [1 x ptr], align 8
  %17 = alloca { ptr }, align 8
  %18 = alloca [1 x ptr], align 8
  %19 = alloca { ptr }, align 8
  %20 = alloca [1 x ptr], align 8
  %21 = alloca { ptr }, align 8
  %22 = alloca [1 x ptr], align 8
  %23 = alloca { ptr }, align 8
  %24 = alloca [1 x ptr], align 8
  %25 = alloca { ptr }, align 8
  %26 = alloca [1 x ptr], align 8
  %27 = alloca { ptr }, align 8
  %28 = alloca [1 x ptr], align 8
  %29 = alloca { ptr }, align 8
  %30 = alloca [1 x ptr], align 8
  %31 = alloca { ptr }, align 8
  %32 = alloca [1 x ptr], align 8
  %33 = alloca { ptr }, align 8
  %34 = alloca [1 x ptr], align 8
  %35 = alloca { ptr }, align 8
  %36 = alloca [1 x ptr], align 8
  %37 = alloca { ptr }, align 8
  %38 = alloca [1 x ptr], align 8
  %39 = alloca { ptr }, align 8
  %40 = alloca [1 x ptr], align 8
  %41 = alloca { ptr }, align 8
  %42 = alloca [1 x ptr], align 8
  %43 = alloca { ptr }, align 8
  %44 = alloca [1 x ptr], align 8
  %45 = alloca { ptr }, align 8
  %46 = alloca [1 x ptr], align 8
  %47 = alloca { ptr }, align 8
  %48 = alloca [1 x ptr], align 8
  %49 = alloca { ptr }, align 8
  %50 = alloca [1 x ptr], align 8
  %51 = alloca { ptr }, align 8
  %52 = alloca [1 x ptr], align 8
  %53 = alloca { ptr }, align 8
  %54 = alloca [1 x ptr], align 8
  %55 = alloca { ptr }, align 8
  %56 = alloca [1 x ptr], align 8
  %57 = alloca { ptr }, align 8
  %58 = alloca [1 x ptr], align 8
  %59 = alloca { ptr }, align 8
  %60 = alloca [1 x ptr], align 8
  %61 = alloca { ptr }, align 8
  %62 = alloca [1 x ptr], align 8
  %63 = alloca { ptr }, align 8
  %64 = alloca [1 x ptr], align 8
  %65 = alloca { ptr }, align 8
  %66 = alloca [1 x ptr], align 8
  %67 = alloca { ptr }, align 8
  %oldProtect.i57 = alloca i32, align 4
  %oldProtect.i53 = alloca i32, align 4
  %oldProtect.i12 = alloca i32, align 4
  %oldProtect.i = alloca i32, align 4
  %.sroa.0316.sroa.0 = alloca i8, align 8
  %68 = alloca [3 x ptr], align 8
  %69 = alloca { ptr, ptr, ptr }, align 8
  %70 = alloca [1 x ptr], align 8
  %71 = alloca { ptr }, align 8
  %72 = alloca [3 x ptr], align 8
  %73 = alloca { ptr, ptr, ptr }, align 8
  %74 = alloca [1 x ptr], align 8
  %75 = alloca { ptr }, align 8
  %result.i8 = call noalias nonnull align 8 dereferenceable(64) ptr @bump_malloc_inner(i64 noundef 64, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr @_parameterization_i32, ptr %result.i8, align 8
  %76 = getelementptr inbounds i8, ptr %result.i8, i64 8
  store ptr @_parameterization_i32, ptr %76, align 8
  %77 = getelementptr inbounds i8, ptr %result.i8, i64 16
  store ptr @_parameterization_Pairi32._i32, ptr %77, align 8
  %78 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(64) %result.i8) #37
  %result.i9 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i) #37
  %result.i10 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i9, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i9, ptr noalias nofree noundef nonnull readnone @szqiccmpty, ptr noalias nofree noundef nonnull readnone @i32_hasher) #37
  %ret.i = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i9) #48
  %79 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i9) #37
  %result.i11 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i12) #37
  %result.i13 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i11, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i12) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i12) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i11, ptr noalias nofree noundef nonnull readnone @tairsijaax, ptr noalias nofree noundef nonnull readnone @i32_eq) #37
  %ret.i14 = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i11) #48
  %80 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i11) #37
  %81 = getelementptr inbounds i8, ptr %result.i8, i64 48
  store ptr %ret.i, ptr %81, align 8
  %82 = getelementptr inbounds i8, ptr %result.i8, i64 56
  store ptr %ret.i14, ptr %82, align 8
  %83 = getelementptr inbounds i8, ptr %result.i8, i64 40
  store i32 8, ptr %83, align 8
  %result.i.i360 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %84 = getelementptr inbounds i8, ptr %result.i8, i64 24
  store ptr %result.i.i360, ptr %84, align 8
  %result.i1.i361 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %85 = getelementptr inbounds i8, ptr %result.i8, i64 32
  store ptr %result.i1.i361, ptr %85, align 8
  %86 = call ptr @llvm.invariant.start.p0(i64 noundef 40, ptr nocapture nofree noundef nonnull align 16 dereferenceable(120) @PRNG) #37
  store ptr @_parameterization_i32, ptr %result.i34.h2s3829, align 8
  %87 = call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(24) %result.i34.h2s3829) #37
  %88 = getelementptr inbounds i8, ptr %result.i34.h2s3829, i64 20
  store i32 %0, ptr %88, align 4
  %89 = sext i32 %0 to i64
  %90 = shl nsw i64 %89, 2
  %result.i2.i = call noalias ptr @bump_malloc_inner(i64 noundef %90, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %91 = getelementptr inbounds i8, ptr %result.i34.h2s3829, i64 8
  store ptr %result.i2.i, ptr %91, align 8
  %92 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 16 dereferenceable(744) @Array) #37
  %result.i51 = call noalias nonnull align 8 dereferenceable(64) ptr @bump_malloc_inner(i64 noundef 64, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr @_parameterization_i32, ptr %result.i51, align 8
  %93 = getelementptr inbounds i8, ptr %result.i51, i64 8
  store ptr @_parameterization_i1, ptr %93, align 8
  %94 = getelementptr inbounds i8, ptr %result.i51, i64 16
  store ptr @_parameterization_Pairi32._i1, ptr %94, align 8
  %95 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(64) %result.i51) #37
  %result.i52 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i53) #37
  %result.i54 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i52, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i53) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i53) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i52, ptr noalias nofree noundef nonnull readnone @hnjsjisnil, ptr noalias nofree noundef nonnull readnone @i32_hasher) #37
  %ret.i55 = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i52) #48
  %96 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i52) #37
  %result.i56 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i57) #37
  %result.i58 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i56, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i57) #47
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i57) #37
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i56, ptr noalias nofree noundef nonnull readnone @zaxrucnnxg, ptr noalias nofree noundef nonnull readnone @i32_eq) #37
  %ret.i59 = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i56) #48
  %97 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i56) #37
  %98 = getelementptr inbounds i8, ptr %result.i51, i64 48
  store ptr %ret.i55, ptr %98, align 8
  %99 = getelementptr inbounds i8, ptr %result.i51, i64 56
  store ptr %ret.i59, ptr %99, align 8
  %100 = getelementptr inbounds i8, ptr %result.i51, i64 40
  store i32 8, ptr %100, align 8
  %result.i.i402 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %101 = getelementptr inbounds i8, ptr %result.i51, i64 24
  store ptr %result.i.i402, ptr %101, align 8
  %result.i1.i403 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %102 = getelementptr inbounds i8, ptr %result.i51, i64 32
  store ptr %result.i1.i403, ptr %102, align 8
  %103 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %104 = mul i32 %0, 10
  %105 = icmp sgt i32 %0, 0
  %106 = icmp sgt i32 %104, 0
  %spec.select320 = and i1 %105, %106
  br i1 %spec.select320, label %.lr.ph, label %._crit_edge3._crit_edge

.lr.ph:                                           ; preds = %1
  %107 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %108 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2) #37
  %109 = getelementptr inbounds i8, ptr %result.i8, i64 44
  %110 = getelementptr inbounds i8, ptr %result.i51, i64 44
  %111 = insertvalue { ptr, ptr, ptr, i32 } { ptr @CuckooMap, ptr undef, ptr undef, i32 undef }, ptr %result.i51, 1
  %112 = insertvalue { ptr, ptr, ptr, i32 } %111, ptr undef, 2
  %113 = insertvalue { ptr, ptr, ptr, i32 } %112, i32 10, 3
  %114 = insertvalue { ptr, ptr, ptr, i32 } { ptr @CuckooMap, ptr undef, ptr undef, i32 undef }, ptr %result.i8, 1
  %115 = insertvalue { ptr, ptr, ptr, i32 } %114, ptr undef, 2
  %116 = insertvalue { ptr, ptr, ptr, i32 } %115, i32 10, 3
  %117 = insertvalue { ptr, ptr, ptr, i32 } %114, i32 10, 3
  %118 = insertvalue { ptr, ptr, ptr, i32 } %111, i32 10, 3
  %119 = call ptr @llvm.invariant.start.p0(i64 noundef 40, ptr nocapture nofree noundef nonnull align 16 dereferenceable(120) @PRNG) #37
  br label %120

120:                                              ; preds = %.lr.ph, %._crit_edge1
  %result.i17.h2s3830.sroa.0.0 = phi i32 [ 101112, %.lr.ph ], [ %123, %._crit_edge1 ]
  %.0355322 = phi i32 [ 0, %.lr.ph ], [ %1825, %._crit_edge1 ]
  %.0357321 = phi i32 [ 0, %.lr.ph ], [ %.1358, %._crit_edge1 ]
  %121 = mul i32 %result.i17.h2s3830.sroa.0.0, 1103515245
  %122 = add i32 %121, 12345
  %123 = and i32 %122, 2147483647
  %.sroa.0343.0.insert.ext = zext nneg i32 %123 to i160
  %124 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0343.0.insert.ext, 1
  %125 = load ptr, ptr %98, align 8
  %126 = call i32 %125({ ptr, i160 } %124) #42
  %127 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %128 = load i32, ptr %100, align 8
  %129 = add i32 %128, -1
  %130 = and i32 %129, %126
  %131 = load ptr, ptr %101, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %132 = sext i32 %130 to i64
  %133 = shl nsw i64 %132, 5
  %134 = getelementptr i8, ptr %131, i64 %133
  %135 = load ptr, ptr %134, align 8
  %136 = icmp ne ptr %135, @nil_typ
  %137 = icmp ne ptr %135, null
  %.not44.i = and i1 %136, %137
  br i1 %.not44.i, label %138, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

138:                                              ; preds = %120
  %139 = getelementptr i8, ptr %134, i64 8
  %140 = load i64, ptr %139, align 4
  %.sroa_idx.i = getelementptr i8, ptr %134, i64 16
  %141 = load i64, ptr %.sroa_idx.i, align 4
  %142 = inttoptr i64 %140 to ptr
  %143 = inttoptr i64 %141 to ptr
  %hash_coef_ptr.i.i2.i = getelementptr i8, ptr %135, i64 8
  %tbl_size_ptr.i.i3.i = getelementptr i8, ptr %135, i64 16
  %offset_tbl_ptr.i.i4.i = getelementptr i8, ptr %135, i64 40
  %hash_coef.i.i5.i = load i64, ptr %hash_coef_ptr.i.i2.i, align 4, !noalias !324
  %tbl_size.i.i6.i = load i64, ptr %tbl_size_ptr.i.i3.i, align 4, !noalias !324
  %offset_tbl.i.i7.i = load ptr, ptr %offset_tbl_ptr.i.i4.i, align 8, !noalias !324
  %product.i.i.i8.i = mul i64 %hash_coef.i.i5.i, 4015701072841558310
  %shifted.i.i.i9.i = lshr i64 %product.i.i.i8.i, 32
  %xored.i.i.i10.i = xor i64 %shifted.i.i.i9.i, %product.i.i.i8.i
  %hash.i.i.i11.i = and i64 %xored.i.i.i10.i, %tbl_size.i.i6.i
  %offset_ptr.i.i12.i = getelementptr i32, ptr %offset_tbl.i.i7.i, i64 %hash.i.i.i11.i
  %offset.i.i13.i = load i32, ptr %offset_ptr.i.i12.i, align 4, !noalias !324
  %144 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %135, 0
  %145 = insertvalue { ptr, ptr, ptr, i32 } %144, ptr %142, 1
  %146 = insertvalue { ptr, ptr, ptr, i32 } %145, ptr %143, 2
  %147 = insertvalue { ptr, ptr, ptr, i32 } %146, i32 %offset.i.i13.i, 3
  %148 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %149 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %135) #37
  %150 = sext i32 %offset.i.i13.i to i64
  %151 = getelementptr ptr, ptr %135, i64 %150
  %152 = getelementptr i8, ptr %151, i64 64
  %153 = load ptr, ptr %152, align 8
  %result.i.i = call ptr %153({ ptr, ptr, ptr, i32 } %147, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %154 = call i32 %result.i.i({ ptr, ptr, ptr, i32 } %147, { ptr, ptr, ptr, i32 } %147, ptr nonnull align 8 %2) #42
  %155 = icmp eq i32 %154, %126
  br i1 %155, label %._crit_edge.i1014, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

._crit_edge.i1014:                                ; preds = %138
  %156 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %157 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %135)
  %158 = getelementptr i8, ptr %151, i64 48
  %159 = load ptr, ptr %158, align 8
  %result.i15.i1015 = call ptr %159({ ptr, ptr, ptr, i32 } %147, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %160 = call { ptr, i160 } %result.i15.i1015({ ptr, ptr, ptr, i32 } %147, { ptr, ptr, ptr, i32 } %147, ptr nonnull align 8 %2) #42
  %161 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %162 = load ptr, ptr %99, align 8
  %163 = call i1 %162({ ptr, i160 } %160, { ptr, i160 } %124) #42
  br i1 %163, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread: ; preds = %._crit_edge.i1014, %120, %138
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %172

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit: ; preds = %._crit_edge.i1014
  %164 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %165 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %135)
  %166 = getelementptr i8, ptr %151, i64 56
  %167 = load ptr, ptr %166, align 8
  %result.i16.i1016 = call ptr %167({ ptr, ptr, ptr, i32 } %147, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %168 = call { ptr, i160 } %result.i16.i1016({ ptr, ptr, ptr, i32 } %147, { ptr, ptr, ptr, i32 } %147, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i = extractvalue { ptr, i160 } %168, 0
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %169 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %170 = icmp ne ptr %.fca.0.extract21.i, @nil_typ
  %171 = icmp ne ptr %.fca.0.extract21.i, null
  %.not63.i = and i1 %170, %171
  br i1 %.not63.i, label %CuckooMap_get_keyK.exit, label %172

172:                                              ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit
  %173 = add i32 %126, 2127912214
  %174 = shl i32 %126, 12
  %175 = add i32 %173, %174
  %176 = ashr i32 %175, 19
  %177 = xor i32 %175, %176
  %178 = xor i32 %177, -949894596
  %179 = add i32 %178, 374761393
  %180 = shl i32 %178, 5
  %181 = add i32 %179, %180
  %182 = add i32 %181, -744332180
  %183 = shl i32 %181, 9
  %184 = xor i32 %182, %183
  %185 = add i32 %184, -42973499
  %186 = shl i32 %184, 3
  %187 = add i32 %185, %186
  %188 = ashr i32 %187, 16
  %189 = xor i32 %187, %188
  %190 = xor i32 %189, -1252372727
  %191 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %192 = load i32, ptr %100, align 8
  %193 = add i32 %192, -1
  %194 = and i32 %193, %190
  %195 = load ptr, ptr %102, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %196 = sext i32 %194 to i64
  %197 = shl nsw i64 %196, 5
  %198 = getelementptr i8, ptr %195, i64 %197
  %199 = load ptr, ptr %198, align 8
  %200 = icmp ne ptr %199, @nil_typ
  %201 = icmp ne ptr %199, null
  %.not44.i1045 = and i1 %200, %201
  br i1 %.not44.i1045, label %202, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1070

202:                                              ; preds = %172
  %203 = getelementptr i8, ptr %198, i64 8
  %204 = load i64, ptr %203, align 4
  %.sroa_idx.i1050 = getelementptr i8, ptr %198, i64 16
  %205 = load i64, ptr %.sroa_idx.i1050, align 4
  %206 = inttoptr i64 %204 to ptr
  %207 = inttoptr i64 %205 to ptr
  %hash_coef_ptr.i.i2.i1051 = getelementptr i8, ptr %199, i64 8
  %tbl_size_ptr.i.i3.i1052 = getelementptr i8, ptr %199, i64 16
  %offset_tbl_ptr.i.i4.i1053 = getelementptr i8, ptr %199, i64 40
  %hash_coef.i.i5.i1054 = load i64, ptr %hash_coef_ptr.i.i2.i1051, align 4, !noalias !327
  %tbl_size.i.i6.i1055 = load i64, ptr %tbl_size_ptr.i.i3.i1052, align 4, !noalias !327
  %offset_tbl.i.i7.i1056 = load ptr, ptr %offset_tbl_ptr.i.i4.i1053, align 8, !noalias !327
  %product.i.i.i8.i1057 = mul i64 %hash_coef.i.i5.i1054, 4015701072841558310
  %shifted.i.i.i9.i1058 = lshr i64 %product.i.i.i8.i1057, 32
  %xored.i.i.i10.i1059 = xor i64 %shifted.i.i.i9.i1058, %product.i.i.i8.i1057
  %hash.i.i.i11.i1060 = and i64 %xored.i.i.i10.i1059, %tbl_size.i.i6.i1055
  %offset_ptr.i.i12.i1061 = getelementptr i32, ptr %offset_tbl.i.i7.i1056, i64 %hash.i.i.i11.i1060
  %offset.i.i13.i1062 = load i32, ptr %offset_ptr.i.i12.i1061, align 4, !noalias !327
  %208 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %199, 0
  %209 = insertvalue { ptr, ptr, ptr, i32 } %208, ptr %206, 1
  %210 = insertvalue { ptr, ptr, ptr, i32 } %209, ptr %207, 2
  %211 = insertvalue { ptr, ptr, ptr, i32 } %210, i32 %offset.i.i13.i1062, 3
  %212 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %213 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %199) #37
  %214 = sext i32 %offset.i.i13.i1062 to i64
  %215 = getelementptr ptr, ptr %199, i64 %214
  %216 = getelementptr i8, ptr %215, i64 64
  %217 = load ptr, ptr %216, align 8
  %result.i.i1063 = call ptr %217({ ptr, ptr, ptr, i32 } %211, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %218 = call i32 %result.i.i1063({ ptr, ptr, ptr, i32 } %211, { ptr, ptr, ptr, i32 } %211, ptr nonnull align 8 %2) #42
  %219 = icmp eq i32 %218, %126
  br i1 %219, label %._crit_edge.i1064, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1070

._crit_edge.i1064:                                ; preds = %202
  %220 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %221 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %199)
  %222 = getelementptr i8, ptr %215, i64 48
  %223 = load ptr, ptr %222, align 8
  %result.i15.i1065 = call ptr %223({ ptr, ptr, ptr, i32 } %211, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %224 = call { ptr, i160 } %result.i15.i1065({ ptr, ptr, ptr, i32 } %211, { ptr, ptr, ptr, i32 } %211, ptr nonnull align 8 %2) #42
  %225 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %226 = load ptr, ptr %99, align 8
  %227 = call i1 %226({ ptr, i160 } %224, { ptr, i160 } %124) #42
  br i1 %227, label %228, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1070

228:                                              ; preds = %._crit_edge.i1064
  %229 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %230 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %199)
  %231 = getelementptr i8, ptr %215, i64 56
  %232 = load ptr, ptr %231, align 8
  %result.i16.i1067 = call ptr %232({ ptr, ptr, ptr, i32 } %211, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %233 = call { ptr, i160 } %result.i16.i1067({ ptr, ptr, ptr, i32 } %211, { ptr, ptr, ptr, i32 } %211, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i1068 = extractvalue { ptr, i160 } %233, 0
  br label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1070

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1070: ; preds = %172, %202, %._crit_edge.i1064, %228
  %.reg2mem41.0.i1047 = phi ptr [ %.fca.0.extract21.i1068, %228 ], [ @nil_typ, %._crit_edge.i1064 ], [ @nil_typ, %172 ], [ @nil_typ, %202 ]
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %234 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %235 = icmp ne ptr %.reg2mem41.0.i1047, @nil_typ
  %236 = icmp ne ptr %.reg2mem41.0.i1047, null
  %.not65.not.not.i = and i1 %235, %236
  %cond.fr27.i = freeze i1 %.not65.not.not.i
  %spec.select.i = select i1 %cond.fr27.i, ptr %.reg2mem41.0.i1047, ptr @nil_typ
  br label %CuckooMap_get_keyK.exit

CuckooMap_get_keyK.exit:                          ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1070
  %237 = phi ptr [ %spec.select.i, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1070 ], [ %.fca.0.extract21.i, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit ]
  %238 = icmp eq ptr %237, @nil_typ
  %239 = icmp eq ptr %237, null
  %240 = or i1 %238, %239
  br i1 %240, label %241, label %._crit_edge1

241:                                              ; preds = %CuckooMap_get_keyK.exit
  %242 = add nuw i32 %123, 1
  %.sroa.0326.0.insert.ext = zext i32 %242 to i160
  %243 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0326.0.insert.ext, 1
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %244 = load ptr, ptr %81, align 8
  %245 = call i32 %244({ ptr, i160 } %124) #42
  %246 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %247 = load i32, ptr %83, align 8
  %248 = add i32 %247, -1
  %249 = and i32 %248, %245
  %250 = load ptr, ptr %84, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %251 = sext i32 %249 to i64
  %252 = shl nsw i64 %251, 5
  %253 = getelementptr i8, ptr %250, i64 %252
  %254 = load ptr, ptr %253, align 8
  %255 = getelementptr i8, ptr %253, i64 8
  %256 = icmp ne ptr %254, @nil_typ
  %257 = icmp ne ptr %254, null
  %.not64.i = and i1 %256, %257
  br i1 %.not64.i, label %258, label %356

258:                                              ; preds = %241
  %259 = load i64, ptr %255, align 4
  %.sroa_idx.i1111 = getelementptr i8, ptr %253, i64 16
  %260 = load i64, ptr %.sroa_idx.i1111, align 4
  %261 = inttoptr i64 %259 to ptr
  %262 = inttoptr i64 %260 to ptr
  %hash_coef_ptr.i.i3.i = getelementptr i8, ptr %254, i64 8
  %tbl_size_ptr.i.i4.i = getelementptr i8, ptr %254, i64 16
  %offset_tbl_ptr.i.i5.i = getelementptr i8, ptr %254, i64 40
  %hash_coef.i.i6.i = load i64, ptr %hash_coef_ptr.i.i3.i, align 4, !noalias !330
  %tbl_size.i.i7.i = load i64, ptr %tbl_size_ptr.i.i4.i, align 4, !noalias !330
  %offset_tbl.i.i8.i = load ptr, ptr %offset_tbl_ptr.i.i5.i, align 8, !noalias !330
  %product.i.i.i9.i = mul i64 %hash_coef.i.i6.i, 4015701072841558310
  %shifted.i.i.i10.i = lshr i64 %product.i.i.i9.i, 32
  %xored.i.i.i11.i = xor i64 %shifted.i.i.i10.i, %product.i.i.i9.i
  %hash.i.i.i12.i = and i64 %xored.i.i.i11.i, %tbl_size.i.i7.i
  %offset_ptr.i.i13.i = getelementptr i32, ptr %offset_tbl.i.i8.i, i64 %hash.i.i.i12.i
  %offset.i.i14.i = load i32, ptr %offset_ptr.i.i13.i, align 4, !noalias !330
  %263 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %254, 0
  %264 = insertvalue { ptr, ptr, ptr, i32 } %263, ptr %261, 1
  %265 = insertvalue { ptr, ptr, ptr, i32 } %264, ptr %262, 2
  %266 = insertvalue { ptr, ptr, ptr, i32 } %265, i32 %offset.i.i14.i, 3
  %267 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %268 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %254) #37
  %269 = sext i32 %offset.i.i14.i to i64
  %270 = getelementptr ptr, ptr %254, i64 %269
  %271 = getelementptr i8, ptr %270, i64 64
  %272 = load ptr, ptr %271, align 8
  %result.i.i1112 = call ptr %272({ ptr, ptr, ptr, i32 } %266, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %273 = call i32 %result.i.i1112({ ptr, ptr, ptr, i32 } %266, { ptr, ptr, ptr, i32 } %266, ptr nonnull align 8 %2) #42
  %274 = icmp eq i32 %273, %245
  br i1 %274, label %._crit_edge.i1113, label %356

._crit_edge.i1113:                                ; preds = %258
  %275 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %276 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %254)
  %277 = getelementptr i8, ptr %270, i64 48
  %278 = load ptr, ptr %277, align 8
  %result.i16.i1114 = call ptr %278({ ptr, ptr, ptr, i32 } %266, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %279 = call { ptr, i160 } %result.i16.i1114({ ptr, ptr, ptr, i32 } %266, { ptr, ptr, ptr, i32 } %266, ptr nonnull align 8 %2) #42
  %280 = load ptr, ptr %82, align 8
  %281 = call i1 %280({ ptr, i160 } %279, { ptr, i160 } %124) #42
  br i1 %281, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, label %356

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit: ; preds = %._crit_edge.i1113
  %282 = load ptr, ptr %result.i8, align 8
  %283 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %284 = load ptr, ptr %76, align 8
  %285 = load ptr, ptr %282, align 8, !alias.scope !333
  %286 = getelementptr i8, ptr %285, i64 72
  %287 = load ptr, ptr %286, align 8, !alias.scope !333
  %result.i.i.i1115 = call { i64, i64 } %287(ptr nocapture nofree nonnull readonly align 8 %282) #41, !alias.scope !333
  %288 = extractvalue { i64, i64 } %result.i.i.i1115, 0
  %289 = extractvalue { i64, i64 } %result.i.i.i1115, 1
  %290 = urem i64 20, %289
  %291 = icmp eq i64 %290, 0
  %292 = sub i64 %289, %290
  %293 = select i1 %291, i64 0, i64 %292
  %294 = add i64 %288, 20
  %295 = add i64 %294, %293
  %296 = load ptr, ptr %284, align 8, !alias.scope !333
  %297 = getelementptr i8, ptr %296, i64 72
  %298 = load ptr, ptr %297, align 8, !alias.scope !333
  %result.i1.i.i1116 = call { i64, i64 } %298(ptr nocapture nofree nonnull readonly align 8 %284) #41, !alias.scope !333
  %299 = extractvalue { i64, i64 } %result.i1.i.i1116, 0
  %300 = extractvalue { i64, i64 } %result.i1.i.i1116, 1
  %301 = call i64 @llvm.umax.i64(i64 %289, i64 %300) #38
  %302 = call i64 @llvm.umax.i64(i64 %301, i64 noundef 8) #38, !range !16
  %303 = urem i64 %295, %300
  %304 = icmp eq i64 %303, 0
  %305 = sub i64 %300, %303
  %306 = select i1 %304, i64 0, i64 %305
  %307 = add i64 %299, %295
  %308 = add i64 %307, %306
  %309 = urem i64 %308, %302
  %310 = icmp eq i64 %309, 0
  %311 = sub i64 %302, %309
  %312 = select i1 %310, i64 0, i64 %311
  %313 = add i64 %312, %308
  %result.i20.i1117 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %313, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %282, ptr %result.i20.i1117, align 8
  %314 = getelementptr inbounds i8, ptr %result.i20.i1117, i64 8
  store ptr %284, ptr %314, align 8
  %315 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i1117)
  %316 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %317 = load ptr, ptr %282, align 8
  %318 = getelementptr i8, ptr %317, i64 72
  %319 = load ptr, ptr %318, align 8
  %result.i.i54.i = call { i64, i64 } %319(ptr nocapture nofree nonnull readonly align 8 %282) #41
  %320 = extractvalue { i64, i64 } %result.i.i54.i, 1
  %321 = urem i64 20, %320
  %322 = icmp eq i64 %321, 0
  %reass.sub3859 = sub i64 %320, %321
  %323 = add i64 %reass.sub3859, 20
  %324 = select i1 %322, i64 20, i64 %323
  %325 = getelementptr i8, ptr %result.i20.i1117, i64 %324
  %326 = getelementptr i8, ptr %317, i64 64
  %327 = load ptr, ptr %326, align 8
  call void %327({ ptr, i160 } %124, ptr nocapture nofree nonnull readonly align 8 %282, ptr nocapture nofree writeonly %325) #49
  %328 = load ptr, ptr %result.i20.i1117, align 8
  %329 = load ptr, ptr %328, align 8
  %330 = getelementptr i8, ptr %329, i64 72
  %331 = load ptr, ptr %330, align 8
  %result.i.i55.i = call { i64, i64 } %331(ptr nocapture nofree nonnull readonly align 8 %328) #41
  %332 = extractvalue { i64, i64 } %result.i.i55.i, 0
  %333 = extractvalue { i64, i64 } %result.i.i55.i, 1
  %334 = urem i64 20, %333
  %335 = icmp eq i64 %334, 0
  %336 = sub i64 %333, %334
  %337 = select i1 %335, i64 0, i64 %336
  %338 = add i64 %332, 20
  %339 = add i64 %338, %337
  %340 = load ptr, ptr %314, align 8
  %341 = load ptr, ptr %340, align 8
  %342 = getelementptr i8, ptr %341, i64 72
  %343 = load ptr, ptr %342, align 8
  %result.i1.i56.i = call { i64, i64 } %343(ptr nocapture nofree nonnull readonly align 8 %340) #41
  %344 = extractvalue { i64, i64 } %result.i1.i56.i, 1
  %345 = urem i64 %339, %344
  %346 = icmp eq i64 %345, 0
  %347 = sub i64 %344, %345
  %348 = select i1 %346, i64 0, i64 %347
  %349 = getelementptr i8, ptr %result.i20.i1117, i64 %339
  %350 = getelementptr i8, ptr %349, i64 %348
  %351 = getelementptr i8, ptr %341, i64 64
  %352 = load ptr, ptr %351, align 8
  call void %352({ ptr, i160 } %243, ptr nocapture nofree nonnull readonly align 8 %340, ptr nocapture nofree writeonly %350) #49
  %353 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %354 = getelementptr inbounds i8, ptr %result.i20.i1117, i64 16
  store i32 %245, ptr %354, align 8
  store ptr @Entry, ptr %253, align 8
  %355 = ptrtoint ptr %result.i20.i1117 to i64
  store i64 %355, ptr %255, align 4
  %.sroa_idx28.i = getelementptr i8, ptr %253, i64 24
  store i32 10, ptr %.sroa_idx28.i, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit

356:                                              ; preds = %._crit_edge.i1113, %241, %258
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %357 = add i32 %245, 2127912214
  %358 = shl i32 %245, 12
  %359 = add i32 %357, %358
  %360 = ashr i32 %359, 19
  %361 = xor i32 %359, %360
  %362 = xor i32 %361, -949894596
  %363 = add i32 %362, 374761393
  %364 = shl i32 %362, 5
  %365 = add i32 %363, %364
  %366 = add i32 %365, -744332180
  %367 = shl i32 %365, 9
  %368 = xor i32 %366, %367
  %369 = add i32 %368, -42973499
  %370 = shl i32 %368, 3
  %371 = add i32 %369, %370
  %372 = ashr i32 %371, 16
  %373 = xor i32 %371, %372
  %374 = xor i32 %373, -1252372727
  %375 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %376 = load i32, ptr %83, align 8
  %377 = add i32 %376, -1
  %378 = and i32 %377, %374
  %379 = load ptr, ptr %85, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %380 = sext i32 %378 to i64
  %381 = shl nsw i64 %380, 5
  %382 = getelementptr i8, ptr %379, i64 %381
  %383 = load ptr, ptr %382, align 8
  %384 = getelementptr i8, ptr %382, i64 8
  %385 = icmp ne ptr %383, @nil_typ
  %386 = icmp ne ptr %383, null
  %.not64.i1147 = and i1 %385, %386
  br i1 %.not64.i1147, label %387, label %485

387:                                              ; preds = %356
  %388 = load i64, ptr %384, align 4
  %.sroa_idx.i1149 = getelementptr i8, ptr %382, i64 16
  %389 = load i64, ptr %.sroa_idx.i1149, align 4
  %390 = inttoptr i64 %388 to ptr
  %391 = inttoptr i64 %389 to ptr
  %hash_coef_ptr.i.i3.i1150 = getelementptr i8, ptr %383, i64 8
  %tbl_size_ptr.i.i4.i1151 = getelementptr i8, ptr %383, i64 16
  %offset_tbl_ptr.i.i5.i1152 = getelementptr i8, ptr %383, i64 40
  %hash_coef.i.i6.i1153 = load i64, ptr %hash_coef_ptr.i.i3.i1150, align 4, !noalias !336
  %tbl_size.i.i7.i1154 = load i64, ptr %tbl_size_ptr.i.i4.i1151, align 4, !noalias !336
  %offset_tbl.i.i8.i1155 = load ptr, ptr %offset_tbl_ptr.i.i5.i1152, align 8, !noalias !336
  %product.i.i.i9.i1156 = mul i64 %hash_coef.i.i6.i1153, 4015701072841558310
  %shifted.i.i.i10.i1157 = lshr i64 %product.i.i.i9.i1156, 32
  %xored.i.i.i11.i1158 = xor i64 %shifted.i.i.i10.i1157, %product.i.i.i9.i1156
  %hash.i.i.i12.i1159 = and i64 %xored.i.i.i11.i1158, %tbl_size.i.i7.i1154
  %offset_ptr.i.i13.i1160 = getelementptr i32, ptr %offset_tbl.i.i8.i1155, i64 %hash.i.i.i12.i1159
  %offset.i.i14.i1161 = load i32, ptr %offset_ptr.i.i13.i1160, align 4, !noalias !336
  %392 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %383, 0
  %393 = insertvalue { ptr, ptr, ptr, i32 } %392, ptr %390, 1
  %394 = insertvalue { ptr, ptr, ptr, i32 } %393, ptr %391, 2
  %395 = insertvalue { ptr, ptr, ptr, i32 } %394, i32 %offset.i.i14.i1161, 3
  %396 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %397 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %383) #37
  %398 = sext i32 %offset.i.i14.i1161 to i64
  %399 = getelementptr ptr, ptr %383, i64 %398
  %400 = getelementptr i8, ptr %399, i64 64
  %401 = load ptr, ptr %400, align 8
  %result.i.i1162 = call ptr %401({ ptr, ptr, ptr, i32 } %395, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %402 = call i32 %result.i.i1162({ ptr, ptr, ptr, i32 } %395, { ptr, ptr, ptr, i32 } %395, ptr nonnull align 8 %2) #42
  %403 = icmp eq i32 %402, %245
  br i1 %403, label %._crit_edge.i1163, label %485

._crit_edge.i1163:                                ; preds = %387
  %404 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %405 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %383)
  %406 = getelementptr i8, ptr %399, i64 48
  %407 = load ptr, ptr %406, align 8
  %result.i16.i1164 = call ptr %407({ ptr, ptr, ptr, i32 } %395, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %408 = call { ptr, i160 } %result.i16.i1164({ ptr, ptr, ptr, i32 } %395, { ptr, ptr, ptr, i32 } %395, ptr nonnull align 8 %2) #42
  %409 = load ptr, ptr %82, align 8
  %410 = call i1 %409({ ptr, i160 } %408, { ptr, i160 } %124) #42
  br i1 %410, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1176, label %485

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1176: ; preds = %._crit_edge.i1163
  %411 = load ptr, ptr %result.i8, align 8
  %412 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %413 = load ptr, ptr %76, align 8
  %414 = load ptr, ptr %411, align 8, !alias.scope !339
  %415 = getelementptr i8, ptr %414, i64 72
  %416 = load ptr, ptr %415, align 8, !alias.scope !339
  %result.i.i.i1168 = call { i64, i64 } %416(ptr nocapture nofree nonnull readonly align 8 %411) #41, !alias.scope !339
  %417 = extractvalue { i64, i64 } %result.i.i.i1168, 0
  %418 = extractvalue { i64, i64 } %result.i.i.i1168, 1
  %419 = urem i64 20, %418
  %420 = icmp eq i64 %419, 0
  %421 = sub i64 %418, %419
  %422 = select i1 %420, i64 0, i64 %421
  %423 = add i64 %417, 20
  %424 = add i64 %423, %422
  %425 = load ptr, ptr %413, align 8, !alias.scope !339
  %426 = getelementptr i8, ptr %425, i64 72
  %427 = load ptr, ptr %426, align 8, !alias.scope !339
  %result.i1.i.i1169 = call { i64, i64 } %427(ptr nocapture nofree nonnull readonly align 8 %413) #41, !alias.scope !339
  %428 = extractvalue { i64, i64 } %result.i1.i.i1169, 0
  %429 = extractvalue { i64, i64 } %result.i1.i.i1169, 1
  %430 = call i64 @llvm.umax.i64(i64 %418, i64 %429) #38
  %431 = call i64 @llvm.umax.i64(i64 %430, i64 noundef 8) #38, !range !16
  %432 = urem i64 %424, %429
  %433 = icmp eq i64 %432, 0
  %434 = sub i64 %429, %432
  %435 = select i1 %433, i64 0, i64 %434
  %436 = add i64 %428, %424
  %437 = add i64 %436, %435
  %438 = urem i64 %437, %431
  %439 = icmp eq i64 %438, 0
  %440 = sub i64 %431, %438
  %441 = select i1 %439, i64 0, i64 %440
  %442 = add i64 %441, %437
  %result.i20.i1170 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %442, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %411, ptr %result.i20.i1170, align 8
  %443 = getelementptr inbounds i8, ptr %result.i20.i1170, i64 8
  store ptr %413, ptr %443, align 8
  %444 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i1170)
  %445 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %446 = load ptr, ptr %411, align 8
  %447 = getelementptr i8, ptr %446, i64 72
  %448 = load ptr, ptr %447, align 8
  %result.i.i54.i1171 = call { i64, i64 } %448(ptr nocapture nofree nonnull readonly align 8 %411) #41
  %449 = extractvalue { i64, i64 } %result.i.i54.i1171, 1
  %450 = urem i64 20, %449
  %451 = icmp eq i64 %450, 0
  %reass.sub3858 = sub i64 %449, %450
  %452 = add i64 %reass.sub3858, 20
  %453 = select i1 %451, i64 20, i64 %452
  %454 = getelementptr i8, ptr %result.i20.i1170, i64 %453
  %455 = getelementptr i8, ptr %446, i64 64
  %456 = load ptr, ptr %455, align 8
  call void %456({ ptr, i160 } %124, ptr nocapture nofree nonnull readonly align 8 %411, ptr nocapture nofree writeonly %454) #49
  %457 = load ptr, ptr %result.i20.i1170, align 8
  %458 = load ptr, ptr %457, align 8
  %459 = getelementptr i8, ptr %458, i64 72
  %460 = load ptr, ptr %459, align 8
  %result.i.i55.i1173 = call { i64, i64 } %460(ptr nocapture nofree nonnull readonly align 8 %457) #41
  %461 = extractvalue { i64, i64 } %result.i.i55.i1173, 0
  %462 = extractvalue { i64, i64 } %result.i.i55.i1173, 1
  %463 = urem i64 20, %462
  %464 = icmp eq i64 %463, 0
  %465 = sub i64 %462, %463
  %466 = select i1 %464, i64 0, i64 %465
  %467 = add i64 %461, 20
  %468 = add i64 %467, %466
  %469 = load ptr, ptr %443, align 8
  %470 = load ptr, ptr %469, align 8
  %471 = getelementptr i8, ptr %470, i64 72
  %472 = load ptr, ptr %471, align 8
  %result.i1.i56.i1174 = call { i64, i64 } %472(ptr nocapture nofree nonnull readonly align 8 %469) #41
  %473 = extractvalue { i64, i64 } %result.i1.i56.i1174, 1
  %474 = urem i64 %468, %473
  %475 = icmp eq i64 %474, 0
  %476 = sub i64 %473, %474
  %477 = select i1 %475, i64 0, i64 %476
  %478 = getelementptr i8, ptr %result.i20.i1170, i64 %468
  %479 = getelementptr i8, ptr %478, i64 %477
  %480 = getelementptr i8, ptr %470, i64 64
  %481 = load ptr, ptr %480, align 8
  call void %481({ ptr, i160 } %243, ptr nocapture nofree nonnull readonly align 8 %469, ptr nocapture nofree writeonly %479) #49
  %482 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %483 = getelementptr inbounds i8, ptr %result.i20.i1170, i64 16
  store i32 %245, ptr %483, align 8
  store ptr @Entry, ptr %382, align 8
  %484 = ptrtoint ptr %result.i20.i1170 to i64
  store i64 %484, ptr %384, align 4
  %.sroa_idx28.i1175 = getelementptr i8, ptr %382, i64 24
  store i32 10, ptr %.sroa_idx28.i1175, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit

485:                                              ; preds = %._crit_edge.i1163, %356, %387
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %486 = load i32, ptr %109, align 4
  %487 = load i32, ptr %83, align 8
  %.not.i = icmp slt i32 %486, %487
  br i1 %.not.i, label %._crit_edge.i, label %488

488:                                              ; preds = %485
  %489 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %490 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %491 = load ptr, ptr %84, align 8
  %492 = load ptr, ptr %85, align 8
  %493 = shl i32 %487, 1
  %spec.select.i1191 = call i32 @llvm.smax.i32(i32 %493, i32 noundef 16) #37
  store i32 %spec.select.i1191, ptr %83, align 8
  %494 = zext nneg i32 %spec.select.i1191 to i64
  %495 = shl nuw nsw i64 %494, 5
  %result.i.i1192 = call noalias ptr @bump_malloc_inner(i64 noundef %495, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i1192, ptr %84, align 8
  %result.i1.i = call noalias ptr @bump_malloc_inner(i64 noundef %495, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i, ptr %85, align 8
  store i32 0, ptr %109, align 4
  %496 = icmp sgt i32 %487, 0
  br i1 %496, label %.lr.ph.i, label %._crit_edge.i

.lr.ph.i:                                         ; preds = %488, %._crit_edge.i2252
  %.045.i = phi i32 [ %553, %._crit_edge.i2252 ], [ 0, %488 ]
  %497 = zext nneg i32 %.045.i to i64
  %498 = shl nuw nsw i64 %497, 5
  %499 = getelementptr i8, ptr %491, i64 %498
  %500 = load ptr, ptr %499, align 8
  %501 = icmp ne ptr %500, @nil_typ
  %502 = icmp ne ptr %500, null
  %.not16.i = and i1 %501, %502
  br i1 %.not16.i, label %503, label %._crit_edge.i2252

503:                                              ; preds = %.lr.ph.i
  %504 = getelementptr i8, ptr %499, i64 8
  %505 = load i64, ptr %504, align 4
  %.sroa_idx.i2253 = getelementptr i8, ptr %499, i64 16
  %506 = load i64, ptr %.sroa_idx.i2253, align 4
  %hash_coef_ptr.i.i3.i2254 = getelementptr i8, ptr %500, i64 8
  %tbl_size_ptr.i.i4.i2255 = getelementptr i8, ptr %500, i64 16
  %offset_tbl_ptr.i.i5.i2256 = getelementptr i8, ptr %500, i64 40
  %507 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %48)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %49)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %50)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %51)
  %hash_coef.i.i17.i = load i64, ptr %hash_coef_ptr.i.i3.i2254, align 4, !noalias !23
  %tbl_size.i.i18.i = load i64, ptr %tbl_size_ptr.i.i4.i2255, align 4, !noalias !23
  %offset_tbl.i.i19.i = load ptr, ptr %offset_tbl_ptr.i.i5.i2256, align 8, !noalias !23
  %product.i.i.i20.i = mul i64 %hash_coef.i.i17.i, 4015701072841558310
  %shifted.i.i.i21.i = lshr i64 %product.i.i.i20.i, 32
  %xored.i.i.i22.i = xor i64 %shifted.i.i.i21.i, %product.i.i.i20.i
  %hash.i.i.i23.i = and i64 %xored.i.i.i22.i, %tbl_size.i.i18.i
  %offset_ptr.i.i24.i = getelementptr i32, ptr %offset_tbl.i.i19.i, i64 %hash.i.i.i23.i
  %offset.i.i39.i = load i32, ptr %offset_ptr.i.i24.i, align 4, !noalias !342
  %508 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %509 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %510 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %511

511:                                              ; preds = %.cont.i2782, %503
  %.0308.i2765 = phi i32 [ 0, %503 ], [ %544, %.cont.i2782 ]
  %.070307.i2766 = phi i1 [ true, %503 ], [ %545, %.cont.i2782 ]
  %.sroa.0.0306.i2767 = phi ptr [ %500, %503 ], [ %534, %.cont.i2782 ]
  %.sroa.6.0305.i2768.in = phi i64 [ %505, %503 ], [ %536, %.cont.i2782 ]
  %.sroa.12.0304.i2769.in = phi i64 [ %506, %503 ], [ %537, %.cont.i2782 ]
  %.sroa.17.0303.i2770 = phi i32 [ %offset.i.i39.i, %503 ], [ %offset.i.i71.i2796, %.cont.i2782 ]
  %.sroa.12.0304.i2769 = inttoptr i64 %.sroa.12.0304.i2769.in to ptr
  %.sroa.6.0305.i2768 = inttoptr i64 %.sroa.6.0305.i2768.in to ptr
  %512 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2767, 0
  %513 = insertvalue { ptr, ptr, ptr, i32 } %512, ptr %.sroa.6.0305.i2768, 1
  %514 = insertvalue { ptr, ptr, ptr, i32 } %513, ptr %.sroa.12.0304.i2769, 2
  %515 = insertvalue { ptr, ptr, ptr, i32 } %514, i32 %.sroa.17.0303.i2770, 3
  %516 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2767)
  %517 = sext i32 %.sroa.17.0303.i2770 to i64
  %518 = getelementptr ptr, ptr %.sroa.0.0306.i2767, i64 %517
  %519 = getelementptr i8, ptr %518, i64 64
  %520 = load ptr, ptr %519, align 8
  %result.i43.i2771 = call ptr %520({ ptr, ptr, ptr, i32 } %515, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %521 = call i32 %result.i43.i2771({ ptr, ptr, ptr, i32 } %515, { ptr, ptr, ptr, i32 } %515, ptr nonnull align 8 %2) #42
  %..i2772 = select i1 %.070307.i2766, ptr %48, ptr %50
  %.184.i2773 = select i1 %.070307.i2766, i64 104, i64 112
  %.185.i2774 = select i1 %.070307.i2766, ptr %49, ptr %51
  %.186.i2775 = select i1 %.070307.i2766, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2772, align 8
  %522 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2772)
  %523 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2773
  %524 = load ptr, ptr %523, align 8
  store ptr @i32_typ, ptr %.185.i2774, align 8
  %result.i44.i2776 = call ptr %524({ ptr, ptr, ptr, i32 } %117, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2774) #45
  %525 = call i32 %result.i44.i2776({ ptr, ptr, ptr, i32 } %117, { ptr, ptr, ptr, i32 } %117, ptr nonnull align 8 dereferenceable(8) %..i2772, i32 %521) #42
  %526 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %527 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2775
  %528 = load ptr, ptr %527, align 8
  %529 = load ptr, ptr %528, align 8
  %530 = call { ptr } %529(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i2777 = extractvalue { ptr } %530, 0
  %531 = sext i32 %525 to i64
  %532 = shl nsw i64 %531, 5
  %533 = getelementptr i8, ptr %.fca.0.extract53.i2777, i64 %532
  %534 = load ptr, ptr %533, align 8
  %535 = getelementptr i8, ptr %533, i64 8
  %536 = load i64, ptr %535, align 4
  %.sroa_idx.i2778 = getelementptr i8, ptr %533, i64 16
  %537 = load i64, ptr %.sroa_idx.i2778, align 4
  %538 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %539 = call { ptr } %529(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i = extractvalue { ptr } %539, 0
  %540 = getelementptr i8, ptr %.fca.0.extract51.i, i64 %532
  store ptr %.sroa.0.0306.i2767, ptr %540, align 8
  %541 = getelementptr i8, ptr %540, i64 8
  store i64 %.sroa.6.0305.i2768.in, ptr %541, align 4
  %.sroa_idx100.i2779 = getelementptr i8, ptr %540, i64 16
  store i64 %.sroa.12.0304.i2769.in, ptr %.sroa_idx100.i2779, align 4
  %.sroa_idx101.i2780 = getelementptr i8, ptr %540, i64 24
  store i32 %.sroa.17.0303.i2770, ptr %.sroa_idx101.i2780, align 4
  %542 = icmp ne ptr %534, @nil_typ
  %543 = icmp ne ptr %534, null
  %.not90.i2781 = and i1 %542, %543
  br i1 %.not90.i2781, label %.cont.i2782, label %549

.cont.i2782:                                      ; preds = %511
  %544 = add nuw nsw i32 %.0308.i2765, 1
  %545 = xor i1 %.070307.i2766, true
  %hash_coef_ptr.i.i60.i2785 = getelementptr i8, ptr %534, i64 8
  %tbl_size_ptr.i.i61.i2786 = getelementptr i8, ptr %534, i64 16
  %offset_tbl_ptr.i.i62.i2787 = getelementptr i8, ptr %534, i64 40
  %hash_coef.i.i63.i2788 = load i64, ptr %hash_coef_ptr.i.i60.i2785, align 4
  %tbl_size.i.i64.i2789 = load i64, ptr %tbl_size_ptr.i.i61.i2786, align 4
  %offset_tbl.i.i65.i2790 = load ptr, ptr %offset_tbl_ptr.i.i62.i2787, align 8
  %product.i.i.i66.i2791 = mul i64 %hash_coef.i.i63.i2788, 4015701072841558310
  %shifted.i.i.i67.i2792 = lshr i64 %product.i.i.i66.i2791, 32
  %xored.i.i.i68.i2793 = xor i64 %shifted.i.i.i67.i2792, %product.i.i.i66.i2791
  %hash.i.i.i69.i2794 = and i64 %xored.i.i.i68.i2793, %tbl_size.i.i64.i2789
  %offset_ptr.i.i70.i2795 = getelementptr i32, ptr %offset_tbl.i.i65.i2790, i64 %hash.i.i.i69.i2794
  %offset.i.i71.i2796 = load i32, ptr %offset_ptr.i.i70.i2795, align 4
  %546 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %547 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %548 = icmp ult i32 %.0308.i2765, 99
  br i1 %548, label %511, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2798

549:                                              ; preds = %511
  %550 = load i32, ptr %109, align 4
  %551 = add i32 %550, 1
  %552 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %551, ptr %109, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2798

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2798: ; preds = %.cont.i2782, %549
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %48)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %49)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %50)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %51)
  br label %._crit_edge.i2252

._crit_edge.i2252:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2798, %.lr.ph.i
  %553 = add nuw nsw i32 %.045.i, 1
  %554 = icmp slt i32 %553, %487
  br i1 %554, label %.lr.ph.i, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit: ; preds = %._crit_edge.i2252, %._crit_edge.i2282
  %.045.i2280 = phi i32 [ %611, %._crit_edge.i2282 ], [ 0, %._crit_edge.i2252 ]
  %555 = zext nneg i32 %.045.i2280 to i64
  %556 = shl nuw nsw i64 %555, 5
  %557 = getelementptr i8, ptr %492, i64 %556
  %558 = load ptr, ptr %557, align 8
  %559 = icmp ne ptr %558, @nil_typ
  %560 = icmp ne ptr %558, null
  %.not16.i2281 = and i1 %559, %560
  br i1 %.not16.i2281, label %561, label %._crit_edge.i2282

561:                                              ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit
  %562 = getelementptr i8, ptr %557, i64 8
  %563 = load i64, ptr %562, align 4
  %.sroa_idx.i2283 = getelementptr i8, ptr %557, i64 16
  %564 = load i64, ptr %.sroa_idx.i2283, align 4
  %hash_coef_ptr.i.i3.i2284 = getelementptr i8, ptr %558, i64 8
  %tbl_size_ptr.i.i4.i2285 = getelementptr i8, ptr %558, i64 16
  %offset_tbl_ptr.i.i5.i2286 = getelementptr i8, ptr %558, i64 40
  %565 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %44)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %45)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %46)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %47)
  %hash_coef.i.i17.i2816 = load i64, ptr %hash_coef_ptr.i.i3.i2284, align 4, !noalias !23
  %tbl_size.i.i18.i2817 = load i64, ptr %tbl_size_ptr.i.i4.i2285, align 4, !noalias !23
  %offset_tbl.i.i19.i2818 = load ptr, ptr %offset_tbl_ptr.i.i5.i2286, align 8, !noalias !23
  %product.i.i.i20.i2819 = mul i64 %hash_coef.i.i17.i2816, 4015701072841558310
  %shifted.i.i.i21.i2820 = lshr i64 %product.i.i.i20.i2819, 32
  %xored.i.i.i22.i2821 = xor i64 %shifted.i.i.i21.i2820, %product.i.i.i20.i2819
  %hash.i.i.i23.i2822 = and i64 %xored.i.i.i22.i2821, %tbl_size.i.i18.i2817
  %offset_ptr.i.i24.i2823 = getelementptr i32, ptr %offset_tbl.i.i19.i2818, i64 %hash.i.i.i23.i2822
  %offset.i.i39.i2824 = load i32, ptr %offset_ptr.i.i24.i2823, align 4, !noalias !345
  %566 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %567 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %568 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %569

569:                                              ; preds = %.cont.i2847, %561
  %.0308.i2825 = phi i32 [ 0, %561 ], [ %602, %.cont.i2847 ]
  %.070307.i2826 = phi i1 [ true, %561 ], [ %603, %.cont.i2847 ]
  %.sroa.0.0306.i2827 = phi ptr [ %558, %561 ], [ %592, %.cont.i2847 ]
  %.sroa.6.0305.i2828.in = phi i64 [ %563, %561 ], [ %594, %.cont.i2847 ]
  %.sroa.12.0304.i2829.in = phi i64 [ %564, %561 ], [ %595, %.cont.i2847 ]
  %.sroa.17.0303.i2830 = phi i32 [ %offset.i.i39.i2824, %561 ], [ %offset.i.i71.i2861, %.cont.i2847 ]
  %.sroa.12.0304.i2829 = inttoptr i64 %.sroa.12.0304.i2829.in to ptr
  %.sroa.6.0305.i2828 = inttoptr i64 %.sroa.6.0305.i2828.in to ptr
  %570 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2827, 0
  %571 = insertvalue { ptr, ptr, ptr, i32 } %570, ptr %.sroa.6.0305.i2828, 1
  %572 = insertvalue { ptr, ptr, ptr, i32 } %571, ptr %.sroa.12.0304.i2829, 2
  %573 = insertvalue { ptr, ptr, ptr, i32 } %572, i32 %.sroa.17.0303.i2830, 3
  %574 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2827)
  %575 = sext i32 %.sroa.17.0303.i2830 to i64
  %576 = getelementptr ptr, ptr %.sroa.0.0306.i2827, i64 %575
  %577 = getelementptr i8, ptr %576, i64 64
  %578 = load ptr, ptr %577, align 8
  %result.i43.i2831 = call ptr %578({ ptr, ptr, ptr, i32 } %573, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %579 = call i32 %result.i43.i2831({ ptr, ptr, ptr, i32 } %573, { ptr, ptr, ptr, i32 } %573, ptr nonnull align 8 %2) #42
  %..i2832 = select i1 %.070307.i2826, ptr %44, ptr %46
  %.184.i2833 = select i1 %.070307.i2826, i64 104, i64 112
  %.185.i2834 = select i1 %.070307.i2826, ptr %45, ptr %47
  %.186.i2835 = select i1 %.070307.i2826, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2832, align 8
  %580 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2832)
  %581 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2833
  %582 = load ptr, ptr %581, align 8
  store ptr @i32_typ, ptr %.185.i2834, align 8
  %result.i44.i2836 = call ptr %582({ ptr, ptr, ptr, i32 } %117, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2834) #45
  %583 = call i32 %result.i44.i2836({ ptr, ptr, ptr, i32 } %117, { ptr, ptr, ptr, i32 } %117, ptr nonnull align 8 dereferenceable(8) %..i2832, i32 %579) #42
  %584 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %585 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2835
  %586 = load ptr, ptr %585, align 8
  %587 = load ptr, ptr %586, align 8
  %588 = call { ptr } %587(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i2837 = extractvalue { ptr } %588, 0
  %589 = sext i32 %583 to i64
  %590 = shl nsw i64 %589, 5
  %591 = getelementptr i8, ptr %.fca.0.extract53.i2837, i64 %590
  %592 = load ptr, ptr %591, align 8
  %593 = getelementptr i8, ptr %591, i64 8
  %594 = load i64, ptr %593, align 4
  %.sroa_idx.i2838 = getelementptr i8, ptr %591, i64 16
  %595 = load i64, ptr %.sroa_idx.i2838, align 4
  %596 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %597 = call { ptr } %587(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i2839 = extractvalue { ptr } %597, 0
  %598 = getelementptr i8, ptr %.fca.0.extract51.i2839, i64 %590
  store ptr %.sroa.0.0306.i2827, ptr %598, align 8
  %599 = getelementptr i8, ptr %598, i64 8
  store i64 %.sroa.6.0305.i2828.in, ptr %599, align 4
  %.sroa_idx100.i2840 = getelementptr i8, ptr %598, i64 16
  store i64 %.sroa.12.0304.i2829.in, ptr %.sroa_idx100.i2840, align 4
  %.sroa_idx101.i2841 = getelementptr i8, ptr %598, i64 24
  store i32 %.sroa.17.0303.i2830, ptr %.sroa_idx101.i2841, align 4
  %600 = icmp ne ptr %592, @nil_typ
  %601 = icmp ne ptr %592, null
  %.not90.i2842 = and i1 %600, %601
  br i1 %.not90.i2842, label %.cont.i2847, label %607

.cont.i2847:                                      ; preds = %569
  %602 = add nuw nsw i32 %.0308.i2825, 1
  %603 = xor i1 %.070307.i2826, true
  %hash_coef_ptr.i.i60.i2850 = getelementptr i8, ptr %592, i64 8
  %tbl_size_ptr.i.i61.i2851 = getelementptr i8, ptr %592, i64 16
  %offset_tbl_ptr.i.i62.i2852 = getelementptr i8, ptr %592, i64 40
  %hash_coef.i.i63.i2853 = load i64, ptr %hash_coef_ptr.i.i60.i2850, align 4
  %tbl_size.i.i64.i2854 = load i64, ptr %tbl_size_ptr.i.i61.i2851, align 4
  %offset_tbl.i.i65.i2855 = load ptr, ptr %offset_tbl_ptr.i.i62.i2852, align 8
  %product.i.i.i66.i2856 = mul i64 %hash_coef.i.i63.i2853, 4015701072841558310
  %shifted.i.i.i67.i2857 = lshr i64 %product.i.i.i66.i2856, 32
  %xored.i.i.i68.i2858 = xor i64 %shifted.i.i.i67.i2857, %product.i.i.i66.i2856
  %hash.i.i.i69.i2859 = and i64 %xored.i.i.i68.i2858, %tbl_size.i.i64.i2854
  %offset_ptr.i.i70.i2860 = getelementptr i32, ptr %offset_tbl.i.i65.i2855, i64 %hash.i.i.i69.i2859
  %offset.i.i71.i2861 = load i32, ptr %offset_ptr.i.i70.i2860, align 4
  %604 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %605 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %606 = icmp ult i32 %.0308.i2825, 99
  br i1 %606, label %569, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2870

607:                                              ; preds = %569
  %608 = load i32, ptr %109, align 4
  %609 = add i32 %608, 1
  %610 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %609, ptr %109, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2870

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2870: ; preds = %.cont.i2847, %607
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %44)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %45)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %46)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %47)
  br label %._crit_edge.i2282

._crit_edge.i2282:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2870, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit
  %611 = add nuw nsw i32 %.045.i2280, 1
  %612 = icmp slt i32 %611, %487
  br i1 %612, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %._crit_edge.i2282, %488, %485
  %613 = load ptr, ptr %result.i8, align 8
  %614 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %615 = load ptr, ptr %76, align 8
  %616 = load ptr, ptr %613, align 8
  %617 = getelementptr i8, ptr %616, i64 72
  %618 = load ptr, ptr %617, align 8
  %result.i.i.i = call { i64, i64 } %618(ptr nocapture nofree nonnull readonly align 8 %613) #41
  %619 = extractvalue { i64, i64 } %result.i.i.i, 0
  %620 = extractvalue { i64, i64 } %result.i.i.i, 1
  %621 = urem i64 20, %620
  %622 = icmp eq i64 %621, 0
  %623 = sub i64 %620, %621
  %624 = select i1 %622, i64 0, i64 %623
  %625 = add i64 %619, 20
  %626 = add i64 %625, %624
  %627 = load ptr, ptr %615, align 8
  %628 = getelementptr i8, ptr %627, i64 72
  %629 = load ptr, ptr %628, align 8
  %result.i1.i.i = call { i64, i64 } %629(ptr nocapture nofree nonnull readonly align 8 %615) #41
  %630 = extractvalue { i64, i64 } %result.i1.i.i, 0
  %631 = extractvalue { i64, i64 } %result.i1.i.i, 1
  %632 = call i64 @llvm.umax.i64(i64 %620, i64 %631) #38
  %633 = call i64 @llvm.umax.i64(i64 %632, i64 noundef 8) #38, !range !16
  %634 = urem i64 %626, %631
  %635 = icmp eq i64 %634, 0
  %636 = sub i64 %631, %634
  %637 = select i1 %635, i64 0, i64 %636
  %638 = add i64 %630, %626
  %639 = add i64 %638, %637
  %640 = urem i64 %639, %633
  %641 = icmp eq i64 %640, 0
  %642 = sub i64 %633, %640
  %643 = select i1 %641, i64 0, i64 %642
  %644 = add i64 %643, %639
  %result.i16.i = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %644, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %613, ptr %result.i16.i, align 8
  %645 = getelementptr inbounds i8, ptr %result.i16.i, i64 8
  store ptr %615, ptr %645, align 8
  %646 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i16.i)
  %647 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %648 = load ptr, ptr %613, align 8
  %649 = getelementptr i8, ptr %648, i64 72
  %650 = load ptr, ptr %649, align 8
  %result.i.i110.i = call { i64, i64 } %650(ptr nocapture nofree nonnull readonly align 8 %613) #41
  %651 = extractvalue { i64, i64 } %result.i.i110.i, 1
  %652 = urem i64 20, %651
  %653 = icmp eq i64 %652, 0
  %reass.sub3857 = sub i64 %651, %652
  %654 = add i64 %reass.sub3857, 20
  %655 = select i1 %653, i64 20, i64 %654
  %656 = getelementptr i8, ptr %result.i16.i, i64 %655
  %657 = getelementptr i8, ptr %648, i64 64
  %658 = load ptr, ptr %657, align 8
  call void %658({ ptr, i160 } %124, ptr nocapture nofree nonnull readonly align 8 %613, ptr nocapture nofree writeonly %656) #49
  %659 = load ptr, ptr %result.i16.i, align 8
  %660 = load ptr, ptr %659, align 8
  %661 = getelementptr i8, ptr %660, i64 72
  %662 = load ptr, ptr %661, align 8
  %result.i.i111.i = call { i64, i64 } %662(ptr nocapture nofree nonnull readonly align 8 %659) #41
  %663 = extractvalue { i64, i64 } %result.i.i111.i, 0
  %664 = extractvalue { i64, i64 } %result.i.i111.i, 1
  %665 = urem i64 20, %664
  %666 = icmp eq i64 %665, 0
  %667 = sub i64 %664, %665
  %668 = select i1 %666, i64 0, i64 %667
  %669 = add i64 %663, 20
  %670 = add i64 %669, %668
  %671 = load ptr, ptr %645, align 8
  %672 = load ptr, ptr %671, align 8
  %673 = getelementptr i8, ptr %672, i64 72
  %674 = load ptr, ptr %673, align 8
  %result.i1.i112.i = call { i64, i64 } %674(ptr nocapture nofree nonnull readonly align 8 %671) #41
  %675 = extractvalue { i64, i64 } %result.i1.i112.i, 1
  %676 = urem i64 %670, %675
  %677 = icmp eq i64 %676, 0
  %678 = sub i64 %675, %676
  %679 = select i1 %677, i64 0, i64 %678
  %680 = getelementptr i8, ptr %result.i16.i, i64 %670
  %681 = getelementptr i8, ptr %680, i64 %679
  %682 = getelementptr i8, ptr %672, i64 64
  %683 = load ptr, ptr %682, align 8
  call void %683({ ptr, i160 } %243, ptr nocapture nofree nonnull readonly align 8 %671, ptr nocapture nofree writeonly %681) #49
  %684 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %685 = getelementptr inbounds i8, ptr %result.i16.i, i64 16
  store i32 %245, ptr %685, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %64)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %65)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %66)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %67)
  %686 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %687 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %688 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %689

689:                                              ; preds = %.cont.i, %._crit_edge.i
  %.0308.i = phi i32 [ 0, %._crit_edge.i ], [ %724, %.cont.i ]
  %.070307.i = phi i1 [ true, %._crit_edge.i ], [ %725, %.cont.i ]
  %.sroa.0.0306.i = phi ptr [ @Entry, %._crit_edge.i ], [ %712, %.cont.i ]
  %.sroa.6.0305.i = phi ptr [ %result.i16.i, %._crit_edge.i ], [ %.sroa.speculated111.i, %.cont.i ]
  %.sroa.12.0304.i = phi ptr [ undef, %._crit_edge.i ], [ %.sroa.speculated105.i, %.cont.i ]
  %.sroa.17.0303.i = phi i32 [ 10, %._crit_edge.i ], [ %offset.i.i71.i, %.cont.i ]
  %690 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i, 0
  %691 = insertvalue { ptr, ptr, ptr, i32 } %690, ptr %.sroa.6.0305.i, 1
  %692 = insertvalue { ptr, ptr, ptr, i32 } %691, ptr %.sroa.12.0304.i, 2
  %693 = insertvalue { ptr, ptr, ptr, i32 } %692, i32 %.sroa.17.0303.i, 3
  %694 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i)
  %695 = sext i32 %.sroa.17.0303.i to i64
  %696 = getelementptr ptr, ptr %.sroa.0.0306.i, i64 %695
  %697 = getelementptr i8, ptr %696, i64 64
  %698 = load ptr, ptr %697, align 8
  %result.i43.i = call ptr %698({ ptr, ptr, ptr, i32 } %693, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %699 = call i32 %result.i43.i({ ptr, ptr, ptr, i32 } %693, { ptr, ptr, ptr, i32 } %693, ptr nonnull align 8 %2) #42
  %..i = select i1 %.070307.i, ptr %64, ptr %66
  %.184.i = select i1 %.070307.i, i64 104, i64 112
  %.185.i = select i1 %.070307.i, ptr %65, ptr %67
  %.186.i = select i1 %.070307.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i, align 8
  %700 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i)
  %701 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i
  %702 = load ptr, ptr %701, align 8
  store ptr @i32_typ, ptr %.185.i, align 8
  %result.i44.i = call ptr %702({ ptr, ptr, ptr, i32 } %116, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i) #45
  %703 = call i32 %result.i44.i({ ptr, ptr, ptr, i32 } %116, { ptr, ptr, ptr, i32 } %116, ptr nonnull align 8 dereferenceable(8) %..i, i32 %699) #42
  %704 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %705 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i
  %706 = load ptr, ptr %705, align 8
  %707 = load ptr, ptr %706, align 8
  %708 = call { ptr } %707(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i = extractvalue { ptr } %708, 0
  %709 = sext i32 %703 to i64
  %710 = shl nsw i64 %709, 5
  %711 = getelementptr i8, ptr %.fca.0.extract53.i, i64 %710
  %712 = load ptr, ptr %711, align 8
  %713 = getelementptr i8, ptr %711, i64 8
  %714 = load i64, ptr %713, align 4
  %.sroa_idx.i1210 = getelementptr i8, ptr %711, i64 16
  %715 = load i64, ptr %.sroa_idx.i1210, align 4
  %716 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %717 = call { ptr } %707(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i1211 = extractvalue { ptr } %717, 0
  %718 = getelementptr i8, ptr %.fca.0.extract51.i1211, i64 %710
  store ptr %.sroa.0.0306.i, ptr %718, align 8
  %719 = getelementptr i8, ptr %718, i64 8
  %720 = ptrtoint ptr %.sroa.6.0305.i to i64
  %721 = ptrtoint ptr %.sroa.12.0304.i to i64
  store i64 %720, ptr %719, align 4
  %.sroa_idx100.i = getelementptr i8, ptr %718, i64 16
  store i64 %721, ptr %.sroa_idx100.i, align 4
  %.sroa_idx101.i = getelementptr i8, ptr %718, i64 24
  store i32 %.sroa.17.0303.i, ptr %.sroa_idx101.i, align 4
  %722 = icmp ne ptr %712, @nil_typ
  %723 = icmp ne ptr %712, null
  %.not90.i = and i1 %722, %723
  br i1 %.not90.i, label %.cont.i, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit

.cont.i:                                          ; preds = %689
  %724 = add nuw nsw i32 %.0308.i, 1
  %725 = xor i1 %.070307.i, true
  %.sroa.speculated111.i = inttoptr i64 %714 to ptr
  %.sroa.speculated105.i = inttoptr i64 %715 to ptr
  %hash_coef_ptr.i.i60.i = getelementptr i8, ptr %712, i64 8
  %tbl_size_ptr.i.i61.i = getelementptr i8, ptr %712, i64 16
  %offset_tbl_ptr.i.i62.i = getelementptr i8, ptr %712, i64 40
  %hash_coef.i.i63.i = load i64, ptr %hash_coef_ptr.i.i60.i, align 4
  %tbl_size.i.i64.i = load i64, ptr %tbl_size_ptr.i.i61.i, align 4
  %offset_tbl.i.i65.i = load ptr, ptr %offset_tbl_ptr.i.i62.i, align 8
  %product.i.i.i66.i = mul i64 %hash_coef.i.i63.i, 4015701072841558310
  %shifted.i.i.i67.i = lshr i64 %product.i.i.i66.i, 32
  %xored.i.i.i68.i = xor i64 %shifted.i.i.i67.i, %product.i.i.i66.i
  %hash.i.i.i69.i = and i64 %xored.i.i.i68.i, %tbl_size.i.i64.i
  %offset_ptr.i.i70.i = getelementptr i32, ptr %offset_tbl.i.i65.i, i64 %hash.i.i.i69.i
  %offset.i.i71.i = load i32, ptr %offset_ptr.i.i70.i, align 4
  %726 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %727 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %728 = icmp ult i32 %.0308.i, 99
  br i1 %728, label %689, label %732

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit: ; preds = %689
  %729 = load i32, ptr %109, align 4
  %730 = add i32 %729, 1
  %731 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %730, ptr %109, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %64)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %65)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %66)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %67)
  br label %CuckooMap_insert_keyK_valueV.exit

732:                                              ; preds = %.cont.i
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %64)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %65)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %66)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %67)
  %733 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %734 = load ptr, ptr %84, align 8
  %735 = load ptr, ptr %85, align 8
  %736 = load i32, ptr %83, align 8
  %737 = shl i32 %736, 1
  %spec.select.i1228 = call i32 @llvm.smax.i32(i32 %737, i32 noundef 16) #37
  store i32 %spec.select.i1228, ptr %83, align 8
  %738 = zext nneg i32 %spec.select.i1228 to i64
  %739 = shl nuw nsw i64 %738, 5
  %result.i.i1229 = call noalias ptr @bump_malloc_inner(i64 noundef %739, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i1229, ptr %84, align 8
  %result.i1.i1230 = call noalias ptr @bump_malloc_inner(i64 noundef %739, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i1230, ptr %85, align 8
  store i32 0, ptr %109, align 4
  %740 = icmp sgt i32 %736, 0
  br i1 %740, label %.lr.ph.i2302, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2335.thread

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2335.thread: ; preds = %732
  %741 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2370

.lr.ph.i2302:                                     ; preds = %732, %._crit_edge.i2317
  %.045.i2315 = phi i32 [ %798, %._crit_edge.i2317 ], [ 0, %732 ]
  %742 = zext nneg i32 %.045.i2315 to i64
  %743 = shl nuw nsw i64 %742, 5
  %744 = getelementptr i8, ptr %734, i64 %743
  %745 = load ptr, ptr %744, align 8
  %746 = icmp ne ptr %745, @nil_typ
  %747 = icmp ne ptr %745, null
  %.not16.i2316 = and i1 %746, %747
  br i1 %.not16.i2316, label %748, label %._crit_edge.i2317

748:                                              ; preds = %.lr.ph.i2302
  %749 = getelementptr i8, ptr %744, i64 8
  %750 = load i64, ptr %749, align 4
  %.sroa_idx.i2318 = getelementptr i8, ptr %744, i64 16
  %751 = load i64, ptr %.sroa_idx.i2318, align 4
  %hash_coef_ptr.i.i3.i2319 = getelementptr i8, ptr %745, i64 8
  %tbl_size_ptr.i.i4.i2320 = getelementptr i8, ptr %745, i64 16
  %offset_tbl_ptr.i.i5.i2321 = getelementptr i8, ptr %745, i64 40
  %752 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %40)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %41)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %42)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %43)
  %hash_coef.i.i17.i2888 = load i64, ptr %hash_coef_ptr.i.i3.i2319, align 4, !noalias !23
  %tbl_size.i.i18.i2889 = load i64, ptr %tbl_size_ptr.i.i4.i2320, align 4, !noalias !23
  %offset_tbl.i.i19.i2890 = load ptr, ptr %offset_tbl_ptr.i.i5.i2321, align 8, !noalias !23
  %product.i.i.i20.i2891 = mul i64 %hash_coef.i.i17.i2888, 4015701072841558310
  %shifted.i.i.i21.i2892 = lshr i64 %product.i.i.i20.i2891, 32
  %xored.i.i.i22.i2893 = xor i64 %shifted.i.i.i21.i2892, %product.i.i.i20.i2891
  %hash.i.i.i23.i2894 = and i64 %xored.i.i.i22.i2893, %tbl_size.i.i18.i2889
  %offset_ptr.i.i24.i2895 = getelementptr i32, ptr %offset_tbl.i.i19.i2890, i64 %hash.i.i.i23.i2894
  %offset.i.i39.i2896 = load i32, ptr %offset_ptr.i.i24.i2895, align 4, !noalias !348
  %753 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %754 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %755 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %756

756:                                              ; preds = %.cont.i2919, %748
  %.0308.i2897 = phi i32 [ 0, %748 ], [ %789, %.cont.i2919 ]
  %.070307.i2898 = phi i1 [ true, %748 ], [ %790, %.cont.i2919 ]
  %.sroa.0.0306.i2899 = phi ptr [ %745, %748 ], [ %779, %.cont.i2919 ]
  %.sroa.6.0305.i2900.in = phi i64 [ %750, %748 ], [ %781, %.cont.i2919 ]
  %.sroa.12.0304.i2901.in = phi i64 [ %751, %748 ], [ %782, %.cont.i2919 ]
  %.sroa.17.0303.i2902 = phi i32 [ %offset.i.i39.i2896, %748 ], [ %offset.i.i71.i2933, %.cont.i2919 ]
  %.sroa.12.0304.i2901 = inttoptr i64 %.sroa.12.0304.i2901.in to ptr
  %.sroa.6.0305.i2900 = inttoptr i64 %.sroa.6.0305.i2900.in to ptr
  %757 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2899, 0
  %758 = insertvalue { ptr, ptr, ptr, i32 } %757, ptr %.sroa.6.0305.i2900, 1
  %759 = insertvalue { ptr, ptr, ptr, i32 } %758, ptr %.sroa.12.0304.i2901, 2
  %760 = insertvalue { ptr, ptr, ptr, i32 } %759, i32 %.sroa.17.0303.i2902, 3
  %761 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2899)
  %762 = sext i32 %.sroa.17.0303.i2902 to i64
  %763 = getelementptr ptr, ptr %.sroa.0.0306.i2899, i64 %762
  %764 = getelementptr i8, ptr %763, i64 64
  %765 = load ptr, ptr %764, align 8
  %result.i43.i2903 = call ptr %765({ ptr, ptr, ptr, i32 } %760, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %766 = call i32 %result.i43.i2903({ ptr, ptr, ptr, i32 } %760, { ptr, ptr, ptr, i32 } %760, ptr nonnull align 8 %2) #42
  %..i2904 = select i1 %.070307.i2898, ptr %40, ptr %42
  %.184.i2905 = select i1 %.070307.i2898, i64 104, i64 112
  %.185.i2906 = select i1 %.070307.i2898, ptr %41, ptr %43
  %.186.i2907 = select i1 %.070307.i2898, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2904, align 8
  %767 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2904)
  %768 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2905
  %769 = load ptr, ptr %768, align 8
  store ptr @i32_typ, ptr %.185.i2906, align 8
  %result.i44.i2908 = call ptr %769({ ptr, ptr, ptr, i32 } %117, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2906) #45
  %770 = call i32 %result.i44.i2908({ ptr, ptr, ptr, i32 } %117, { ptr, ptr, ptr, i32 } %117, ptr nonnull align 8 dereferenceable(8) %..i2904, i32 %766) #42
  %771 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %772 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2907
  %773 = load ptr, ptr %772, align 8
  %774 = load ptr, ptr %773, align 8
  %775 = call { ptr } %774(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i2909 = extractvalue { ptr } %775, 0
  %776 = sext i32 %770 to i64
  %777 = shl nsw i64 %776, 5
  %778 = getelementptr i8, ptr %.fca.0.extract53.i2909, i64 %777
  %779 = load ptr, ptr %778, align 8
  %780 = getelementptr i8, ptr %778, i64 8
  %781 = load i64, ptr %780, align 4
  %.sroa_idx.i2910 = getelementptr i8, ptr %778, i64 16
  %782 = load i64, ptr %.sroa_idx.i2910, align 4
  %783 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %784 = call { ptr } %774(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i2911 = extractvalue { ptr } %784, 0
  %785 = getelementptr i8, ptr %.fca.0.extract51.i2911, i64 %777
  store ptr %.sroa.0.0306.i2899, ptr %785, align 8
  %786 = getelementptr i8, ptr %785, i64 8
  store i64 %.sroa.6.0305.i2900.in, ptr %786, align 4
  %.sroa_idx100.i2912 = getelementptr i8, ptr %785, i64 16
  store i64 %.sroa.12.0304.i2901.in, ptr %.sroa_idx100.i2912, align 4
  %.sroa_idx101.i2913 = getelementptr i8, ptr %785, i64 24
  store i32 %.sroa.17.0303.i2902, ptr %.sroa_idx101.i2913, align 4
  %787 = icmp ne ptr %779, @nil_typ
  %788 = icmp ne ptr %779, null
  %.not90.i2914 = and i1 %787, %788
  br i1 %.not90.i2914, label %.cont.i2919, label %794

.cont.i2919:                                      ; preds = %756
  %789 = add nuw nsw i32 %.0308.i2897, 1
  %790 = xor i1 %.070307.i2898, true
  %hash_coef_ptr.i.i60.i2922 = getelementptr i8, ptr %779, i64 8
  %tbl_size_ptr.i.i61.i2923 = getelementptr i8, ptr %779, i64 16
  %offset_tbl_ptr.i.i62.i2924 = getelementptr i8, ptr %779, i64 40
  %hash_coef.i.i63.i2925 = load i64, ptr %hash_coef_ptr.i.i60.i2922, align 4
  %tbl_size.i.i64.i2926 = load i64, ptr %tbl_size_ptr.i.i61.i2923, align 4
  %offset_tbl.i.i65.i2927 = load ptr, ptr %offset_tbl_ptr.i.i62.i2924, align 8
  %product.i.i.i66.i2928 = mul i64 %hash_coef.i.i63.i2925, 4015701072841558310
  %shifted.i.i.i67.i2929 = lshr i64 %product.i.i.i66.i2928, 32
  %xored.i.i.i68.i2930 = xor i64 %shifted.i.i.i67.i2929, %product.i.i.i66.i2928
  %hash.i.i.i69.i2931 = and i64 %xored.i.i.i68.i2930, %tbl_size.i.i64.i2926
  %offset_ptr.i.i70.i2932 = getelementptr i32, ptr %offset_tbl.i.i65.i2927, i64 %hash.i.i.i69.i2931
  %offset.i.i71.i2933 = load i32, ptr %offset_ptr.i.i70.i2932, align 4
  %791 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %792 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %793 = icmp ult i32 %.0308.i2897, 99
  br i1 %793, label %756, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2942

794:                                              ; preds = %756
  %795 = load i32, ptr %109, align 4
  %796 = add i32 %795, 1
  %797 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %796, ptr %109, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2942

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2942: ; preds = %.cont.i2919, %794
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %40)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %41)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %42)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %43)
  br label %._crit_edge.i2317

._crit_edge.i2317:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit2942, %.lr.ph.i2302
  %798 = add nuw nsw i32 %.045.i2315, 1
  %799 = icmp slt i32 %798, %736
  br i1 %799, label %.lr.ph.i2302, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2335

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2335: ; preds = %._crit_edge.i2317
  %800 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %801

801:                                              ; preds = %._crit_edge.i2352, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2335
  %.045.i2350 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2335 ], [ %858, %._crit_edge.i2352 ]
  %802 = zext nneg i32 %.045.i2350 to i64
  %803 = shl nuw nsw i64 %802, 5
  %804 = getelementptr i8, ptr %735, i64 %803
  %805 = load ptr, ptr %804, align 8
  %806 = icmp ne ptr %805, @nil_typ
  %807 = icmp ne ptr %805, null
  %.not16.i2351 = and i1 %806, %807
  br i1 %.not16.i2351, label %808, label %._crit_edge.i2352

808:                                              ; preds = %801
  %809 = getelementptr i8, ptr %804, i64 8
  %810 = load i64, ptr %809, align 4
  %.sroa_idx.i2353 = getelementptr i8, ptr %804, i64 16
  %811 = load i64, ptr %.sroa_idx.i2353, align 4
  %hash_coef_ptr.i.i3.i2354 = getelementptr i8, ptr %805, i64 8
  %tbl_size_ptr.i.i4.i2355 = getelementptr i8, ptr %805, i64 16
  %offset_tbl_ptr.i.i5.i2356 = getelementptr i8, ptr %805, i64 40
  %812 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %36)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %37)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %38)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %39)
  %hash_coef.i.i17.i2960 = load i64, ptr %hash_coef_ptr.i.i3.i2354, align 4, !noalias !23
  %tbl_size.i.i18.i2961 = load i64, ptr %tbl_size_ptr.i.i4.i2355, align 4, !noalias !23
  %offset_tbl.i.i19.i2962 = load ptr, ptr %offset_tbl_ptr.i.i5.i2356, align 8, !noalias !23
  %product.i.i.i20.i2963 = mul i64 %hash_coef.i.i17.i2960, 4015701072841558310
  %shifted.i.i.i21.i2964 = lshr i64 %product.i.i.i20.i2963, 32
  %xored.i.i.i22.i2965 = xor i64 %shifted.i.i.i21.i2964, %product.i.i.i20.i2963
  %hash.i.i.i23.i2966 = and i64 %xored.i.i.i22.i2965, %tbl_size.i.i18.i2961
  %offset_ptr.i.i24.i2967 = getelementptr i32, ptr %offset_tbl.i.i19.i2962, i64 %hash.i.i.i23.i2966
  %offset.i.i39.i2968 = load i32, ptr %offset_ptr.i.i24.i2967, align 4, !noalias !351
  %813 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %814 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %815 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %816

816:                                              ; preds = %.cont.i2991, %808
  %.0308.i2969 = phi i32 [ 0, %808 ], [ %849, %.cont.i2991 ]
  %.070307.i2970 = phi i1 [ true, %808 ], [ %850, %.cont.i2991 ]
  %.sroa.0.0306.i2971 = phi ptr [ %805, %808 ], [ %839, %.cont.i2991 ]
  %.sroa.6.0305.i2972.in = phi i64 [ %810, %808 ], [ %841, %.cont.i2991 ]
  %.sroa.12.0304.i2973.in = phi i64 [ %811, %808 ], [ %842, %.cont.i2991 ]
  %.sroa.17.0303.i2974 = phi i32 [ %offset.i.i39.i2968, %808 ], [ %offset.i.i71.i3005, %.cont.i2991 ]
  %.sroa.12.0304.i2973 = inttoptr i64 %.sroa.12.0304.i2973.in to ptr
  %.sroa.6.0305.i2972 = inttoptr i64 %.sroa.6.0305.i2972.in to ptr
  %817 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i2971, 0
  %818 = insertvalue { ptr, ptr, ptr, i32 } %817, ptr %.sroa.6.0305.i2972, 1
  %819 = insertvalue { ptr, ptr, ptr, i32 } %818, ptr %.sroa.12.0304.i2973, 2
  %820 = insertvalue { ptr, ptr, ptr, i32 } %819, i32 %.sroa.17.0303.i2974, 3
  %821 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i2971)
  %822 = sext i32 %.sroa.17.0303.i2974 to i64
  %823 = getelementptr ptr, ptr %.sroa.0.0306.i2971, i64 %822
  %824 = getelementptr i8, ptr %823, i64 64
  %825 = load ptr, ptr %824, align 8
  %result.i43.i2975 = call ptr %825({ ptr, ptr, ptr, i32 } %820, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %826 = call i32 %result.i43.i2975({ ptr, ptr, ptr, i32 } %820, { ptr, ptr, ptr, i32 } %820, ptr nonnull align 8 %2) #42
  %..i2976 = select i1 %.070307.i2970, ptr %36, ptr %38
  %.184.i2977 = select i1 %.070307.i2970, i64 104, i64 112
  %.185.i2978 = select i1 %.070307.i2970, ptr %37, ptr %39
  %.186.i2979 = select i1 %.070307.i2970, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i2976, align 8
  %827 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i2976)
  %828 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i2977
  %829 = load ptr, ptr %828, align 8
  store ptr @i32_typ, ptr %.185.i2978, align 8
  %result.i44.i2980 = call ptr %829({ ptr, ptr, ptr, i32 } %117, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i2978) #45
  %830 = call i32 %result.i44.i2980({ ptr, ptr, ptr, i32 } %117, { ptr, ptr, ptr, i32 } %117, ptr nonnull align 8 dereferenceable(8) %..i2976, i32 %826) #42
  %831 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %832 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i2979
  %833 = load ptr, ptr %832, align 8
  %834 = load ptr, ptr %833, align 8
  %835 = call { ptr } %834(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i2981 = extractvalue { ptr } %835, 0
  %836 = sext i32 %830 to i64
  %837 = shl nsw i64 %836, 5
  %838 = getelementptr i8, ptr %.fca.0.extract53.i2981, i64 %837
  %839 = load ptr, ptr %838, align 8
  %840 = getelementptr i8, ptr %838, i64 8
  %841 = load i64, ptr %840, align 4
  %.sroa_idx.i2982 = getelementptr i8, ptr %838, i64 16
  %842 = load i64, ptr %.sroa_idx.i2982, align 4
  %843 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %844 = call { ptr } %834(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i2983 = extractvalue { ptr } %844, 0
  %845 = getelementptr i8, ptr %.fca.0.extract51.i2983, i64 %837
  store ptr %.sroa.0.0306.i2971, ptr %845, align 8
  %846 = getelementptr i8, ptr %845, i64 8
  store i64 %.sroa.6.0305.i2972.in, ptr %846, align 4
  %.sroa_idx100.i2984 = getelementptr i8, ptr %845, i64 16
  store i64 %.sroa.12.0304.i2973.in, ptr %.sroa_idx100.i2984, align 4
  %.sroa_idx101.i2985 = getelementptr i8, ptr %845, i64 24
  store i32 %.sroa.17.0303.i2974, ptr %.sroa_idx101.i2985, align 4
  %847 = icmp ne ptr %839, @nil_typ
  %848 = icmp ne ptr %839, null
  %.not90.i2986 = and i1 %847, %848
  br i1 %.not90.i2986, label %.cont.i2991, label %854

.cont.i2991:                                      ; preds = %816
  %849 = add nuw nsw i32 %.0308.i2969, 1
  %850 = xor i1 %.070307.i2970, true
  %hash_coef_ptr.i.i60.i2994 = getelementptr i8, ptr %839, i64 8
  %tbl_size_ptr.i.i61.i2995 = getelementptr i8, ptr %839, i64 16
  %offset_tbl_ptr.i.i62.i2996 = getelementptr i8, ptr %839, i64 40
  %hash_coef.i.i63.i2997 = load i64, ptr %hash_coef_ptr.i.i60.i2994, align 4
  %tbl_size.i.i64.i2998 = load i64, ptr %tbl_size_ptr.i.i61.i2995, align 4
  %offset_tbl.i.i65.i2999 = load ptr, ptr %offset_tbl_ptr.i.i62.i2996, align 8
  %product.i.i.i66.i3000 = mul i64 %hash_coef.i.i63.i2997, 4015701072841558310
  %shifted.i.i.i67.i3001 = lshr i64 %product.i.i.i66.i3000, 32
  %xored.i.i.i68.i3002 = xor i64 %shifted.i.i.i67.i3001, %product.i.i.i66.i3000
  %hash.i.i.i69.i3003 = and i64 %xored.i.i.i68.i3002, %tbl_size.i.i64.i2998
  %offset_ptr.i.i70.i3004 = getelementptr i32, ptr %offset_tbl.i.i65.i2999, i64 %hash.i.i.i69.i3003
  %offset.i.i71.i3005 = load i32, ptr %offset_ptr.i.i70.i3004, align 4
  %851 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %852 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %853 = icmp ult i32 %.0308.i2969, 99
  br i1 %853, label %816, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3014

854:                                              ; preds = %816
  %855 = load i32, ptr %109, align 4
  %856 = add i32 %855, 1
  %857 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %856, ptr %109, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3014

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3014: ; preds = %.cont.i2991, %854
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %36)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %37)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %38)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %39)
  br label %._crit_edge.i2352

._crit_edge.i2352:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3014, %801
  %858 = add nuw nsw i32 %.045.i2350, 1
  %859 = icmp slt i32 %858, %736
  br i1 %859, label %801, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2370

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2370: ; preds = %._crit_edge.i2352, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2335.thread
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %60)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %61)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %62)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %63)
  %hash_coef.i.i17.i1253 = load i64, ptr %hash_coef_ptr.i.i60.i, align 4, !noalias !23
  %tbl_size.i.i18.i1254 = load i64, ptr %tbl_size_ptr.i.i61.i, align 4, !noalias !23
  %offset_tbl.i.i19.i1255 = load ptr, ptr %offset_tbl_ptr.i.i62.i, align 8, !noalias !23
  %product.i.i.i20.i1256 = mul i64 %hash_coef.i.i17.i1253, 4015701072841558310
  %shifted.i.i.i21.i1257 = lshr i64 %product.i.i.i20.i1256, 32
  %xored.i.i.i22.i1258 = xor i64 %shifted.i.i.i21.i1257, %product.i.i.i20.i1256
  %hash.i.i.i23.i1259 = and i64 %xored.i.i.i22.i1258, %tbl_size.i.i18.i1254
  %offset_ptr.i.i24.i1260 = getelementptr i32, ptr %offset_tbl.i.i19.i1255, i64 %hash.i.i.i23.i1259
  %offset.i.i39.i1261 = load i32, ptr %offset_ptr.i.i24.i1260, align 4, !noalias !354
  %860 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %861 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %862 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %863

863:                                              ; preds = %.cont.i1285, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2370
  %.0308.i1263 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2370 ], [ %896, %.cont.i1285 ]
  %.070307.i1264 = phi i1 [ true, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2370 ], [ %897, %.cont.i1285 ]
  %.sroa.0.0306.i1265 = phi ptr [ %712, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2370 ], [ %886, %.cont.i1285 ]
  %.sroa.6.0305.i1266.in = phi i64 [ %714, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2370 ], [ %888, %.cont.i1285 ]
  %.sroa.12.0304.i1267.in = phi i64 [ %715, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2370 ], [ %889, %.cont.i1285 ]
  %.sroa.17.0303.i1268 = phi i32 [ %offset.i.i39.i1261, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2370 ], [ %offset.i.i71.i1299, %.cont.i1285 ]
  %.sroa.12.0304.i1267 = inttoptr i64 %.sroa.12.0304.i1267.in to ptr
  %.sroa.6.0305.i1266 = inttoptr i64 %.sroa.6.0305.i1266.in to ptr
  %864 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1265, 0
  %865 = insertvalue { ptr, ptr, ptr, i32 } %864, ptr %.sroa.6.0305.i1266, 1
  %866 = insertvalue { ptr, ptr, ptr, i32 } %865, ptr %.sroa.12.0304.i1267, 2
  %867 = insertvalue { ptr, ptr, ptr, i32 } %866, i32 %.sroa.17.0303.i1268, 3
  %868 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1265)
  %869 = sext i32 %.sroa.17.0303.i1268 to i64
  %870 = getelementptr ptr, ptr %.sroa.0.0306.i1265, i64 %869
  %871 = getelementptr i8, ptr %870, i64 64
  %872 = load ptr, ptr %871, align 8
  %result.i43.i1269 = call ptr %872({ ptr, ptr, ptr, i32 } %867, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %873 = call i32 %result.i43.i1269({ ptr, ptr, ptr, i32 } %867, { ptr, ptr, ptr, i32 } %867, ptr nonnull align 8 %2) #42
  %..i1270 = select i1 %.070307.i1264, ptr %60, ptr %62
  %.184.i1271 = select i1 %.070307.i1264, i64 104, i64 112
  %.185.i1272 = select i1 %.070307.i1264, ptr %61, ptr %63
  %.186.i1273 = select i1 %.070307.i1264, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1270, align 8
  %874 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1270)
  %875 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1271
  %876 = load ptr, ptr %875, align 8
  store ptr @i32_typ, ptr %.185.i1272, align 8
  %result.i44.i1274 = call ptr %876({ ptr, ptr, ptr, i32 } %116, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1272) #45
  %877 = call i32 %result.i44.i1274({ ptr, ptr, ptr, i32 } %116, { ptr, ptr, ptr, i32 } %116, ptr nonnull align 8 dereferenceable(8) %..i1270, i32 %873) #42
  %878 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %879 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1273
  %880 = load ptr, ptr %879, align 8
  %881 = load ptr, ptr %880, align 8
  %882 = call { ptr } %881(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i1275 = extractvalue { ptr } %882, 0
  %883 = sext i32 %877 to i64
  %884 = shl nsw i64 %883, 5
  %885 = getelementptr i8, ptr %.fca.0.extract53.i1275, i64 %884
  %886 = load ptr, ptr %885, align 8
  %887 = getelementptr i8, ptr %885, i64 8
  %888 = load i64, ptr %887, align 4
  %.sroa_idx.i1276 = getelementptr i8, ptr %885, i64 16
  %889 = load i64, ptr %.sroa_idx.i1276, align 4
  %890 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %891 = call { ptr } %881(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i1277 = extractvalue { ptr } %891, 0
  %892 = getelementptr i8, ptr %.fca.0.extract51.i1277, i64 %884
  store ptr %.sroa.0.0306.i1265, ptr %892, align 8
  %893 = getelementptr i8, ptr %892, i64 8
  store i64 %.sroa.6.0305.i1266.in, ptr %893, align 4
  %.sroa_idx100.i1278 = getelementptr i8, ptr %892, i64 16
  store i64 %.sroa.12.0304.i1267.in, ptr %.sroa_idx100.i1278, align 4
  %.sroa_idx101.i1279 = getelementptr i8, ptr %892, i64 24
  store i32 %.sroa.17.0303.i1268, ptr %.sroa_idx101.i1279, align 4
  %894 = icmp ne ptr %886, @nil_typ
  %895 = icmp ne ptr %886, null
  %.not90.i1280 = and i1 %894, %895
  br i1 %.not90.i1280, label %.cont.i1285, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1308

.cont.i1285:                                      ; preds = %863
  %896 = add nuw nsw i32 %.0308.i1263, 1
  %897 = xor i1 %.070307.i1264, true
  %hash_coef_ptr.i.i60.i1288 = getelementptr i8, ptr %886, i64 8
  %tbl_size_ptr.i.i61.i1289 = getelementptr i8, ptr %886, i64 16
  %offset_tbl_ptr.i.i62.i1290 = getelementptr i8, ptr %886, i64 40
  %hash_coef.i.i63.i1291 = load i64, ptr %hash_coef_ptr.i.i60.i1288, align 4
  %tbl_size.i.i64.i1292 = load i64, ptr %tbl_size_ptr.i.i61.i1289, align 4
  %offset_tbl.i.i65.i1293 = load ptr, ptr %offset_tbl_ptr.i.i62.i1290, align 8
  %product.i.i.i66.i1294 = mul i64 %hash_coef.i.i63.i1291, 4015701072841558310
  %shifted.i.i.i67.i1295 = lshr i64 %product.i.i.i66.i1294, 32
  %xored.i.i.i68.i1296 = xor i64 %shifted.i.i.i67.i1295, %product.i.i.i66.i1294
  %hash.i.i.i69.i1297 = and i64 %xored.i.i.i68.i1296, %tbl_size.i.i64.i1292
  %offset_ptr.i.i70.i1298 = getelementptr i32, ptr %offset_tbl.i.i65.i1293, i64 %hash.i.i.i69.i1297
  %offset.i.i71.i1299 = load i32, ptr %offset_ptr.i.i70.i1298, align 4
  %898 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %899 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %900 = icmp ult i32 %.0308.i1263, 99
  br i1 %900, label %863, label %904

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1308: ; preds = %863
  %901 = load i32, ptr %109, align 4
  %902 = add i32 %901, 1
  %903 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %902, ptr %109, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %60)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %61)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %62)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %63)
  br label %CuckooMap_insert_keyK_valueV.exit

904:                                              ; preds = %.cont.i1285
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %60)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %61)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %62)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %63)
  %905 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %906 = load ptr, ptr %84, align 8
  %907 = load ptr, ptr %85, align 8
  %908 = load i32, ptr %83, align 8
  %909 = shl i32 %908, 1
  %spec.select.i1324 = call i32 @llvm.smax.i32(i32 %909, i32 noundef 16) #37
  store i32 %spec.select.i1324, ptr %83, align 8
  %910 = zext nneg i32 %spec.select.i1324 to i64
  %911 = shl nuw nsw i64 %910, 5
  %result.i.i1325 = call noalias ptr @bump_malloc_inner(i64 noundef %911, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i1325, ptr %84, align 8
  %result.i1.i1326 = call noalias ptr @bump_malloc_inner(i64 noundef %911, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i1326, ptr %85, align 8
  store i32 0, ptr %109, align 4
  %912 = icmp sgt i32 %908, 0
  br i1 %912, label %.lr.ph.i2372, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2405.thread

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2405.thread: ; preds = %904
  %913 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %CuckooMap_insert_keyK_valueV.exit

.lr.ph.i2372:                                     ; preds = %904, %._crit_edge.i2387
  %.045.i2385 = phi i32 [ %970, %._crit_edge.i2387 ], [ 0, %904 ]
  %914 = zext nneg i32 %.045.i2385 to i64
  %915 = shl nuw nsw i64 %914, 5
  %916 = getelementptr i8, ptr %906, i64 %915
  %917 = load ptr, ptr %916, align 8
  %918 = icmp ne ptr %917, @nil_typ
  %919 = icmp ne ptr %917, null
  %.not16.i2386 = and i1 %918, %919
  br i1 %.not16.i2386, label %920, label %._crit_edge.i2387

920:                                              ; preds = %.lr.ph.i2372
  %921 = getelementptr i8, ptr %916, i64 8
  %922 = load i64, ptr %921, align 4
  %.sroa_idx.i2388 = getelementptr i8, ptr %916, i64 16
  %923 = load i64, ptr %.sroa_idx.i2388, align 4
  %hash_coef_ptr.i.i3.i2389 = getelementptr i8, ptr %917, i64 8
  %tbl_size_ptr.i.i4.i2390 = getelementptr i8, ptr %917, i64 16
  %offset_tbl_ptr.i.i5.i2391 = getelementptr i8, ptr %917, i64 40
  %924 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %32)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %33)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %34)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %35)
  %hash_coef.i.i17.i3032 = load i64, ptr %hash_coef_ptr.i.i3.i2389, align 4, !noalias !23
  %tbl_size.i.i18.i3033 = load i64, ptr %tbl_size_ptr.i.i4.i2390, align 4, !noalias !23
  %offset_tbl.i.i19.i3034 = load ptr, ptr %offset_tbl_ptr.i.i5.i2391, align 8, !noalias !23
  %product.i.i.i20.i3035 = mul i64 %hash_coef.i.i17.i3032, 4015701072841558310
  %shifted.i.i.i21.i3036 = lshr i64 %product.i.i.i20.i3035, 32
  %xored.i.i.i22.i3037 = xor i64 %shifted.i.i.i21.i3036, %product.i.i.i20.i3035
  %hash.i.i.i23.i3038 = and i64 %xored.i.i.i22.i3037, %tbl_size.i.i18.i3033
  %offset_ptr.i.i24.i3039 = getelementptr i32, ptr %offset_tbl.i.i19.i3034, i64 %hash.i.i.i23.i3038
  %offset.i.i39.i3040 = load i32, ptr %offset_ptr.i.i24.i3039, align 4, !noalias !357
  %925 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %926 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %927 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %928

928:                                              ; preds = %.cont.i3063, %920
  %.0308.i3041 = phi i32 [ 0, %920 ], [ %961, %.cont.i3063 ]
  %.070307.i3042 = phi i1 [ true, %920 ], [ %962, %.cont.i3063 ]
  %.sroa.0.0306.i3043 = phi ptr [ %917, %920 ], [ %951, %.cont.i3063 ]
  %.sroa.6.0305.i3044.in = phi i64 [ %922, %920 ], [ %953, %.cont.i3063 ]
  %.sroa.12.0304.i3045.in = phi i64 [ %923, %920 ], [ %954, %.cont.i3063 ]
  %.sroa.17.0303.i3046 = phi i32 [ %offset.i.i39.i3040, %920 ], [ %offset.i.i71.i3077, %.cont.i3063 ]
  %.sroa.12.0304.i3045 = inttoptr i64 %.sroa.12.0304.i3045.in to ptr
  %.sroa.6.0305.i3044 = inttoptr i64 %.sroa.6.0305.i3044.in to ptr
  %929 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i3043, 0
  %930 = insertvalue { ptr, ptr, ptr, i32 } %929, ptr %.sroa.6.0305.i3044, 1
  %931 = insertvalue { ptr, ptr, ptr, i32 } %930, ptr %.sroa.12.0304.i3045, 2
  %932 = insertvalue { ptr, ptr, ptr, i32 } %931, i32 %.sroa.17.0303.i3046, 3
  %933 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i3043)
  %934 = sext i32 %.sroa.17.0303.i3046 to i64
  %935 = getelementptr ptr, ptr %.sroa.0.0306.i3043, i64 %934
  %936 = getelementptr i8, ptr %935, i64 64
  %937 = load ptr, ptr %936, align 8
  %result.i43.i3047 = call ptr %937({ ptr, ptr, ptr, i32 } %932, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %938 = call i32 %result.i43.i3047({ ptr, ptr, ptr, i32 } %932, { ptr, ptr, ptr, i32 } %932, ptr nonnull align 8 %2) #42
  %..i3048 = select i1 %.070307.i3042, ptr %32, ptr %34
  %.184.i3049 = select i1 %.070307.i3042, i64 104, i64 112
  %.185.i3050 = select i1 %.070307.i3042, ptr %33, ptr %35
  %.186.i3051 = select i1 %.070307.i3042, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i3048, align 8
  %939 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i3048)
  %940 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i3049
  %941 = load ptr, ptr %940, align 8
  store ptr @i32_typ, ptr %.185.i3050, align 8
  %result.i44.i3052 = call ptr %941({ ptr, ptr, ptr, i32 } %117, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i3050) #45
  %942 = call i32 %result.i44.i3052({ ptr, ptr, ptr, i32 } %117, { ptr, ptr, ptr, i32 } %117, ptr nonnull align 8 dereferenceable(8) %..i3048, i32 %938) #42
  %943 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %944 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i3051
  %945 = load ptr, ptr %944, align 8
  %946 = load ptr, ptr %945, align 8
  %947 = call { ptr } %946(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i3053 = extractvalue { ptr } %947, 0
  %948 = sext i32 %942 to i64
  %949 = shl nsw i64 %948, 5
  %950 = getelementptr i8, ptr %.fca.0.extract53.i3053, i64 %949
  %951 = load ptr, ptr %950, align 8
  %952 = getelementptr i8, ptr %950, i64 8
  %953 = load i64, ptr %952, align 4
  %.sroa_idx.i3054 = getelementptr i8, ptr %950, i64 16
  %954 = load i64, ptr %.sroa_idx.i3054, align 4
  %955 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %956 = call { ptr } %946(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i3055 = extractvalue { ptr } %956, 0
  %957 = getelementptr i8, ptr %.fca.0.extract51.i3055, i64 %949
  store ptr %.sroa.0.0306.i3043, ptr %957, align 8
  %958 = getelementptr i8, ptr %957, i64 8
  store i64 %.sroa.6.0305.i3044.in, ptr %958, align 4
  %.sroa_idx100.i3056 = getelementptr i8, ptr %957, i64 16
  store i64 %.sroa.12.0304.i3045.in, ptr %.sroa_idx100.i3056, align 4
  %.sroa_idx101.i3057 = getelementptr i8, ptr %957, i64 24
  store i32 %.sroa.17.0303.i3046, ptr %.sroa_idx101.i3057, align 4
  %959 = icmp ne ptr %951, @nil_typ
  %960 = icmp ne ptr %951, null
  %.not90.i3058 = and i1 %959, %960
  br i1 %.not90.i3058, label %.cont.i3063, label %966

.cont.i3063:                                      ; preds = %928
  %961 = add nuw nsw i32 %.0308.i3041, 1
  %962 = xor i1 %.070307.i3042, true
  %hash_coef_ptr.i.i60.i3066 = getelementptr i8, ptr %951, i64 8
  %tbl_size_ptr.i.i61.i3067 = getelementptr i8, ptr %951, i64 16
  %offset_tbl_ptr.i.i62.i3068 = getelementptr i8, ptr %951, i64 40
  %hash_coef.i.i63.i3069 = load i64, ptr %hash_coef_ptr.i.i60.i3066, align 4
  %tbl_size.i.i64.i3070 = load i64, ptr %tbl_size_ptr.i.i61.i3067, align 4
  %offset_tbl.i.i65.i3071 = load ptr, ptr %offset_tbl_ptr.i.i62.i3068, align 8
  %product.i.i.i66.i3072 = mul i64 %hash_coef.i.i63.i3069, 4015701072841558310
  %shifted.i.i.i67.i3073 = lshr i64 %product.i.i.i66.i3072, 32
  %xored.i.i.i68.i3074 = xor i64 %shifted.i.i.i67.i3073, %product.i.i.i66.i3072
  %hash.i.i.i69.i3075 = and i64 %xored.i.i.i68.i3074, %tbl_size.i.i64.i3070
  %offset_ptr.i.i70.i3076 = getelementptr i32, ptr %offset_tbl.i.i65.i3071, i64 %hash.i.i.i69.i3075
  %offset.i.i71.i3077 = load i32, ptr %offset_ptr.i.i70.i3076, align 4
  %963 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %964 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %965 = icmp ult i32 %.0308.i3041, 99
  br i1 %965, label %928, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3086

966:                                              ; preds = %928
  %967 = load i32, ptr %109, align 4
  %968 = add i32 %967, 1
  %969 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %968, ptr %109, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3086

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3086: ; preds = %.cont.i3063, %966
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %32)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %33)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %34)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %35)
  br label %._crit_edge.i2387

._crit_edge.i2387:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3086, %.lr.ph.i2372
  %970 = add nuw nsw i32 %.045.i2385, 1
  %971 = icmp slt i32 %970, %908
  br i1 %971, label %.lr.ph.i2372, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2405

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2405: ; preds = %._crit_edge.i2387
  %972 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %973

973:                                              ; preds = %._crit_edge.i2422, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2405
  %.045.i2420 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2405 ], [ %1030, %._crit_edge.i2422 ]
  %974 = zext nneg i32 %.045.i2420 to i64
  %975 = shl nuw nsw i64 %974, 5
  %976 = getelementptr i8, ptr %907, i64 %975
  %977 = load ptr, ptr %976, align 8
  %978 = icmp ne ptr %977, @nil_typ
  %979 = icmp ne ptr %977, null
  %.not16.i2421 = and i1 %978, %979
  br i1 %.not16.i2421, label %980, label %._crit_edge.i2422

980:                                              ; preds = %973
  %981 = getelementptr i8, ptr %976, i64 8
  %982 = load i64, ptr %981, align 4
  %.sroa_idx.i2423 = getelementptr i8, ptr %976, i64 16
  %983 = load i64, ptr %.sroa_idx.i2423, align 4
  %hash_coef_ptr.i.i3.i2424 = getelementptr i8, ptr %977, i64 8
  %tbl_size_ptr.i.i4.i2425 = getelementptr i8, ptr %977, i64 16
  %offset_tbl_ptr.i.i5.i2426 = getelementptr i8, ptr %977, i64 40
  %984 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %28)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %29)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %30)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %31)
  %hash_coef.i.i17.i3104 = load i64, ptr %hash_coef_ptr.i.i3.i2424, align 4, !noalias !23
  %tbl_size.i.i18.i3105 = load i64, ptr %tbl_size_ptr.i.i4.i2425, align 4, !noalias !23
  %offset_tbl.i.i19.i3106 = load ptr, ptr %offset_tbl_ptr.i.i5.i2426, align 8, !noalias !23
  %product.i.i.i20.i3107 = mul i64 %hash_coef.i.i17.i3104, 4015701072841558310
  %shifted.i.i.i21.i3108 = lshr i64 %product.i.i.i20.i3107, 32
  %xored.i.i.i22.i3109 = xor i64 %shifted.i.i.i21.i3108, %product.i.i.i20.i3107
  %hash.i.i.i23.i3110 = and i64 %xored.i.i.i22.i3109, %tbl_size.i.i18.i3105
  %offset_ptr.i.i24.i3111 = getelementptr i32, ptr %offset_tbl.i.i19.i3106, i64 %hash.i.i.i23.i3110
  %offset.i.i39.i3112 = load i32, ptr %offset_ptr.i.i24.i3111, align 4, !noalias !360
  %985 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %986 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %987 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %988

988:                                              ; preds = %.cont.i3135, %980
  %.0308.i3113 = phi i32 [ 0, %980 ], [ %1021, %.cont.i3135 ]
  %.070307.i3114 = phi i1 [ true, %980 ], [ %1022, %.cont.i3135 ]
  %.sroa.0.0306.i3115 = phi ptr [ %977, %980 ], [ %1011, %.cont.i3135 ]
  %.sroa.6.0305.i3116.in = phi i64 [ %982, %980 ], [ %1013, %.cont.i3135 ]
  %.sroa.12.0304.i3117.in = phi i64 [ %983, %980 ], [ %1014, %.cont.i3135 ]
  %.sroa.17.0303.i3118 = phi i32 [ %offset.i.i39.i3112, %980 ], [ %offset.i.i71.i3149, %.cont.i3135 ]
  %.sroa.12.0304.i3117 = inttoptr i64 %.sroa.12.0304.i3117.in to ptr
  %.sroa.6.0305.i3116 = inttoptr i64 %.sroa.6.0305.i3116.in to ptr
  %989 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i3115, 0
  %990 = insertvalue { ptr, ptr, ptr, i32 } %989, ptr %.sroa.6.0305.i3116, 1
  %991 = insertvalue { ptr, ptr, ptr, i32 } %990, ptr %.sroa.12.0304.i3117, 2
  %992 = insertvalue { ptr, ptr, ptr, i32 } %991, i32 %.sroa.17.0303.i3118, 3
  %993 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i3115)
  %994 = sext i32 %.sroa.17.0303.i3118 to i64
  %995 = getelementptr ptr, ptr %.sroa.0.0306.i3115, i64 %994
  %996 = getelementptr i8, ptr %995, i64 64
  %997 = load ptr, ptr %996, align 8
  %result.i43.i3119 = call ptr %997({ ptr, ptr, ptr, i32 } %992, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %998 = call i32 %result.i43.i3119({ ptr, ptr, ptr, i32 } %992, { ptr, ptr, ptr, i32 } %992, ptr nonnull align 8 %2) #42
  %..i3120 = select i1 %.070307.i3114, ptr %28, ptr %30
  %.184.i3121 = select i1 %.070307.i3114, i64 104, i64 112
  %.185.i3122 = select i1 %.070307.i3114, ptr %29, ptr %31
  %.186.i3123 = select i1 %.070307.i3114, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i3120, align 8
  %999 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i3120)
  %1000 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i3121
  %1001 = load ptr, ptr %1000, align 8
  store ptr @i32_typ, ptr %.185.i3122, align 8
  %result.i44.i3124 = call ptr %1001({ ptr, ptr, ptr, i32 } %117, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i3122) #45
  %1002 = call i32 %result.i44.i3124({ ptr, ptr, ptr, i32 } %117, { ptr, ptr, ptr, i32 } %117, ptr nonnull align 8 dereferenceable(8) %..i3120, i32 %998) #42
  %1003 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1004 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i3123
  %1005 = load ptr, ptr %1004, align 8
  %1006 = load ptr, ptr %1005, align 8
  %1007 = call { ptr } %1006(ptr nonnull %result.i8) #40
  %.fca.0.extract53.i3125 = extractvalue { ptr } %1007, 0
  %1008 = sext i32 %1002 to i64
  %1009 = shl nsw i64 %1008, 5
  %1010 = getelementptr i8, ptr %.fca.0.extract53.i3125, i64 %1009
  %1011 = load ptr, ptr %1010, align 8
  %1012 = getelementptr i8, ptr %1010, i64 8
  %1013 = load i64, ptr %1012, align 4
  %.sroa_idx.i3126 = getelementptr i8, ptr %1010, i64 16
  %1014 = load i64, ptr %.sroa_idx.i3126, align 4
  %1015 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1016 = call { ptr } %1006(ptr nonnull %result.i8) #40
  %.fca.0.extract51.i3127 = extractvalue { ptr } %1016, 0
  %1017 = getelementptr i8, ptr %.fca.0.extract51.i3127, i64 %1009
  store ptr %.sroa.0.0306.i3115, ptr %1017, align 8
  %1018 = getelementptr i8, ptr %1017, i64 8
  store i64 %.sroa.6.0305.i3116.in, ptr %1018, align 4
  %.sroa_idx100.i3128 = getelementptr i8, ptr %1017, i64 16
  store i64 %.sroa.12.0304.i3117.in, ptr %.sroa_idx100.i3128, align 4
  %.sroa_idx101.i3129 = getelementptr i8, ptr %1017, i64 24
  store i32 %.sroa.17.0303.i3118, ptr %.sroa_idx101.i3129, align 4
  %1019 = icmp ne ptr %1011, @nil_typ
  %1020 = icmp ne ptr %1011, null
  %.not90.i3130 = and i1 %1019, %1020
  br i1 %.not90.i3130, label %.cont.i3135, label %1026

.cont.i3135:                                      ; preds = %988
  %1021 = add nuw nsw i32 %.0308.i3113, 1
  %1022 = xor i1 %.070307.i3114, true
  %hash_coef_ptr.i.i60.i3138 = getelementptr i8, ptr %1011, i64 8
  %tbl_size_ptr.i.i61.i3139 = getelementptr i8, ptr %1011, i64 16
  %offset_tbl_ptr.i.i62.i3140 = getelementptr i8, ptr %1011, i64 40
  %hash_coef.i.i63.i3141 = load i64, ptr %hash_coef_ptr.i.i60.i3138, align 4
  %tbl_size.i.i64.i3142 = load i64, ptr %tbl_size_ptr.i.i61.i3139, align 4
  %offset_tbl.i.i65.i3143 = load ptr, ptr %offset_tbl_ptr.i.i62.i3140, align 8
  %product.i.i.i66.i3144 = mul i64 %hash_coef.i.i63.i3141, 4015701072841558310
  %shifted.i.i.i67.i3145 = lshr i64 %product.i.i.i66.i3144, 32
  %xored.i.i.i68.i3146 = xor i64 %shifted.i.i.i67.i3145, %product.i.i.i66.i3144
  %hash.i.i.i69.i3147 = and i64 %xored.i.i.i68.i3146, %tbl_size.i.i64.i3142
  %offset_ptr.i.i70.i3148 = getelementptr i32, ptr %offset_tbl.i.i65.i3143, i64 %hash.i.i.i69.i3147
  %offset.i.i71.i3149 = load i32, ptr %offset_ptr.i.i70.i3148, align 4
  %1023 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1024 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1025 = icmp ult i32 %.0308.i3113, 99
  br i1 %1025, label %988, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3158

1026:                                             ; preds = %988
  %1027 = load i32, ptr %109, align 4
  %1028 = add i32 %1027, 1
  %1029 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1028, ptr %109, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3158

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3158: ; preds = %.cont.i3135, %1026
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %28)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %29)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %30)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %31)
  br label %._crit_edge.i2422

._crit_edge.i2422:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3158, %973
  %1030 = add nuw nsw i32 %.045.i2420, 1
  %1031 = icmp slt i32 %1030, %908
  br i1 %1031, label %973, label %CuckooMap_insert_keyK_valueV.exit

CuckooMap_insert_keyK_valueV.exit:                ; preds = %._crit_edge.i2422, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2405.thread, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1308, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1176, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1032 = load ptr, ptr %91, align 8
  %1033 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 16 dereferenceable(744) @Array) #50
  %1034 = sext i32 %.0357321 to i64
  %1035 = shl nsw i64 %1034, 2
  %1036 = getelementptr i8, ptr %1032, i64 %1035
  store i32 %123, ptr %1036, align 1
  store i1 true, ptr %.sroa.0316.sroa.0, align 8
  %.sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.0. = load i8, ptr %.sroa.0316.sroa.0, align 8
  %.sroa.0316.0.insert.ext = zext i8 %.sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.sroa.0.0..sroa.0316.0. to i160
  %1037 = insertvalue { ptr, i160 } { ptr @bool_typ, i160 undef }, i160 %.sroa.0316.0.insert.ext, 1
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1038 = load ptr, ptr %98, align 8
  %1039 = call i32 %1038({ ptr, i160 } %124) #42
  %1040 = load i32, ptr %100, align 8
  %1041 = add i32 %1040, -1
  %1042 = and i32 %1041, %1039
  %1043 = load ptr, ptr %101, align 8
  %1044 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1045 = sext i32 %1042 to i64
  %1046 = shl nsw i64 %1045, 5
  %1047 = getelementptr i8, ptr %1043, i64 %1046
  %1048 = load ptr, ptr %1047, align 8
  %1049 = getelementptr i8, ptr %1047, i64 8
  %1050 = icmp ne ptr %1048, @nil_typ
  %1051 = icmp ne ptr %1048, null
  %.not64.i1372 = and i1 %1050, %1051
  br i1 %.not64.i1372, label %1052, label %1150

1052:                                             ; preds = %CuckooMap_insert_keyK_valueV.exit
  %1053 = load i64, ptr %1049, align 4
  %.sroa_idx.i1374 = getelementptr i8, ptr %1047, i64 16
  %1054 = load i64, ptr %.sroa_idx.i1374, align 4
  %1055 = inttoptr i64 %1053 to ptr
  %1056 = inttoptr i64 %1054 to ptr
  %hash_coef_ptr.i.i3.i1375 = getelementptr i8, ptr %1048, i64 8
  %tbl_size_ptr.i.i4.i1376 = getelementptr i8, ptr %1048, i64 16
  %offset_tbl_ptr.i.i5.i1377 = getelementptr i8, ptr %1048, i64 40
  %hash_coef.i.i6.i1378 = load i64, ptr %hash_coef_ptr.i.i3.i1375, align 4, !noalias !363
  %tbl_size.i.i7.i1379 = load i64, ptr %tbl_size_ptr.i.i4.i1376, align 4, !noalias !363
  %offset_tbl.i.i8.i1380 = load ptr, ptr %offset_tbl_ptr.i.i5.i1377, align 8, !noalias !363
  %product.i.i.i9.i1381 = mul i64 %hash_coef.i.i6.i1378, 4015701072841558310
  %shifted.i.i.i10.i1382 = lshr i64 %product.i.i.i9.i1381, 32
  %xored.i.i.i11.i1383 = xor i64 %shifted.i.i.i10.i1382, %product.i.i.i9.i1381
  %hash.i.i.i12.i1384 = and i64 %xored.i.i.i11.i1383, %tbl_size.i.i7.i1379
  %offset_ptr.i.i13.i1385 = getelementptr i32, ptr %offset_tbl.i.i8.i1380, i64 %hash.i.i.i12.i1384
  %offset.i.i14.i1386 = load i32, ptr %offset_ptr.i.i13.i1385, align 4, !noalias !363
  %1057 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1048, 0
  %1058 = insertvalue { ptr, ptr, ptr, i32 } %1057, ptr %1055, 1
  %1059 = insertvalue { ptr, ptr, ptr, i32 } %1058, ptr %1056, 2
  %1060 = insertvalue { ptr, ptr, ptr, i32 } %1059, i32 %offset.i.i14.i1386, 3
  %1061 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1062 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1048) #37
  %1063 = sext i32 %offset.i.i14.i1386 to i64
  %1064 = getelementptr ptr, ptr %1048, i64 %1063
  %1065 = getelementptr i8, ptr %1064, i64 64
  %1066 = load ptr, ptr %1065, align 8
  %result.i.i1387 = call ptr %1066({ ptr, ptr, ptr, i32 } %1060, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1067 = call i32 %result.i.i1387({ ptr, ptr, ptr, i32 } %1060, { ptr, ptr, ptr, i32 } %1060, ptr nonnull align 8 %2) #42
  %1068 = icmp eq i32 %1067, %1039
  br i1 %1068, label %._crit_edge.i1388, label %1150

._crit_edge.i1388:                                ; preds = %1052
  %1069 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1070 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1048)
  %1071 = getelementptr i8, ptr %1064, i64 48
  %1072 = load ptr, ptr %1071, align 8
  %result.i16.i1389 = call ptr %1072({ ptr, ptr, ptr, i32 } %1060, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1073 = call { ptr, i160 } %result.i16.i1389({ ptr, ptr, ptr, i32 } %1060, { ptr, ptr, ptr, i32 } %1060, ptr nonnull align 8 %2) #42
  %1074 = load ptr, ptr %99, align 8
  %1075 = call i1 %1074({ ptr, i160 } %1073, { ptr, i160 } %124) #42
  br i1 %1075, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1401, label %1150

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1401: ; preds = %._crit_edge.i1388
  %1076 = load ptr, ptr %result.i51, align 8
  %1077 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1078 = load ptr, ptr %93, align 8
  %1079 = load ptr, ptr %1076, align 8, !alias.scope !366
  %1080 = getelementptr i8, ptr %1079, i64 72
  %1081 = load ptr, ptr %1080, align 8, !alias.scope !366
  %result.i.i.i1393 = call { i64, i64 } %1081(ptr nocapture nofree nonnull readonly align 8 %1076) #41, !alias.scope !366
  %1082 = extractvalue { i64, i64 } %result.i.i.i1393, 0
  %1083 = extractvalue { i64, i64 } %result.i.i.i1393, 1
  %1084 = urem i64 20, %1083
  %1085 = icmp eq i64 %1084, 0
  %1086 = sub i64 %1083, %1084
  %1087 = select i1 %1085, i64 0, i64 %1086
  %1088 = add i64 %1082, 20
  %1089 = add i64 %1088, %1087
  %1090 = load ptr, ptr %1078, align 8, !alias.scope !366
  %1091 = getelementptr i8, ptr %1090, i64 72
  %1092 = load ptr, ptr %1091, align 8, !alias.scope !366
  %result.i1.i.i1394 = call { i64, i64 } %1092(ptr nocapture nofree nonnull readonly align 8 %1078) #41, !alias.scope !366
  %1093 = extractvalue { i64, i64 } %result.i1.i.i1394, 0
  %1094 = extractvalue { i64, i64 } %result.i1.i.i1394, 1
  %1095 = call i64 @llvm.umax.i64(i64 %1083, i64 %1094) #38
  %1096 = call i64 @llvm.umax.i64(i64 %1095, i64 noundef 8) #38, !range !16
  %1097 = urem i64 %1089, %1094
  %1098 = icmp eq i64 %1097, 0
  %1099 = sub i64 %1094, %1097
  %1100 = select i1 %1098, i64 0, i64 %1099
  %1101 = add i64 %1093, %1089
  %1102 = add i64 %1101, %1100
  %1103 = urem i64 %1102, %1096
  %1104 = icmp eq i64 %1103, 0
  %1105 = sub i64 %1096, %1103
  %1106 = select i1 %1104, i64 0, i64 %1105
  %1107 = add i64 %1106, %1102
  %result.i20.i1395 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %1107, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %1076, ptr %result.i20.i1395, align 8
  %1108 = getelementptr inbounds i8, ptr %result.i20.i1395, i64 8
  store ptr %1078, ptr %1108, align 8
  %1109 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i1395)
  %1110 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1111 = load ptr, ptr %1076, align 8
  %1112 = getelementptr i8, ptr %1111, i64 72
  %1113 = load ptr, ptr %1112, align 8
  %result.i.i54.i1396 = call { i64, i64 } %1113(ptr nocapture nofree nonnull readonly align 8 %1076) #41
  %1114 = extractvalue { i64, i64 } %result.i.i54.i1396, 1
  %1115 = urem i64 20, %1114
  %1116 = icmp eq i64 %1115, 0
  %reass.sub3861 = sub i64 %1114, %1115
  %1117 = add i64 %reass.sub3861, 20
  %1118 = select i1 %1116, i64 20, i64 %1117
  %1119 = getelementptr i8, ptr %result.i20.i1395, i64 %1118
  %1120 = getelementptr i8, ptr %1111, i64 64
  %1121 = load ptr, ptr %1120, align 8
  call void %1121({ ptr, i160 } %124, ptr nocapture nofree nonnull readonly align 8 %1076, ptr nocapture nofree writeonly %1119) #49
  %1122 = load ptr, ptr %result.i20.i1395, align 8
  %1123 = load ptr, ptr %1122, align 8
  %1124 = getelementptr i8, ptr %1123, i64 72
  %1125 = load ptr, ptr %1124, align 8
  %result.i.i55.i1398 = call { i64, i64 } %1125(ptr nocapture nofree nonnull readonly align 8 %1122) #41
  %1126 = extractvalue { i64, i64 } %result.i.i55.i1398, 0
  %1127 = extractvalue { i64, i64 } %result.i.i55.i1398, 1
  %1128 = urem i64 20, %1127
  %1129 = icmp eq i64 %1128, 0
  %1130 = sub i64 %1127, %1128
  %1131 = select i1 %1129, i64 0, i64 %1130
  %1132 = add i64 %1126, 20
  %1133 = add i64 %1132, %1131
  %1134 = load ptr, ptr %1108, align 8
  %1135 = load ptr, ptr %1134, align 8
  %1136 = getelementptr i8, ptr %1135, i64 72
  %1137 = load ptr, ptr %1136, align 8
  %result.i1.i56.i1399 = call { i64, i64 } %1137(ptr nocapture nofree nonnull readonly align 8 %1134) #41
  %1138 = extractvalue { i64, i64 } %result.i1.i56.i1399, 1
  %1139 = urem i64 %1133, %1138
  %1140 = icmp eq i64 %1139, 0
  %1141 = sub i64 %1138, %1139
  %1142 = select i1 %1140, i64 0, i64 %1141
  %1143 = getelementptr i8, ptr %result.i20.i1395, i64 %1133
  %1144 = getelementptr i8, ptr %1143, i64 %1142
  %1145 = getelementptr i8, ptr %1135, i64 64
  %1146 = load ptr, ptr %1145, align 8
  call void %1146({ ptr, i160 } %1037, ptr nocapture nofree nonnull readonly align 8 %1134, ptr nocapture nofree writeonly %1144) #49
  %1147 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %1148 = getelementptr inbounds i8, ptr %result.i20.i1395, i64 16
  store i32 %1039, ptr %1148, align 8
  store ptr @Entry, ptr %1047, align 8
  %1149 = ptrtoint ptr %result.i20.i1395 to i64
  store i64 %1149, ptr %1049, align 4
  %.sroa_idx28.i1400 = getelementptr i8, ptr %1047, i64 24
  store i32 10, ptr %.sroa_idx28.i1400, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit664

1150:                                             ; preds = %._crit_edge.i1388, %CuckooMap_insert_keyK_valueV.exit, %1052
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1151 = add i32 %1039, 2127912214
  %1152 = shl i32 %1039, 12
  %1153 = add i32 %1151, %1152
  %1154 = ashr i32 %1153, 19
  %1155 = xor i32 %1153, %1154
  %1156 = xor i32 %1155, -949894596
  %1157 = add i32 %1156, 374761393
  %1158 = shl i32 %1156, 5
  %1159 = add i32 %1157, %1158
  %1160 = add i32 %1159, -744332180
  %1161 = shl i32 %1159, 9
  %1162 = xor i32 %1160, %1161
  %1163 = add i32 %1162, -42973499
  %1164 = shl i32 %1162, 3
  %1165 = add i32 %1163, %1164
  %1166 = ashr i32 %1165, 16
  %1167 = xor i32 %1165, %1166
  %1168 = xor i32 %1167, -1252372727
  %1169 = load i32, ptr %100, align 8
  %1170 = add i32 %1169, -1
  %1171 = and i32 %1170, %1168
  %1172 = load ptr, ptr %102, align 8
  %1173 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1174 = sext i32 %1171 to i64
  %1175 = shl nsw i64 %1174, 5
  %1176 = getelementptr i8, ptr %1172, i64 %1175
  %1177 = load ptr, ptr %1176, align 8
  %1178 = getelementptr i8, ptr %1176, i64 8
  %1179 = icmp ne ptr %1177, @nil_typ
  %1180 = icmp ne ptr %1177, null
  %.not64.i1431 = and i1 %1179, %1180
  br i1 %.not64.i1431, label %1181, label %1279

1181:                                             ; preds = %1150
  %1182 = load i64, ptr %1178, align 4
  %.sroa_idx.i1433 = getelementptr i8, ptr %1176, i64 16
  %1183 = load i64, ptr %.sroa_idx.i1433, align 4
  %1184 = inttoptr i64 %1182 to ptr
  %1185 = inttoptr i64 %1183 to ptr
  %hash_coef_ptr.i.i3.i1434 = getelementptr i8, ptr %1177, i64 8
  %tbl_size_ptr.i.i4.i1435 = getelementptr i8, ptr %1177, i64 16
  %offset_tbl_ptr.i.i5.i1436 = getelementptr i8, ptr %1177, i64 40
  %hash_coef.i.i6.i1437 = load i64, ptr %hash_coef_ptr.i.i3.i1434, align 4, !noalias !369
  %tbl_size.i.i7.i1438 = load i64, ptr %tbl_size_ptr.i.i4.i1435, align 4, !noalias !369
  %offset_tbl.i.i8.i1439 = load ptr, ptr %offset_tbl_ptr.i.i5.i1436, align 8, !noalias !369
  %product.i.i.i9.i1440 = mul i64 %hash_coef.i.i6.i1437, 4015701072841558310
  %shifted.i.i.i10.i1441 = lshr i64 %product.i.i.i9.i1440, 32
  %xored.i.i.i11.i1442 = xor i64 %shifted.i.i.i10.i1441, %product.i.i.i9.i1440
  %hash.i.i.i12.i1443 = and i64 %xored.i.i.i11.i1442, %tbl_size.i.i7.i1438
  %offset_ptr.i.i13.i1444 = getelementptr i32, ptr %offset_tbl.i.i8.i1439, i64 %hash.i.i.i12.i1443
  %offset.i.i14.i1445 = load i32, ptr %offset_ptr.i.i13.i1444, align 4, !noalias !369
  %1186 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1177, 0
  %1187 = insertvalue { ptr, ptr, ptr, i32 } %1186, ptr %1184, 1
  %1188 = insertvalue { ptr, ptr, ptr, i32 } %1187, ptr %1185, 2
  %1189 = insertvalue { ptr, ptr, ptr, i32 } %1188, i32 %offset.i.i14.i1445, 3
  %1190 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1191 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1177) #37
  %1192 = sext i32 %offset.i.i14.i1445 to i64
  %1193 = getelementptr ptr, ptr %1177, i64 %1192
  %1194 = getelementptr i8, ptr %1193, i64 64
  %1195 = load ptr, ptr %1194, align 8
  %result.i.i1446 = call ptr %1195({ ptr, ptr, ptr, i32 } %1189, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1196 = call i32 %result.i.i1446({ ptr, ptr, ptr, i32 } %1189, { ptr, ptr, ptr, i32 } %1189, ptr nonnull align 8 %2) #42
  %1197 = icmp eq i32 %1196, %1039
  br i1 %1197, label %._crit_edge.i1447, label %1279

._crit_edge.i1447:                                ; preds = %1181
  %1198 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1199 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1177)
  %1200 = getelementptr i8, ptr %1193, i64 48
  %1201 = load ptr, ptr %1200, align 8
  %result.i16.i1448 = call ptr %1201({ ptr, ptr, ptr, i32 } %1189, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1202 = call { ptr, i160 } %result.i16.i1448({ ptr, ptr, ptr, i32 } %1189, { ptr, ptr, ptr, i32 } %1189, ptr nonnull align 8 %2) #42
  %1203 = load ptr, ptr %99, align 8
  %1204 = call i1 %1203({ ptr, i160 } %1202, { ptr, i160 } %124) #42
  br i1 %1204, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1460, label %1279

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1460: ; preds = %._crit_edge.i1447
  %1205 = load ptr, ptr %result.i51, align 8
  %1206 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1207 = load ptr, ptr %93, align 8
  %1208 = load ptr, ptr %1205, align 8, !alias.scope !372
  %1209 = getelementptr i8, ptr %1208, i64 72
  %1210 = load ptr, ptr %1209, align 8, !alias.scope !372
  %result.i.i.i1452 = call { i64, i64 } %1210(ptr nocapture nofree nonnull readonly align 8 %1205) #41, !alias.scope !372
  %1211 = extractvalue { i64, i64 } %result.i.i.i1452, 0
  %1212 = extractvalue { i64, i64 } %result.i.i.i1452, 1
  %1213 = urem i64 20, %1212
  %1214 = icmp eq i64 %1213, 0
  %1215 = sub i64 %1212, %1213
  %1216 = select i1 %1214, i64 0, i64 %1215
  %1217 = add i64 %1211, 20
  %1218 = add i64 %1217, %1216
  %1219 = load ptr, ptr %1207, align 8, !alias.scope !372
  %1220 = getelementptr i8, ptr %1219, i64 72
  %1221 = load ptr, ptr %1220, align 8, !alias.scope !372
  %result.i1.i.i1453 = call { i64, i64 } %1221(ptr nocapture nofree nonnull readonly align 8 %1207) #41, !alias.scope !372
  %1222 = extractvalue { i64, i64 } %result.i1.i.i1453, 0
  %1223 = extractvalue { i64, i64 } %result.i1.i.i1453, 1
  %1224 = call i64 @llvm.umax.i64(i64 %1212, i64 %1223) #38
  %1225 = call i64 @llvm.umax.i64(i64 %1224, i64 noundef 8) #38, !range !16
  %1226 = urem i64 %1218, %1223
  %1227 = icmp eq i64 %1226, 0
  %1228 = sub i64 %1223, %1226
  %1229 = select i1 %1227, i64 0, i64 %1228
  %1230 = add i64 %1222, %1218
  %1231 = add i64 %1230, %1229
  %1232 = urem i64 %1231, %1225
  %1233 = icmp eq i64 %1232, 0
  %1234 = sub i64 %1225, %1232
  %1235 = select i1 %1233, i64 0, i64 %1234
  %1236 = add i64 %1235, %1231
  %result.i20.i1454 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %1236, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %1205, ptr %result.i20.i1454, align 8
  %1237 = getelementptr inbounds i8, ptr %result.i20.i1454, i64 8
  store ptr %1207, ptr %1237, align 8
  %1238 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i1454)
  %1239 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1240 = load ptr, ptr %1205, align 8
  %1241 = getelementptr i8, ptr %1240, i64 72
  %1242 = load ptr, ptr %1241, align 8
  %result.i.i54.i1455 = call { i64, i64 } %1242(ptr nocapture nofree nonnull readonly align 8 %1205) #41
  %1243 = extractvalue { i64, i64 } %result.i.i54.i1455, 1
  %1244 = urem i64 20, %1243
  %1245 = icmp eq i64 %1244, 0
  %reass.sub3860 = sub i64 %1243, %1244
  %1246 = add i64 %reass.sub3860, 20
  %1247 = select i1 %1245, i64 20, i64 %1246
  %1248 = getelementptr i8, ptr %result.i20.i1454, i64 %1247
  %1249 = getelementptr i8, ptr %1240, i64 64
  %1250 = load ptr, ptr %1249, align 8
  call void %1250({ ptr, i160 } %124, ptr nocapture nofree nonnull readonly align 8 %1205, ptr nocapture nofree writeonly %1248) #49
  %1251 = load ptr, ptr %result.i20.i1454, align 8
  %1252 = load ptr, ptr %1251, align 8
  %1253 = getelementptr i8, ptr %1252, i64 72
  %1254 = load ptr, ptr %1253, align 8
  %result.i.i55.i1457 = call { i64, i64 } %1254(ptr nocapture nofree nonnull readonly align 8 %1251) #41
  %1255 = extractvalue { i64, i64 } %result.i.i55.i1457, 0
  %1256 = extractvalue { i64, i64 } %result.i.i55.i1457, 1
  %1257 = urem i64 20, %1256
  %1258 = icmp eq i64 %1257, 0
  %1259 = sub i64 %1256, %1257
  %1260 = select i1 %1258, i64 0, i64 %1259
  %1261 = add i64 %1255, 20
  %1262 = add i64 %1261, %1260
  %1263 = load ptr, ptr %1237, align 8
  %1264 = load ptr, ptr %1263, align 8
  %1265 = getelementptr i8, ptr %1264, i64 72
  %1266 = load ptr, ptr %1265, align 8
  %result.i1.i56.i1458 = call { i64, i64 } %1266(ptr nocapture nofree nonnull readonly align 8 %1263) #41
  %1267 = extractvalue { i64, i64 } %result.i1.i56.i1458, 1
  %1268 = urem i64 %1262, %1267
  %1269 = icmp eq i64 %1268, 0
  %1270 = sub i64 %1267, %1268
  %1271 = select i1 %1269, i64 0, i64 %1270
  %1272 = getelementptr i8, ptr %result.i20.i1454, i64 %1262
  %1273 = getelementptr i8, ptr %1272, i64 %1271
  %1274 = getelementptr i8, ptr %1264, i64 64
  %1275 = load ptr, ptr %1274, align 8
  call void %1275({ ptr, i160 } %1037, ptr nocapture nofree nonnull readonly align 8 %1263, ptr nocapture nofree writeonly %1273) #49
  %1276 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %1277 = getelementptr inbounds i8, ptr %result.i20.i1454, i64 16
  store i32 %1039, ptr %1277, align 8
  store ptr @Entry, ptr %1176, align 8
  %1278 = ptrtoint ptr %result.i20.i1454 to i64
  store i64 %1278, ptr %1178, align 4
  %.sroa_idx28.i1459 = getelementptr i8, ptr %1176, i64 24
  store i32 10, ptr %.sroa_idx28.i1459, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %CuckooMap_insert_keyK_valueV.exit664

1279:                                             ; preds = %._crit_edge.i1447, %1150, %1181
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1280 = load i32, ptr %110, align 4
  %1281 = load i32, ptr %100, align 8
  %.not.i620 = icmp slt i32 %1280, %1281
  br i1 %.not.i620, label %._crit_edge.i622, label %1282

1282:                                             ; preds = %1279
  %1283 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1284 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1285 = load ptr, ptr %101, align 8
  %1286 = load ptr, ptr %102, align 8
  %1287 = shl i32 %1281, 1
  %spec.select.i1476 = call i32 @llvm.smax.i32(i32 %1287, i32 noundef 16) #37
  store i32 %spec.select.i1476, ptr %100, align 8
  %1288 = zext nneg i32 %spec.select.i1476 to i64
  %1289 = shl nuw nsw i64 %1288, 5
  %result.i.i1477 = call noalias ptr @bump_malloc_inner(i64 noundef %1289, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i1477, ptr %101, align 8
  %result.i1.i1478 = call noalias ptr @bump_malloc_inner(i64 noundef %1289, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i1478, ptr %102, align 8
  store i32 0, ptr %110, align 4
  %1290 = icmp sgt i32 %1281, 0
  br i1 %1290, label %.lr.ph.i2442, label %._crit_edge.i622

.lr.ph.i2442:                                     ; preds = %1282, %._crit_edge.i2457
  %.045.i2455 = phi i32 [ %1347, %._crit_edge.i2457 ], [ 0, %1282 ]
  %1291 = zext nneg i32 %.045.i2455 to i64
  %1292 = shl nuw nsw i64 %1291, 5
  %1293 = getelementptr i8, ptr %1285, i64 %1292
  %1294 = load ptr, ptr %1293, align 8
  %1295 = icmp ne ptr %1294, @nil_typ
  %1296 = icmp ne ptr %1294, null
  %.not16.i2456 = and i1 %1295, %1296
  br i1 %.not16.i2456, label %1297, label %._crit_edge.i2457

1297:                                             ; preds = %.lr.ph.i2442
  %1298 = getelementptr i8, ptr %1293, i64 8
  %1299 = load i64, ptr %1298, align 4
  %.sroa_idx.i2458 = getelementptr i8, ptr %1293, i64 16
  %1300 = load i64, ptr %.sroa_idx.i2458, align 4
  %hash_coef_ptr.i.i3.i2459 = getelementptr i8, ptr %1294, i64 8
  %tbl_size_ptr.i.i4.i2460 = getelementptr i8, ptr %1294, i64 16
  %offset_tbl_ptr.i.i5.i2461 = getelementptr i8, ptr %1294, i64 40
  %1301 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %24)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %25)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %26)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %27)
  %hash_coef.i.i17.i3176 = load i64, ptr %hash_coef_ptr.i.i3.i2459, align 4, !noalias !23
  %tbl_size.i.i18.i3177 = load i64, ptr %tbl_size_ptr.i.i4.i2460, align 4, !noalias !23
  %offset_tbl.i.i19.i3178 = load ptr, ptr %offset_tbl_ptr.i.i5.i2461, align 8, !noalias !23
  %product.i.i.i20.i3179 = mul i64 %hash_coef.i.i17.i3176, 4015701072841558310
  %shifted.i.i.i21.i3180 = lshr i64 %product.i.i.i20.i3179, 32
  %xored.i.i.i22.i3181 = xor i64 %shifted.i.i.i21.i3180, %product.i.i.i20.i3179
  %hash.i.i.i23.i3182 = and i64 %xored.i.i.i22.i3181, %tbl_size.i.i18.i3177
  %offset_ptr.i.i24.i3183 = getelementptr i32, ptr %offset_tbl.i.i19.i3178, i64 %hash.i.i.i23.i3182
  %offset.i.i39.i3184 = load i32, ptr %offset_ptr.i.i24.i3183, align 4, !noalias !375
  %1302 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1303 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1304 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1305

1305:                                             ; preds = %.cont.i3207, %1297
  %.0308.i3185 = phi i32 [ 0, %1297 ], [ %1338, %.cont.i3207 ]
  %.070307.i3186 = phi i1 [ true, %1297 ], [ %1339, %.cont.i3207 ]
  %.sroa.0.0306.i3187 = phi ptr [ %1294, %1297 ], [ %1328, %.cont.i3207 ]
  %.sroa.6.0305.i3188.in = phi i64 [ %1299, %1297 ], [ %1330, %.cont.i3207 ]
  %.sroa.12.0304.i3189.in = phi i64 [ %1300, %1297 ], [ %1331, %.cont.i3207 ]
  %.sroa.17.0303.i3190 = phi i32 [ %offset.i.i39.i3184, %1297 ], [ %offset.i.i71.i3221, %.cont.i3207 ]
  %.sroa.12.0304.i3189 = inttoptr i64 %.sroa.12.0304.i3189.in to ptr
  %.sroa.6.0305.i3188 = inttoptr i64 %.sroa.6.0305.i3188.in to ptr
  %1306 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i3187, 0
  %1307 = insertvalue { ptr, ptr, ptr, i32 } %1306, ptr %.sroa.6.0305.i3188, 1
  %1308 = insertvalue { ptr, ptr, ptr, i32 } %1307, ptr %.sroa.12.0304.i3189, 2
  %1309 = insertvalue { ptr, ptr, ptr, i32 } %1308, i32 %.sroa.17.0303.i3190, 3
  %1310 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i3187)
  %1311 = sext i32 %.sroa.17.0303.i3190 to i64
  %1312 = getelementptr ptr, ptr %.sroa.0.0306.i3187, i64 %1311
  %1313 = getelementptr i8, ptr %1312, i64 64
  %1314 = load ptr, ptr %1313, align 8
  %result.i43.i3191 = call ptr %1314({ ptr, ptr, ptr, i32 } %1309, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1315 = call i32 %result.i43.i3191({ ptr, ptr, ptr, i32 } %1309, { ptr, ptr, ptr, i32 } %1309, ptr nonnull align 8 %2) #42
  %..i3192 = select i1 %.070307.i3186, ptr %24, ptr %26
  %.184.i3193 = select i1 %.070307.i3186, i64 104, i64 112
  %.185.i3194 = select i1 %.070307.i3186, ptr %25, ptr %27
  %.186.i3195 = select i1 %.070307.i3186, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i3192, align 8
  %1316 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i3192)
  %1317 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i3193
  %1318 = load ptr, ptr %1317, align 8
  store ptr @i32_typ, ptr %.185.i3194, align 8
  %result.i44.i3196 = call ptr %1318({ ptr, ptr, ptr, i32 } %118, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i3194) #45
  %1319 = call i32 %result.i44.i3196({ ptr, ptr, ptr, i32 } %118, { ptr, ptr, ptr, i32 } %118, ptr nonnull align 8 dereferenceable(8) %..i3192, i32 %1315) #42
  %1320 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1321 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i3195
  %1322 = load ptr, ptr %1321, align 8
  %1323 = load ptr, ptr %1322, align 8
  %1324 = call { ptr } %1323(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i3197 = extractvalue { ptr } %1324, 0
  %1325 = sext i32 %1319 to i64
  %1326 = shl nsw i64 %1325, 5
  %1327 = getelementptr i8, ptr %.fca.0.extract53.i3197, i64 %1326
  %1328 = load ptr, ptr %1327, align 8
  %1329 = getelementptr i8, ptr %1327, i64 8
  %1330 = load i64, ptr %1329, align 4
  %.sroa_idx.i3198 = getelementptr i8, ptr %1327, i64 16
  %1331 = load i64, ptr %.sroa_idx.i3198, align 4
  %1332 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1333 = call { ptr } %1323(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i3199 = extractvalue { ptr } %1333, 0
  %1334 = getelementptr i8, ptr %.fca.0.extract51.i3199, i64 %1326
  store ptr %.sroa.0.0306.i3187, ptr %1334, align 8
  %1335 = getelementptr i8, ptr %1334, i64 8
  store i64 %.sroa.6.0305.i3188.in, ptr %1335, align 4
  %.sroa_idx100.i3200 = getelementptr i8, ptr %1334, i64 16
  store i64 %.sroa.12.0304.i3189.in, ptr %.sroa_idx100.i3200, align 4
  %.sroa_idx101.i3201 = getelementptr i8, ptr %1334, i64 24
  store i32 %.sroa.17.0303.i3190, ptr %.sroa_idx101.i3201, align 4
  %1336 = icmp ne ptr %1328, @nil_typ
  %1337 = icmp ne ptr %1328, null
  %.not90.i3202 = and i1 %1336, %1337
  br i1 %.not90.i3202, label %.cont.i3207, label %1343

.cont.i3207:                                      ; preds = %1305
  %1338 = add nuw nsw i32 %.0308.i3185, 1
  %1339 = xor i1 %.070307.i3186, true
  %hash_coef_ptr.i.i60.i3210 = getelementptr i8, ptr %1328, i64 8
  %tbl_size_ptr.i.i61.i3211 = getelementptr i8, ptr %1328, i64 16
  %offset_tbl_ptr.i.i62.i3212 = getelementptr i8, ptr %1328, i64 40
  %hash_coef.i.i63.i3213 = load i64, ptr %hash_coef_ptr.i.i60.i3210, align 4
  %tbl_size.i.i64.i3214 = load i64, ptr %tbl_size_ptr.i.i61.i3211, align 4
  %offset_tbl.i.i65.i3215 = load ptr, ptr %offset_tbl_ptr.i.i62.i3212, align 8
  %product.i.i.i66.i3216 = mul i64 %hash_coef.i.i63.i3213, 4015701072841558310
  %shifted.i.i.i67.i3217 = lshr i64 %product.i.i.i66.i3216, 32
  %xored.i.i.i68.i3218 = xor i64 %shifted.i.i.i67.i3217, %product.i.i.i66.i3216
  %hash.i.i.i69.i3219 = and i64 %xored.i.i.i68.i3218, %tbl_size.i.i64.i3214
  %offset_ptr.i.i70.i3220 = getelementptr i32, ptr %offset_tbl.i.i65.i3215, i64 %hash.i.i.i69.i3219
  %offset.i.i71.i3221 = load i32, ptr %offset_ptr.i.i70.i3220, align 4
  %1340 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1341 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1342 = icmp ult i32 %.0308.i3185, 99
  br i1 %1342, label %1305, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3230

1343:                                             ; preds = %1305
  %1344 = load i32, ptr %110, align 4
  %1345 = add i32 %1344, 1
  %1346 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1345, ptr %110, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3230

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3230: ; preds = %.cont.i3207, %1343
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %24)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %25)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %26)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %27)
  br label %._crit_edge.i2457

._crit_edge.i2457:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3230, %.lr.ph.i2442
  %1347 = add nuw nsw i32 %.045.i2455, 1
  %1348 = icmp slt i32 %1347, %1281
  br i1 %1348, label %.lr.ph.i2442, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2475

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2475: ; preds = %._crit_edge.i2457, %._crit_edge.i2492
  %.045.i2490 = phi i32 [ %1405, %._crit_edge.i2492 ], [ 0, %._crit_edge.i2457 ]
  %1349 = zext nneg i32 %.045.i2490 to i64
  %1350 = shl nuw nsw i64 %1349, 5
  %1351 = getelementptr i8, ptr %1286, i64 %1350
  %1352 = load ptr, ptr %1351, align 8
  %1353 = icmp ne ptr %1352, @nil_typ
  %1354 = icmp ne ptr %1352, null
  %.not16.i2491 = and i1 %1353, %1354
  br i1 %.not16.i2491, label %1355, label %._crit_edge.i2492

1355:                                             ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2475
  %1356 = getelementptr i8, ptr %1351, i64 8
  %1357 = load i64, ptr %1356, align 4
  %.sroa_idx.i2493 = getelementptr i8, ptr %1351, i64 16
  %1358 = load i64, ptr %.sroa_idx.i2493, align 4
  %hash_coef_ptr.i.i3.i2494 = getelementptr i8, ptr %1352, i64 8
  %tbl_size_ptr.i.i4.i2495 = getelementptr i8, ptr %1352, i64 16
  %offset_tbl_ptr.i.i5.i2496 = getelementptr i8, ptr %1352, i64 40
  %1359 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %20)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %21)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %22)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %23)
  %hash_coef.i.i17.i3248 = load i64, ptr %hash_coef_ptr.i.i3.i2494, align 4, !noalias !23
  %tbl_size.i.i18.i3249 = load i64, ptr %tbl_size_ptr.i.i4.i2495, align 4, !noalias !23
  %offset_tbl.i.i19.i3250 = load ptr, ptr %offset_tbl_ptr.i.i5.i2496, align 8, !noalias !23
  %product.i.i.i20.i3251 = mul i64 %hash_coef.i.i17.i3248, 4015701072841558310
  %shifted.i.i.i21.i3252 = lshr i64 %product.i.i.i20.i3251, 32
  %xored.i.i.i22.i3253 = xor i64 %shifted.i.i.i21.i3252, %product.i.i.i20.i3251
  %hash.i.i.i23.i3254 = and i64 %xored.i.i.i22.i3253, %tbl_size.i.i18.i3249
  %offset_ptr.i.i24.i3255 = getelementptr i32, ptr %offset_tbl.i.i19.i3250, i64 %hash.i.i.i23.i3254
  %offset.i.i39.i3256 = load i32, ptr %offset_ptr.i.i24.i3255, align 4, !noalias !378
  %1360 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1361 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1362 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1363

1363:                                             ; preds = %.cont.i3279, %1355
  %.0308.i3257 = phi i32 [ 0, %1355 ], [ %1396, %.cont.i3279 ]
  %.070307.i3258 = phi i1 [ true, %1355 ], [ %1397, %.cont.i3279 ]
  %.sroa.0.0306.i3259 = phi ptr [ %1352, %1355 ], [ %1386, %.cont.i3279 ]
  %.sroa.6.0305.i3260.in = phi i64 [ %1357, %1355 ], [ %1388, %.cont.i3279 ]
  %.sroa.12.0304.i3261.in = phi i64 [ %1358, %1355 ], [ %1389, %.cont.i3279 ]
  %.sroa.17.0303.i3262 = phi i32 [ %offset.i.i39.i3256, %1355 ], [ %offset.i.i71.i3293, %.cont.i3279 ]
  %.sroa.12.0304.i3261 = inttoptr i64 %.sroa.12.0304.i3261.in to ptr
  %.sroa.6.0305.i3260 = inttoptr i64 %.sroa.6.0305.i3260.in to ptr
  %1364 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i3259, 0
  %1365 = insertvalue { ptr, ptr, ptr, i32 } %1364, ptr %.sroa.6.0305.i3260, 1
  %1366 = insertvalue { ptr, ptr, ptr, i32 } %1365, ptr %.sroa.12.0304.i3261, 2
  %1367 = insertvalue { ptr, ptr, ptr, i32 } %1366, i32 %.sroa.17.0303.i3262, 3
  %1368 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i3259)
  %1369 = sext i32 %.sroa.17.0303.i3262 to i64
  %1370 = getelementptr ptr, ptr %.sroa.0.0306.i3259, i64 %1369
  %1371 = getelementptr i8, ptr %1370, i64 64
  %1372 = load ptr, ptr %1371, align 8
  %result.i43.i3263 = call ptr %1372({ ptr, ptr, ptr, i32 } %1367, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1373 = call i32 %result.i43.i3263({ ptr, ptr, ptr, i32 } %1367, { ptr, ptr, ptr, i32 } %1367, ptr nonnull align 8 %2) #42
  %..i3264 = select i1 %.070307.i3258, ptr %20, ptr %22
  %.184.i3265 = select i1 %.070307.i3258, i64 104, i64 112
  %.185.i3266 = select i1 %.070307.i3258, ptr %21, ptr %23
  %.186.i3267 = select i1 %.070307.i3258, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i3264, align 8
  %1374 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i3264)
  %1375 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i3265
  %1376 = load ptr, ptr %1375, align 8
  store ptr @i32_typ, ptr %.185.i3266, align 8
  %result.i44.i3268 = call ptr %1376({ ptr, ptr, ptr, i32 } %118, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i3266) #45
  %1377 = call i32 %result.i44.i3268({ ptr, ptr, ptr, i32 } %118, { ptr, ptr, ptr, i32 } %118, ptr nonnull align 8 dereferenceable(8) %..i3264, i32 %1373) #42
  %1378 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1379 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i3267
  %1380 = load ptr, ptr %1379, align 8
  %1381 = load ptr, ptr %1380, align 8
  %1382 = call { ptr } %1381(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i3269 = extractvalue { ptr } %1382, 0
  %1383 = sext i32 %1377 to i64
  %1384 = shl nsw i64 %1383, 5
  %1385 = getelementptr i8, ptr %.fca.0.extract53.i3269, i64 %1384
  %1386 = load ptr, ptr %1385, align 8
  %1387 = getelementptr i8, ptr %1385, i64 8
  %1388 = load i64, ptr %1387, align 4
  %.sroa_idx.i3270 = getelementptr i8, ptr %1385, i64 16
  %1389 = load i64, ptr %.sroa_idx.i3270, align 4
  %1390 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1391 = call { ptr } %1381(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i3271 = extractvalue { ptr } %1391, 0
  %1392 = getelementptr i8, ptr %.fca.0.extract51.i3271, i64 %1384
  store ptr %.sroa.0.0306.i3259, ptr %1392, align 8
  %1393 = getelementptr i8, ptr %1392, i64 8
  store i64 %.sroa.6.0305.i3260.in, ptr %1393, align 4
  %.sroa_idx100.i3272 = getelementptr i8, ptr %1392, i64 16
  store i64 %.sroa.12.0304.i3261.in, ptr %.sroa_idx100.i3272, align 4
  %.sroa_idx101.i3273 = getelementptr i8, ptr %1392, i64 24
  store i32 %.sroa.17.0303.i3262, ptr %.sroa_idx101.i3273, align 4
  %1394 = icmp ne ptr %1386, @nil_typ
  %1395 = icmp ne ptr %1386, null
  %.not90.i3274 = and i1 %1394, %1395
  br i1 %.not90.i3274, label %.cont.i3279, label %1401

.cont.i3279:                                      ; preds = %1363
  %1396 = add nuw nsw i32 %.0308.i3257, 1
  %1397 = xor i1 %.070307.i3258, true
  %hash_coef_ptr.i.i60.i3282 = getelementptr i8, ptr %1386, i64 8
  %tbl_size_ptr.i.i61.i3283 = getelementptr i8, ptr %1386, i64 16
  %offset_tbl_ptr.i.i62.i3284 = getelementptr i8, ptr %1386, i64 40
  %hash_coef.i.i63.i3285 = load i64, ptr %hash_coef_ptr.i.i60.i3282, align 4
  %tbl_size.i.i64.i3286 = load i64, ptr %tbl_size_ptr.i.i61.i3283, align 4
  %offset_tbl.i.i65.i3287 = load ptr, ptr %offset_tbl_ptr.i.i62.i3284, align 8
  %product.i.i.i66.i3288 = mul i64 %hash_coef.i.i63.i3285, 4015701072841558310
  %shifted.i.i.i67.i3289 = lshr i64 %product.i.i.i66.i3288, 32
  %xored.i.i.i68.i3290 = xor i64 %shifted.i.i.i67.i3289, %product.i.i.i66.i3288
  %hash.i.i.i69.i3291 = and i64 %xored.i.i.i68.i3290, %tbl_size.i.i64.i3286
  %offset_ptr.i.i70.i3292 = getelementptr i32, ptr %offset_tbl.i.i65.i3287, i64 %hash.i.i.i69.i3291
  %offset.i.i71.i3293 = load i32, ptr %offset_ptr.i.i70.i3292, align 4
  %1398 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1399 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1400 = icmp ult i32 %.0308.i3257, 99
  br i1 %1400, label %1363, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3302

1401:                                             ; preds = %1363
  %1402 = load i32, ptr %110, align 4
  %1403 = add i32 %1402, 1
  %1404 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1403, ptr %110, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3302

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3302: ; preds = %.cont.i3279, %1401
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %20)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %21)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %22)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %23)
  br label %._crit_edge.i2492

._crit_edge.i2492:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3302, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2475
  %1405 = add nuw nsw i32 %.045.i2490, 1
  %1406 = icmp slt i32 %1405, %1281
  br i1 %1406, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2475, label %._crit_edge.i622

._crit_edge.i622:                                 ; preds = %._crit_edge.i2492, %1282, %1279
  %1407 = load ptr, ptr %result.i51, align 8
  %1408 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1409 = load ptr, ptr %93, align 8
  %1410 = load ptr, ptr %1407, align 8
  %1411 = getelementptr i8, ptr %1410, i64 72
  %1412 = load ptr, ptr %1411, align 8
  %result.i.i.i625 = call { i64, i64 } %1412(ptr nocapture nofree nonnull readonly align 8 %1407) #41
  %1413 = extractvalue { i64, i64 } %result.i.i.i625, 0
  %1414 = extractvalue { i64, i64 } %result.i.i.i625, 1
  %1415 = urem i64 20, %1414
  %1416 = icmp eq i64 %1415, 0
  %1417 = sub i64 %1414, %1415
  %1418 = select i1 %1416, i64 0, i64 %1417
  %1419 = add i64 %1413, 20
  %1420 = add i64 %1419, %1418
  %1421 = load ptr, ptr %1409, align 8
  %1422 = getelementptr i8, ptr %1421, i64 72
  %1423 = load ptr, ptr %1422, align 8
  %result.i1.i.i626 = call { i64, i64 } %1423(ptr nocapture nofree nonnull readonly align 8 %1409) #41
  %1424 = extractvalue { i64, i64 } %result.i1.i.i626, 0
  %1425 = extractvalue { i64, i64 } %result.i1.i.i626, 1
  %1426 = call i64 @llvm.umax.i64(i64 %1414, i64 %1425) #38
  %1427 = call i64 @llvm.umax.i64(i64 %1426, i64 noundef 8) #38, !range !16
  %1428 = urem i64 %1420, %1425
  %1429 = icmp eq i64 %1428, 0
  %1430 = sub i64 %1425, %1428
  %1431 = select i1 %1429, i64 0, i64 %1430
  %1432 = add i64 %1424, %1420
  %1433 = add i64 %1432, %1431
  %1434 = urem i64 %1433, %1427
  %1435 = icmp eq i64 %1434, 0
  %1436 = sub i64 %1427, %1434
  %1437 = select i1 %1435, i64 0, i64 %1436
  %1438 = add i64 %1437, %1433
  %result.i16.i627 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %1438, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %1407, ptr %result.i16.i627, align 8
  %1439 = getelementptr inbounds i8, ptr %result.i16.i627, i64 8
  store ptr %1409, ptr %1439, align 8
  %1440 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i16.i627)
  %1441 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1442 = load ptr, ptr %1407, align 8
  %1443 = getelementptr i8, ptr %1442, i64 72
  %1444 = load ptr, ptr %1443, align 8
  %result.i.i110.i628 = call { i64, i64 } %1444(ptr nocapture nofree nonnull readonly align 8 %1407) #41
  %1445 = extractvalue { i64, i64 } %result.i.i110.i628, 1
  %1446 = urem i64 20, %1445
  %1447 = icmp eq i64 %1446, 0
  %reass.sub = sub i64 %1445, %1446
  %1448 = add i64 %reass.sub, 20
  %1449 = select i1 %1447, i64 20, i64 %1448
  %1450 = getelementptr i8, ptr %result.i16.i627, i64 %1449
  %1451 = getelementptr i8, ptr %1442, i64 64
  %1452 = load ptr, ptr %1451, align 8
  call void %1452({ ptr, i160 } %124, ptr nocapture nofree nonnull readonly align 8 %1407, ptr nocapture nofree writeonly %1450) #49
  %1453 = load ptr, ptr %result.i16.i627, align 8
  %1454 = load ptr, ptr %1453, align 8
  %1455 = getelementptr i8, ptr %1454, i64 72
  %1456 = load ptr, ptr %1455, align 8
  %result.i.i111.i630 = call { i64, i64 } %1456(ptr nocapture nofree nonnull readonly align 8 %1453) #41
  %1457 = extractvalue { i64, i64 } %result.i.i111.i630, 0
  %1458 = extractvalue { i64, i64 } %result.i.i111.i630, 1
  %1459 = urem i64 20, %1458
  %1460 = icmp eq i64 %1459, 0
  %1461 = sub i64 %1458, %1459
  %1462 = select i1 %1460, i64 0, i64 %1461
  %1463 = add i64 %1457, 20
  %1464 = add i64 %1463, %1462
  %1465 = load ptr, ptr %1439, align 8
  %1466 = load ptr, ptr %1465, align 8
  %1467 = getelementptr i8, ptr %1466, i64 72
  %1468 = load ptr, ptr %1467, align 8
  %result.i1.i112.i631 = call { i64, i64 } %1468(ptr nocapture nofree nonnull readonly align 8 %1465) #41
  %1469 = extractvalue { i64, i64 } %result.i1.i112.i631, 1
  %1470 = urem i64 %1464, %1469
  %1471 = icmp eq i64 %1470, 0
  %1472 = sub i64 %1469, %1470
  %1473 = select i1 %1471, i64 0, i64 %1472
  %1474 = getelementptr i8, ptr %result.i16.i627, i64 %1464
  %1475 = getelementptr i8, ptr %1474, i64 %1473
  %1476 = getelementptr i8, ptr %1466, i64 64
  %1477 = load ptr, ptr %1476, align 8
  call void %1477({ ptr, i160 } %1037, ptr nocapture nofree nonnull readonly align 8 %1465, ptr nocapture nofree writeonly %1475) #49
  %1478 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %1479 = getelementptr inbounds i8, ptr %result.i16.i627, i64 16
  store i32 %1039, ptr %1479, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %56)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %57)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %58)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %59)
  %1480 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1481 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1482 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1483

1483:                                             ; preds = %.cont.i1533, %._crit_edge.i622
  %.0308.i1511 = phi i32 [ 0, %._crit_edge.i622 ], [ %1518, %.cont.i1533 ]
  %.070307.i1512 = phi i1 [ true, %._crit_edge.i622 ], [ %1519, %.cont.i1533 ]
  %.sroa.0.0306.i1513 = phi ptr [ @Entry, %._crit_edge.i622 ], [ %1506, %.cont.i1533 ]
  %.sroa.6.0305.i1514 = phi ptr [ %result.i16.i627, %._crit_edge.i622 ], [ %.sroa.speculated111.i1534, %.cont.i1533 ]
  %.sroa.12.0304.i1515 = phi ptr [ undef, %._crit_edge.i622 ], [ %.sroa.speculated105.i1535, %.cont.i1533 ]
  %.sroa.17.0303.i1516 = phi i32 [ 10, %._crit_edge.i622 ], [ %offset.i.i71.i1547, %.cont.i1533 ]
  %1484 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1513, 0
  %1485 = insertvalue { ptr, ptr, ptr, i32 } %1484, ptr %.sroa.6.0305.i1514, 1
  %1486 = insertvalue { ptr, ptr, ptr, i32 } %1485, ptr %.sroa.12.0304.i1515, 2
  %1487 = insertvalue { ptr, ptr, ptr, i32 } %1486, i32 %.sroa.17.0303.i1516, 3
  %1488 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1513)
  %1489 = sext i32 %.sroa.17.0303.i1516 to i64
  %1490 = getelementptr ptr, ptr %.sroa.0.0306.i1513, i64 %1489
  %1491 = getelementptr i8, ptr %1490, i64 64
  %1492 = load ptr, ptr %1491, align 8
  %result.i43.i1517 = call ptr %1492({ ptr, ptr, ptr, i32 } %1487, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1493 = call i32 %result.i43.i1517({ ptr, ptr, ptr, i32 } %1487, { ptr, ptr, ptr, i32 } %1487, ptr nonnull align 8 %2) #42
  %..i1518 = select i1 %.070307.i1512, ptr %56, ptr %58
  %.184.i1519 = select i1 %.070307.i1512, i64 104, i64 112
  %.185.i1520 = select i1 %.070307.i1512, ptr %57, ptr %59
  %.186.i1521 = select i1 %.070307.i1512, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1518, align 8
  %1494 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1518)
  %1495 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1519
  %1496 = load ptr, ptr %1495, align 8
  store ptr @i32_typ, ptr %.185.i1520, align 8
  %result.i44.i1522 = call ptr %1496({ ptr, ptr, ptr, i32 } %113, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1520) #45
  %1497 = call i32 %result.i44.i1522({ ptr, ptr, ptr, i32 } %113, { ptr, ptr, ptr, i32 } %113, ptr nonnull align 8 dereferenceable(8) %..i1518, i32 %1493) #42
  %1498 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1499 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1521
  %1500 = load ptr, ptr %1499, align 8
  %1501 = load ptr, ptr %1500, align 8
  %1502 = call { ptr } %1501(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i1523 = extractvalue { ptr } %1502, 0
  %1503 = sext i32 %1497 to i64
  %1504 = shl nsw i64 %1503, 5
  %1505 = getelementptr i8, ptr %.fca.0.extract53.i1523, i64 %1504
  %1506 = load ptr, ptr %1505, align 8
  %1507 = getelementptr i8, ptr %1505, i64 8
  %1508 = load i64, ptr %1507, align 4
  %.sroa_idx.i1524 = getelementptr i8, ptr %1505, i64 16
  %1509 = load i64, ptr %.sroa_idx.i1524, align 4
  %1510 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1511 = call { ptr } %1501(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i1525 = extractvalue { ptr } %1511, 0
  %1512 = getelementptr i8, ptr %.fca.0.extract51.i1525, i64 %1504
  store ptr %.sroa.0.0306.i1513, ptr %1512, align 8
  %1513 = getelementptr i8, ptr %1512, i64 8
  %1514 = ptrtoint ptr %.sroa.6.0305.i1514 to i64
  %1515 = ptrtoint ptr %.sroa.12.0304.i1515 to i64
  store i64 %1514, ptr %1513, align 4
  %.sroa_idx100.i1526 = getelementptr i8, ptr %1512, i64 16
  store i64 %1515, ptr %.sroa_idx100.i1526, align 4
  %.sroa_idx101.i1527 = getelementptr i8, ptr %1512, i64 24
  store i32 %.sroa.17.0303.i1516, ptr %.sroa_idx101.i1527, align 4
  %1516 = icmp ne ptr %1506, @nil_typ
  %1517 = icmp ne ptr %1506, null
  %.not90.i1528 = and i1 %1516, %1517
  br i1 %.not90.i1528, label %.cont.i1533, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1556

.cont.i1533:                                      ; preds = %1483
  %1518 = add nuw nsw i32 %.0308.i1511, 1
  %1519 = xor i1 %.070307.i1512, true
  %.sroa.speculated111.i1534 = inttoptr i64 %1508 to ptr
  %.sroa.speculated105.i1535 = inttoptr i64 %1509 to ptr
  %hash_coef_ptr.i.i60.i1536 = getelementptr i8, ptr %1506, i64 8
  %tbl_size_ptr.i.i61.i1537 = getelementptr i8, ptr %1506, i64 16
  %offset_tbl_ptr.i.i62.i1538 = getelementptr i8, ptr %1506, i64 40
  %hash_coef.i.i63.i1539 = load i64, ptr %hash_coef_ptr.i.i60.i1536, align 4
  %tbl_size.i.i64.i1540 = load i64, ptr %tbl_size_ptr.i.i61.i1537, align 4
  %offset_tbl.i.i65.i1541 = load ptr, ptr %offset_tbl_ptr.i.i62.i1538, align 8
  %product.i.i.i66.i1542 = mul i64 %hash_coef.i.i63.i1539, 4015701072841558310
  %shifted.i.i.i67.i1543 = lshr i64 %product.i.i.i66.i1542, 32
  %xored.i.i.i68.i1544 = xor i64 %shifted.i.i.i67.i1543, %product.i.i.i66.i1542
  %hash.i.i.i69.i1545 = and i64 %xored.i.i.i68.i1544, %tbl_size.i.i64.i1540
  %offset_ptr.i.i70.i1546 = getelementptr i32, ptr %offset_tbl.i.i65.i1541, i64 %hash.i.i.i69.i1545
  %offset.i.i71.i1547 = load i32, ptr %offset_ptr.i.i70.i1546, align 4
  %1520 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1521 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1522 = icmp ult i32 %.0308.i1511, 99
  br i1 %1522, label %1483, label %1526

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1556: ; preds = %1483
  %1523 = load i32, ptr %110, align 4
  %1524 = add i32 %1523, 1
  %1525 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1524, ptr %110, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %56)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %57)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %58)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %59)
  br label %CuckooMap_insert_keyK_valueV.exit664

1526:                                             ; preds = %.cont.i1533
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %56)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %57)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %58)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %59)
  %1527 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1528 = load ptr, ptr %101, align 8
  %1529 = load ptr, ptr %102, align 8
  %1530 = load i32, ptr %100, align 8
  %1531 = shl i32 %1530, 1
  %spec.select.i1572 = call i32 @llvm.smax.i32(i32 %1531, i32 noundef 16) #37
  store i32 %spec.select.i1572, ptr %100, align 8
  %1532 = zext nneg i32 %spec.select.i1572 to i64
  %1533 = shl nuw nsw i64 %1532, 5
  %result.i.i1573 = call noalias ptr @bump_malloc_inner(i64 noundef %1533, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i1573, ptr %101, align 8
  %result.i1.i1574 = call noalias ptr @bump_malloc_inner(i64 noundef %1533, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i1574, ptr %102, align 8
  store i32 0, ptr %110, align 4
  %1534 = icmp sgt i32 %1530, 0
  br i1 %1534, label %.lr.ph.i2512, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2580

.lr.ph.i2512:                                     ; preds = %1526, %._crit_edge.i2527
  %.045.i2525 = phi i32 [ %1591, %._crit_edge.i2527 ], [ 0, %1526 ]
  %1535 = zext nneg i32 %.045.i2525 to i64
  %1536 = shl nuw nsw i64 %1535, 5
  %1537 = getelementptr i8, ptr %1528, i64 %1536
  %1538 = load ptr, ptr %1537, align 8
  %1539 = icmp ne ptr %1538, @nil_typ
  %1540 = icmp ne ptr %1538, null
  %.not16.i2526 = and i1 %1539, %1540
  br i1 %.not16.i2526, label %1541, label %._crit_edge.i2527

1541:                                             ; preds = %.lr.ph.i2512
  %1542 = getelementptr i8, ptr %1537, i64 8
  %1543 = load i64, ptr %1542, align 4
  %.sroa_idx.i2528 = getelementptr i8, ptr %1537, i64 16
  %1544 = load i64, ptr %.sroa_idx.i2528, align 4
  %hash_coef_ptr.i.i3.i2529 = getelementptr i8, ptr %1538, i64 8
  %tbl_size_ptr.i.i4.i2530 = getelementptr i8, ptr %1538, i64 16
  %offset_tbl_ptr.i.i5.i2531 = getelementptr i8, ptr %1538, i64 40
  %1545 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %16)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %17)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %18)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %19)
  %hash_coef.i.i17.i3320 = load i64, ptr %hash_coef_ptr.i.i3.i2529, align 4, !noalias !23
  %tbl_size.i.i18.i3321 = load i64, ptr %tbl_size_ptr.i.i4.i2530, align 4, !noalias !23
  %offset_tbl.i.i19.i3322 = load ptr, ptr %offset_tbl_ptr.i.i5.i2531, align 8, !noalias !23
  %product.i.i.i20.i3323 = mul i64 %hash_coef.i.i17.i3320, 4015701072841558310
  %shifted.i.i.i21.i3324 = lshr i64 %product.i.i.i20.i3323, 32
  %xored.i.i.i22.i3325 = xor i64 %shifted.i.i.i21.i3324, %product.i.i.i20.i3323
  %hash.i.i.i23.i3326 = and i64 %xored.i.i.i22.i3325, %tbl_size.i.i18.i3321
  %offset_ptr.i.i24.i3327 = getelementptr i32, ptr %offset_tbl.i.i19.i3322, i64 %hash.i.i.i23.i3326
  %offset.i.i39.i3328 = load i32, ptr %offset_ptr.i.i24.i3327, align 4, !noalias !381
  %1546 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1547 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1548 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1549

1549:                                             ; preds = %.cont.i3351, %1541
  %.0308.i3329 = phi i32 [ 0, %1541 ], [ %1582, %.cont.i3351 ]
  %.070307.i3330 = phi i1 [ true, %1541 ], [ %1583, %.cont.i3351 ]
  %.sroa.0.0306.i3331 = phi ptr [ %1538, %1541 ], [ %1572, %.cont.i3351 ]
  %.sroa.6.0305.i3332.in = phi i64 [ %1543, %1541 ], [ %1574, %.cont.i3351 ]
  %.sroa.12.0304.i3333.in = phi i64 [ %1544, %1541 ], [ %1575, %.cont.i3351 ]
  %.sroa.17.0303.i3334 = phi i32 [ %offset.i.i39.i3328, %1541 ], [ %offset.i.i71.i3365, %.cont.i3351 ]
  %.sroa.12.0304.i3333 = inttoptr i64 %.sroa.12.0304.i3333.in to ptr
  %.sroa.6.0305.i3332 = inttoptr i64 %.sroa.6.0305.i3332.in to ptr
  %1550 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i3331, 0
  %1551 = insertvalue { ptr, ptr, ptr, i32 } %1550, ptr %.sroa.6.0305.i3332, 1
  %1552 = insertvalue { ptr, ptr, ptr, i32 } %1551, ptr %.sroa.12.0304.i3333, 2
  %1553 = insertvalue { ptr, ptr, ptr, i32 } %1552, i32 %.sroa.17.0303.i3334, 3
  %1554 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i3331)
  %1555 = sext i32 %.sroa.17.0303.i3334 to i64
  %1556 = getelementptr ptr, ptr %.sroa.0.0306.i3331, i64 %1555
  %1557 = getelementptr i8, ptr %1556, i64 64
  %1558 = load ptr, ptr %1557, align 8
  %result.i43.i3335 = call ptr %1558({ ptr, ptr, ptr, i32 } %1553, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1559 = call i32 %result.i43.i3335({ ptr, ptr, ptr, i32 } %1553, { ptr, ptr, ptr, i32 } %1553, ptr nonnull align 8 %2) #42
  %..i3336 = select i1 %.070307.i3330, ptr %16, ptr %18
  %.184.i3337 = select i1 %.070307.i3330, i64 104, i64 112
  %.185.i3338 = select i1 %.070307.i3330, ptr %17, ptr %19
  %.186.i3339 = select i1 %.070307.i3330, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i3336, align 8
  %1560 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i3336)
  %1561 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i3337
  %1562 = load ptr, ptr %1561, align 8
  store ptr @i32_typ, ptr %.185.i3338, align 8
  %result.i44.i3340 = call ptr %1562({ ptr, ptr, ptr, i32 } %118, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i3338) #45
  %1563 = call i32 %result.i44.i3340({ ptr, ptr, ptr, i32 } %118, { ptr, ptr, ptr, i32 } %118, ptr nonnull align 8 dereferenceable(8) %..i3336, i32 %1559) #42
  %1564 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1565 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i3339
  %1566 = load ptr, ptr %1565, align 8
  %1567 = load ptr, ptr %1566, align 8
  %1568 = call { ptr } %1567(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i3341 = extractvalue { ptr } %1568, 0
  %1569 = sext i32 %1563 to i64
  %1570 = shl nsw i64 %1569, 5
  %1571 = getelementptr i8, ptr %.fca.0.extract53.i3341, i64 %1570
  %1572 = load ptr, ptr %1571, align 8
  %1573 = getelementptr i8, ptr %1571, i64 8
  %1574 = load i64, ptr %1573, align 4
  %.sroa_idx.i3342 = getelementptr i8, ptr %1571, i64 16
  %1575 = load i64, ptr %.sroa_idx.i3342, align 4
  %1576 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1577 = call { ptr } %1567(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i3343 = extractvalue { ptr } %1577, 0
  %1578 = getelementptr i8, ptr %.fca.0.extract51.i3343, i64 %1570
  store ptr %.sroa.0.0306.i3331, ptr %1578, align 8
  %1579 = getelementptr i8, ptr %1578, i64 8
  store i64 %.sroa.6.0305.i3332.in, ptr %1579, align 4
  %.sroa_idx100.i3344 = getelementptr i8, ptr %1578, i64 16
  store i64 %.sroa.12.0304.i3333.in, ptr %.sroa_idx100.i3344, align 4
  %.sroa_idx101.i3345 = getelementptr i8, ptr %1578, i64 24
  store i32 %.sroa.17.0303.i3334, ptr %.sroa_idx101.i3345, align 4
  %1580 = icmp ne ptr %1572, @nil_typ
  %1581 = icmp ne ptr %1572, null
  %.not90.i3346 = and i1 %1580, %1581
  br i1 %.not90.i3346, label %.cont.i3351, label %1587

.cont.i3351:                                      ; preds = %1549
  %1582 = add nuw nsw i32 %.0308.i3329, 1
  %1583 = xor i1 %.070307.i3330, true
  %hash_coef_ptr.i.i60.i3354 = getelementptr i8, ptr %1572, i64 8
  %tbl_size_ptr.i.i61.i3355 = getelementptr i8, ptr %1572, i64 16
  %offset_tbl_ptr.i.i62.i3356 = getelementptr i8, ptr %1572, i64 40
  %hash_coef.i.i63.i3357 = load i64, ptr %hash_coef_ptr.i.i60.i3354, align 4
  %tbl_size.i.i64.i3358 = load i64, ptr %tbl_size_ptr.i.i61.i3355, align 4
  %offset_tbl.i.i65.i3359 = load ptr, ptr %offset_tbl_ptr.i.i62.i3356, align 8
  %product.i.i.i66.i3360 = mul i64 %hash_coef.i.i63.i3357, 4015701072841558310
  %shifted.i.i.i67.i3361 = lshr i64 %product.i.i.i66.i3360, 32
  %xored.i.i.i68.i3362 = xor i64 %shifted.i.i.i67.i3361, %product.i.i.i66.i3360
  %hash.i.i.i69.i3363 = and i64 %xored.i.i.i68.i3362, %tbl_size.i.i64.i3358
  %offset_ptr.i.i70.i3364 = getelementptr i32, ptr %offset_tbl.i.i65.i3359, i64 %hash.i.i.i69.i3363
  %offset.i.i71.i3365 = load i32, ptr %offset_ptr.i.i70.i3364, align 4
  %1584 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1585 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1586 = icmp ult i32 %.0308.i3329, 99
  br i1 %1586, label %1549, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3374

1587:                                             ; preds = %1549
  %1588 = load i32, ptr %110, align 4
  %1589 = add i32 %1588, 1
  %1590 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1589, ptr %110, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3374

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3374: ; preds = %.cont.i3351, %1587
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %16)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %17)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %18)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %19)
  br label %._crit_edge.i2527

._crit_edge.i2527:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3374, %.lr.ph.i2512
  %1591 = add nuw nsw i32 %.045.i2525, 1
  %1592 = icmp slt i32 %1591, %1530
  br i1 %1592, label %.lr.ph.i2512, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2545

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2545: ; preds = %._crit_edge.i2527, %._crit_edge.i2562
  %.045.i2560 = phi i32 [ %1649, %._crit_edge.i2562 ], [ 0, %._crit_edge.i2527 ]
  %1593 = zext nneg i32 %.045.i2560 to i64
  %1594 = shl nuw nsw i64 %1593, 5
  %1595 = getelementptr i8, ptr %1529, i64 %1594
  %1596 = load ptr, ptr %1595, align 8
  %1597 = icmp ne ptr %1596, @nil_typ
  %1598 = icmp ne ptr %1596, null
  %.not16.i2561 = and i1 %1597, %1598
  br i1 %.not16.i2561, label %1599, label %._crit_edge.i2562

1599:                                             ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2545
  %1600 = getelementptr i8, ptr %1595, i64 8
  %1601 = load i64, ptr %1600, align 4
  %.sroa_idx.i2563 = getelementptr i8, ptr %1595, i64 16
  %1602 = load i64, ptr %.sroa_idx.i2563, align 4
  %hash_coef_ptr.i.i3.i2564 = getelementptr i8, ptr %1596, i64 8
  %tbl_size_ptr.i.i4.i2565 = getelementptr i8, ptr %1596, i64 16
  %offset_tbl_ptr.i.i5.i2566 = getelementptr i8, ptr %1596, i64 40
  %1603 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %12)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %13)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %14)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %15)
  %hash_coef.i.i17.i3392 = load i64, ptr %hash_coef_ptr.i.i3.i2564, align 4, !noalias !23
  %tbl_size.i.i18.i3393 = load i64, ptr %tbl_size_ptr.i.i4.i2565, align 4, !noalias !23
  %offset_tbl.i.i19.i3394 = load ptr, ptr %offset_tbl_ptr.i.i5.i2566, align 8, !noalias !23
  %product.i.i.i20.i3395 = mul i64 %hash_coef.i.i17.i3392, 4015701072841558310
  %shifted.i.i.i21.i3396 = lshr i64 %product.i.i.i20.i3395, 32
  %xored.i.i.i22.i3397 = xor i64 %shifted.i.i.i21.i3396, %product.i.i.i20.i3395
  %hash.i.i.i23.i3398 = and i64 %xored.i.i.i22.i3397, %tbl_size.i.i18.i3393
  %offset_ptr.i.i24.i3399 = getelementptr i32, ptr %offset_tbl.i.i19.i3394, i64 %hash.i.i.i23.i3398
  %offset.i.i39.i3400 = load i32, ptr %offset_ptr.i.i24.i3399, align 4, !noalias !384
  %1604 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1605 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1606 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1607

1607:                                             ; preds = %.cont.i3423, %1599
  %.0308.i3401 = phi i32 [ 0, %1599 ], [ %1640, %.cont.i3423 ]
  %.070307.i3402 = phi i1 [ true, %1599 ], [ %1641, %.cont.i3423 ]
  %.sroa.0.0306.i3403 = phi ptr [ %1596, %1599 ], [ %1630, %.cont.i3423 ]
  %.sroa.6.0305.i3404.in = phi i64 [ %1601, %1599 ], [ %1632, %.cont.i3423 ]
  %.sroa.12.0304.i3405.in = phi i64 [ %1602, %1599 ], [ %1633, %.cont.i3423 ]
  %.sroa.17.0303.i3406 = phi i32 [ %offset.i.i39.i3400, %1599 ], [ %offset.i.i71.i3437, %.cont.i3423 ]
  %.sroa.12.0304.i3405 = inttoptr i64 %.sroa.12.0304.i3405.in to ptr
  %.sroa.6.0305.i3404 = inttoptr i64 %.sroa.6.0305.i3404.in to ptr
  %1608 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i3403, 0
  %1609 = insertvalue { ptr, ptr, ptr, i32 } %1608, ptr %.sroa.6.0305.i3404, 1
  %1610 = insertvalue { ptr, ptr, ptr, i32 } %1609, ptr %.sroa.12.0304.i3405, 2
  %1611 = insertvalue { ptr, ptr, ptr, i32 } %1610, i32 %.sroa.17.0303.i3406, 3
  %1612 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i3403)
  %1613 = sext i32 %.sroa.17.0303.i3406 to i64
  %1614 = getelementptr ptr, ptr %.sroa.0.0306.i3403, i64 %1613
  %1615 = getelementptr i8, ptr %1614, i64 64
  %1616 = load ptr, ptr %1615, align 8
  %result.i43.i3407 = call ptr %1616({ ptr, ptr, ptr, i32 } %1611, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1617 = call i32 %result.i43.i3407({ ptr, ptr, ptr, i32 } %1611, { ptr, ptr, ptr, i32 } %1611, ptr nonnull align 8 %2) #42
  %..i3408 = select i1 %.070307.i3402, ptr %12, ptr %14
  %.184.i3409 = select i1 %.070307.i3402, i64 104, i64 112
  %.185.i3410 = select i1 %.070307.i3402, ptr %13, ptr %15
  %.186.i3411 = select i1 %.070307.i3402, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i3408, align 8
  %1618 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i3408)
  %1619 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i3409
  %1620 = load ptr, ptr %1619, align 8
  store ptr @i32_typ, ptr %.185.i3410, align 8
  %result.i44.i3412 = call ptr %1620({ ptr, ptr, ptr, i32 } %118, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i3410) #45
  %1621 = call i32 %result.i44.i3412({ ptr, ptr, ptr, i32 } %118, { ptr, ptr, ptr, i32 } %118, ptr nonnull align 8 dereferenceable(8) %..i3408, i32 %1617) #42
  %1622 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1623 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i3411
  %1624 = load ptr, ptr %1623, align 8
  %1625 = load ptr, ptr %1624, align 8
  %1626 = call { ptr } %1625(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i3413 = extractvalue { ptr } %1626, 0
  %1627 = sext i32 %1621 to i64
  %1628 = shl nsw i64 %1627, 5
  %1629 = getelementptr i8, ptr %.fca.0.extract53.i3413, i64 %1628
  %1630 = load ptr, ptr %1629, align 8
  %1631 = getelementptr i8, ptr %1629, i64 8
  %1632 = load i64, ptr %1631, align 4
  %.sroa_idx.i3414 = getelementptr i8, ptr %1629, i64 16
  %1633 = load i64, ptr %.sroa_idx.i3414, align 4
  %1634 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1635 = call { ptr } %1625(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i3415 = extractvalue { ptr } %1635, 0
  %1636 = getelementptr i8, ptr %.fca.0.extract51.i3415, i64 %1628
  store ptr %.sroa.0.0306.i3403, ptr %1636, align 8
  %1637 = getelementptr i8, ptr %1636, i64 8
  store i64 %.sroa.6.0305.i3404.in, ptr %1637, align 4
  %.sroa_idx100.i3416 = getelementptr i8, ptr %1636, i64 16
  store i64 %.sroa.12.0304.i3405.in, ptr %.sroa_idx100.i3416, align 4
  %.sroa_idx101.i3417 = getelementptr i8, ptr %1636, i64 24
  store i32 %.sroa.17.0303.i3406, ptr %.sroa_idx101.i3417, align 4
  %1638 = icmp ne ptr %1630, @nil_typ
  %1639 = icmp ne ptr %1630, null
  %.not90.i3418 = and i1 %1638, %1639
  br i1 %.not90.i3418, label %.cont.i3423, label %1645

.cont.i3423:                                      ; preds = %1607
  %1640 = add nuw nsw i32 %.0308.i3401, 1
  %1641 = xor i1 %.070307.i3402, true
  %hash_coef_ptr.i.i60.i3426 = getelementptr i8, ptr %1630, i64 8
  %tbl_size_ptr.i.i61.i3427 = getelementptr i8, ptr %1630, i64 16
  %offset_tbl_ptr.i.i62.i3428 = getelementptr i8, ptr %1630, i64 40
  %hash_coef.i.i63.i3429 = load i64, ptr %hash_coef_ptr.i.i60.i3426, align 4
  %tbl_size.i.i64.i3430 = load i64, ptr %tbl_size_ptr.i.i61.i3427, align 4
  %offset_tbl.i.i65.i3431 = load ptr, ptr %offset_tbl_ptr.i.i62.i3428, align 8
  %product.i.i.i66.i3432 = mul i64 %hash_coef.i.i63.i3429, 4015701072841558310
  %shifted.i.i.i67.i3433 = lshr i64 %product.i.i.i66.i3432, 32
  %xored.i.i.i68.i3434 = xor i64 %shifted.i.i.i67.i3433, %product.i.i.i66.i3432
  %hash.i.i.i69.i3435 = and i64 %xored.i.i.i68.i3434, %tbl_size.i.i64.i3430
  %offset_ptr.i.i70.i3436 = getelementptr i32, ptr %offset_tbl.i.i65.i3431, i64 %hash.i.i.i69.i3435
  %offset.i.i71.i3437 = load i32, ptr %offset_ptr.i.i70.i3436, align 4
  %1642 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1643 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1644 = icmp ult i32 %.0308.i3401, 99
  br i1 %1644, label %1607, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3446

1645:                                             ; preds = %1607
  %1646 = load i32, ptr %110, align 4
  %1647 = add i32 %1646, 1
  %1648 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1647, ptr %110, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3446

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3446: ; preds = %.cont.i3423, %1645
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %12)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %13)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %14)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %15)
  br label %._crit_edge.i2562

._crit_edge.i2562:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3446, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2545
  %1649 = add nuw nsw i32 %.045.i2560, 1
  %1650 = icmp slt i32 %1649, %1530
  br i1 %1650, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2545, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2580

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2580: ; preds = %._crit_edge.i2562, %1526
  %1651 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %52)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %53)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %54)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %55)
  %hash_coef.i.i17.i1597 = load i64, ptr %hash_coef_ptr.i.i60.i1536, align 4, !noalias !23
  %tbl_size.i.i18.i1598 = load i64, ptr %tbl_size_ptr.i.i61.i1537, align 4, !noalias !23
  %offset_tbl.i.i19.i1599 = load ptr, ptr %offset_tbl_ptr.i.i62.i1538, align 8, !noalias !23
  %product.i.i.i20.i1600 = mul i64 %hash_coef.i.i17.i1597, 4015701072841558310
  %shifted.i.i.i21.i1601 = lshr i64 %product.i.i.i20.i1600, 32
  %xored.i.i.i22.i1602 = xor i64 %shifted.i.i.i21.i1601, %product.i.i.i20.i1600
  %hash.i.i.i23.i1603 = and i64 %xored.i.i.i22.i1602, %tbl_size.i.i18.i1598
  %offset_ptr.i.i24.i1604 = getelementptr i32, ptr %offset_tbl.i.i19.i1599, i64 %hash.i.i.i23.i1603
  %offset.i.i39.i1605 = load i32, ptr %offset_ptr.i.i24.i1604, align 4, !noalias !387
  %1652 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1653 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1654 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1655

1655:                                             ; preds = %.cont.i1629, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2580
  %.0308.i1607 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2580 ], [ %1688, %.cont.i1629 ]
  %.070307.i1608 = phi i1 [ true, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2580 ], [ %1689, %.cont.i1629 ]
  %.sroa.0.0306.i1609 = phi ptr [ %1506, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2580 ], [ %1678, %.cont.i1629 ]
  %.sroa.6.0305.i1610.in = phi i64 [ %1508, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2580 ], [ %1680, %.cont.i1629 ]
  %.sroa.12.0304.i1611.in = phi i64 [ %1509, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2580 ], [ %1681, %.cont.i1629 ]
  %.sroa.17.0303.i1612 = phi i32 [ %offset.i.i39.i1605, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2580 ], [ %offset.i.i71.i1643, %.cont.i1629 ]
  %.sroa.12.0304.i1611 = inttoptr i64 %.sroa.12.0304.i1611.in to ptr
  %.sroa.6.0305.i1610 = inttoptr i64 %.sroa.6.0305.i1610.in to ptr
  %1656 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1609, 0
  %1657 = insertvalue { ptr, ptr, ptr, i32 } %1656, ptr %.sroa.6.0305.i1610, 1
  %1658 = insertvalue { ptr, ptr, ptr, i32 } %1657, ptr %.sroa.12.0304.i1611, 2
  %1659 = insertvalue { ptr, ptr, ptr, i32 } %1658, i32 %.sroa.17.0303.i1612, 3
  %1660 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1609)
  %1661 = sext i32 %.sroa.17.0303.i1612 to i64
  %1662 = getelementptr ptr, ptr %.sroa.0.0306.i1609, i64 %1661
  %1663 = getelementptr i8, ptr %1662, i64 64
  %1664 = load ptr, ptr %1663, align 8
  %result.i43.i1613 = call ptr %1664({ ptr, ptr, ptr, i32 } %1659, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1665 = call i32 %result.i43.i1613({ ptr, ptr, ptr, i32 } %1659, { ptr, ptr, ptr, i32 } %1659, ptr nonnull align 8 %2) #42
  %..i1614 = select i1 %.070307.i1608, ptr %52, ptr %54
  %.184.i1615 = select i1 %.070307.i1608, i64 104, i64 112
  %.185.i1616 = select i1 %.070307.i1608, ptr %53, ptr %55
  %.186.i1617 = select i1 %.070307.i1608, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1614, align 8
  %1666 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1614)
  %1667 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1615
  %1668 = load ptr, ptr %1667, align 8
  store ptr @i32_typ, ptr %.185.i1616, align 8
  %result.i44.i1618 = call ptr %1668({ ptr, ptr, ptr, i32 } %113, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1616) #45
  %1669 = call i32 %result.i44.i1618({ ptr, ptr, ptr, i32 } %113, { ptr, ptr, ptr, i32 } %113, ptr nonnull align 8 dereferenceable(8) %..i1614, i32 %1665) #42
  %1670 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1671 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1617
  %1672 = load ptr, ptr %1671, align 8
  %1673 = load ptr, ptr %1672, align 8
  %1674 = call { ptr } %1673(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i1619 = extractvalue { ptr } %1674, 0
  %1675 = sext i32 %1669 to i64
  %1676 = shl nsw i64 %1675, 5
  %1677 = getelementptr i8, ptr %.fca.0.extract53.i1619, i64 %1676
  %1678 = load ptr, ptr %1677, align 8
  %1679 = getelementptr i8, ptr %1677, i64 8
  %1680 = load i64, ptr %1679, align 4
  %.sroa_idx.i1620 = getelementptr i8, ptr %1677, i64 16
  %1681 = load i64, ptr %.sroa_idx.i1620, align 4
  %1682 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1683 = call { ptr } %1673(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i1621 = extractvalue { ptr } %1683, 0
  %1684 = getelementptr i8, ptr %.fca.0.extract51.i1621, i64 %1676
  store ptr %.sroa.0.0306.i1609, ptr %1684, align 8
  %1685 = getelementptr i8, ptr %1684, i64 8
  store i64 %.sroa.6.0305.i1610.in, ptr %1685, align 4
  %.sroa_idx100.i1622 = getelementptr i8, ptr %1684, i64 16
  store i64 %.sroa.12.0304.i1611.in, ptr %.sroa_idx100.i1622, align 4
  %.sroa_idx101.i1623 = getelementptr i8, ptr %1684, i64 24
  store i32 %.sroa.17.0303.i1612, ptr %.sroa_idx101.i1623, align 4
  %1686 = icmp ne ptr %1678, @nil_typ
  %1687 = icmp ne ptr %1678, null
  %.not90.i1624 = and i1 %1686, %1687
  br i1 %.not90.i1624, label %.cont.i1629, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1652

.cont.i1629:                                      ; preds = %1655
  %1688 = add nuw nsw i32 %.0308.i1607, 1
  %1689 = xor i1 %.070307.i1608, true
  %hash_coef_ptr.i.i60.i1632 = getelementptr i8, ptr %1678, i64 8
  %tbl_size_ptr.i.i61.i1633 = getelementptr i8, ptr %1678, i64 16
  %offset_tbl_ptr.i.i62.i1634 = getelementptr i8, ptr %1678, i64 40
  %hash_coef.i.i63.i1635 = load i64, ptr %hash_coef_ptr.i.i60.i1632, align 4
  %tbl_size.i.i64.i1636 = load i64, ptr %tbl_size_ptr.i.i61.i1633, align 4
  %offset_tbl.i.i65.i1637 = load ptr, ptr %offset_tbl_ptr.i.i62.i1634, align 8
  %product.i.i.i66.i1638 = mul i64 %hash_coef.i.i63.i1635, 4015701072841558310
  %shifted.i.i.i67.i1639 = lshr i64 %product.i.i.i66.i1638, 32
  %xored.i.i.i68.i1640 = xor i64 %shifted.i.i.i67.i1639, %product.i.i.i66.i1638
  %hash.i.i.i69.i1641 = and i64 %xored.i.i.i68.i1640, %tbl_size.i.i64.i1636
  %offset_ptr.i.i70.i1642 = getelementptr i32, ptr %offset_tbl.i.i65.i1637, i64 %hash.i.i.i69.i1641
  %offset.i.i71.i1643 = load i32, ptr %offset_ptr.i.i70.i1642, align 4
  %1690 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1691 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1692 = icmp ult i32 %.0308.i1607, 99
  br i1 %1692, label %1655, label %1696

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1652: ; preds = %1655
  %1693 = load i32, ptr %110, align 4
  %1694 = add i32 %1693, 1
  %1695 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1694, ptr %110, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %52)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %53)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %54)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %55)
  br label %CuckooMap_insert_keyK_valueV.exit664

1696:                                             ; preds = %.cont.i1629
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %52)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %53)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %54)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %55)
  %1697 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1698 = load ptr, ptr %101, align 8
  %1699 = load ptr, ptr %102, align 8
  %1700 = load i32, ptr %100, align 8
  %1701 = shl i32 %1700, 1
  %spec.select.i1668 = call i32 @llvm.smax.i32(i32 %1701, i32 noundef 16) #37
  store i32 %spec.select.i1668, ptr %100, align 8
  %1702 = zext nneg i32 %spec.select.i1668 to i64
  %1703 = shl nuw nsw i64 %1702, 5
  %result.i.i1669 = call noalias ptr @bump_malloc_inner(i64 noundef %1703, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i1669, ptr %101, align 8
  %result.i1.i1670 = call noalias ptr @bump_malloc_inner(i64 noundef %1703, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i1670, ptr %102, align 8
  store i32 0, ptr %110, align 4
  %1704 = icmp sgt i32 %1700, 0
  br i1 %1704, label %.lr.ph.i2582, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2615.thread

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2615.thread: ; preds = %1696
  %1705 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %CuckooMap_insert_keyK_valueV.exit664

.lr.ph.i2582:                                     ; preds = %1696, %._crit_edge.i2597
  %.045.i2595 = phi i32 [ %1762, %._crit_edge.i2597 ], [ 0, %1696 ]
  %1706 = zext nneg i32 %.045.i2595 to i64
  %1707 = shl nuw nsw i64 %1706, 5
  %1708 = getelementptr i8, ptr %1698, i64 %1707
  %1709 = load ptr, ptr %1708, align 8
  %1710 = icmp ne ptr %1709, @nil_typ
  %1711 = icmp ne ptr %1709, null
  %.not16.i2596 = and i1 %1710, %1711
  br i1 %.not16.i2596, label %1712, label %._crit_edge.i2597

1712:                                             ; preds = %.lr.ph.i2582
  %1713 = getelementptr i8, ptr %1708, i64 8
  %1714 = load i64, ptr %1713, align 4
  %.sroa_idx.i2598 = getelementptr i8, ptr %1708, i64 16
  %1715 = load i64, ptr %.sroa_idx.i2598, align 4
  %hash_coef_ptr.i.i3.i2599 = getelementptr i8, ptr %1709, i64 8
  %tbl_size_ptr.i.i4.i2600 = getelementptr i8, ptr %1709, i64 16
  %offset_tbl_ptr.i.i5.i2601 = getelementptr i8, ptr %1709, i64 40
  %1716 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %8)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %9)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %10)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %11)
  %hash_coef.i.i17.i3464 = load i64, ptr %hash_coef_ptr.i.i3.i2599, align 4, !noalias !23
  %tbl_size.i.i18.i3465 = load i64, ptr %tbl_size_ptr.i.i4.i2600, align 4, !noalias !23
  %offset_tbl.i.i19.i3466 = load ptr, ptr %offset_tbl_ptr.i.i5.i2601, align 8, !noalias !23
  %product.i.i.i20.i3467 = mul i64 %hash_coef.i.i17.i3464, 4015701072841558310
  %shifted.i.i.i21.i3468 = lshr i64 %product.i.i.i20.i3467, 32
  %xored.i.i.i22.i3469 = xor i64 %shifted.i.i.i21.i3468, %product.i.i.i20.i3467
  %hash.i.i.i23.i3470 = and i64 %xored.i.i.i22.i3469, %tbl_size.i.i18.i3465
  %offset_ptr.i.i24.i3471 = getelementptr i32, ptr %offset_tbl.i.i19.i3466, i64 %hash.i.i.i23.i3470
  %offset.i.i39.i3472 = load i32, ptr %offset_ptr.i.i24.i3471, align 4, !noalias !390
  %1717 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1718 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1719 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1720

1720:                                             ; preds = %.cont.i3495, %1712
  %.0308.i3473 = phi i32 [ 0, %1712 ], [ %1753, %.cont.i3495 ]
  %.070307.i3474 = phi i1 [ true, %1712 ], [ %1754, %.cont.i3495 ]
  %.sroa.0.0306.i3475 = phi ptr [ %1709, %1712 ], [ %1743, %.cont.i3495 ]
  %.sroa.6.0305.i3476.in = phi i64 [ %1714, %1712 ], [ %1745, %.cont.i3495 ]
  %.sroa.12.0304.i3477.in = phi i64 [ %1715, %1712 ], [ %1746, %.cont.i3495 ]
  %.sroa.17.0303.i3478 = phi i32 [ %offset.i.i39.i3472, %1712 ], [ %offset.i.i71.i3509, %.cont.i3495 ]
  %.sroa.12.0304.i3477 = inttoptr i64 %.sroa.12.0304.i3477.in to ptr
  %.sroa.6.0305.i3476 = inttoptr i64 %.sroa.6.0305.i3476.in to ptr
  %1721 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i3475, 0
  %1722 = insertvalue { ptr, ptr, ptr, i32 } %1721, ptr %.sroa.6.0305.i3476, 1
  %1723 = insertvalue { ptr, ptr, ptr, i32 } %1722, ptr %.sroa.12.0304.i3477, 2
  %1724 = insertvalue { ptr, ptr, ptr, i32 } %1723, i32 %.sroa.17.0303.i3478, 3
  %1725 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i3475)
  %1726 = sext i32 %.sroa.17.0303.i3478 to i64
  %1727 = getelementptr ptr, ptr %.sroa.0.0306.i3475, i64 %1726
  %1728 = getelementptr i8, ptr %1727, i64 64
  %1729 = load ptr, ptr %1728, align 8
  %result.i43.i3479 = call ptr %1729({ ptr, ptr, ptr, i32 } %1724, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1730 = call i32 %result.i43.i3479({ ptr, ptr, ptr, i32 } %1724, { ptr, ptr, ptr, i32 } %1724, ptr nonnull align 8 %2) #42
  %..i3480 = select i1 %.070307.i3474, ptr %8, ptr %10
  %.184.i3481 = select i1 %.070307.i3474, i64 104, i64 112
  %.185.i3482 = select i1 %.070307.i3474, ptr %9, ptr %11
  %.186.i3483 = select i1 %.070307.i3474, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i3480, align 8
  %1731 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i3480)
  %1732 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i3481
  %1733 = load ptr, ptr %1732, align 8
  store ptr @i32_typ, ptr %.185.i3482, align 8
  %result.i44.i3484 = call ptr %1733({ ptr, ptr, ptr, i32 } %118, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i3482) #45
  %1734 = call i32 %result.i44.i3484({ ptr, ptr, ptr, i32 } %118, { ptr, ptr, ptr, i32 } %118, ptr nonnull align 8 dereferenceable(8) %..i3480, i32 %1730) #42
  %1735 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1736 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i3483
  %1737 = load ptr, ptr %1736, align 8
  %1738 = load ptr, ptr %1737, align 8
  %1739 = call { ptr } %1738(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i3485 = extractvalue { ptr } %1739, 0
  %1740 = sext i32 %1734 to i64
  %1741 = shl nsw i64 %1740, 5
  %1742 = getelementptr i8, ptr %.fca.0.extract53.i3485, i64 %1741
  %1743 = load ptr, ptr %1742, align 8
  %1744 = getelementptr i8, ptr %1742, i64 8
  %1745 = load i64, ptr %1744, align 4
  %.sroa_idx.i3486 = getelementptr i8, ptr %1742, i64 16
  %1746 = load i64, ptr %.sroa_idx.i3486, align 4
  %1747 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1748 = call { ptr } %1738(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i3487 = extractvalue { ptr } %1748, 0
  %1749 = getelementptr i8, ptr %.fca.0.extract51.i3487, i64 %1741
  store ptr %.sroa.0.0306.i3475, ptr %1749, align 8
  %1750 = getelementptr i8, ptr %1749, i64 8
  store i64 %.sroa.6.0305.i3476.in, ptr %1750, align 4
  %.sroa_idx100.i3488 = getelementptr i8, ptr %1749, i64 16
  store i64 %.sroa.12.0304.i3477.in, ptr %.sroa_idx100.i3488, align 4
  %.sroa_idx101.i3489 = getelementptr i8, ptr %1749, i64 24
  store i32 %.sroa.17.0303.i3478, ptr %.sroa_idx101.i3489, align 4
  %1751 = icmp ne ptr %1743, @nil_typ
  %1752 = icmp ne ptr %1743, null
  %.not90.i3490 = and i1 %1751, %1752
  br i1 %.not90.i3490, label %.cont.i3495, label %1758

.cont.i3495:                                      ; preds = %1720
  %1753 = add nuw nsw i32 %.0308.i3473, 1
  %1754 = xor i1 %.070307.i3474, true
  %hash_coef_ptr.i.i60.i3498 = getelementptr i8, ptr %1743, i64 8
  %tbl_size_ptr.i.i61.i3499 = getelementptr i8, ptr %1743, i64 16
  %offset_tbl_ptr.i.i62.i3500 = getelementptr i8, ptr %1743, i64 40
  %hash_coef.i.i63.i3501 = load i64, ptr %hash_coef_ptr.i.i60.i3498, align 4
  %tbl_size.i.i64.i3502 = load i64, ptr %tbl_size_ptr.i.i61.i3499, align 4
  %offset_tbl.i.i65.i3503 = load ptr, ptr %offset_tbl_ptr.i.i62.i3500, align 8
  %product.i.i.i66.i3504 = mul i64 %hash_coef.i.i63.i3501, 4015701072841558310
  %shifted.i.i.i67.i3505 = lshr i64 %product.i.i.i66.i3504, 32
  %xored.i.i.i68.i3506 = xor i64 %shifted.i.i.i67.i3505, %product.i.i.i66.i3504
  %hash.i.i.i69.i3507 = and i64 %xored.i.i.i68.i3506, %tbl_size.i.i64.i3502
  %offset_ptr.i.i70.i3508 = getelementptr i32, ptr %offset_tbl.i.i65.i3503, i64 %hash.i.i.i69.i3507
  %offset.i.i71.i3509 = load i32, ptr %offset_ptr.i.i70.i3508, align 4
  %1755 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1756 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1757 = icmp ult i32 %.0308.i3473, 99
  br i1 %1757, label %1720, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3518

1758:                                             ; preds = %1720
  %1759 = load i32, ptr %110, align 4
  %1760 = add i32 %1759, 1
  %1761 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1760, ptr %110, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3518

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3518: ; preds = %.cont.i3495, %1758
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %8)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %9)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %10)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %11)
  br label %._crit_edge.i2597

._crit_edge.i2597:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3518, %.lr.ph.i2582
  %1762 = add nuw nsw i32 %.045.i2595, 1
  %1763 = icmp slt i32 %1762, %1700
  br i1 %1763, label %.lr.ph.i2582, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2615

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2615: ; preds = %._crit_edge.i2597
  %1764 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %1765

1765:                                             ; preds = %._crit_edge.i2632, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2615
  %.045.i2630 = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2615 ], [ %1822, %._crit_edge.i2632 ]
  %1766 = zext nneg i32 %.045.i2630 to i64
  %1767 = shl nuw nsw i64 %1766, 5
  %1768 = getelementptr i8, ptr %1699, i64 %1767
  %1769 = load ptr, ptr %1768, align 8
  %1770 = icmp ne ptr %1769, @nil_typ
  %1771 = icmp ne ptr %1769, null
  %.not16.i2631 = and i1 %1770, %1771
  br i1 %.not16.i2631, label %1772, label %._crit_edge.i2632

1772:                                             ; preds = %1765
  %1773 = getelementptr i8, ptr %1768, i64 8
  %1774 = load i64, ptr %1773, align 4
  %.sroa_idx.i2633 = getelementptr i8, ptr %1768, i64 16
  %1775 = load i64, ptr %.sroa_idx.i2633, align 4
  %hash_coef_ptr.i.i3.i2634 = getelementptr i8, ptr %1769, i64 8
  %tbl_size_ptr.i.i4.i2635 = getelementptr i8, ptr %1769, i64 16
  %offset_tbl_ptr.i.i5.i2636 = getelementptr i8, ptr %1769, i64 40
  %1776 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %4)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %5)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %6)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %7)
  %hash_coef.i.i17.i3536 = load i64, ptr %hash_coef_ptr.i.i3.i2634, align 4, !noalias !23
  %tbl_size.i.i18.i3537 = load i64, ptr %tbl_size_ptr.i.i4.i2635, align 4, !noalias !23
  %offset_tbl.i.i19.i3538 = load ptr, ptr %offset_tbl_ptr.i.i5.i2636, align 8, !noalias !23
  %product.i.i.i20.i3539 = mul i64 %hash_coef.i.i17.i3536, 4015701072841558310
  %shifted.i.i.i21.i3540 = lshr i64 %product.i.i.i20.i3539, 32
  %xored.i.i.i22.i3541 = xor i64 %shifted.i.i.i21.i3540, %product.i.i.i20.i3539
  %hash.i.i.i23.i3542 = and i64 %xored.i.i.i22.i3541, %tbl_size.i.i18.i3537
  %offset_ptr.i.i24.i3543 = getelementptr i32, ptr %offset_tbl.i.i19.i3538, i64 %hash.i.i.i23.i3542
  %offset.i.i39.i3544 = load i32, ptr %offset_ptr.i.i24.i3543, align 4, !noalias !393
  %1777 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1778 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1779 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1780

1780:                                             ; preds = %.cont.i3567, %1772
  %.0308.i3545 = phi i32 [ 0, %1772 ], [ %1813, %.cont.i3567 ]
  %.070307.i3546 = phi i1 [ true, %1772 ], [ %1814, %.cont.i3567 ]
  %.sroa.0.0306.i3547 = phi ptr [ %1769, %1772 ], [ %1803, %.cont.i3567 ]
  %.sroa.6.0305.i3548.in = phi i64 [ %1774, %1772 ], [ %1805, %.cont.i3567 ]
  %.sroa.12.0304.i3549.in = phi i64 [ %1775, %1772 ], [ %1806, %.cont.i3567 ]
  %.sroa.17.0303.i3550 = phi i32 [ %offset.i.i39.i3544, %1772 ], [ %offset.i.i71.i3581, %.cont.i3567 ]
  %.sroa.12.0304.i3549 = inttoptr i64 %.sroa.12.0304.i3549.in to ptr
  %.sroa.6.0305.i3548 = inttoptr i64 %.sroa.6.0305.i3548.in to ptr
  %1781 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i3547, 0
  %1782 = insertvalue { ptr, ptr, ptr, i32 } %1781, ptr %.sroa.6.0305.i3548, 1
  %1783 = insertvalue { ptr, ptr, ptr, i32 } %1782, ptr %.sroa.12.0304.i3549, 2
  %1784 = insertvalue { ptr, ptr, ptr, i32 } %1783, i32 %.sroa.17.0303.i3550, 3
  %1785 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i3547)
  %1786 = sext i32 %.sroa.17.0303.i3550 to i64
  %1787 = getelementptr ptr, ptr %.sroa.0.0306.i3547, i64 %1786
  %1788 = getelementptr i8, ptr %1787, i64 64
  %1789 = load ptr, ptr %1788, align 8
  %result.i43.i3551 = call ptr %1789({ ptr, ptr, ptr, i32 } %1784, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1790 = call i32 %result.i43.i3551({ ptr, ptr, ptr, i32 } %1784, { ptr, ptr, ptr, i32 } %1784, ptr nonnull align 8 %2) #42
  %..i3552 = select i1 %.070307.i3546, ptr %4, ptr %6
  %.184.i3553 = select i1 %.070307.i3546, i64 104, i64 112
  %.185.i3554 = select i1 %.070307.i3546, ptr %5, ptr %7
  %.186.i3555 = select i1 %.070307.i3546, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i3552, align 8
  %1791 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i3552)
  %1792 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i3553
  %1793 = load ptr, ptr %1792, align 8
  store ptr @i32_typ, ptr %.185.i3554, align 8
  %result.i44.i3556 = call ptr %1793({ ptr, ptr, ptr, i32 } %118, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i3554) #45
  %1794 = call i32 %result.i44.i3556({ ptr, ptr, ptr, i32 } %118, { ptr, ptr, ptr, i32 } %118, ptr nonnull align 8 dereferenceable(8) %..i3552, i32 %1790) #42
  %1795 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1796 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i3555
  %1797 = load ptr, ptr %1796, align 8
  %1798 = load ptr, ptr %1797, align 8
  %1799 = call { ptr } %1798(ptr nonnull %result.i51) #40
  %.fca.0.extract53.i3557 = extractvalue { ptr } %1799, 0
  %1800 = sext i32 %1794 to i64
  %1801 = shl nsw i64 %1800, 5
  %1802 = getelementptr i8, ptr %.fca.0.extract53.i3557, i64 %1801
  %1803 = load ptr, ptr %1802, align 8
  %1804 = getelementptr i8, ptr %1802, i64 8
  %1805 = load i64, ptr %1804, align 4
  %.sroa_idx.i3558 = getelementptr i8, ptr %1802, i64 16
  %1806 = load i64, ptr %.sroa_idx.i3558, align 4
  %1807 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1808 = call { ptr } %1798(ptr nonnull %result.i51) #40
  %.fca.0.extract51.i3559 = extractvalue { ptr } %1808, 0
  %1809 = getelementptr i8, ptr %.fca.0.extract51.i3559, i64 %1801
  store ptr %.sroa.0.0306.i3547, ptr %1809, align 8
  %1810 = getelementptr i8, ptr %1809, i64 8
  store i64 %.sroa.6.0305.i3548.in, ptr %1810, align 4
  %.sroa_idx100.i3560 = getelementptr i8, ptr %1809, i64 16
  store i64 %.sroa.12.0304.i3549.in, ptr %.sroa_idx100.i3560, align 4
  %.sroa_idx101.i3561 = getelementptr i8, ptr %1809, i64 24
  store i32 %.sroa.17.0303.i3550, ptr %.sroa_idx101.i3561, align 4
  %1811 = icmp ne ptr %1803, @nil_typ
  %1812 = icmp ne ptr %1803, null
  %.not90.i3562 = and i1 %1811, %1812
  br i1 %.not90.i3562, label %.cont.i3567, label %1818

.cont.i3567:                                      ; preds = %1780
  %1813 = add nuw nsw i32 %.0308.i3545, 1
  %1814 = xor i1 %.070307.i3546, true
  %hash_coef_ptr.i.i60.i3570 = getelementptr i8, ptr %1803, i64 8
  %tbl_size_ptr.i.i61.i3571 = getelementptr i8, ptr %1803, i64 16
  %offset_tbl_ptr.i.i62.i3572 = getelementptr i8, ptr %1803, i64 40
  %hash_coef.i.i63.i3573 = load i64, ptr %hash_coef_ptr.i.i60.i3570, align 4
  %tbl_size.i.i64.i3574 = load i64, ptr %tbl_size_ptr.i.i61.i3571, align 4
  %offset_tbl.i.i65.i3575 = load ptr, ptr %offset_tbl_ptr.i.i62.i3572, align 8
  %product.i.i.i66.i3576 = mul i64 %hash_coef.i.i63.i3573, 4015701072841558310
  %shifted.i.i.i67.i3577 = lshr i64 %product.i.i.i66.i3576, 32
  %xored.i.i.i68.i3578 = xor i64 %shifted.i.i.i67.i3577, %product.i.i.i66.i3576
  %hash.i.i.i69.i3579 = and i64 %xored.i.i.i68.i3578, %tbl_size.i.i64.i3574
  %offset_ptr.i.i70.i3580 = getelementptr i32, ptr %offset_tbl.i.i65.i3575, i64 %hash.i.i.i69.i3579
  %offset.i.i71.i3581 = load i32, ptr %offset_ptr.i.i70.i3580, align 4
  %1815 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1816 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1817 = icmp ult i32 %.0308.i3545, 99
  br i1 %1817, label %1780, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3590

1818:                                             ; preds = %1780
  %1819 = load i32, ptr %110, align 4
  %1820 = add i32 %1819, 1
  %1821 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1820, ptr %110, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3590

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3590: ; preds = %.cont.i3567, %1818
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %6)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %7)
  br label %._crit_edge.i2632

._crit_edge.i2632:                                ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit3590, %1765
  %1822 = add nuw nsw i32 %.045.i2630, 1
  %1823 = icmp slt i32 %1822, %1700
  br i1 %1823, label %1765, label %CuckooMap_insert_keyK_valueV.exit664

CuckooMap_insert_keyK_valueV.exit664:             ; preds = %._crit_edge.i2632, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit2615.thread, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1652, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1556, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1460, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1401
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1824 = add nsw i32 %.0357321, 1
  br label %._crit_edge1

._crit_edge1:                                     ; preds = %CuckooMap_get_keyK.exit, %CuckooMap_insert_keyK_valueV.exit664
  %.1358 = phi i32 [ %1824, %CuckooMap_insert_keyK_valueV.exit664 ], [ %.0357321, %CuckooMap_get_keyK.exit ]
  %1825 = add nuw nsw i32 %.0355322, 1
  %1826 = icmp slt i32 %.1358, %0
  %1827 = icmp slt i32 %1825, %104
  %spec.select = select i1 %1826, i1 %1827, i1 false
  br i1 %spec.select, label %120, label %._crit_edge3._crit_edge

._crit_edge3._crit_edge:                          ; preds = %._crit_edge1, %1
  %.0357.lcssa = phi i32 [ 0, %1 ], [ %.1358, %._crit_edge1 ]
  %1828 = icmp slt i32 %.0357.lcssa, %0
  br i1 %1828, label %._crit_edge.lr.ph.i, label %._crit_edge4

._crit_edge.lr.ph.i:                              ; preds = %._crit_edge3._crit_edge
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1829 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1830 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <29 x i8> <i8 87, i8 97, i8 114, i8 110, i8 105, i8 110, i8 103, i8 58, i8 32, i8 67, i8 111, i8 117, i8 108, i8 100, i8 32, i8 111, i8 110, i8 108, i8 121, i8 32, i8 103, i8 101, i8 110, i8 101, i8 114, i8 97, i8 116, i8 101, i8 32>, ptr %result.i.i1688.h2s3827, align 32
  %1831 = getelementptr inbounds i8, ptr %result.i.i1688.h2s3827, i64 29
  store i8 0, ptr %1831, align 1
  %puts.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(30) %result.i.i1688.h2s3827) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1832 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %.0357.lcssa) #42
  %1833 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1834 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1835 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <29 x i8> <i8 32, i8 117, i8 110, i8 105, i8 113, i8 117, i8 101, i8 32, i8 107, i8 101, i8 121, i8 115, i8 32, i8 102, i8 111, i8 114, i8 32, i8 114, i8 101, i8 109, i8 111, i8 118, i8 101, i8 32, i8 116, i8 101, i8 115, i8 116, i8 46>, ptr %result.i.i1703.h2s3825, align 32
  %1836 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %1837 = getelementptr inbounds i8, ptr %result.i.i1703.h2s3825, i64 29
  store i8 0, ptr %1837, align 1
  %puts.i700 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(30) %result.i.i1703.h2s3825) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %._crit_edge4

._crit_edge4:                                     ; preds = %._crit_edge.lr.ph.i, %._crit_edge3._crit_edge
  %.0365 = phi i32 [ %.0357.lcssa, %._crit_edge.lr.ph.i ], [ %0, %._crit_edge3._crit_edge ]
  %1838 = call i64 @clock()
  %1839 = icmp sgt i32 %.0365, 0
  br i1 %1839, label %.lr.ph336.preheader, label %._crit_edge8

.lr.ph336.preheader:                              ; preds = %._crit_edge4
  %1840 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 16 dereferenceable(744) @Array) #50
  %1841 = load ptr, ptr %91, align 8
  %1842 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %1843 = getelementptr inbounds i8, ptr %result.i8, i64 44
  br label %.lr.ph336

.lr.ph336:                                        ; preds = %.lr.ph336.preheader, %._crit_edge5
  %.0354335 = phi i32 [ %.1, %._crit_edge5 ], [ 0, %.lr.ph336.preheader ]
  %.0360334 = phi i1 [ %.2362, %._crit_edge5 ], [ true, %.lr.ph336.preheader ]
  %.0363333 = phi i32 [ %1986, %._crit_edge5 ], [ 0, %.lr.ph336.preheader ]
  %1844 = zext nneg i32 %.0363333 to i64
  %1845 = shl nuw nsw i64 %1844, 2
  %1846 = getelementptr i8, ptr %1841, i64 %1845
  %1847 = load i32, ptr %1846, align 1
  %.sroa.2.sroa.0.0.insert.ext.i = zext i32 %1847 to i160
  %1848 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.2.sroa.0.0.insert.ext.i, 1
  %1849 = load ptr, ptr %81, align 8
  %1850 = call i32 %1849({ ptr, i160 } %1848) #42
  %1851 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %1852 = load i32, ptr %83, align 8
  %1853 = add i32 %1852, -1
  %1854 = and i32 %1853, %1850
  %1855 = load ptr, ptr %84, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1856 = sext i32 %1854 to i64
  %1857 = shl nsw i64 %1856, 5
  %1858 = getelementptr i8, ptr %1855, i64 %1857
  %1859 = load ptr, ptr %1858, align 8
  %1860 = icmp ne ptr %1859, @nil_typ
  %1861 = icmp ne ptr %1859, null
  %.not51.i = and i1 %1860, %1861
  br i1 %.not51.i, label %1862, label %CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

1862:                                             ; preds = %.lr.ph336
  %1863 = getelementptr i8, ptr %1858, i64 8
  %1864 = load i64, ptr %1863, align 4
  %.sroa_idx.i1751 = getelementptr i8, ptr %1858, i64 16
  %1865 = load i64, ptr %.sroa_idx.i1751, align 4
  %1866 = inttoptr i64 %1864 to ptr
  %1867 = inttoptr i64 %1865 to ptr
  %hash_coef_ptr.i.i2.i1752 = getelementptr i8, ptr %1859, i64 8
  %tbl_size_ptr.i.i3.i1753 = getelementptr i8, ptr %1859, i64 16
  %offset_tbl_ptr.i.i4.i1754 = getelementptr i8, ptr %1859, i64 40
  %hash_coef.i.i5.i1755 = load i64, ptr %hash_coef_ptr.i.i2.i1752, align 4, !noalias !396
  %tbl_size.i.i6.i1756 = load i64, ptr %tbl_size_ptr.i.i3.i1753, align 4, !noalias !396
  %offset_tbl.i.i7.i1757 = load ptr, ptr %offset_tbl_ptr.i.i4.i1754, align 8, !noalias !396
  %product.i.i.i8.i1758 = mul i64 %hash_coef.i.i5.i1755, 4015701072841558310
  %shifted.i.i.i9.i1759 = lshr i64 %product.i.i.i8.i1758, 32
  %xored.i.i.i10.i1760 = xor i64 %shifted.i.i.i9.i1759, %product.i.i.i8.i1758
  %hash.i.i.i11.i1761 = and i64 %xored.i.i.i10.i1760, %tbl_size.i.i6.i1756
  %offset_ptr.i.i12.i1762 = getelementptr i32, ptr %offset_tbl.i.i7.i1757, i64 %hash.i.i.i11.i1761
  %offset.i.i13.i1763 = load i32, ptr %offset_ptr.i.i12.i1762, align 4, !noalias !396
  %1868 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1859, 0
  %1869 = insertvalue { ptr, ptr, ptr, i32 } %1868, ptr %1866, 1
  %1870 = insertvalue { ptr, ptr, ptr, i32 } %1869, ptr %1867, 2
  %1871 = insertvalue { ptr, ptr, ptr, i32 } %1870, i32 %offset.i.i13.i1763, 3
  %1872 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1873 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1859) #37
  %1874 = sext i32 %offset.i.i13.i1763 to i64
  %1875 = getelementptr ptr, ptr %1859, i64 %1874
  %1876 = getelementptr i8, ptr %1875, i64 64
  %1877 = load ptr, ptr %1876, align 8
  %result.i.i1764 = call ptr %1877({ ptr, ptr, ptr, i32 } %1871, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1878 = call i32 %result.i.i1764({ ptr, ptr, ptr, i32 } %1871, { ptr, ptr, ptr, i32 } %1871, ptr nonnull align 8 %2) #42
  %1879 = icmp eq i32 %1878, %1850
  br i1 %1879, label %._crit_edge.i1765, label %CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

._crit_edge.i1765:                                ; preds = %1862
  %1880 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1881 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1859)
  %1882 = getelementptr i8, ptr %1875, i64 48
  %1883 = load ptr, ptr %1882, align 8
  %result.i15.i1766 = call ptr %1883({ ptr, ptr, ptr, i32 } %1871, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1884 = call { ptr, i160 } %result.i15.i1766({ ptr, ptr, ptr, i32 } %1871, { ptr, ptr, ptr, i32 } %1871, ptr nonnull align 8 %2) #42
  %1885 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1886 = load ptr, ptr %82, align 8
  %1887 = call i1 %1886({ ptr, i160 } %1884, { ptr, i160 } %1848) #42
  br i1 %1887, label %CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, label %CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread

CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread: ; preds = %._crit_edge.i1765, %.lr.ph336, %1862
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %1898

CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit: ; preds = %._crit_edge.i1765
  %1888 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1889 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1859)
  %1890 = getelementptr i8, ptr %1875, i64 56
  %1891 = load ptr, ptr %1890, align 8
  %result.i16.i1767 = call ptr %1891({ ptr, ptr, ptr, i32 } %1871, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1892 = call { ptr, i160 } %result.i16.i1767({ ptr, ptr, ptr, i32 } %1871, { ptr, ptr, ptr, i32 } %1871, ptr nonnull align 8 %2) #42
  %.fca.0.extract28.i = extractvalue { ptr, i160 } %1892, 0
  store ptr @nil_typ, ptr %1858, align 8
  %1893 = load i32, ptr %1843, align 4
  %1894 = add i32 %1893, -1
  store i32 %1894, ptr %1843, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1895 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1896 = icmp ne ptr %.fca.0.extract28.i, @nil_typ
  %1897 = icmp ne ptr %.fca.0.extract28.i, null
  %.not63.i738 = and i1 %1896, %1897
  br i1 %.not63.i738, label %CuckooMap_remove_keyK.exit, label %1898

1898:                                             ; preds = %CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread, %CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit
  %1899 = add i32 %1850, 2127912214
  %1900 = shl i32 %1850, 12
  %1901 = add i32 %1899, %1900
  %1902 = ashr i32 %1901, 19
  %1903 = xor i32 %1901, %1902
  %1904 = xor i32 %1903, -949894596
  %1905 = add i32 %1904, 374761393
  %1906 = shl i32 %1904, 5
  %1907 = add i32 %1905, %1906
  %1908 = add i32 %1907, -744332180
  %1909 = shl i32 %1907, 9
  %1910 = xor i32 %1908, %1909
  %1911 = add i32 %1910, -42973499
  %1912 = shl i32 %1910, 3
  %1913 = add i32 %1911, %1912
  %1914 = ashr i32 %1913, 16
  %1915 = xor i32 %1913, %1914
  %1916 = xor i32 %1915, -1252372727
  %1917 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1918 = load i32, ptr %83, align 8
  %1919 = add i32 %1918, -1
  %1920 = and i32 %1919, %1916
  %1921 = load ptr, ptr %85, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1922 = sext i32 %1920 to i64
  %1923 = shl nsw i64 %1922, 5
  %1924 = getelementptr i8, ptr %1921, i64 %1923
  %1925 = load ptr, ptr %1924, align 8
  %1926 = icmp ne ptr %1925, @nil_typ
  %1927 = icmp ne ptr %1925, null
  %.not51.i1797 = and i1 %1926, %1927
  br i1 %.not51.i1797, label %1928, label %CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1822

1928:                                             ; preds = %1898
  %1929 = getelementptr i8, ptr %1924, i64 8
  %1930 = load i64, ptr %1929, align 4
  %.sroa_idx.i1802 = getelementptr i8, ptr %1924, i64 16
  %1931 = load i64, ptr %.sroa_idx.i1802, align 4
  %1932 = inttoptr i64 %1930 to ptr
  %1933 = inttoptr i64 %1931 to ptr
  %hash_coef_ptr.i.i2.i1803 = getelementptr i8, ptr %1925, i64 8
  %tbl_size_ptr.i.i3.i1804 = getelementptr i8, ptr %1925, i64 16
  %offset_tbl_ptr.i.i4.i1805 = getelementptr i8, ptr %1925, i64 40
  %hash_coef.i.i5.i1806 = load i64, ptr %hash_coef_ptr.i.i2.i1803, align 4, !noalias !399
  %tbl_size.i.i6.i1807 = load i64, ptr %tbl_size_ptr.i.i3.i1804, align 4, !noalias !399
  %offset_tbl.i.i7.i1808 = load ptr, ptr %offset_tbl_ptr.i.i4.i1805, align 8, !noalias !399
  %product.i.i.i8.i1809 = mul i64 %hash_coef.i.i5.i1806, 4015701072841558310
  %shifted.i.i.i9.i1810 = lshr i64 %product.i.i.i8.i1809, 32
  %xored.i.i.i10.i1811 = xor i64 %shifted.i.i.i9.i1810, %product.i.i.i8.i1809
  %hash.i.i.i11.i1812 = and i64 %xored.i.i.i10.i1811, %tbl_size.i.i6.i1807
  %offset_ptr.i.i12.i1813 = getelementptr i32, ptr %offset_tbl.i.i7.i1808, i64 %hash.i.i.i11.i1812
  %offset.i.i13.i1814 = load i32, ptr %offset_ptr.i.i12.i1813, align 4, !noalias !399
  %1934 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1925, 0
  %1935 = insertvalue { ptr, ptr, ptr, i32 } %1934, ptr %1932, 1
  %1936 = insertvalue { ptr, ptr, ptr, i32 } %1935, ptr %1933, 2
  %1937 = insertvalue { ptr, ptr, ptr, i32 } %1936, i32 %offset.i.i13.i1814, 3
  %1938 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1939 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1925) #37
  %1940 = sext i32 %offset.i.i13.i1814 to i64
  %1941 = getelementptr ptr, ptr %1925, i64 %1940
  %1942 = getelementptr i8, ptr %1941, i64 64
  %1943 = load ptr, ptr %1942, align 8
  %result.i.i1815 = call ptr %1943({ ptr, ptr, ptr, i32 } %1937, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1944 = call i32 %result.i.i1815({ ptr, ptr, ptr, i32 } %1937, { ptr, ptr, ptr, i32 } %1937, ptr nonnull align 8 %2) #42
  %1945 = icmp eq i32 %1944, %1850
  br i1 %1945, label %._crit_edge.i1816, label %CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1822

._crit_edge.i1816:                                ; preds = %1928
  %1946 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1947 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1925)
  %1948 = getelementptr i8, ptr %1941, i64 48
  %1949 = load ptr, ptr %1948, align 8
  %result.i15.i1817 = call ptr %1949({ ptr, ptr, ptr, i32 } %1937, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1950 = call { ptr, i160 } %result.i15.i1817({ ptr, ptr, ptr, i32 } %1937, { ptr, ptr, ptr, i32 } %1937, ptr nonnull align 8 %2) #42
  %1951 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1952 = load ptr, ptr %82, align 8
  %1953 = call i1 %1952({ ptr, i160 } %1950, { ptr, i160 } %1848) #42
  br i1 %1953, label %1954, label %CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1822

1954:                                             ; preds = %._crit_edge.i1816
  %1955 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1956 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1925)
  %1957 = getelementptr i8, ptr %1941, i64 56
  %1958 = load ptr, ptr %1957, align 8
  %result.i16.i1819 = call ptr %1958({ ptr, ptr, ptr, i32 } %1937, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %1959 = call { ptr, i160 } %result.i16.i1819({ ptr, ptr, ptr, i32 } %1937, { ptr, ptr, ptr, i32 } %1937, ptr nonnull align 8 %2) #42
  %.fca.0.extract28.i1820 = extractvalue { ptr, i160 } %1959, 0
  %.fca.1.extract29.i1821 = extractvalue { ptr, i160 } %1959, 1
  store ptr @nil_typ, ptr %1924, align 8
  %1960 = load i32, ptr %1843, align 4
  %1961 = add i32 %1960, -1
  store i32 %1961, ptr %1843, align 4
  br label %CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1822

CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1822: ; preds = %1898, %1928, %._crit_edge.i1816, %1954
  %.reg2mem47.sroa.3.0.i1798 = phi i160 [ %.fca.1.extract29.i1821, %1954 ], [ poison, %._crit_edge.i1816 ], [ poison, %1898 ], [ poison, %1928 ]
  %.reg2mem45.0.i1799 = phi ptr [ %.fca.0.extract28.i1820, %1954 ], [ @nil_typ, %._crit_edge.i1816 ], [ @nil_typ, %1898 ], [ @nil_typ, %1928 ]
  %.reload44.fca.0.insert.i1800 = insertvalue { ptr, i160 } poison, ptr %.reg2mem45.0.i1799, 0
  %.reload44.fca.1.insert.i1801 = insertvalue { ptr, i160 } %.reload44.fca.0.insert.i1800, i160 %.reg2mem47.sroa.3.0.i1798, 1
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1962 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1963 = icmp ne ptr %.reg2mem45.0.i1799, @nil_typ
  %1964 = icmp ne ptr %.reg2mem45.0.i1799, null
  %.not65.not.not.i744 = and i1 %1963, %1964
  %cond.fr27.i745 = freeze i1 %.not65.not.not.i744
  %spec.select.i746 = select i1 %cond.fr27.i745, ptr %.reg2mem45.0.i1799, ptr @nil_typ
  br label %CuckooMap_remove_keyK.exit

CuckooMap_remove_keyK.exit:                       ; preds = %CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit, %CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1822
  %1965 = phi ptr [ %spec.select.i746, %CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1822 ], [ %.fca.0.extract28.i, %CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit ]
  %.pn.i747 = phi { ptr, i160 } [ %.reload44.fca.1.insert.i1801, %CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1822 ], [ %1892, %CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit ]
  %1966 = icmp ne ptr %1965, @nil_typ
  %1967 = icmp ne ptr %1965, null
  %.not369 = and i1 %1966, %1967
  br i1 %.not369, label %1968, label %._crit_edge.lr.ph.i1856

1968:                                             ; preds = %CuckooMap_remove_keyK.exit
  %1969 = extractvalue { ptr, i160 } %.pn.i747, 1
  %.sroa.2256.8.extract.trunc = trunc i160 %1969 to i32
  %1970 = add i32 %1847, 1
  %.not = icmp eq i32 %1970, %.sroa.2256.8.extract.trunc
  br i1 %.not, label %._crit_edge6, label %._crit_edge.lr.ph.i1837

._crit_edge.lr.ph.i1837:                          ; preds = %1968
  %result.i93.h2s3833 = alloca [46 x i8], align 64
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 64 dereferenceable(46) %result.i93.h2s3833, i8 0, i64 46, i1 false)
  %1971 = load <45 x i8>, ptr @bfdvn_Warning_Remove_returned_wrong_value_for_key_, align 64
  store <45 x i8> %1971, ptr %result.i93.h2s3833, align 64
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1972 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1973 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %result.i.i1836.h2s3834 = alloca [46 x i8], align 1
  call void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture nofree noundef nonnull writeonly align 1 dereferenceable(46) %result.i.i1836.h2s3834, ptr noalias nocapture nofree noundef nonnull readonly align 64 dereferenceable(46) %result.i93.h2s3833, i64 noundef 45, i1 noundef false)
  %1974 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %1975 = getelementptr inbounds i8, ptr %result.i.i1836.h2s3834, i64 45
  store i8 0, ptr %1975, align 1
  %puts.i769 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(46) %result.i.i1836.h2s3834) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1976 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  %1977 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %1847) #42
  br label %._crit_edge6

._crit_edge6:                                     ; preds = %._crit_edge.lr.ph.i1837, %1968
  %.1361 = phi i1 [ false, %._crit_edge.lr.ph.i1837 ], [ %.0360334, %1968 ]
  %1978 = add i32 %.0354335, 1
  br label %._crit_edge5

._crit_edge.lr.ph.i1856:                          ; preds = %CuckooMap_remove_keyK.exit
  %result.i99.h2s3831 = alloca [38 x i8], align 64
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 64 dereferenceable(38) %result.i99.h2s3831, i8 0, i64 38, i1 false)
  %1979 = load <37 x i8>, ptr @lluoh_Warning_Remove_returned_Nil_for_key_, align 64
  store <37 x i8> %1979, ptr %result.i99.h2s3831, align 64
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1980 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %1981 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %result.i.i1855.h2s3832 = alloca [38 x i8], align 1
  call void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture nofree noundef nonnull writeonly align 1 dereferenceable(38) %result.i.i1855.h2s3832, ptr noalias nocapture nofree noundef nonnull readonly align 64 dereferenceable(38) %result.i99.h2s3831, i64 noundef 37, i1 noundef false)
  %1982 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %1983 = getelementptr inbounds i8, ptr %result.i.i1855.h2s3832, i64 37
  store i8 0, ptr %1983, align 1
  %puts.i789 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(38) %result.i.i1855.h2s3832) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %1984 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  %1985 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %1847) #42
  br label %._crit_edge5

._crit_edge5:                                     ; preds = %._crit_edge6, %._crit_edge.lr.ph.i1856
  %.2362 = phi i1 [ %.1361, %._crit_edge6 ], [ false, %._crit_edge.lr.ph.i1856 ]
  %.1 = phi i32 [ %1978, %._crit_edge6 ], [ %.0354335, %._crit_edge.lr.ph.i1856 ]
  %1986 = add nuw nsw i32 %.0363333, 1
  %1987 = icmp slt i32 %1986, %.0365
  br i1 %1987, label %.lr.ph336, label %._crit_edge8

._crit_edge8:                                     ; preds = %._crit_edge5, %._crit_edge4
  %.0360.lcssa = phi i1 [ true, %._crit_edge4 ], [ %.2362, %._crit_edge5 ]
  %.0354.lcssa = phi i32 [ 0, %._crit_edge4 ], [ %.1, %._crit_edge5 ]
  %1988 = call i64 @clock()
  %.not370 = icmp eq i32 %.0354.lcssa, %.0365
  %1989 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  %1990 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %1991 = getelementptr inbounds i8, ptr %result.i8, i64 44
  %1992 = load i32, ptr %1991, align 4
  %.not371 = icmp eq i32 %1992, 0
  %1993 = select i1 %.not371, i1 %.not370, i1 false
  %spec.select377 = select i1 %1993, i1 %.0360.lcssa, i1 false
  br i1 %1839, label %1994, label %._crit_edge.lr.ph.i1998

1994:                                             ; preds = %._crit_edge8
  %1995 = load ptr, ptr %91, align 8
  %1996 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 16 dereferenceable(744) @Array) #50
  %1997 = load i32, ptr %1995, align 1
  %.sroa.2.sroa.0.0.insert.ext.i1861 = zext i32 %1997 to i160
  %1998 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.2.sroa.0.0.insert.ext.i1861, 1
  %1999 = load ptr, ptr %81, align 8
  %2000 = call i32 %1999({ ptr, i160 } %1998) #42
  %2001 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %2002 = load i32, ptr %83, align 8
  %2003 = add i32 %2002, -1
  %2004 = and i32 %2003, %2000
  %2005 = load ptr, ptr %84, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2006 = sext i32 %2004 to i64
  %2007 = shl nsw i64 %2006, 5
  %2008 = getelementptr i8, ptr %2005, i64 %2007
  %2009 = load ptr, ptr %2008, align 8
  %2010 = icmp ne ptr %2009, @nil_typ
  %2011 = icmp ne ptr %2009, null
  %.not44.i1903 = and i1 %2010, %2011
  br i1 %.not44.i1903, label %2012, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1928.thread

2012:                                             ; preds = %1994
  %2013 = getelementptr i8, ptr %2008, i64 8
  %2014 = load i64, ptr %2013, align 4
  %.sroa_idx.i1908 = getelementptr i8, ptr %2008, i64 16
  %2015 = load i64, ptr %.sroa_idx.i1908, align 4
  %2016 = inttoptr i64 %2014 to ptr
  %2017 = inttoptr i64 %2015 to ptr
  %hash_coef_ptr.i.i2.i1909 = getelementptr i8, ptr %2009, i64 8
  %tbl_size_ptr.i.i3.i1910 = getelementptr i8, ptr %2009, i64 16
  %offset_tbl_ptr.i.i4.i1911 = getelementptr i8, ptr %2009, i64 40
  %hash_coef.i.i5.i1912 = load i64, ptr %hash_coef_ptr.i.i2.i1909, align 4, !noalias !402
  %tbl_size.i.i6.i1913 = load i64, ptr %tbl_size_ptr.i.i3.i1910, align 4, !noalias !402
  %offset_tbl.i.i7.i1914 = load ptr, ptr %offset_tbl_ptr.i.i4.i1911, align 8, !noalias !402
  %product.i.i.i8.i1915 = mul i64 %hash_coef.i.i5.i1912, 4015701072841558310
  %shifted.i.i.i9.i1916 = lshr i64 %product.i.i.i8.i1915, 32
  %xored.i.i.i10.i1917 = xor i64 %shifted.i.i.i9.i1916, %product.i.i.i8.i1915
  %hash.i.i.i11.i1918 = and i64 %xored.i.i.i10.i1917, %tbl_size.i.i6.i1913
  %offset_ptr.i.i12.i1919 = getelementptr i32, ptr %offset_tbl.i.i7.i1914, i64 %hash.i.i.i11.i1918
  %offset.i.i13.i1920 = load i32, ptr %offset_ptr.i.i12.i1919, align 4, !noalias !402
  %2018 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %2009, 0
  %2019 = insertvalue { ptr, ptr, ptr, i32 } %2018, ptr %2016, 1
  %2020 = insertvalue { ptr, ptr, ptr, i32 } %2019, ptr %2017, 2
  %2021 = insertvalue { ptr, ptr, ptr, i32 } %2020, i32 %offset.i.i13.i1920, 3
  %2022 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %2023 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %2009) #37
  %2024 = sext i32 %offset.i.i13.i1920 to i64
  %2025 = getelementptr ptr, ptr %2009, i64 %2024
  %2026 = getelementptr i8, ptr %2025, i64 64
  %2027 = load ptr, ptr %2026, align 8
  %result.i.i1921 = call ptr %2027({ ptr, ptr, ptr, i32 } %2021, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %2028 = call i32 %result.i.i1921({ ptr, ptr, ptr, i32 } %2021, { ptr, ptr, ptr, i32 } %2021, ptr nonnull align 8 %2) #42
  %2029 = icmp eq i32 %2028, %2000
  br i1 %2029, label %._crit_edge.i1922, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1928.thread

._crit_edge.i1922:                                ; preds = %2012
  %2030 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2031 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %2009)
  %2032 = getelementptr i8, ptr %2025, i64 48
  %2033 = load ptr, ptr %2032, align 8
  %result.i15.i1923 = call ptr %2033({ ptr, ptr, ptr, i32 } %2021, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %2034 = call { ptr, i160 } %result.i15.i1923({ ptr, ptr, ptr, i32 } %2021, { ptr, ptr, ptr, i32 } %2021, ptr nonnull align 8 %2) #42
  %2035 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %2036 = load ptr, ptr %82, align 8
  %2037 = call i1 %2036({ ptr, i160 } %2034, { ptr, i160 } %1998) #42
  br i1 %2037, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1928, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1928.thread

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1928.thread: ; preds = %._crit_edge.i1922, %1994, %2012
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  br label %2046

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1928: ; preds = %._crit_edge.i1922
  %2038 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2039 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %2009)
  %2040 = getelementptr i8, ptr %2025, i64 56
  %2041 = load ptr, ptr %2040, align 8
  %result.i16.i1925 = call ptr %2041({ ptr, ptr, ptr, i32 } %2021, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %2042 = call { ptr, i160 } %result.i16.i1925({ ptr, ptr, ptr, i32 } %2021, { ptr, ptr, ptr, i32 } %2021, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i1926 = extractvalue { ptr, i160 } %2042, 0
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2043 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %2044 = icmp ne ptr %.fca.0.extract21.i1926, @nil_typ
  %2045 = icmp ne ptr %.fca.0.extract21.i1926, null
  %.not63.i842 = and i1 %2044, %2045
  br i1 %.not63.i842, label %CuckooMap_get_keyK.exit854, label %2046

2046:                                             ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1928.thread, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1928
  %2047 = add i32 %2000, 2127912214
  %2048 = shl i32 %2000, 12
  %2049 = add i32 %2047, %2048
  %2050 = ashr i32 %2049, 19
  %2051 = xor i32 %2049, %2050
  %2052 = xor i32 %2051, -949894596
  %2053 = add i32 %2052, 374761393
  %2054 = shl i32 %2052, 5
  %2055 = add i32 %2053, %2054
  %2056 = add i32 %2055, -744332180
  %2057 = shl i32 %2055, 9
  %2058 = xor i32 %2056, %2057
  %2059 = add i32 %2058, -42973499
  %2060 = shl i32 %2058, 3
  %2061 = add i32 %2059, %2060
  %2062 = ashr i32 %2061, 16
  %2063 = xor i32 %2061, %2062
  %2064 = xor i32 %2063, -1252372727
  %2065 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %2066 = load i32, ptr %83, align 8
  %2067 = add i32 %2066, -1
  %2068 = and i32 %2067, %2064
  %2069 = load ptr, ptr %85, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2070 = sext i32 %2068 to i64
  %2071 = shl nsw i64 %2070, 5
  %2072 = getelementptr i8, ptr %2069, i64 %2071
  %2073 = load ptr, ptr %2072, align 8
  %2074 = icmp ne ptr %2073, @nil_typ
  %2075 = icmp ne ptr %2073, null
  %.not44.i1958 = and i1 %2074, %2075
  br i1 %.not44.i1958, label %2076, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1983

2076:                                             ; preds = %2046
  %2077 = getelementptr i8, ptr %2072, i64 8
  %2078 = load i64, ptr %2077, align 4
  %.sroa_idx.i1963 = getelementptr i8, ptr %2072, i64 16
  %2079 = load i64, ptr %.sroa_idx.i1963, align 4
  %2080 = inttoptr i64 %2078 to ptr
  %2081 = inttoptr i64 %2079 to ptr
  %hash_coef_ptr.i.i2.i1964 = getelementptr i8, ptr %2073, i64 8
  %tbl_size_ptr.i.i3.i1965 = getelementptr i8, ptr %2073, i64 16
  %offset_tbl_ptr.i.i4.i1966 = getelementptr i8, ptr %2073, i64 40
  %hash_coef.i.i5.i1967 = load i64, ptr %hash_coef_ptr.i.i2.i1964, align 4, !noalias !405
  %tbl_size.i.i6.i1968 = load i64, ptr %tbl_size_ptr.i.i3.i1965, align 4, !noalias !405
  %offset_tbl.i.i7.i1969 = load ptr, ptr %offset_tbl_ptr.i.i4.i1966, align 8, !noalias !405
  %product.i.i.i8.i1970 = mul i64 %hash_coef.i.i5.i1967, 4015701072841558310
  %shifted.i.i.i9.i1971 = lshr i64 %product.i.i.i8.i1970, 32
  %xored.i.i.i10.i1972 = xor i64 %shifted.i.i.i9.i1971, %product.i.i.i8.i1970
  %hash.i.i.i11.i1973 = and i64 %xored.i.i.i10.i1972, %tbl_size.i.i6.i1968
  %offset_ptr.i.i12.i1974 = getelementptr i32, ptr %offset_tbl.i.i7.i1969, i64 %hash.i.i.i11.i1973
  %offset.i.i13.i1975 = load i32, ptr %offset_ptr.i.i12.i1974, align 4, !noalias !405
  %2082 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %2073, 0
  %2083 = insertvalue { ptr, ptr, ptr, i32 } %2082, ptr %2080, 1
  %2084 = insertvalue { ptr, ptr, ptr, i32 } %2083, ptr %2081, 2
  %2085 = insertvalue { ptr, ptr, ptr, i32 } %2084, i32 %offset.i.i13.i1975, 3
  %2086 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %2087 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %2073) #37
  %2088 = sext i32 %offset.i.i13.i1975 to i64
  %2089 = getelementptr ptr, ptr %2073, i64 %2088
  %2090 = getelementptr i8, ptr %2089, i64 64
  %2091 = load ptr, ptr %2090, align 8
  %result.i.i1976 = call ptr %2091({ ptr, ptr, ptr, i32 } %2085, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %2092 = call i32 %result.i.i1976({ ptr, ptr, ptr, i32 } %2085, { ptr, ptr, ptr, i32 } %2085, ptr nonnull align 8 %2) #42
  %2093 = icmp eq i32 %2092, %2000
  br i1 %2093, label %._crit_edge.i1977, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1983

._crit_edge.i1977:                                ; preds = %2076
  %2094 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2095 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %2073)
  %2096 = getelementptr i8, ptr %2089, i64 48
  %2097 = load ptr, ptr %2096, align 8
  %result.i15.i1978 = call ptr %2097({ ptr, ptr, ptr, i32 } %2085, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %2098 = call { ptr, i160 } %result.i15.i1978({ ptr, ptr, ptr, i32 } %2085, { ptr, ptr, ptr, i32 } %2085, ptr nonnull align 8 %2) #42
  %2099 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %2100 = load ptr, ptr %82, align 8
  %2101 = call i1 %2100({ ptr, i160 } %2098, { ptr, i160 } %1998) #42
  br i1 %2101, label %2102, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1983

2102:                                             ; preds = %._crit_edge.i1977
  %2103 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2104 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %2073)
  %2105 = getelementptr i8, ptr %2089, i64 56
  %2106 = load ptr, ptr %2105, align 8
  %result.i16.i1980 = call ptr %2106({ ptr, ptr, ptr, i32 } %2085, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  %2107 = call { ptr, i160 } %result.i16.i1980({ ptr, ptr, ptr, i32 } %2085, { ptr, ptr, ptr, i32 } %2085, ptr nonnull align 8 %2) #42
  %.fca.0.extract21.i1981 = extractvalue { ptr, i160 } %2107, 0
  br label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1983

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1983: ; preds = %2046, %2076, %._crit_edge.i1977, %2102
  %.reg2mem41.0.i1960 = phi ptr [ %.fca.0.extract21.i1981, %2102 ], [ @nil_typ, %._crit_edge.i1977 ], [ @nil_typ, %2046 ], [ @nil_typ, %2076 ]
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2108 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %2109 = icmp ne ptr %.reg2mem41.0.i1960, @nil_typ
  %2110 = icmp ne ptr %.reg2mem41.0.i1960, null
  %.not65.not.not.i848 = and i1 %2109, %2110
  %cond.fr27.i849 = freeze i1 %.not65.not.not.i848
  %spec.select.i850 = select i1 %cond.fr27.i849, ptr %.reg2mem41.0.i1960, ptr @nil_typ
  br label %CuckooMap_get_keyK.exit854

CuckooMap_get_keyK.exit854:                       ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1928, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1983
  %2111 = phi ptr [ %spec.select.i850, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1983 ], [ %.fca.0.extract21.i1926, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit1928 ]
  %2112 = icmp eq ptr %2111, @nil_typ
  %2113 = icmp eq ptr %2111, null
  %.not374.not = or i1 %2112, %2113
  %spec.select376 = select i1 %.not374.not, i1 %spec.select377, i1 false
  br label %._crit_edge.lr.ph.i1998

._crit_edge.lr.ph.i1998:                          ; preds = %._crit_edge8, %CuckooMap_get_keyK.exit854
  %.6 = phi i1 [ %spec.select377, %._crit_edge8 ], [ %spec.select376, %CuckooMap_get_keyK.exit854 ]
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2114 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %2115 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <13 x i8> <i8 82, i8 101, i8 109, i8 111, i8 118, i8 101, i8 32, i8 82, i8 97, i8 110, i8 100, i8 111, i8 109>, ptr %result.i.i1997.h2s3823, align 16
  %2116 = sub i64 %1988, %1838
  %2117 = getelementptr inbounds i8, ptr %result.i.i1997.h2s3823, i64 13
  store i8 0, ptr %2117, align 1
  %puts.i874 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(14) %result.i.i1997.h2s3823) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  store <14 x i8> <i8 32, i8 32, i8 79, i8 112, i8 101, i8 114, i8 97, i8 116, i8 105, i8 111, i8 110, i8 115, i8 58, i8 32>, ptr %result.i.i268.i.h2s3821, align 16
  %puts.i.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(15) %result.i.i268.i.h2s3821) #42
  %2118 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %.0365) #42
  store <14 x i8> <i8 32, i8 32, i8 84, i8 111, i8 116, i8 97, i8 108, i8 32, i8 84, i8 105, i8 109, i8 101, i8 58, i8 32>, ptr %result.i.i282.i.h2s3819, align 16
  %puts.i206.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(15) %result.i.i282.i.h2s3819) #42
  %2119 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(6) @i64_string, i64 %2116) #42
  store <3 x i8> <i8 32, i8 109, i8 115>, ptr %result.i.i301.i.h2s3817, align 4
  %puts.i226.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(4) %result.i.i301.i.h2s3817) #42
  br i1 %1839, label %._crit_edge1.i, label %._crit_edge.lr.ph.i2017

._crit_edge1.i:                                   ; preds = %._crit_edge.lr.ph.i1998
  %2120 = icmp sgt i64 %2116, 0
  br i1 %2120, label %2121, label %._crit_edge.lr.ph.i321.i

2121:                                             ; preds = %._crit_edge1.i
  %2122 = mul i64 %2116, 1000000
  %2123 = zext nneg i32 %.0365 to i64
  %2124 = sdiv i64 %2122, %2123
  br label %._crit_edge.lr.ph.i321.i

._crit_edge.lr.ph.i321.i:                         ; preds = %2121, %._crit_edge1.i
  %.0.i = phi i64 [ %2124, %2121 ], [ 0, %._crit_edge1.i ]
  store <15 x i8> <i8 32, i8 32, i8 84, i8 105, i8 109, i8 101, i8 47, i8 79, i8 112, i8 58, i8 32, i8 32, i8 32, i8 32, i8 126>, ptr %result.i.i320.i.h2s3815, align 16
  %puts.i246.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(16) %result.i.i320.i.h2s3815) #42
  %2125 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(6) @i64_string, i64 %.0.i) #42
  %2126 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  store <3 x i8> <i8 32, i8 110, i8 115>, ptr %result.i.i339.i.h2s3813, align 4
  %2127 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %puts.i266.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(4) %result.i.i339.i.h2s3813) #42
  br label %._crit_edge.lr.ph.i2017

._crit_edge.lr.ph.i2017:                          ; preds = %._crit_edge.lr.ph.i1998, %._crit_edge.lr.ph.i321.i
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2128 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %2129 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <18 x i8> <i8 32, i8 32, i8 32, i8 32, i8 86, i8 101, i8 114, i8 105, i8 102, i8 105, i8 99, i8 97, i8 116, i8 105, i8 111, i8 110, i8 58, i8 32>, ptr %result.i.i2016.h2s3811, align 32
  %2130 = getelementptr inbounds i8, ptr %result.i.i2016.h2s3811, i64 18
  store i8 0, ptr %2130, align 2
  %puts.i894 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(19) %result.i.i2016.h2s3811) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %. = select i1 %.6, <4 x i8> <i8 80, i8 65, i8 83, i8 83>, <4 x i8> <i8 70, i8 65, i8 73, i8 76>
  %.422 = select i1 %.6, ptr %68, ptr %72
  %.423 = select i1 %.6, ptr %69, ptr %73
  %.424 = select i1 %.6, ptr %70, ptr %74
  %.425 = select i1 %.6, ptr %71, ptr %75
  store ptr @_parameterization_Bufferi8, ptr %.422, align 8
  %.422.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %.6, ptr %68, ptr %72
  %.422.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.422.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 8
  store ptr @_parameterization_i32, ptr %.422.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %.422.sroa.sel434.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %.6, ptr %68, ptr %72
  %.422.sroa.sel434.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.422.sroa.sel434.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 16
  store ptr @_parameterization_i32, ptr %.422.sroa.sel434.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %2131 = call ptr @llvm.invariant.start.p0(i64 noundef 9, ptr nocapture nofree noundef nonnull align 8 dereferenceable(24) %.422)
  store ptr @buffer_typ, ptr %.423, align 8
  %.423.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %.6, ptr %69, ptr %73
  %.423.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.423.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 8
  store ptr @i32_typ, ptr %.423.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %.423.sroa.sel429.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %.6, ptr %69, ptr %73
  %.423.sroa.sel429.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.423.sroa.sel429.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 16
  store ptr @i32_typ, ptr %.423.sroa.sel429.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %2132 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(24) %.423)
  store ptr @_parameterization_String, ptr %.424, align 8
  %2133 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %.424)
  store ptr @String, ptr %.425, align 8
  %2134 = call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %.425) #37
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2135 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %2136 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <4 x i8> %., ptr %result.i.i2035.h2s3810, align 4
  %2137 = getelementptr inbounds i8, ptr %result.i.i2035.h2s3810, i64 4
  store i8 0, ptr %2137, align 4
  %puts.i914 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(5) %result.i.i2035.h2s3810) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2138 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %2139 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store <20 x i8> <i8 32, i8 32, i8 32, i8 32, i8 40, i8 73, i8 116, i8 101, i8 109, i8 115, i8 32, i8 114, i8 101, i8 109, i8 111, i8 118, i8 101, i8 100, i8 58, i8 32>, ptr %result.i.i2054.h2s3808, align 32
  %2140 = getelementptr inbounds i8, ptr %result.i.i2054.h2s3808, i64 20
  store i8 0, ptr %2140, align 4
  %puts.i934 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(21) %result.i.i2054.h2s3808) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2141 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %.0354.lcssa) #42
  %2142 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  %2143 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %2144 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %2)
  store i8 41, ptr %result.i.i2073.h2s3807, align 2
  %2145 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %2146 = getelementptr inbounds i8, ptr %result.i.i2073.h2s3807, i64 1
  store i8 0, ptr %2146, align 1
  %puts.i955 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(2) %result.i.i2073.h2s3807) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2)
  ret void
}

define noundef i32 @main() local_unnamed_addr #10 {
._crit_edge.lr.ph.i:
  %0 = alloca [0 x ptr], align 8
  %1 = alloca [1 x ptr], align 8
  %2 = alloca { ptr }, align 8
  %3 = alloca [1 x ptr], align 8
  %4 = alloca { ptr }, align 8
  %5 = alloca [1 x ptr], align 8
  %6 = alloca { ptr }, align 8
  %7 = alloca [1 x ptr], align 8
  %8 = alloca { ptr }, align 8
  %9 = alloca [1 x ptr], align 8
  %10 = alloca { ptr }, align 8
  %11 = alloca [1 x ptr], align 8
  %12 = alloca { ptr }, align 8
  %13 = alloca [1 x ptr], align 8
  %14 = alloca { ptr }, align 8
  %15 = alloca [1 x ptr], align 8
  %16 = alloca { ptr }, align 8
  %17 = alloca [1 x ptr], align 8
  %18 = alloca { ptr }, align 8
  %19 = alloca [1 x ptr], align 8
  %20 = alloca { ptr }, align 8
  %21 = alloca [1 x ptr], align 8
  %22 = alloca { ptr }, align 8
  %23 = alloca [1 x ptr], align 8
  %24 = alloca { ptr }, align 8
  %25 = alloca [1 x ptr], align 8
  %26 = alloca { ptr }, align 8
  %27 = alloca [1 x ptr], align 8
  %28 = alloca { ptr }, align 8
  %29 = alloca [1 x ptr], align 8
  %30 = alloca { ptr }, align 8
  %31 = alloca [1 x ptr], align 8
  %32 = alloca { ptr }, align 8
  %oldProtect.i13.i5 = alloca i32, align 4
  %oldProtect.i.i6 = alloca i32, align 4
  %33 = alloca [3 x ptr], align 8
  %34 = alloca { ptr, ptr, ptr }, align 8
  %35 = alloca [1 x ptr], align 8
  %36 = alloca { ptr }, align 8
  %37 = alloca [3 x ptr], align 8
  %38 = alloca { ptr, ptr, ptr }, align 8
  %39 = alloca [1 x ptr], align 8
  %40 = alloca { ptr }, align 8
  %41 = alloca [1 x ptr], align 8
  %42 = alloca { ptr }, align 8
  %43 = alloca [1 x ptr], align 8
  %44 = alloca { ptr }, align 8
  %45 = alloca [1 x ptr], align 8
  %46 = alloca { ptr }, align 8
  %47 = alloca [1 x ptr], align 8
  %48 = alloca { ptr }, align 8
  %49 = alloca [1 x ptr], align 8
  %50 = alloca { ptr }, align 8
  %51 = alloca [1 x ptr], align 8
  %52 = alloca { ptr }, align 8
  %53 = alloca [1 x ptr], align 8
  %54 = alloca { ptr }, align 8
  %55 = alloca [1 x ptr], align 8
  %56 = alloca { ptr }, align 8
  %57 = alloca [1 x ptr], align 8
  %58 = alloca { ptr }, align 8
  %59 = alloca [1 x ptr], align 8
  %60 = alloca { ptr }, align 8
  %61 = alloca [1 x ptr], align 8
  %62 = alloca { ptr }, align 8
  %63 = alloca [1 x ptr], align 8
  %64 = alloca { ptr }, align 8
  %65 = alloca [1 x ptr], align 8
  %66 = alloca { ptr }, align 8
  %67 = alloca [1 x ptr], align 8
  %68 = alloca { ptr }, align 8
  %69 = alloca [1 x ptr], align 8
  %70 = alloca { ptr }, align 8
  %71 = alloca [1 x ptr], align 8
  %72 = alloca { ptr }, align 8
  %oldProtect.i13.i = alloca i32, align 4
  %oldProtect.i.i = alloca i32, align 4
  %73 = alloca [3 x ptr], align 8
  %74 = alloca { ptr, ptr, ptr }, align 8
  %75 = alloca [1 x ptr], align 8
  %76 = alloca { ptr }, align 8
  %77 = alloca [3 x ptr], align 8
  %78 = alloca { ptr, ptr, ptr }, align 8
  %79 = alloca [1 x ptr], align 8
  %80 = alloca { ptr }, align 8
  tail call void @setup_landing_pad()
  %result.i = tail call noalias nonnull align 32 dereferenceable(23) ptr @bump_malloc_inner(i64 noundef 23, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <22 x i8> <i8 45, i8 45, i8 45, i8 32, i8 77, i8 97, i8 112, i8 32, i8 66, i8 101, i8 110, i8 99, i8 104, i8 109, i8 97, i8 114, i8 107, i8 115, i8 32, i8 45, i8 45, i8 45>, ptr %result.i, align 32
  %81 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %82 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0) #37
  %83 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %result.i.i = call noalias nonnull dereferenceable(23) ptr @bump_malloc_inner(i64 noundef 23, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture nofree noundef nonnull writeonly align 1 dereferenceable(23) %result.i.i, ptr noalias nocapture nofree noundef nonnull readonly align 32 dereferenceable(23) %result.i, i64 noundef 22, i1 noundef false)
  %84 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %puts.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(23) %result.i.i) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.start.p0(i64 noundef 24, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(24) %73)
  call void @llvm.lifetime.start.p0(i64 noundef 24, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(24) %74)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %75)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %76)
  call void @llvm.lifetime.start.p0(i64 noundef 24, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(24) %77)
  call void @llvm.lifetime.start.p0(i64 noundef 24, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(24) %78)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %79)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %80)
  %result.i9.i = call noalias nonnull align 8 dereferenceable(64) ptr @bump_malloc_inner(i64 noundef 64, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr @_parameterization_i32, ptr %result.i9.i, align 8
  %85 = getelementptr inbounds i8, ptr %result.i9.i, i64 8
  store ptr @_parameterization_i32, ptr %85, align 8
  %86 = getelementptr inbounds i8, ptr %result.i9.i, i64 16
  store ptr @_parameterization_Pairi32._i32, ptr %86, align 8
  %87 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(64) %result.i9.i) #44
  %result.i10.i = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i.i)
  %result.i11.i = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i10.i, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i.i) #42
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i.i)
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i10.i, ptr noalias nofree noundef nonnull readnone @rbttktqtkg, ptr noalias nofree noundef nonnull readnone @i32_hasher) #44
  %ret.i.i = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i10.i) #48
  %88 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i10.i) #44
  %result.i12.i = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i13.i)
  %result.i14.i = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i12.i, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i13.i) #42
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i13.i)
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i12.i, ptr noalias nofree noundef nonnull readnone @awrddwmptn, ptr noalias nofree noundef nonnull readnone @i32_eq) #44
  %ret.i15.i = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i12.i) #48
  %89 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i12.i) #44
  %90 = getelementptr inbounds i8, ptr %result.i9.i, i64 48
  store ptr %ret.i.i, ptr %90, align 8
  %91 = getelementptr inbounds i8, ptr %result.i9.i, i64 56
  store ptr %ret.i15.i, ptr %91, align 8
  %92 = getelementptr inbounds i8, ptr %result.i9.i, i64 40
  store i32 8, ptr %92, align 8
  %result.i.i.i = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %93 = getelementptr inbounds i8, ptr %result.i9.i, i64 24
  store ptr %result.i.i.i, ptr %93, align 8
  %result.i1.i72.i = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %94 = getelementptr inbounds i8, ptr %result.i9.i, i64 32
  store ptr %result.i1.i72.i, ptr %94, align 8
  %95 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %96 = call i64 @clock()
  %97 = getelementptr inbounds i8, ptr %result.i9.i, i64 44
  %98 = insertvalue { ptr, ptr, ptr, i32 } { ptr @CuckooMap, ptr undef, ptr undef, i32 undef }, ptr %result.i9.i, 1
  %99 = insertvalue { ptr, ptr, ptr, i32 } %98, ptr undef, 2
  %100 = insertvalue { ptr, ptr, ptr, i32 } %99, i32 10, 3
  %101 = insertvalue { ptr, ptr, ptr, i32 } %98, i32 10, 3
  br label %._crit_edge.i

._crit_edge.i:                                    ; preds = %CuckooMap_insert_keyK_valueV.exit.i, %._crit_edge.lr.ph.i
  %.063.i = phi i32 [ %102, %CuckooMap_insert_keyK_valueV.exit.i ], [ 0, %._crit_edge.lr.ph.i ]
  %102 = add nuw nsw i32 %.063.i, 1
  %.sroa.0131.0.insert.ext.i = zext nneg i32 %.063.i to i160
  %103 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0131.0.insert.ext.i, 1
  %.sroa.0128.0.insert.ext.i = zext nneg i32 %102 to i160
  %104 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0128.0.insert.ext.i, 1
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %105 = load ptr, ptr %90, align 8
  %106 = call i32 %105({ ptr, i160 } %103) #42
  %107 = load i32, ptr %92, align 8
  %108 = add i32 %107, -1
  %109 = and i32 %108, %106
  %110 = load ptr, ptr %93, align 8
  %111 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %112 = sext i32 %109 to i64
  %113 = shl nsw i64 %112, 5
  %114 = getelementptr i8, ptr %110, i64 %113
  %115 = load ptr, ptr %114, align 8
  %116 = getelementptr i8, ptr %114, i64 8
  %117 = icmp ne ptr %115, @nil_typ
  %118 = icmp ne ptr %115, null
  %.not64.i.i = and i1 %117, %118
  br i1 %.not64.i.i, label %119, label %217

119:                                              ; preds = %._crit_edge.i
  %120 = load i64, ptr %116, align 4
  %.sroa_idx.i.i = getelementptr i8, ptr %114, i64 16
  %121 = load i64, ptr %.sroa_idx.i.i, align 4
  %122 = inttoptr i64 %120 to ptr
  %123 = inttoptr i64 %121 to ptr
  %hash_coef_ptr.i.i3.i.i = getelementptr i8, ptr %115, i64 8
  %tbl_size_ptr.i.i4.i.i = getelementptr i8, ptr %115, i64 16
  %offset_tbl_ptr.i.i5.i.i = getelementptr i8, ptr %115, i64 40
  %hash_coef.i.i6.i.i = load i64, ptr %hash_coef_ptr.i.i3.i.i, align 4, !noalias !408
  %tbl_size.i.i7.i.i = load i64, ptr %tbl_size_ptr.i.i4.i.i, align 4, !noalias !408
  %offset_tbl.i.i8.i.i = load ptr, ptr %offset_tbl_ptr.i.i5.i.i, align 8, !noalias !408
  %product.i.i.i9.i.i = mul i64 %hash_coef.i.i6.i.i, 4015701072841558310
  %shifted.i.i.i10.i.i = lshr i64 %product.i.i.i9.i.i, 32
  %xored.i.i.i11.i.i = xor i64 %shifted.i.i.i10.i.i, %product.i.i.i9.i.i
  %hash.i.i.i12.i.i = and i64 %xored.i.i.i11.i.i, %tbl_size.i.i7.i.i
  %offset_ptr.i.i13.i.i = getelementptr i32, ptr %offset_tbl.i.i8.i.i, i64 %hash.i.i.i12.i.i
  %offset.i.i14.i.i = load i32, ptr %offset_ptr.i.i13.i.i, align 4, !noalias !408
  %124 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %115, 0
  %125 = insertvalue { ptr, ptr, ptr, i32 } %124, ptr %122, 1
  %126 = insertvalue { ptr, ptr, ptr, i32 } %125, ptr %123, 2
  %127 = insertvalue { ptr, ptr, ptr, i32 } %126, i32 %offset.i.i14.i.i, 3
  %128 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0) #37
  %129 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %115) #37
  %130 = sext i32 %offset.i.i14.i.i to i64
  %131 = getelementptr ptr, ptr %115, i64 %130
  %132 = getelementptr i8, ptr %131, i64 64
  %133 = load ptr, ptr %132, align 8
  %result.i.i288.i = call ptr %133({ ptr, ptr, ptr, i32 } %127, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %134 = call i32 %result.i.i288.i({ ptr, ptr, ptr, i32 } %127, { ptr, ptr, ptr, i32 } %127, ptr nonnull align 8 %0) #42
  %135 = icmp eq i32 %134, %106
  br i1 %135, label %._crit_edge.i289.i, label %217

._crit_edge.i289.i:                               ; preds = %119
  %136 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %137 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %115)
  %138 = getelementptr i8, ptr %131, i64 48
  %139 = load ptr, ptr %138, align 8
  %result.i16.i290.i = call ptr %139({ ptr, ptr, ptr, i32 } %127, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %140 = call { ptr, i160 } %result.i16.i290.i({ ptr, ptr, ptr, i32 } %127, { ptr, ptr, ptr, i32 } %127, ptr nonnull align 8 %0) #42
  %141 = load ptr, ptr %91, align 8
  %142 = call i1 %141({ ptr, i160 } %140, { ptr, i160 } %103) #42
  br i1 %142, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.i, label %217

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.i: ; preds = %._crit_edge.i289.i
  %143 = load ptr, ptr %result.i9.i, align 8
  %144 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %145 = load ptr, ptr %85, align 8
  %146 = load ptr, ptr %143, align 8, !alias.scope !411
  %147 = getelementptr i8, ptr %146, i64 72
  %148 = load ptr, ptr %147, align 8, !alias.scope !411
  %result.i.i.i291.i = call { i64, i64 } %148(ptr nocapture nofree nonnull readonly align 8 %143) #41, !alias.scope !411
  %149 = extractvalue { i64, i64 } %result.i.i.i291.i, 0
  %150 = extractvalue { i64, i64 } %result.i.i.i291.i, 1
  %151 = urem i64 20, %150
  %152 = icmp eq i64 %151, 0
  %153 = sub i64 %150, %151
  %154 = select i1 %152, i64 0, i64 %153
  %155 = add i64 %149, 20
  %156 = add i64 %155, %154
  %157 = load ptr, ptr %145, align 8, !alias.scope !411
  %158 = getelementptr i8, ptr %157, i64 72
  %159 = load ptr, ptr %158, align 8, !alias.scope !411
  %result.i1.i.i292.i = call { i64, i64 } %159(ptr nocapture nofree nonnull readonly align 8 %145) #41, !alias.scope !411
  %160 = extractvalue { i64, i64 } %result.i1.i.i292.i, 0
  %161 = extractvalue { i64, i64 } %result.i1.i.i292.i, 1
  %162 = call i64 @llvm.umax.i64(i64 %150, i64 %161) #38
  %163 = call i64 @llvm.umax.i64(i64 %162, i64 noundef 8) #38, !range !16
  %164 = urem i64 %156, %161
  %165 = icmp eq i64 %164, 0
  %166 = sub i64 %161, %164
  %167 = select i1 %165, i64 0, i64 %166
  %168 = add i64 %160, %156
  %169 = add i64 %168, %167
  %170 = urem i64 %169, %163
  %171 = icmp eq i64 %170, 0
  %172 = sub i64 %163, %170
  %173 = select i1 %171, i64 0, i64 %172
  %174 = add i64 %173, %169
  %result.i20.i293.i = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %174, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %143, ptr %result.i20.i293.i, align 8
  %175 = getelementptr inbounds i8, ptr %result.i20.i293.i, i64 8
  store ptr %145, ptr %175, align 8
  %176 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i293.i)
  %177 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %178 = load ptr, ptr %143, align 8
  %179 = getelementptr i8, ptr %178, i64 72
  %180 = load ptr, ptr %179, align 8
  %result.i.i54.i.i = call { i64, i64 } %180(ptr nocapture nofree nonnull readonly align 8 %143) #41
  %181 = extractvalue { i64, i64 } %result.i.i54.i.i, 1
  %182 = urem i64 20, %181
  %183 = icmp eq i64 %182, 0
  %reass.sub780 = sub i64 %181, %182
  %184 = add i64 %reass.sub780, 20
  %185 = select i1 %183, i64 20, i64 %184
  %186 = getelementptr i8, ptr %result.i20.i293.i, i64 %185
  %187 = getelementptr i8, ptr %178, i64 64
  %188 = load ptr, ptr %187, align 8
  call void %188({ ptr, i160 } %103, ptr nocapture nofree nonnull readonly align 8 %143, ptr nocapture nofree writeonly %186) #49
  %189 = load ptr, ptr %result.i20.i293.i, align 8
  %190 = load ptr, ptr %189, align 8
  %191 = getelementptr i8, ptr %190, i64 72
  %192 = load ptr, ptr %191, align 8
  %result.i.i55.i.i = call { i64, i64 } %192(ptr nocapture nofree nonnull readonly align 8 %189) #41
  %193 = extractvalue { i64, i64 } %result.i.i55.i.i, 0
  %194 = extractvalue { i64, i64 } %result.i.i55.i.i, 1
  %195 = urem i64 20, %194
  %196 = icmp eq i64 %195, 0
  %197 = sub i64 %194, %195
  %198 = select i1 %196, i64 0, i64 %197
  %199 = add i64 %193, 20
  %200 = add i64 %199, %198
  %201 = load ptr, ptr %175, align 8
  %202 = load ptr, ptr %201, align 8
  %203 = getelementptr i8, ptr %202, i64 72
  %204 = load ptr, ptr %203, align 8
  %result.i1.i56.i.i = call { i64, i64 } %204(ptr nocapture nofree nonnull readonly align 8 %201) #41
  %205 = extractvalue { i64, i64 } %result.i1.i56.i.i, 1
  %206 = urem i64 %200, %205
  %207 = icmp eq i64 %206, 0
  %208 = sub i64 %205, %206
  %209 = select i1 %207, i64 0, i64 %208
  %210 = getelementptr i8, ptr %result.i20.i293.i, i64 %200
  %211 = getelementptr i8, ptr %210, i64 %209
  %212 = getelementptr i8, ptr %202, i64 64
  %213 = load ptr, ptr %212, align 8
  call void %213({ ptr, i160 } %104, ptr nocapture nofree nonnull readonly align 8 %201, ptr nocapture nofree writeonly %211) #49
  %214 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %215 = getelementptr inbounds i8, ptr %result.i20.i293.i, i64 16
  store i32 %106, ptr %215, align 8
  store ptr @Entry, ptr %114, align 8
  %216 = ptrtoint ptr %result.i20.i293.i to i64
  store i64 %216, ptr %116, align 4
  %.sroa_idx28.i.i = getelementptr i8, ptr %114, i64 24
  store i32 10, ptr %.sroa_idx28.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %CuckooMap_insert_keyK_valueV.exit.i

217:                                              ; preds = %._crit_edge.i289.i, %119, %._crit_edge.i
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %218 = add i32 %106, 2127912214
  %219 = shl i32 %106, 12
  %220 = add i32 %218, %219
  %221 = ashr i32 %220, 19
  %222 = xor i32 %220, %221
  %223 = xor i32 %222, -949894596
  %224 = add i32 %223, 374761393
  %225 = shl i32 %223, 5
  %226 = add i32 %224, %225
  %227 = add i32 %226, -744332180
  %228 = shl i32 %226, 9
  %229 = xor i32 %227, %228
  %230 = add i32 %229, -42973499
  %231 = shl i32 %229, 3
  %232 = add i32 %230, %231
  %233 = ashr i32 %232, 16
  %234 = xor i32 %232, %233
  %235 = xor i32 %234, -1252372727
  %236 = load i32, ptr %92, align 8
  %237 = add i32 %236, -1
  %238 = and i32 %237, %235
  %239 = load ptr, ptr %94, align 8
  %240 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %241 = sext i32 %238 to i64
  %242 = shl nsw i64 %241, 5
  %243 = getelementptr i8, ptr %239, i64 %242
  %244 = load ptr, ptr %243, align 8
  %245 = getelementptr i8, ptr %243, i64 8
  %246 = icmp ne ptr %244, @nil_typ
  %247 = icmp ne ptr %244, null
  %.not64.i322.i = and i1 %246, %247
  br i1 %.not64.i322.i, label %248, label %346

248:                                              ; preds = %217
  %249 = load i64, ptr %245, align 4
  %.sroa_idx.i324.i = getelementptr i8, ptr %243, i64 16
  %250 = load i64, ptr %.sroa_idx.i324.i, align 4
  %251 = inttoptr i64 %249 to ptr
  %252 = inttoptr i64 %250 to ptr
  %hash_coef_ptr.i.i3.i325.i = getelementptr i8, ptr %244, i64 8
  %tbl_size_ptr.i.i4.i326.i = getelementptr i8, ptr %244, i64 16
  %offset_tbl_ptr.i.i5.i327.i = getelementptr i8, ptr %244, i64 40
  %hash_coef.i.i6.i328.i = load i64, ptr %hash_coef_ptr.i.i3.i325.i, align 4, !noalias !414
  %tbl_size.i.i7.i329.i = load i64, ptr %tbl_size_ptr.i.i4.i326.i, align 4, !noalias !414
  %offset_tbl.i.i8.i330.i = load ptr, ptr %offset_tbl_ptr.i.i5.i327.i, align 8, !noalias !414
  %product.i.i.i9.i331.i = mul i64 %hash_coef.i.i6.i328.i, 4015701072841558310
  %shifted.i.i.i10.i332.i = lshr i64 %product.i.i.i9.i331.i, 32
  %xored.i.i.i11.i333.i = xor i64 %shifted.i.i.i10.i332.i, %product.i.i.i9.i331.i
  %hash.i.i.i12.i334.i = and i64 %xored.i.i.i11.i333.i, %tbl_size.i.i7.i329.i
  %offset_ptr.i.i13.i335.i = getelementptr i32, ptr %offset_tbl.i.i8.i330.i, i64 %hash.i.i.i12.i334.i
  %offset.i.i14.i336.i = load i32, ptr %offset_ptr.i.i13.i335.i, align 4, !noalias !414
  %253 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %244, 0
  %254 = insertvalue { ptr, ptr, ptr, i32 } %253, ptr %251, 1
  %255 = insertvalue { ptr, ptr, ptr, i32 } %254, ptr %252, 2
  %256 = insertvalue { ptr, ptr, ptr, i32 } %255, i32 %offset.i.i14.i336.i, 3
  %257 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0) #37
  %258 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %244) #37
  %259 = sext i32 %offset.i.i14.i336.i to i64
  %260 = getelementptr ptr, ptr %244, i64 %259
  %261 = getelementptr i8, ptr %260, i64 64
  %262 = load ptr, ptr %261, align 8
  %result.i.i337.i = call ptr %262({ ptr, ptr, ptr, i32 } %256, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %263 = call i32 %result.i.i337.i({ ptr, ptr, ptr, i32 } %256, { ptr, ptr, ptr, i32 } %256, ptr nonnull align 8 %0) #42
  %264 = icmp eq i32 %263, %106
  br i1 %264, label %._crit_edge.i338.i, label %346

._crit_edge.i338.i:                               ; preds = %248
  %265 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %266 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %244)
  %267 = getelementptr i8, ptr %260, i64 48
  %268 = load ptr, ptr %267, align 8
  %result.i16.i339.i = call ptr %268({ ptr, ptr, ptr, i32 } %256, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %269 = call { ptr, i160 } %result.i16.i339.i({ ptr, ptr, ptr, i32 } %256, { ptr, ptr, ptr, i32 } %256, ptr nonnull align 8 %0) #42
  %270 = load ptr, ptr %91, align 8
  %271 = call i1 %270({ ptr, i160 } %269, { ptr, i160 } %103) #42
  br i1 %271, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit351.i, label %346

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit351.i: ; preds = %._crit_edge.i338.i
  %272 = load ptr, ptr %result.i9.i, align 8
  %273 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %274 = load ptr, ptr %85, align 8
  %275 = load ptr, ptr %272, align 8, !alias.scope !417
  %276 = getelementptr i8, ptr %275, i64 72
  %277 = load ptr, ptr %276, align 8, !alias.scope !417
  %result.i.i.i343.i = call { i64, i64 } %277(ptr nocapture nofree nonnull readonly align 8 %272) #41, !alias.scope !417
  %278 = extractvalue { i64, i64 } %result.i.i.i343.i, 0
  %279 = extractvalue { i64, i64 } %result.i.i.i343.i, 1
  %280 = urem i64 20, %279
  %281 = icmp eq i64 %280, 0
  %282 = sub i64 %279, %280
  %283 = select i1 %281, i64 0, i64 %282
  %284 = add i64 %278, 20
  %285 = add i64 %284, %283
  %286 = load ptr, ptr %274, align 8, !alias.scope !417
  %287 = getelementptr i8, ptr %286, i64 72
  %288 = load ptr, ptr %287, align 8, !alias.scope !417
  %result.i1.i.i344.i = call { i64, i64 } %288(ptr nocapture nofree nonnull readonly align 8 %274) #41, !alias.scope !417
  %289 = extractvalue { i64, i64 } %result.i1.i.i344.i, 0
  %290 = extractvalue { i64, i64 } %result.i1.i.i344.i, 1
  %291 = call i64 @llvm.umax.i64(i64 %279, i64 %290) #38
  %292 = call i64 @llvm.umax.i64(i64 %291, i64 noundef 8) #38, !range !16
  %293 = urem i64 %285, %290
  %294 = icmp eq i64 %293, 0
  %295 = sub i64 %290, %293
  %296 = select i1 %294, i64 0, i64 %295
  %297 = add i64 %289, %285
  %298 = add i64 %297, %296
  %299 = urem i64 %298, %292
  %300 = icmp eq i64 %299, 0
  %301 = sub i64 %292, %299
  %302 = select i1 %300, i64 0, i64 %301
  %303 = add i64 %302, %298
  %result.i20.i345.i = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %303, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %272, ptr %result.i20.i345.i, align 8
  %304 = getelementptr inbounds i8, ptr %result.i20.i345.i, i64 8
  store ptr %274, ptr %304, align 8
  %305 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i345.i)
  %306 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %307 = load ptr, ptr %272, align 8
  %308 = getelementptr i8, ptr %307, i64 72
  %309 = load ptr, ptr %308, align 8
  %result.i.i54.i346.i = call { i64, i64 } %309(ptr nocapture nofree nonnull readonly align 8 %272) #41
  %310 = extractvalue { i64, i64 } %result.i.i54.i346.i, 1
  %311 = urem i64 20, %310
  %312 = icmp eq i64 %311, 0
  %reass.sub779 = sub i64 %310, %311
  %313 = add i64 %reass.sub779, 20
  %314 = select i1 %312, i64 20, i64 %313
  %315 = getelementptr i8, ptr %result.i20.i345.i, i64 %314
  %316 = getelementptr i8, ptr %307, i64 64
  %317 = load ptr, ptr %316, align 8
  call void %317({ ptr, i160 } %103, ptr nocapture nofree nonnull readonly align 8 %272, ptr nocapture nofree writeonly %315) #49
  %318 = load ptr, ptr %result.i20.i345.i, align 8
  %319 = load ptr, ptr %318, align 8
  %320 = getelementptr i8, ptr %319, i64 72
  %321 = load ptr, ptr %320, align 8
  %result.i.i55.i348.i = call { i64, i64 } %321(ptr nocapture nofree nonnull readonly align 8 %318) #41
  %322 = extractvalue { i64, i64 } %result.i.i55.i348.i, 0
  %323 = extractvalue { i64, i64 } %result.i.i55.i348.i, 1
  %324 = urem i64 20, %323
  %325 = icmp eq i64 %324, 0
  %326 = sub i64 %323, %324
  %327 = select i1 %325, i64 0, i64 %326
  %328 = add i64 %322, 20
  %329 = add i64 %328, %327
  %330 = load ptr, ptr %304, align 8
  %331 = load ptr, ptr %330, align 8
  %332 = getelementptr i8, ptr %331, i64 72
  %333 = load ptr, ptr %332, align 8
  %result.i1.i56.i349.i = call { i64, i64 } %333(ptr nocapture nofree nonnull readonly align 8 %330) #41
  %334 = extractvalue { i64, i64 } %result.i1.i56.i349.i, 1
  %335 = urem i64 %329, %334
  %336 = icmp eq i64 %335, 0
  %337 = sub i64 %334, %335
  %338 = select i1 %336, i64 0, i64 %337
  %339 = getelementptr i8, ptr %result.i20.i345.i, i64 %329
  %340 = getelementptr i8, ptr %339, i64 %338
  %341 = getelementptr i8, ptr %331, i64 64
  %342 = load ptr, ptr %341, align 8
  call void %342({ ptr, i160 } %104, ptr nocapture nofree nonnull readonly align 8 %330, ptr nocapture nofree writeonly %340) #49
  %343 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %344 = getelementptr inbounds i8, ptr %result.i20.i345.i, i64 16
  store i32 %106, ptr %344, align 8
  store ptr @Entry, ptr %243, align 8
  %345 = ptrtoint ptr %result.i20.i345.i to i64
  store i64 %345, ptr %245, align 4
  %.sroa_idx28.i350.i = getelementptr i8, ptr %243, i64 24
  store i32 10, ptr %.sroa_idx28.i350.i, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %CuckooMap_insert_keyK_valueV.exit.i

346:                                              ; preds = %._crit_edge.i338.i, %248, %217
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %347 = load i32, ptr %97, align 4
  %348 = load i32, ptr %92, align 8
  %.not.i.i = icmp slt i32 %347, %348
  br i1 %.not.i.i, label %._crit_edge.i.i, label %349

349:                                              ; preds = %346
  %350 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %351 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %352 = load ptr, ptr %93, align 8
  %353 = load ptr, ptr %94, align 8
  %354 = shl i32 %348, 1
  %spec.select.i366.i = call i32 @llvm.smax.i32(i32 %354, i32 noundef 16) #37
  store i32 %spec.select.i366.i, ptr %92, align 8
  %355 = zext nneg i32 %spec.select.i366.i to i64
  %356 = shl nuw nsw i64 %355, 5
  %result.i.i367.i = call noalias ptr @bump_malloc_inner(i64 noundef %356, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i367.i, ptr %93, align 8
  %result.i1.i.i = call noalias ptr @bump_malloc_inner(i64 noundef %356, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i.i, ptr %94, align 8
  store i32 0, ptr %97, align 4
  %357 = icmp sgt i32 %348, 0
  br i1 %357, label %.lr.ph.i.i, label %._crit_edge.i.i

.lr.ph.i.i:                                       ; preds = %349, %._crit_edge.i743.i
  %.045.i.i = phi i32 [ %414, %._crit_edge.i743.i ], [ 0, %349 ]
  %358 = zext nneg i32 %.045.i.i to i64
  %359 = shl nuw nsw i64 %358, 5
  %360 = getelementptr i8, ptr %352, i64 %359
  %361 = load ptr, ptr %360, align 8
  %362 = icmp ne ptr %361, @nil_typ
  %363 = icmp ne ptr %361, null
  %.not16.i.i = and i1 %362, %363
  br i1 %.not16.i.i, label %364, label %._crit_edge.i743.i

364:                                              ; preds = %.lr.ph.i.i
  %365 = getelementptr i8, ptr %360, i64 8
  %366 = load i64, ptr %365, align 4
  %.sroa_idx.i744.i = getelementptr i8, ptr %360, i64 16
  %367 = load i64, ptr %.sroa_idx.i744.i, align 4
  %hash_coef_ptr.i.i3.i745.i = getelementptr i8, ptr %361, i64 8
  %tbl_size_ptr.i.i4.i746.i = getelementptr i8, ptr %361, i64 16
  %offset_tbl_ptr.i.i5.i747.i = getelementptr i8, ptr %361, i64 40
  %368 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %61)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %62)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %63)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %64)
  %hash_coef.i.i17.i.i = load i64, ptr %hash_coef_ptr.i.i3.i745.i, align 4, !noalias !23
  %tbl_size.i.i18.i.i = load i64, ptr %tbl_size_ptr.i.i4.i746.i, align 4, !noalias !23
  %offset_tbl.i.i19.i.i = load ptr, ptr %offset_tbl_ptr.i.i5.i747.i, align 8, !noalias !23
  %product.i.i.i20.i.i = mul i64 %hash_coef.i.i17.i.i, 4015701072841558310
  %shifted.i.i.i21.i.i = lshr i64 %product.i.i.i20.i.i, 32
  %xored.i.i.i22.i.i = xor i64 %shifted.i.i.i21.i.i, %product.i.i.i20.i.i
  %hash.i.i.i23.i.i = and i64 %xored.i.i.i22.i.i, %tbl_size.i.i18.i.i
  %offset_ptr.i.i24.i.i = getelementptr i32, ptr %offset_tbl.i.i19.i.i, i64 %hash.i.i.i23.i.i
  %offset.i.i39.i.i = load i32, ptr %offset_ptr.i.i24.i.i, align 4, !noalias !420
  %369 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %370 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %371 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %372

372:                                              ; preds = %.cont.i1018.i, %364
  %.0308.i1001.i = phi i32 [ 0, %364 ], [ %405, %.cont.i1018.i ]
  %.070307.i1002.i = phi i1 [ true, %364 ], [ %406, %.cont.i1018.i ]
  %.sroa.0.0306.i1003.i = phi ptr [ %361, %364 ], [ %395, %.cont.i1018.i ]
  %.sroa.6.0305.i1004.in.i = phi i64 [ %366, %364 ], [ %397, %.cont.i1018.i ]
  %.sroa.12.0304.i1005.in.i = phi i64 [ %367, %364 ], [ %398, %.cont.i1018.i ]
  %.sroa.17.0303.i1006.i = phi i32 [ %offset.i.i39.i.i, %364 ], [ %offset.i.i71.i1032.i, %.cont.i1018.i ]
  %.sroa.12.0304.i1005.i = inttoptr i64 %.sroa.12.0304.i1005.in.i to ptr
  %.sroa.6.0305.i1004.i = inttoptr i64 %.sroa.6.0305.i1004.in.i to ptr
  %373 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1003.i, 0
  %374 = insertvalue { ptr, ptr, ptr, i32 } %373, ptr %.sroa.6.0305.i1004.i, 1
  %375 = insertvalue { ptr, ptr, ptr, i32 } %374, ptr %.sroa.12.0304.i1005.i, 2
  %376 = insertvalue { ptr, ptr, ptr, i32 } %375, i32 %.sroa.17.0303.i1006.i, 3
  %377 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1003.i)
  %378 = sext i32 %.sroa.17.0303.i1006.i to i64
  %379 = getelementptr ptr, ptr %.sroa.0.0306.i1003.i, i64 %378
  %380 = getelementptr i8, ptr %379, i64 64
  %381 = load ptr, ptr %380, align 8
  %result.i43.i1007.i = call ptr %381({ ptr, ptr, ptr, i32 } %376, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %382 = call i32 %result.i43.i1007.i({ ptr, ptr, ptr, i32 } %376, { ptr, ptr, ptr, i32 } %376, ptr nonnull align 8 %0) #42
  %..i1008.i = select i1 %.070307.i1002.i, ptr %61, ptr %63
  %.184.i1009.i = select i1 %.070307.i1002.i, i64 104, i64 112
  %.185.i1010.i = select i1 %.070307.i1002.i, ptr %62, ptr %64
  %.186.i1011.i = select i1 %.070307.i1002.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1008.i, align 8
  %383 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1008.i)
  %384 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1009.i
  %385 = load ptr, ptr %384, align 8
  store ptr @i32_typ, ptr %.185.i1010.i, align 8
  %result.i44.i1012.i = call ptr %385({ ptr, ptr, ptr, i32 } %101, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1010.i) #45
  %386 = call i32 %result.i44.i1012.i({ ptr, ptr, ptr, i32 } %101, { ptr, ptr, ptr, i32 } %101, ptr nonnull align 8 dereferenceable(8) %..i1008.i, i32 %382) #42
  %387 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %388 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1011.i
  %389 = load ptr, ptr %388, align 8
  %390 = load ptr, ptr %389, align 8
  %391 = call { ptr } %390(ptr nonnull %result.i9.i) #40
  %.fca.0.extract53.i1013.i = extractvalue { ptr } %391, 0
  %392 = sext i32 %386 to i64
  %393 = shl nsw i64 %392, 5
  %394 = getelementptr i8, ptr %.fca.0.extract53.i1013.i, i64 %393
  %395 = load ptr, ptr %394, align 8
  %396 = getelementptr i8, ptr %394, i64 8
  %397 = load i64, ptr %396, align 4
  %.sroa_idx.i1014.i = getelementptr i8, ptr %394, i64 16
  %398 = load i64, ptr %.sroa_idx.i1014.i, align 4
  %399 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %400 = call { ptr } %390(ptr nonnull %result.i9.i) #40
  %.fca.0.extract51.i.i = extractvalue { ptr } %400, 0
  %401 = getelementptr i8, ptr %.fca.0.extract51.i.i, i64 %393
  store ptr %.sroa.0.0306.i1003.i, ptr %401, align 8
  %402 = getelementptr i8, ptr %401, i64 8
  store i64 %.sroa.6.0305.i1004.in.i, ptr %402, align 4
  %.sroa_idx100.i1015.i = getelementptr i8, ptr %401, i64 16
  store i64 %.sroa.12.0304.i1005.in.i, ptr %.sroa_idx100.i1015.i, align 4
  %.sroa_idx101.i1016.i = getelementptr i8, ptr %401, i64 24
  store i32 %.sroa.17.0303.i1006.i, ptr %.sroa_idx101.i1016.i, align 4
  %403 = icmp ne ptr %395, @nil_typ
  %404 = icmp ne ptr %395, null
  %.not90.i1017.i = and i1 %403, %404
  br i1 %.not90.i1017.i, label %.cont.i1018.i, label %410

.cont.i1018.i:                                    ; preds = %372
  %405 = add nuw nsw i32 %.0308.i1001.i, 1
  %406 = xor i1 %.070307.i1002.i, true
  %hash_coef_ptr.i.i60.i1021.i = getelementptr i8, ptr %395, i64 8
  %tbl_size_ptr.i.i61.i1022.i = getelementptr i8, ptr %395, i64 16
  %offset_tbl_ptr.i.i62.i1023.i = getelementptr i8, ptr %395, i64 40
  %hash_coef.i.i63.i1024.i = load i64, ptr %hash_coef_ptr.i.i60.i1021.i, align 4
  %tbl_size.i.i64.i1025.i = load i64, ptr %tbl_size_ptr.i.i61.i1022.i, align 4
  %offset_tbl.i.i65.i1026.i = load ptr, ptr %offset_tbl_ptr.i.i62.i1023.i, align 8
  %product.i.i.i66.i1027.i = mul i64 %hash_coef.i.i63.i1024.i, 4015701072841558310
  %shifted.i.i.i67.i1028.i = lshr i64 %product.i.i.i66.i1027.i, 32
  %xored.i.i.i68.i1029.i = xor i64 %shifted.i.i.i67.i1028.i, %product.i.i.i66.i1027.i
  %hash.i.i.i69.i1030.i = and i64 %xored.i.i.i68.i1029.i, %tbl_size.i.i64.i1025.i
  %offset_ptr.i.i70.i1031.i = getelementptr i32, ptr %offset_tbl.i.i65.i1026.i, i64 %hash.i.i.i69.i1030.i
  %offset.i.i71.i1032.i = load i32, ptr %offset_ptr.i.i70.i1031.i, align 4
  %407 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %408 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %409 = icmp ult i32 %.0308.i1001.i, 99
  br i1 %409, label %372, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1034.i

410:                                              ; preds = %372
  %411 = load i32, ptr %97, align 4
  %412 = add i32 %411, 1
  %413 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %412, ptr %97, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1034.i

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1034.i: ; preds = %.cont.i1018.i, %410
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %61)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %62)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %63)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %64)
  br label %._crit_edge.i743.i

._crit_edge.i743.i:                               ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1034.i, %.lr.ph.i.i
  %414 = add nuw nsw i32 %.045.i.i, 1
  %415 = icmp slt i32 %414, %348
  br i1 %415, label %.lr.ph.i.i, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit.i

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit.i: ; preds = %._crit_edge.i743.i, %._crit_edge.i773.i
  %.045.i771.i = phi i32 [ %472, %._crit_edge.i773.i ], [ 0, %._crit_edge.i743.i ]
  %416 = zext nneg i32 %.045.i771.i to i64
  %417 = shl nuw nsw i64 %416, 5
  %418 = getelementptr i8, ptr %353, i64 %417
  %419 = load ptr, ptr %418, align 8
  %420 = icmp ne ptr %419, @nil_typ
  %421 = icmp ne ptr %419, null
  %.not16.i772.i = and i1 %420, %421
  br i1 %.not16.i772.i, label %422, label %._crit_edge.i773.i

422:                                              ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit.i
  %423 = getelementptr i8, ptr %418, i64 8
  %424 = load i64, ptr %423, align 4
  %.sroa_idx.i774.i = getelementptr i8, ptr %418, i64 16
  %425 = load i64, ptr %.sroa_idx.i774.i, align 4
  %hash_coef_ptr.i.i3.i775.i = getelementptr i8, ptr %419, i64 8
  %tbl_size_ptr.i.i4.i776.i = getelementptr i8, ptr %419, i64 16
  %offset_tbl_ptr.i.i5.i777.i = getelementptr i8, ptr %419, i64 40
  %426 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %57)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %58)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %59)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %60)
  %hash_coef.i.i17.i1052.i = load i64, ptr %hash_coef_ptr.i.i3.i775.i, align 4, !noalias !23
  %tbl_size.i.i18.i1053.i = load i64, ptr %tbl_size_ptr.i.i4.i776.i, align 4, !noalias !23
  %offset_tbl.i.i19.i1054.i = load ptr, ptr %offset_tbl_ptr.i.i5.i777.i, align 8, !noalias !23
  %product.i.i.i20.i1055.i = mul i64 %hash_coef.i.i17.i1052.i, 4015701072841558310
  %shifted.i.i.i21.i1056.i = lshr i64 %product.i.i.i20.i1055.i, 32
  %xored.i.i.i22.i1057.i = xor i64 %shifted.i.i.i21.i1056.i, %product.i.i.i20.i1055.i
  %hash.i.i.i23.i1058.i = and i64 %xored.i.i.i22.i1057.i, %tbl_size.i.i18.i1053.i
  %offset_ptr.i.i24.i1059.i = getelementptr i32, ptr %offset_tbl.i.i19.i1054.i, i64 %hash.i.i.i23.i1058.i
  %offset.i.i39.i1060.i = load i32, ptr %offset_ptr.i.i24.i1059.i, align 4, !noalias !423
  %427 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %428 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %429 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %430

430:                                              ; preds = %.cont.i1083.i, %422
  %.0308.i1061.i = phi i32 [ 0, %422 ], [ %463, %.cont.i1083.i ]
  %.070307.i1062.i = phi i1 [ true, %422 ], [ %464, %.cont.i1083.i ]
  %.sroa.0.0306.i1063.i = phi ptr [ %419, %422 ], [ %453, %.cont.i1083.i ]
  %.sroa.6.0305.i1064.in.i = phi i64 [ %424, %422 ], [ %455, %.cont.i1083.i ]
  %.sroa.12.0304.i1065.in.i = phi i64 [ %425, %422 ], [ %456, %.cont.i1083.i ]
  %.sroa.17.0303.i1066.i = phi i32 [ %offset.i.i39.i1060.i, %422 ], [ %offset.i.i71.i1097.i, %.cont.i1083.i ]
  %.sroa.12.0304.i1065.i = inttoptr i64 %.sroa.12.0304.i1065.in.i to ptr
  %.sroa.6.0305.i1064.i = inttoptr i64 %.sroa.6.0305.i1064.in.i to ptr
  %431 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1063.i, 0
  %432 = insertvalue { ptr, ptr, ptr, i32 } %431, ptr %.sroa.6.0305.i1064.i, 1
  %433 = insertvalue { ptr, ptr, ptr, i32 } %432, ptr %.sroa.12.0304.i1065.i, 2
  %434 = insertvalue { ptr, ptr, ptr, i32 } %433, i32 %.sroa.17.0303.i1066.i, 3
  %435 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1063.i)
  %436 = sext i32 %.sroa.17.0303.i1066.i to i64
  %437 = getelementptr ptr, ptr %.sroa.0.0306.i1063.i, i64 %436
  %438 = getelementptr i8, ptr %437, i64 64
  %439 = load ptr, ptr %438, align 8
  %result.i43.i1067.i = call ptr %439({ ptr, ptr, ptr, i32 } %434, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %440 = call i32 %result.i43.i1067.i({ ptr, ptr, ptr, i32 } %434, { ptr, ptr, ptr, i32 } %434, ptr nonnull align 8 %0) #42
  %..i1068.i = select i1 %.070307.i1062.i, ptr %57, ptr %59
  %.184.i1069.i = select i1 %.070307.i1062.i, i64 104, i64 112
  %.185.i1070.i = select i1 %.070307.i1062.i, ptr %58, ptr %60
  %.186.i1071.i = select i1 %.070307.i1062.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1068.i, align 8
  %441 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1068.i)
  %442 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1069.i
  %443 = load ptr, ptr %442, align 8
  store ptr @i32_typ, ptr %.185.i1070.i, align 8
  %result.i44.i1072.i = call ptr %443({ ptr, ptr, ptr, i32 } %101, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1070.i) #45
  %444 = call i32 %result.i44.i1072.i({ ptr, ptr, ptr, i32 } %101, { ptr, ptr, ptr, i32 } %101, ptr nonnull align 8 dereferenceable(8) %..i1068.i, i32 %440) #42
  %445 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %446 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1071.i
  %447 = load ptr, ptr %446, align 8
  %448 = load ptr, ptr %447, align 8
  %449 = call { ptr } %448(ptr nonnull %result.i9.i) #40
  %.fca.0.extract53.i1073.i = extractvalue { ptr } %449, 0
  %450 = sext i32 %444 to i64
  %451 = shl nsw i64 %450, 5
  %452 = getelementptr i8, ptr %.fca.0.extract53.i1073.i, i64 %451
  %453 = load ptr, ptr %452, align 8
  %454 = getelementptr i8, ptr %452, i64 8
  %455 = load i64, ptr %454, align 4
  %.sroa_idx.i1074.i = getelementptr i8, ptr %452, i64 16
  %456 = load i64, ptr %.sroa_idx.i1074.i, align 4
  %457 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %458 = call { ptr } %448(ptr nonnull %result.i9.i) #40
  %.fca.0.extract51.i1075.i = extractvalue { ptr } %458, 0
  %459 = getelementptr i8, ptr %.fca.0.extract51.i1075.i, i64 %451
  store ptr %.sroa.0.0306.i1063.i, ptr %459, align 8
  %460 = getelementptr i8, ptr %459, i64 8
  store i64 %.sroa.6.0305.i1064.in.i, ptr %460, align 4
  %.sroa_idx100.i1076.i = getelementptr i8, ptr %459, i64 16
  store i64 %.sroa.12.0304.i1065.in.i, ptr %.sroa_idx100.i1076.i, align 4
  %.sroa_idx101.i1077.i = getelementptr i8, ptr %459, i64 24
  store i32 %.sroa.17.0303.i1066.i, ptr %.sroa_idx101.i1077.i, align 4
  %461 = icmp ne ptr %453, @nil_typ
  %462 = icmp ne ptr %453, null
  %.not90.i1078.i = and i1 %461, %462
  br i1 %.not90.i1078.i, label %.cont.i1083.i, label %468

.cont.i1083.i:                                    ; preds = %430
  %463 = add nuw nsw i32 %.0308.i1061.i, 1
  %464 = xor i1 %.070307.i1062.i, true
  %hash_coef_ptr.i.i60.i1086.i = getelementptr i8, ptr %453, i64 8
  %tbl_size_ptr.i.i61.i1087.i = getelementptr i8, ptr %453, i64 16
  %offset_tbl_ptr.i.i62.i1088.i = getelementptr i8, ptr %453, i64 40
  %hash_coef.i.i63.i1089.i = load i64, ptr %hash_coef_ptr.i.i60.i1086.i, align 4
  %tbl_size.i.i64.i1090.i = load i64, ptr %tbl_size_ptr.i.i61.i1087.i, align 4
  %offset_tbl.i.i65.i1091.i = load ptr, ptr %offset_tbl_ptr.i.i62.i1088.i, align 8
  %product.i.i.i66.i1092.i = mul i64 %hash_coef.i.i63.i1089.i, 4015701072841558310
  %shifted.i.i.i67.i1093.i = lshr i64 %product.i.i.i66.i1092.i, 32
  %xored.i.i.i68.i1094.i = xor i64 %shifted.i.i.i67.i1093.i, %product.i.i.i66.i1092.i
  %hash.i.i.i69.i1095.i = and i64 %xored.i.i.i68.i1094.i, %tbl_size.i.i64.i1090.i
  %offset_ptr.i.i70.i1096.i = getelementptr i32, ptr %offset_tbl.i.i65.i1091.i, i64 %hash.i.i.i69.i1095.i
  %offset.i.i71.i1097.i = load i32, ptr %offset_ptr.i.i70.i1096.i, align 4
  %465 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %466 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %467 = icmp ult i32 %.0308.i1061.i, 99
  br i1 %467, label %430, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1106.i

468:                                              ; preds = %430
  %469 = load i32, ptr %97, align 4
  %470 = add i32 %469, 1
  %471 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %470, ptr %97, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1106.i

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1106.i: ; preds = %.cont.i1083.i, %468
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %57)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %58)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %59)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %60)
  br label %._crit_edge.i773.i

._crit_edge.i773.i:                               ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1106.i, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit.i
  %472 = add nuw nsw i32 %.045.i771.i, 1
  %473 = icmp slt i32 %472, %348
  br i1 %473, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit.i, label %._crit_edge.i.i

._crit_edge.i.i:                                  ; preds = %._crit_edge.i773.i, %349, %346
  %474 = load ptr, ptr %result.i9.i, align 8
  %475 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %476 = load ptr, ptr %85, align 8
  %477 = load ptr, ptr %474, align 8
  %478 = getelementptr i8, ptr %477, i64 72
  %479 = load ptr, ptr %478, align 8
  %result.i.i.i.i = call { i64, i64 } %479(ptr nocapture nofree nonnull readonly align 8 %474) #41
  %480 = extractvalue { i64, i64 } %result.i.i.i.i, 0
  %481 = extractvalue { i64, i64 } %result.i.i.i.i, 1
  %482 = urem i64 20, %481
  %483 = icmp eq i64 %482, 0
  %484 = sub i64 %481, %482
  %485 = select i1 %483, i64 0, i64 %484
  %486 = add i64 %480, 20
  %487 = add i64 %486, %485
  %488 = load ptr, ptr %476, align 8
  %489 = getelementptr i8, ptr %488, i64 72
  %490 = load ptr, ptr %489, align 8
  %result.i1.i.i.i = call { i64, i64 } %490(ptr nocapture nofree nonnull readonly align 8 %476) #41
  %491 = extractvalue { i64, i64 } %result.i1.i.i.i, 0
  %492 = extractvalue { i64, i64 } %result.i1.i.i.i, 1
  %493 = call i64 @llvm.umax.i64(i64 %481, i64 %492) #38
  %494 = call i64 @llvm.umax.i64(i64 %493, i64 noundef 8) #38, !range !16
  %495 = urem i64 %487, %492
  %496 = icmp eq i64 %495, 0
  %497 = sub i64 %492, %495
  %498 = select i1 %496, i64 0, i64 %497
  %499 = add i64 %491, %487
  %500 = add i64 %499, %498
  %501 = urem i64 %500, %494
  %502 = icmp eq i64 %501, 0
  %503 = sub i64 %494, %501
  %504 = select i1 %502, i64 0, i64 %503
  %505 = add i64 %504, %500
  %result.i16.i.i = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %505, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %474, ptr %result.i16.i.i, align 8
  %506 = getelementptr inbounds i8, ptr %result.i16.i.i, i64 8
  store ptr %476, ptr %506, align 8
  %507 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i16.i.i)
  %508 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %509 = load ptr, ptr %474, align 8
  %510 = getelementptr i8, ptr %509, i64 72
  %511 = load ptr, ptr %510, align 8
  %result.i.i110.i.i = call { i64, i64 } %511(ptr nocapture nofree nonnull readonly align 8 %474) #41
  %512 = extractvalue { i64, i64 } %result.i.i110.i.i, 1
  %513 = urem i64 20, %512
  %514 = icmp eq i64 %513, 0
  %reass.sub778 = sub i64 %512, %513
  %515 = add i64 %reass.sub778, 20
  %516 = select i1 %514, i64 20, i64 %515
  %517 = getelementptr i8, ptr %result.i16.i.i, i64 %516
  %518 = getelementptr i8, ptr %509, i64 64
  %519 = load ptr, ptr %518, align 8
  call void %519({ ptr, i160 } %103, ptr nocapture nofree nonnull readonly align 8 %474, ptr nocapture nofree writeonly %517) #49
  %520 = load ptr, ptr %result.i16.i.i, align 8
  %521 = load ptr, ptr %520, align 8
  %522 = getelementptr i8, ptr %521, i64 72
  %523 = load ptr, ptr %522, align 8
  %result.i.i111.i.i = call { i64, i64 } %523(ptr nocapture nofree nonnull readonly align 8 %520) #41
  %524 = extractvalue { i64, i64 } %result.i.i111.i.i, 0
  %525 = extractvalue { i64, i64 } %result.i.i111.i.i, 1
  %526 = urem i64 20, %525
  %527 = icmp eq i64 %526, 0
  %528 = sub i64 %525, %526
  %529 = select i1 %527, i64 0, i64 %528
  %530 = add i64 %524, 20
  %531 = add i64 %530, %529
  %532 = load ptr, ptr %506, align 8
  %533 = load ptr, ptr %532, align 8
  %534 = getelementptr i8, ptr %533, i64 72
  %535 = load ptr, ptr %534, align 8
  %result.i1.i112.i.i = call { i64, i64 } %535(ptr nocapture nofree nonnull readonly align 8 %532) #41
  %536 = extractvalue { i64, i64 } %result.i1.i112.i.i, 1
  %537 = urem i64 %531, %536
  %538 = icmp eq i64 %537, 0
  %539 = sub i64 %536, %537
  %540 = select i1 %538, i64 0, i64 %539
  %541 = getelementptr i8, ptr %result.i16.i.i, i64 %531
  %542 = getelementptr i8, ptr %541, i64 %540
  %543 = getelementptr i8, ptr %533, i64 64
  %544 = load ptr, ptr %543, align 8
  call void %544({ ptr, i160 } %104, ptr nocapture nofree nonnull readonly align 8 %532, ptr nocapture nofree writeonly %542) #49
  %545 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %546 = getelementptr inbounds i8, ptr %result.i16.i.i, i64 16
  store i32 %106, ptr %546, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %69)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %70)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %71)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %72)
  %547 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %548 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %549 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %550

550:                                              ; preds = %.cont.i.i, %._crit_edge.i.i
  %.0308.i.i = phi i32 [ 0, %._crit_edge.i.i ], [ %585, %.cont.i.i ]
  %.070307.i.i = phi i1 [ true, %._crit_edge.i.i ], [ %586, %.cont.i.i ]
  %.sroa.0.0306.i.i = phi ptr [ @Entry, %._crit_edge.i.i ], [ %573, %.cont.i.i ]
  %.sroa.6.0305.i.i = phi ptr [ %result.i16.i.i, %._crit_edge.i.i ], [ %.sroa.speculated111.i.i, %.cont.i.i ]
  %.sroa.12.0304.i.i = phi ptr [ undef, %._crit_edge.i.i ], [ %.sroa.speculated105.i.i, %.cont.i.i ]
  %.sroa.17.0303.i.i = phi i32 [ 10, %._crit_edge.i.i ], [ %offset.i.i71.i.i, %.cont.i.i ]
  %551 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i.i, 0
  %552 = insertvalue { ptr, ptr, ptr, i32 } %551, ptr %.sroa.6.0305.i.i, 1
  %553 = insertvalue { ptr, ptr, ptr, i32 } %552, ptr %.sroa.12.0304.i.i, 2
  %554 = insertvalue { ptr, ptr, ptr, i32 } %553, i32 %.sroa.17.0303.i.i, 3
  %555 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i.i)
  %556 = sext i32 %.sroa.17.0303.i.i to i64
  %557 = getelementptr ptr, ptr %.sroa.0.0306.i.i, i64 %556
  %558 = getelementptr i8, ptr %557, i64 64
  %559 = load ptr, ptr %558, align 8
  %result.i43.i.i = call ptr %559({ ptr, ptr, ptr, i32 } %554, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %560 = call i32 %result.i43.i.i({ ptr, ptr, ptr, i32 } %554, { ptr, ptr, ptr, i32 } %554, ptr nonnull align 8 %0) #42
  %..i.i = select i1 %.070307.i.i, ptr %69, ptr %71
  %.184.i.i = select i1 %.070307.i.i, i64 104, i64 112
  %.185.i.i = select i1 %.070307.i.i, ptr %70, ptr %72
  %.186.i.i = select i1 %.070307.i.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i.i, align 8
  %561 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i.i)
  %562 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i.i
  %563 = load ptr, ptr %562, align 8
  store ptr @i32_typ, ptr %.185.i.i, align 8
  %result.i44.i.i = call ptr %563({ ptr, ptr, ptr, i32 } %100, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i.i) #45
  %564 = call i32 %result.i44.i.i({ ptr, ptr, ptr, i32 } %100, { ptr, ptr, ptr, i32 } %100, ptr nonnull align 8 dereferenceable(8) %..i.i, i32 %560) #42
  %565 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %566 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i.i
  %567 = load ptr, ptr %566, align 8
  %568 = load ptr, ptr %567, align 8
  %569 = call { ptr } %568(ptr nonnull %result.i9.i) #40
  %.fca.0.extract53.i.i = extractvalue { ptr } %569, 0
  %570 = sext i32 %564 to i64
  %571 = shl nsw i64 %570, 5
  %572 = getelementptr i8, ptr %.fca.0.extract53.i.i, i64 %571
  %573 = load ptr, ptr %572, align 8
  %574 = getelementptr i8, ptr %572, i64 8
  %575 = load i64, ptr %574, align 4
  %.sroa_idx.i384.i = getelementptr i8, ptr %572, i64 16
  %576 = load i64, ptr %.sroa_idx.i384.i, align 4
  %577 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %578 = call { ptr } %568(ptr nonnull %result.i9.i) #40
  %.fca.0.extract51.i385.i = extractvalue { ptr } %578, 0
  %579 = getelementptr i8, ptr %.fca.0.extract51.i385.i, i64 %571
  store ptr %.sroa.0.0306.i.i, ptr %579, align 8
  %580 = getelementptr i8, ptr %579, i64 8
  %581 = ptrtoint ptr %.sroa.6.0305.i.i to i64
  %582 = ptrtoint ptr %.sroa.12.0304.i.i to i64
  store i64 %581, ptr %580, align 4
  %.sroa_idx100.i.i = getelementptr i8, ptr %579, i64 16
  store i64 %582, ptr %.sroa_idx100.i.i, align 4
  %.sroa_idx101.i.i = getelementptr i8, ptr %579, i64 24
  store i32 %.sroa.17.0303.i.i, ptr %.sroa_idx101.i.i, align 4
  %583 = icmp ne ptr %573, @nil_typ
  %584 = icmp ne ptr %573, null
  %.not90.i.i = and i1 %583, %584
  br i1 %.not90.i.i, label %.cont.i.i, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit.i

.cont.i.i:                                        ; preds = %550
  %585 = add nuw nsw i32 %.0308.i.i, 1
  %586 = xor i1 %.070307.i.i, true
  %.sroa.speculated111.i.i = inttoptr i64 %575 to ptr
  %.sroa.speculated105.i.i = inttoptr i64 %576 to ptr
  %hash_coef_ptr.i.i60.i.i = getelementptr i8, ptr %573, i64 8
  %tbl_size_ptr.i.i61.i.i = getelementptr i8, ptr %573, i64 16
  %offset_tbl_ptr.i.i62.i.i = getelementptr i8, ptr %573, i64 40
  %hash_coef.i.i63.i.i = load i64, ptr %hash_coef_ptr.i.i60.i.i, align 4
  %tbl_size.i.i64.i.i = load i64, ptr %tbl_size_ptr.i.i61.i.i, align 4
  %offset_tbl.i.i65.i.i = load ptr, ptr %offset_tbl_ptr.i.i62.i.i, align 8
  %product.i.i.i66.i.i = mul i64 %hash_coef.i.i63.i.i, 4015701072841558310
  %shifted.i.i.i67.i.i = lshr i64 %product.i.i.i66.i.i, 32
  %xored.i.i.i68.i.i = xor i64 %shifted.i.i.i67.i.i, %product.i.i.i66.i.i
  %hash.i.i.i69.i.i = and i64 %xored.i.i.i68.i.i, %tbl_size.i.i64.i.i
  %offset_ptr.i.i70.i.i = getelementptr i32, ptr %offset_tbl.i.i65.i.i, i64 %hash.i.i.i69.i.i
  %offset.i.i71.i.i = load i32, ptr %offset_ptr.i.i70.i.i, align 4
  %587 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %588 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %589 = icmp ult i32 %.0308.i.i, 99
  br i1 %589, label %550, label %593

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit.i: ; preds = %550
  %590 = load i32, ptr %97, align 4
  %591 = add i32 %590, 1
  %592 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %591, ptr %97, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %69)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %70)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %71)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %72)
  br label %CuckooMap_insert_keyK_valueV.exit.i

593:                                              ; preds = %.cont.i.i
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %69)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %70)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %71)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %72)
  %594 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %595 = load ptr, ptr %93, align 8
  %596 = load ptr, ptr %94, align 8
  %597 = load i32, ptr %92, align 8
  %598 = shl i32 %597, 1
  %spec.select.i402.i = call i32 @llvm.smax.i32(i32 %598, i32 noundef 16) #37
  store i32 %spec.select.i402.i, ptr %92, align 8
  %599 = zext nneg i32 %spec.select.i402.i to i64
  %600 = shl nuw nsw i64 %599, 5
  %result.i.i403.i = call noalias ptr @bump_malloc_inner(i64 noundef %600, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i403.i, ptr %93, align 8
  %result.i1.i404.i = call noalias ptr @bump_malloc_inner(i64 noundef %600, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i404.i, ptr %94, align 8
  store i32 0, ptr %97, align 4
  %601 = icmp sgt i32 %597, 0
  br i1 %601, label %.lr.ph.i793.i, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861.i

.lr.ph.i793.i:                                    ; preds = %593, %._crit_edge.i808.i
  %.045.i806.i = phi i32 [ %658, %._crit_edge.i808.i ], [ 0, %593 ]
  %602 = zext nneg i32 %.045.i806.i to i64
  %603 = shl nuw nsw i64 %602, 5
  %604 = getelementptr i8, ptr %595, i64 %603
  %605 = load ptr, ptr %604, align 8
  %606 = icmp ne ptr %605, @nil_typ
  %607 = icmp ne ptr %605, null
  %.not16.i807.i = and i1 %606, %607
  br i1 %.not16.i807.i, label %608, label %._crit_edge.i808.i

608:                                              ; preds = %.lr.ph.i793.i
  %609 = getelementptr i8, ptr %604, i64 8
  %610 = load i64, ptr %609, align 4
  %.sroa_idx.i809.i = getelementptr i8, ptr %604, i64 16
  %611 = load i64, ptr %.sroa_idx.i809.i, align 4
  %hash_coef_ptr.i.i3.i810.i = getelementptr i8, ptr %605, i64 8
  %tbl_size_ptr.i.i4.i811.i = getelementptr i8, ptr %605, i64 16
  %offset_tbl_ptr.i.i5.i812.i = getelementptr i8, ptr %605, i64 40
  %612 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %53)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %54)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %55)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %56)
  %hash_coef.i.i17.i1124.i = load i64, ptr %hash_coef_ptr.i.i3.i810.i, align 4, !noalias !23
  %tbl_size.i.i18.i1125.i = load i64, ptr %tbl_size_ptr.i.i4.i811.i, align 4, !noalias !23
  %offset_tbl.i.i19.i1126.i = load ptr, ptr %offset_tbl_ptr.i.i5.i812.i, align 8, !noalias !23
  %product.i.i.i20.i1127.i = mul i64 %hash_coef.i.i17.i1124.i, 4015701072841558310
  %shifted.i.i.i21.i1128.i = lshr i64 %product.i.i.i20.i1127.i, 32
  %xored.i.i.i22.i1129.i = xor i64 %shifted.i.i.i21.i1128.i, %product.i.i.i20.i1127.i
  %hash.i.i.i23.i1130.i = and i64 %xored.i.i.i22.i1129.i, %tbl_size.i.i18.i1125.i
  %offset_ptr.i.i24.i1131.i = getelementptr i32, ptr %offset_tbl.i.i19.i1126.i, i64 %hash.i.i.i23.i1130.i
  %offset.i.i39.i1132.i = load i32, ptr %offset_ptr.i.i24.i1131.i, align 4, !noalias !426
  %613 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %614 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %615 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %616

616:                                              ; preds = %.cont.i1155.i, %608
  %.0308.i1133.i = phi i32 [ 0, %608 ], [ %649, %.cont.i1155.i ]
  %.070307.i1134.i = phi i1 [ true, %608 ], [ %650, %.cont.i1155.i ]
  %.sroa.0.0306.i1135.i = phi ptr [ %605, %608 ], [ %639, %.cont.i1155.i ]
  %.sroa.6.0305.i1136.in.i = phi i64 [ %610, %608 ], [ %641, %.cont.i1155.i ]
  %.sroa.12.0304.i1137.in.i = phi i64 [ %611, %608 ], [ %642, %.cont.i1155.i ]
  %.sroa.17.0303.i1138.i = phi i32 [ %offset.i.i39.i1132.i, %608 ], [ %offset.i.i71.i1169.i, %.cont.i1155.i ]
  %.sroa.12.0304.i1137.i = inttoptr i64 %.sroa.12.0304.i1137.in.i to ptr
  %.sroa.6.0305.i1136.i = inttoptr i64 %.sroa.6.0305.i1136.in.i to ptr
  %617 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1135.i, 0
  %618 = insertvalue { ptr, ptr, ptr, i32 } %617, ptr %.sroa.6.0305.i1136.i, 1
  %619 = insertvalue { ptr, ptr, ptr, i32 } %618, ptr %.sroa.12.0304.i1137.i, 2
  %620 = insertvalue { ptr, ptr, ptr, i32 } %619, i32 %.sroa.17.0303.i1138.i, 3
  %621 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1135.i)
  %622 = sext i32 %.sroa.17.0303.i1138.i to i64
  %623 = getelementptr ptr, ptr %.sroa.0.0306.i1135.i, i64 %622
  %624 = getelementptr i8, ptr %623, i64 64
  %625 = load ptr, ptr %624, align 8
  %result.i43.i1139.i = call ptr %625({ ptr, ptr, ptr, i32 } %620, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %626 = call i32 %result.i43.i1139.i({ ptr, ptr, ptr, i32 } %620, { ptr, ptr, ptr, i32 } %620, ptr nonnull align 8 %0) #42
  %..i1140.i = select i1 %.070307.i1134.i, ptr %53, ptr %55
  %.184.i1141.i = select i1 %.070307.i1134.i, i64 104, i64 112
  %.185.i1142.i = select i1 %.070307.i1134.i, ptr %54, ptr %56
  %.186.i1143.i = select i1 %.070307.i1134.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1140.i, align 8
  %627 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1140.i)
  %628 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1141.i
  %629 = load ptr, ptr %628, align 8
  store ptr @i32_typ, ptr %.185.i1142.i, align 8
  %result.i44.i1144.i = call ptr %629({ ptr, ptr, ptr, i32 } %101, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1142.i) #45
  %630 = call i32 %result.i44.i1144.i({ ptr, ptr, ptr, i32 } %101, { ptr, ptr, ptr, i32 } %101, ptr nonnull align 8 dereferenceable(8) %..i1140.i, i32 %626) #42
  %631 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %632 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1143.i
  %633 = load ptr, ptr %632, align 8
  %634 = load ptr, ptr %633, align 8
  %635 = call { ptr } %634(ptr nonnull %result.i9.i) #40
  %.fca.0.extract53.i1145.i = extractvalue { ptr } %635, 0
  %636 = sext i32 %630 to i64
  %637 = shl nsw i64 %636, 5
  %638 = getelementptr i8, ptr %.fca.0.extract53.i1145.i, i64 %637
  %639 = load ptr, ptr %638, align 8
  %640 = getelementptr i8, ptr %638, i64 8
  %641 = load i64, ptr %640, align 4
  %.sroa_idx.i1146.i = getelementptr i8, ptr %638, i64 16
  %642 = load i64, ptr %.sroa_idx.i1146.i, align 4
  %643 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %644 = call { ptr } %634(ptr nonnull %result.i9.i) #40
  %.fca.0.extract51.i1147.i = extractvalue { ptr } %644, 0
  %645 = getelementptr i8, ptr %.fca.0.extract51.i1147.i, i64 %637
  store ptr %.sroa.0.0306.i1135.i, ptr %645, align 8
  %646 = getelementptr i8, ptr %645, i64 8
  store i64 %.sroa.6.0305.i1136.in.i, ptr %646, align 4
  %.sroa_idx100.i1148.i = getelementptr i8, ptr %645, i64 16
  store i64 %.sroa.12.0304.i1137.in.i, ptr %.sroa_idx100.i1148.i, align 4
  %.sroa_idx101.i1149.i = getelementptr i8, ptr %645, i64 24
  store i32 %.sroa.17.0303.i1138.i, ptr %.sroa_idx101.i1149.i, align 4
  %647 = icmp ne ptr %639, @nil_typ
  %648 = icmp ne ptr %639, null
  %.not90.i1150.i = and i1 %647, %648
  br i1 %.not90.i1150.i, label %.cont.i1155.i, label %654

.cont.i1155.i:                                    ; preds = %616
  %649 = add nuw nsw i32 %.0308.i1133.i, 1
  %650 = xor i1 %.070307.i1134.i, true
  %hash_coef_ptr.i.i60.i1158.i = getelementptr i8, ptr %639, i64 8
  %tbl_size_ptr.i.i61.i1159.i = getelementptr i8, ptr %639, i64 16
  %offset_tbl_ptr.i.i62.i1160.i = getelementptr i8, ptr %639, i64 40
  %hash_coef.i.i63.i1161.i = load i64, ptr %hash_coef_ptr.i.i60.i1158.i, align 4
  %tbl_size.i.i64.i1162.i = load i64, ptr %tbl_size_ptr.i.i61.i1159.i, align 4
  %offset_tbl.i.i65.i1163.i = load ptr, ptr %offset_tbl_ptr.i.i62.i1160.i, align 8
  %product.i.i.i66.i1164.i = mul i64 %hash_coef.i.i63.i1161.i, 4015701072841558310
  %shifted.i.i.i67.i1165.i = lshr i64 %product.i.i.i66.i1164.i, 32
  %xored.i.i.i68.i1166.i = xor i64 %shifted.i.i.i67.i1165.i, %product.i.i.i66.i1164.i
  %hash.i.i.i69.i1167.i = and i64 %xored.i.i.i68.i1166.i, %tbl_size.i.i64.i1162.i
  %offset_ptr.i.i70.i1168.i = getelementptr i32, ptr %offset_tbl.i.i65.i1163.i, i64 %hash.i.i.i69.i1167.i
  %offset.i.i71.i1169.i = load i32, ptr %offset_ptr.i.i70.i1168.i, align 4
  %651 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %652 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %653 = icmp ult i32 %.0308.i1133.i, 99
  br i1 %653, label %616, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1178.i

654:                                              ; preds = %616
  %655 = load i32, ptr %97, align 4
  %656 = add i32 %655, 1
  %657 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %656, ptr %97, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1178.i

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1178.i: ; preds = %.cont.i1155.i, %654
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %53)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %54)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %55)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %56)
  br label %._crit_edge.i808.i

._crit_edge.i808.i:                               ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1178.i, %.lr.ph.i793.i
  %658 = add nuw nsw i32 %.045.i806.i, 1
  %659 = icmp slt i32 %658, %597
  br i1 %659, label %.lr.ph.i793.i, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit826.i

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit826.i: ; preds = %._crit_edge.i808.i, %._crit_edge.i843.i
  %.045.i841.i = phi i32 [ %716, %._crit_edge.i843.i ], [ 0, %._crit_edge.i808.i ]
  %660 = zext nneg i32 %.045.i841.i to i64
  %661 = shl nuw nsw i64 %660, 5
  %662 = getelementptr i8, ptr %596, i64 %661
  %663 = load ptr, ptr %662, align 8
  %664 = icmp ne ptr %663, @nil_typ
  %665 = icmp ne ptr %663, null
  %.not16.i842.i = and i1 %664, %665
  br i1 %.not16.i842.i, label %666, label %._crit_edge.i843.i

666:                                              ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit826.i
  %667 = getelementptr i8, ptr %662, i64 8
  %668 = load i64, ptr %667, align 4
  %.sroa_idx.i844.i = getelementptr i8, ptr %662, i64 16
  %669 = load i64, ptr %.sroa_idx.i844.i, align 4
  %hash_coef_ptr.i.i3.i845.i = getelementptr i8, ptr %663, i64 8
  %tbl_size_ptr.i.i4.i846.i = getelementptr i8, ptr %663, i64 16
  %offset_tbl_ptr.i.i5.i847.i = getelementptr i8, ptr %663, i64 40
  %670 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %49)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %50)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %51)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %52)
  %hash_coef.i.i17.i1196.i = load i64, ptr %hash_coef_ptr.i.i3.i845.i, align 4, !noalias !23
  %tbl_size.i.i18.i1197.i = load i64, ptr %tbl_size_ptr.i.i4.i846.i, align 4, !noalias !23
  %offset_tbl.i.i19.i1198.i = load ptr, ptr %offset_tbl_ptr.i.i5.i847.i, align 8, !noalias !23
  %product.i.i.i20.i1199.i = mul i64 %hash_coef.i.i17.i1196.i, 4015701072841558310
  %shifted.i.i.i21.i1200.i = lshr i64 %product.i.i.i20.i1199.i, 32
  %xored.i.i.i22.i1201.i = xor i64 %shifted.i.i.i21.i1200.i, %product.i.i.i20.i1199.i
  %hash.i.i.i23.i1202.i = and i64 %xored.i.i.i22.i1201.i, %tbl_size.i.i18.i1197.i
  %offset_ptr.i.i24.i1203.i = getelementptr i32, ptr %offset_tbl.i.i19.i1198.i, i64 %hash.i.i.i23.i1202.i
  %offset.i.i39.i1204.i = load i32, ptr %offset_ptr.i.i24.i1203.i, align 4, !noalias !429
  %671 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %672 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %673 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %674

674:                                              ; preds = %.cont.i1227.i, %666
  %.0308.i1205.i = phi i32 [ 0, %666 ], [ %707, %.cont.i1227.i ]
  %.070307.i1206.i = phi i1 [ true, %666 ], [ %708, %.cont.i1227.i ]
  %.sroa.0.0306.i1207.i = phi ptr [ %663, %666 ], [ %697, %.cont.i1227.i ]
  %.sroa.6.0305.i1208.in.i = phi i64 [ %668, %666 ], [ %699, %.cont.i1227.i ]
  %.sroa.12.0304.i1209.in.i = phi i64 [ %669, %666 ], [ %700, %.cont.i1227.i ]
  %.sroa.17.0303.i1210.i = phi i32 [ %offset.i.i39.i1204.i, %666 ], [ %offset.i.i71.i1241.i, %.cont.i1227.i ]
  %.sroa.12.0304.i1209.i = inttoptr i64 %.sroa.12.0304.i1209.in.i to ptr
  %.sroa.6.0305.i1208.i = inttoptr i64 %.sroa.6.0305.i1208.in.i to ptr
  %675 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1207.i, 0
  %676 = insertvalue { ptr, ptr, ptr, i32 } %675, ptr %.sroa.6.0305.i1208.i, 1
  %677 = insertvalue { ptr, ptr, ptr, i32 } %676, ptr %.sroa.12.0304.i1209.i, 2
  %678 = insertvalue { ptr, ptr, ptr, i32 } %677, i32 %.sroa.17.0303.i1210.i, 3
  %679 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1207.i)
  %680 = sext i32 %.sroa.17.0303.i1210.i to i64
  %681 = getelementptr ptr, ptr %.sroa.0.0306.i1207.i, i64 %680
  %682 = getelementptr i8, ptr %681, i64 64
  %683 = load ptr, ptr %682, align 8
  %result.i43.i1211.i = call ptr %683({ ptr, ptr, ptr, i32 } %678, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %684 = call i32 %result.i43.i1211.i({ ptr, ptr, ptr, i32 } %678, { ptr, ptr, ptr, i32 } %678, ptr nonnull align 8 %0) #42
  %..i1212.i = select i1 %.070307.i1206.i, ptr %49, ptr %51
  %.184.i1213.i = select i1 %.070307.i1206.i, i64 104, i64 112
  %.185.i1214.i = select i1 %.070307.i1206.i, ptr %50, ptr %52
  %.186.i1215.i = select i1 %.070307.i1206.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1212.i, align 8
  %685 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1212.i)
  %686 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1213.i
  %687 = load ptr, ptr %686, align 8
  store ptr @i32_typ, ptr %.185.i1214.i, align 8
  %result.i44.i1216.i = call ptr %687({ ptr, ptr, ptr, i32 } %101, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1214.i) #45
  %688 = call i32 %result.i44.i1216.i({ ptr, ptr, ptr, i32 } %101, { ptr, ptr, ptr, i32 } %101, ptr nonnull align 8 dereferenceable(8) %..i1212.i, i32 %684) #42
  %689 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %690 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1215.i
  %691 = load ptr, ptr %690, align 8
  %692 = load ptr, ptr %691, align 8
  %693 = call { ptr } %692(ptr nonnull %result.i9.i) #40
  %.fca.0.extract53.i1217.i = extractvalue { ptr } %693, 0
  %694 = sext i32 %688 to i64
  %695 = shl nsw i64 %694, 5
  %696 = getelementptr i8, ptr %.fca.0.extract53.i1217.i, i64 %695
  %697 = load ptr, ptr %696, align 8
  %698 = getelementptr i8, ptr %696, i64 8
  %699 = load i64, ptr %698, align 4
  %.sroa_idx.i1218.i = getelementptr i8, ptr %696, i64 16
  %700 = load i64, ptr %.sroa_idx.i1218.i, align 4
  %701 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %702 = call { ptr } %692(ptr nonnull %result.i9.i) #40
  %.fca.0.extract51.i1219.i = extractvalue { ptr } %702, 0
  %703 = getelementptr i8, ptr %.fca.0.extract51.i1219.i, i64 %695
  store ptr %.sroa.0.0306.i1207.i, ptr %703, align 8
  %704 = getelementptr i8, ptr %703, i64 8
  store i64 %.sroa.6.0305.i1208.in.i, ptr %704, align 4
  %.sroa_idx100.i1220.i = getelementptr i8, ptr %703, i64 16
  store i64 %.sroa.12.0304.i1209.in.i, ptr %.sroa_idx100.i1220.i, align 4
  %.sroa_idx101.i1221.i = getelementptr i8, ptr %703, i64 24
  store i32 %.sroa.17.0303.i1210.i, ptr %.sroa_idx101.i1221.i, align 4
  %705 = icmp ne ptr %697, @nil_typ
  %706 = icmp ne ptr %697, null
  %.not90.i1222.i = and i1 %705, %706
  br i1 %.not90.i1222.i, label %.cont.i1227.i, label %712

.cont.i1227.i:                                    ; preds = %674
  %707 = add nuw nsw i32 %.0308.i1205.i, 1
  %708 = xor i1 %.070307.i1206.i, true
  %hash_coef_ptr.i.i60.i1230.i = getelementptr i8, ptr %697, i64 8
  %tbl_size_ptr.i.i61.i1231.i = getelementptr i8, ptr %697, i64 16
  %offset_tbl_ptr.i.i62.i1232.i = getelementptr i8, ptr %697, i64 40
  %hash_coef.i.i63.i1233.i = load i64, ptr %hash_coef_ptr.i.i60.i1230.i, align 4
  %tbl_size.i.i64.i1234.i = load i64, ptr %tbl_size_ptr.i.i61.i1231.i, align 4
  %offset_tbl.i.i65.i1235.i = load ptr, ptr %offset_tbl_ptr.i.i62.i1232.i, align 8
  %product.i.i.i66.i1236.i = mul i64 %hash_coef.i.i63.i1233.i, 4015701072841558310
  %shifted.i.i.i67.i1237.i = lshr i64 %product.i.i.i66.i1236.i, 32
  %xored.i.i.i68.i1238.i = xor i64 %shifted.i.i.i67.i1237.i, %product.i.i.i66.i1236.i
  %hash.i.i.i69.i1239.i = and i64 %xored.i.i.i68.i1238.i, %tbl_size.i.i64.i1234.i
  %offset_ptr.i.i70.i1240.i = getelementptr i32, ptr %offset_tbl.i.i65.i1235.i, i64 %hash.i.i.i69.i1239.i
  %offset.i.i71.i1241.i = load i32, ptr %offset_ptr.i.i70.i1240.i, align 4
  %709 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %710 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %711 = icmp ult i32 %.0308.i1205.i, 99
  br i1 %711, label %674, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1250.i

712:                                              ; preds = %674
  %713 = load i32, ptr %97, align 4
  %714 = add i32 %713, 1
  %715 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %714, ptr %97, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1250.i

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1250.i: ; preds = %.cont.i1227.i, %712
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %49)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %50)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %51)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %52)
  br label %._crit_edge.i843.i

._crit_edge.i843.i:                               ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1250.i, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit826.i
  %716 = add nuw nsw i32 %.045.i841.i, 1
  %717 = icmp slt i32 %716, %597
  br i1 %717, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit826.i, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861.i

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861.i: ; preds = %._crit_edge.i843.i, %593
  %718 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %65)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %66)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %67)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %68)
  %hash_coef.i.i17.i427.i = load i64, ptr %hash_coef_ptr.i.i60.i.i, align 4, !noalias !23
  %tbl_size.i.i18.i428.i = load i64, ptr %tbl_size_ptr.i.i61.i.i, align 4, !noalias !23
  %offset_tbl.i.i19.i429.i = load ptr, ptr %offset_tbl_ptr.i.i62.i.i, align 8, !noalias !23
  %product.i.i.i20.i430.i = mul i64 %hash_coef.i.i17.i427.i, 4015701072841558310
  %shifted.i.i.i21.i431.i = lshr i64 %product.i.i.i20.i430.i, 32
  %xored.i.i.i22.i432.i = xor i64 %shifted.i.i.i21.i431.i, %product.i.i.i20.i430.i
  %hash.i.i.i23.i433.i = and i64 %xored.i.i.i22.i432.i, %tbl_size.i.i18.i428.i
  %offset_ptr.i.i24.i434.i = getelementptr i32, ptr %offset_tbl.i.i19.i429.i, i64 %hash.i.i.i23.i433.i
  %offset.i.i39.i435.i = load i32, ptr %offset_ptr.i.i24.i434.i, align 4, !noalias !432
  %719 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %720 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %721 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %722

722:                                              ; preds = %.cont.i459.i, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861.i
  %.0308.i437.i = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861.i ], [ %755, %.cont.i459.i ]
  %.070307.i438.i = phi i1 [ true, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861.i ], [ %756, %.cont.i459.i ]
  %.sroa.0.0306.i439.i = phi ptr [ %573, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861.i ], [ %745, %.cont.i459.i ]
  %.sroa.6.0305.i440.in.i = phi i64 [ %575, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861.i ], [ %747, %.cont.i459.i ]
  %.sroa.12.0304.i441.in.i = phi i64 [ %576, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861.i ], [ %748, %.cont.i459.i ]
  %.sroa.17.0303.i442.i = phi i32 [ %offset.i.i39.i435.i, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit861.i ], [ %offset.i.i71.i473.i, %.cont.i459.i ]
  %.sroa.12.0304.i441.i = inttoptr i64 %.sroa.12.0304.i441.in.i to ptr
  %.sroa.6.0305.i440.i = inttoptr i64 %.sroa.6.0305.i440.in.i to ptr
  %723 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i439.i, 0
  %724 = insertvalue { ptr, ptr, ptr, i32 } %723, ptr %.sroa.6.0305.i440.i, 1
  %725 = insertvalue { ptr, ptr, ptr, i32 } %724, ptr %.sroa.12.0304.i441.i, 2
  %726 = insertvalue { ptr, ptr, ptr, i32 } %725, i32 %.sroa.17.0303.i442.i, 3
  %727 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i439.i)
  %728 = sext i32 %.sroa.17.0303.i442.i to i64
  %729 = getelementptr ptr, ptr %.sroa.0.0306.i439.i, i64 %728
  %730 = getelementptr i8, ptr %729, i64 64
  %731 = load ptr, ptr %730, align 8
  %result.i43.i443.i = call ptr %731({ ptr, ptr, ptr, i32 } %726, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %732 = call i32 %result.i43.i443.i({ ptr, ptr, ptr, i32 } %726, { ptr, ptr, ptr, i32 } %726, ptr nonnull align 8 %0) #42
  %..i444.i = select i1 %.070307.i438.i, ptr %65, ptr %67
  %.184.i445.i = select i1 %.070307.i438.i, i64 104, i64 112
  %.185.i446.i = select i1 %.070307.i438.i, ptr %66, ptr %68
  %.186.i447.i = select i1 %.070307.i438.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i444.i, align 8
  %733 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i444.i)
  %734 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i445.i
  %735 = load ptr, ptr %734, align 8
  store ptr @i32_typ, ptr %.185.i446.i, align 8
  %result.i44.i448.i = call ptr %735({ ptr, ptr, ptr, i32 } %100, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i446.i) #45
  %736 = call i32 %result.i44.i448.i({ ptr, ptr, ptr, i32 } %100, { ptr, ptr, ptr, i32 } %100, ptr nonnull align 8 dereferenceable(8) %..i444.i, i32 %732) #42
  %737 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %738 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i447.i
  %739 = load ptr, ptr %738, align 8
  %740 = load ptr, ptr %739, align 8
  %741 = call { ptr } %740(ptr nonnull %result.i9.i) #40
  %.fca.0.extract53.i449.i = extractvalue { ptr } %741, 0
  %742 = sext i32 %736 to i64
  %743 = shl nsw i64 %742, 5
  %744 = getelementptr i8, ptr %.fca.0.extract53.i449.i, i64 %743
  %745 = load ptr, ptr %744, align 8
  %746 = getelementptr i8, ptr %744, i64 8
  %747 = load i64, ptr %746, align 4
  %.sroa_idx.i450.i = getelementptr i8, ptr %744, i64 16
  %748 = load i64, ptr %.sroa_idx.i450.i, align 4
  %749 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %750 = call { ptr } %740(ptr nonnull %result.i9.i) #40
  %.fca.0.extract51.i451.i = extractvalue { ptr } %750, 0
  %751 = getelementptr i8, ptr %.fca.0.extract51.i451.i, i64 %743
  store ptr %.sroa.0.0306.i439.i, ptr %751, align 8
  %752 = getelementptr i8, ptr %751, i64 8
  store i64 %.sroa.6.0305.i440.in.i, ptr %752, align 4
  %.sroa_idx100.i452.i = getelementptr i8, ptr %751, i64 16
  store i64 %.sroa.12.0304.i441.in.i, ptr %.sroa_idx100.i452.i, align 4
  %.sroa_idx101.i453.i = getelementptr i8, ptr %751, i64 24
  store i32 %.sroa.17.0303.i442.i, ptr %.sroa_idx101.i453.i, align 4
  %753 = icmp ne ptr %745, @nil_typ
  %754 = icmp ne ptr %745, null
  %.not90.i454.i = and i1 %753, %754
  br i1 %.not90.i454.i, label %.cont.i459.i, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit482.i

.cont.i459.i:                                     ; preds = %722
  %755 = add nuw nsw i32 %.0308.i437.i, 1
  %756 = xor i1 %.070307.i438.i, true
  %hash_coef_ptr.i.i60.i462.i = getelementptr i8, ptr %745, i64 8
  %tbl_size_ptr.i.i61.i463.i = getelementptr i8, ptr %745, i64 16
  %offset_tbl_ptr.i.i62.i464.i = getelementptr i8, ptr %745, i64 40
  %hash_coef.i.i63.i465.i = load i64, ptr %hash_coef_ptr.i.i60.i462.i, align 4
  %tbl_size.i.i64.i466.i = load i64, ptr %tbl_size_ptr.i.i61.i463.i, align 4
  %offset_tbl.i.i65.i467.i = load ptr, ptr %offset_tbl_ptr.i.i62.i464.i, align 8
  %product.i.i.i66.i468.i = mul i64 %hash_coef.i.i63.i465.i, 4015701072841558310
  %shifted.i.i.i67.i469.i = lshr i64 %product.i.i.i66.i468.i, 32
  %xored.i.i.i68.i470.i = xor i64 %shifted.i.i.i67.i469.i, %product.i.i.i66.i468.i
  %hash.i.i.i69.i471.i = and i64 %xored.i.i.i68.i470.i, %tbl_size.i.i64.i466.i
  %offset_ptr.i.i70.i472.i = getelementptr i32, ptr %offset_tbl.i.i65.i467.i, i64 %hash.i.i.i69.i471.i
  %offset.i.i71.i473.i = load i32, ptr %offset_ptr.i.i70.i472.i, align 4
  %757 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %758 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %759 = icmp ult i32 %.0308.i437.i, 99
  br i1 %759, label %722, label %763

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit482.i: ; preds = %722
  %760 = load i32, ptr %97, align 4
  %761 = add i32 %760, 1
  %762 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %761, ptr %97, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %65)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %66)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %67)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %68)
  br label %CuckooMap_insert_keyK_valueV.exit.i

763:                                              ; preds = %.cont.i459.i
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %65)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %66)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %67)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %68)
  %764 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %765 = load ptr, ptr %93, align 8
  %766 = load ptr, ptr %94, align 8
  %767 = load i32, ptr %92, align 8
  %768 = shl i32 %767, 1
  %spec.select.i498.i = call i32 @llvm.smax.i32(i32 %768, i32 noundef 16) #37
  store i32 %spec.select.i498.i, ptr %92, align 8
  %769 = zext nneg i32 %spec.select.i498.i to i64
  %770 = shl nuw nsw i64 %769, 5
  %result.i.i499.i = call noalias ptr @bump_malloc_inner(i64 noundef %770, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i499.i, ptr %93, align 8
  %result.i1.i500.i = call noalias ptr @bump_malloc_inner(i64 noundef %770, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i500.i, ptr %94, align 8
  store i32 0, ptr %97, align 4
  %771 = icmp sgt i32 %767, 0
  br i1 %771, label %.lr.ph.i863.i, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit896.thread.i

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit896.thread.i: ; preds = %763
  %772 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %CuckooMap_insert_keyK_valueV.exit.i

.lr.ph.i863.i:                                    ; preds = %763, %._crit_edge.i878.i
  %.045.i876.i = phi i32 [ %829, %._crit_edge.i878.i ], [ 0, %763 ]
  %773 = zext nneg i32 %.045.i876.i to i64
  %774 = shl nuw nsw i64 %773, 5
  %775 = getelementptr i8, ptr %765, i64 %774
  %776 = load ptr, ptr %775, align 8
  %777 = icmp ne ptr %776, @nil_typ
  %778 = icmp ne ptr %776, null
  %.not16.i877.i = and i1 %777, %778
  br i1 %.not16.i877.i, label %779, label %._crit_edge.i878.i

779:                                              ; preds = %.lr.ph.i863.i
  %780 = getelementptr i8, ptr %775, i64 8
  %781 = load i64, ptr %780, align 4
  %.sroa_idx.i879.i = getelementptr i8, ptr %775, i64 16
  %782 = load i64, ptr %.sroa_idx.i879.i, align 4
  %hash_coef_ptr.i.i3.i880.i = getelementptr i8, ptr %776, i64 8
  %tbl_size_ptr.i.i4.i881.i = getelementptr i8, ptr %776, i64 16
  %offset_tbl_ptr.i.i5.i882.i = getelementptr i8, ptr %776, i64 40
  %783 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %45)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %46)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %47)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %48)
  %hash_coef.i.i17.i1268.i = load i64, ptr %hash_coef_ptr.i.i3.i880.i, align 4, !noalias !23
  %tbl_size.i.i18.i1269.i = load i64, ptr %tbl_size_ptr.i.i4.i881.i, align 4, !noalias !23
  %offset_tbl.i.i19.i1270.i = load ptr, ptr %offset_tbl_ptr.i.i5.i882.i, align 8, !noalias !23
  %product.i.i.i20.i1271.i = mul i64 %hash_coef.i.i17.i1268.i, 4015701072841558310
  %shifted.i.i.i21.i1272.i = lshr i64 %product.i.i.i20.i1271.i, 32
  %xored.i.i.i22.i1273.i = xor i64 %shifted.i.i.i21.i1272.i, %product.i.i.i20.i1271.i
  %hash.i.i.i23.i1274.i = and i64 %xored.i.i.i22.i1273.i, %tbl_size.i.i18.i1269.i
  %offset_ptr.i.i24.i1275.i = getelementptr i32, ptr %offset_tbl.i.i19.i1270.i, i64 %hash.i.i.i23.i1274.i
  %offset.i.i39.i1276.i = load i32, ptr %offset_ptr.i.i24.i1275.i, align 4, !noalias !435
  %784 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %785 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %786 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %787

787:                                              ; preds = %.cont.i1299.i, %779
  %.0308.i1277.i = phi i32 [ 0, %779 ], [ %820, %.cont.i1299.i ]
  %.070307.i1278.i = phi i1 [ true, %779 ], [ %821, %.cont.i1299.i ]
  %.sroa.0.0306.i1279.i = phi ptr [ %776, %779 ], [ %810, %.cont.i1299.i ]
  %.sroa.6.0305.i1280.in.i = phi i64 [ %781, %779 ], [ %812, %.cont.i1299.i ]
  %.sroa.12.0304.i1281.in.i = phi i64 [ %782, %779 ], [ %813, %.cont.i1299.i ]
  %.sroa.17.0303.i1282.i = phi i32 [ %offset.i.i39.i1276.i, %779 ], [ %offset.i.i71.i1313.i, %.cont.i1299.i ]
  %.sroa.12.0304.i1281.i = inttoptr i64 %.sroa.12.0304.i1281.in.i to ptr
  %.sroa.6.0305.i1280.i = inttoptr i64 %.sroa.6.0305.i1280.in.i to ptr
  %788 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1279.i, 0
  %789 = insertvalue { ptr, ptr, ptr, i32 } %788, ptr %.sroa.6.0305.i1280.i, 1
  %790 = insertvalue { ptr, ptr, ptr, i32 } %789, ptr %.sroa.12.0304.i1281.i, 2
  %791 = insertvalue { ptr, ptr, ptr, i32 } %790, i32 %.sroa.17.0303.i1282.i, 3
  %792 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1279.i)
  %793 = sext i32 %.sroa.17.0303.i1282.i to i64
  %794 = getelementptr ptr, ptr %.sroa.0.0306.i1279.i, i64 %793
  %795 = getelementptr i8, ptr %794, i64 64
  %796 = load ptr, ptr %795, align 8
  %result.i43.i1283.i = call ptr %796({ ptr, ptr, ptr, i32 } %791, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %797 = call i32 %result.i43.i1283.i({ ptr, ptr, ptr, i32 } %791, { ptr, ptr, ptr, i32 } %791, ptr nonnull align 8 %0) #42
  %..i1284.i = select i1 %.070307.i1278.i, ptr %45, ptr %47
  %.184.i1285.i = select i1 %.070307.i1278.i, i64 104, i64 112
  %.185.i1286.i = select i1 %.070307.i1278.i, ptr %46, ptr %48
  %.186.i1287.i = select i1 %.070307.i1278.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1284.i, align 8
  %798 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1284.i)
  %799 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1285.i
  %800 = load ptr, ptr %799, align 8
  store ptr @i32_typ, ptr %.185.i1286.i, align 8
  %result.i44.i1288.i = call ptr %800({ ptr, ptr, ptr, i32 } %101, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1286.i) #45
  %801 = call i32 %result.i44.i1288.i({ ptr, ptr, ptr, i32 } %101, { ptr, ptr, ptr, i32 } %101, ptr nonnull align 8 dereferenceable(8) %..i1284.i, i32 %797) #42
  %802 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %803 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1287.i
  %804 = load ptr, ptr %803, align 8
  %805 = load ptr, ptr %804, align 8
  %806 = call { ptr } %805(ptr nonnull %result.i9.i) #40
  %.fca.0.extract53.i1289.i = extractvalue { ptr } %806, 0
  %807 = sext i32 %801 to i64
  %808 = shl nsw i64 %807, 5
  %809 = getelementptr i8, ptr %.fca.0.extract53.i1289.i, i64 %808
  %810 = load ptr, ptr %809, align 8
  %811 = getelementptr i8, ptr %809, i64 8
  %812 = load i64, ptr %811, align 4
  %.sroa_idx.i1290.i = getelementptr i8, ptr %809, i64 16
  %813 = load i64, ptr %.sroa_idx.i1290.i, align 4
  %814 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %815 = call { ptr } %805(ptr nonnull %result.i9.i) #40
  %.fca.0.extract51.i1291.i = extractvalue { ptr } %815, 0
  %816 = getelementptr i8, ptr %.fca.0.extract51.i1291.i, i64 %808
  store ptr %.sroa.0.0306.i1279.i, ptr %816, align 8
  %817 = getelementptr i8, ptr %816, i64 8
  store i64 %.sroa.6.0305.i1280.in.i, ptr %817, align 4
  %.sroa_idx100.i1292.i = getelementptr i8, ptr %816, i64 16
  store i64 %.sroa.12.0304.i1281.in.i, ptr %.sroa_idx100.i1292.i, align 4
  %.sroa_idx101.i1293.i = getelementptr i8, ptr %816, i64 24
  store i32 %.sroa.17.0303.i1282.i, ptr %.sroa_idx101.i1293.i, align 4
  %818 = icmp ne ptr %810, @nil_typ
  %819 = icmp ne ptr %810, null
  %.not90.i1294.i = and i1 %818, %819
  br i1 %.not90.i1294.i, label %.cont.i1299.i, label %825

.cont.i1299.i:                                    ; preds = %787
  %820 = add nuw nsw i32 %.0308.i1277.i, 1
  %821 = xor i1 %.070307.i1278.i, true
  %hash_coef_ptr.i.i60.i1302.i = getelementptr i8, ptr %810, i64 8
  %tbl_size_ptr.i.i61.i1303.i = getelementptr i8, ptr %810, i64 16
  %offset_tbl_ptr.i.i62.i1304.i = getelementptr i8, ptr %810, i64 40
  %hash_coef.i.i63.i1305.i = load i64, ptr %hash_coef_ptr.i.i60.i1302.i, align 4
  %tbl_size.i.i64.i1306.i = load i64, ptr %tbl_size_ptr.i.i61.i1303.i, align 4
  %offset_tbl.i.i65.i1307.i = load ptr, ptr %offset_tbl_ptr.i.i62.i1304.i, align 8
  %product.i.i.i66.i1308.i = mul i64 %hash_coef.i.i63.i1305.i, 4015701072841558310
  %shifted.i.i.i67.i1309.i = lshr i64 %product.i.i.i66.i1308.i, 32
  %xored.i.i.i68.i1310.i = xor i64 %shifted.i.i.i67.i1309.i, %product.i.i.i66.i1308.i
  %hash.i.i.i69.i1311.i = and i64 %xored.i.i.i68.i1310.i, %tbl_size.i.i64.i1306.i
  %offset_ptr.i.i70.i1312.i = getelementptr i32, ptr %offset_tbl.i.i65.i1307.i, i64 %hash.i.i.i69.i1311.i
  %offset.i.i71.i1313.i = load i32, ptr %offset_ptr.i.i70.i1312.i, align 4
  %822 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %823 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %824 = icmp ult i32 %.0308.i1277.i, 99
  br i1 %824, label %787, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1322.i

825:                                              ; preds = %787
  %826 = load i32, ptr %97, align 4
  %827 = add i32 %826, 1
  %828 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %827, ptr %97, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1322.i

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1322.i: ; preds = %.cont.i1299.i, %825
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %45)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %46)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %47)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %48)
  br label %._crit_edge.i878.i

._crit_edge.i878.i:                               ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1322.i, %.lr.ph.i863.i
  %829 = add nuw nsw i32 %.045.i876.i, 1
  %830 = icmp slt i32 %829, %767
  br i1 %830, label %.lr.ph.i863.i, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit896.i

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit896.i: ; preds = %._crit_edge.i878.i
  %831 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %832

832:                                              ; preds = %._crit_edge.i913.i, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit896.i
  %.045.i911.i = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit896.i ], [ %889, %._crit_edge.i913.i ]
  %833 = zext nneg i32 %.045.i911.i to i64
  %834 = shl nuw nsw i64 %833, 5
  %835 = getelementptr i8, ptr %766, i64 %834
  %836 = load ptr, ptr %835, align 8
  %837 = icmp ne ptr %836, @nil_typ
  %838 = icmp ne ptr %836, null
  %.not16.i912.i = and i1 %837, %838
  br i1 %.not16.i912.i, label %839, label %._crit_edge.i913.i

839:                                              ; preds = %832
  %840 = getelementptr i8, ptr %835, i64 8
  %841 = load i64, ptr %840, align 4
  %.sroa_idx.i914.i = getelementptr i8, ptr %835, i64 16
  %842 = load i64, ptr %.sroa_idx.i914.i, align 4
  %hash_coef_ptr.i.i3.i915.i = getelementptr i8, ptr %836, i64 8
  %tbl_size_ptr.i.i4.i916.i = getelementptr i8, ptr %836, i64 16
  %offset_tbl_ptr.i.i5.i917.i = getelementptr i8, ptr %836, i64 40
  %843 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %41)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %42)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %43)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %44)
  %hash_coef.i.i17.i1340.i = load i64, ptr %hash_coef_ptr.i.i3.i915.i, align 4, !noalias !23
  %tbl_size.i.i18.i1341.i = load i64, ptr %tbl_size_ptr.i.i4.i916.i, align 4, !noalias !23
  %offset_tbl.i.i19.i1342.i = load ptr, ptr %offset_tbl_ptr.i.i5.i917.i, align 8, !noalias !23
  %product.i.i.i20.i1343.i = mul i64 %hash_coef.i.i17.i1340.i, 4015701072841558310
  %shifted.i.i.i21.i1344.i = lshr i64 %product.i.i.i20.i1343.i, 32
  %xored.i.i.i22.i1345.i = xor i64 %shifted.i.i.i21.i1344.i, %product.i.i.i20.i1343.i
  %hash.i.i.i23.i1346.i = and i64 %xored.i.i.i22.i1345.i, %tbl_size.i.i18.i1341.i
  %offset_ptr.i.i24.i1347.i = getelementptr i32, ptr %offset_tbl.i.i19.i1342.i, i64 %hash.i.i.i23.i1346.i
  %offset.i.i39.i1348.i = load i32, ptr %offset_ptr.i.i24.i1347.i, align 4, !noalias !438
  %844 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %845 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %846 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %847

847:                                              ; preds = %.cont.i1371.i, %839
  %.0308.i1349.i = phi i32 [ 0, %839 ], [ %880, %.cont.i1371.i ]
  %.070307.i1350.i = phi i1 [ true, %839 ], [ %881, %.cont.i1371.i ]
  %.sroa.0.0306.i1351.i = phi ptr [ %836, %839 ], [ %870, %.cont.i1371.i ]
  %.sroa.6.0305.i1352.in.i = phi i64 [ %841, %839 ], [ %872, %.cont.i1371.i ]
  %.sroa.12.0304.i1353.in.i = phi i64 [ %842, %839 ], [ %873, %.cont.i1371.i ]
  %.sroa.17.0303.i1354.i = phi i32 [ %offset.i.i39.i1348.i, %839 ], [ %offset.i.i71.i1385.i, %.cont.i1371.i ]
  %.sroa.12.0304.i1353.i = inttoptr i64 %.sroa.12.0304.i1353.in.i to ptr
  %.sroa.6.0305.i1352.i = inttoptr i64 %.sroa.6.0305.i1352.in.i to ptr
  %848 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1351.i, 0
  %849 = insertvalue { ptr, ptr, ptr, i32 } %848, ptr %.sroa.6.0305.i1352.i, 1
  %850 = insertvalue { ptr, ptr, ptr, i32 } %849, ptr %.sroa.12.0304.i1353.i, 2
  %851 = insertvalue { ptr, ptr, ptr, i32 } %850, i32 %.sroa.17.0303.i1354.i, 3
  %852 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1351.i)
  %853 = sext i32 %.sroa.17.0303.i1354.i to i64
  %854 = getelementptr ptr, ptr %.sroa.0.0306.i1351.i, i64 %853
  %855 = getelementptr i8, ptr %854, i64 64
  %856 = load ptr, ptr %855, align 8
  %result.i43.i1355.i = call ptr %856({ ptr, ptr, ptr, i32 } %851, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %857 = call i32 %result.i43.i1355.i({ ptr, ptr, ptr, i32 } %851, { ptr, ptr, ptr, i32 } %851, ptr nonnull align 8 %0) #42
  %..i1356.i = select i1 %.070307.i1350.i, ptr %41, ptr %43
  %.184.i1357.i = select i1 %.070307.i1350.i, i64 104, i64 112
  %.185.i1358.i = select i1 %.070307.i1350.i, ptr %42, ptr %44
  %.186.i1359.i = select i1 %.070307.i1350.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1356.i, align 8
  %858 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1356.i)
  %859 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1357.i
  %860 = load ptr, ptr %859, align 8
  store ptr @i32_typ, ptr %.185.i1358.i, align 8
  %result.i44.i1360.i = call ptr %860({ ptr, ptr, ptr, i32 } %101, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1358.i) #45
  %861 = call i32 %result.i44.i1360.i({ ptr, ptr, ptr, i32 } %101, { ptr, ptr, ptr, i32 } %101, ptr nonnull align 8 dereferenceable(8) %..i1356.i, i32 %857) #42
  %862 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %863 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1359.i
  %864 = load ptr, ptr %863, align 8
  %865 = load ptr, ptr %864, align 8
  %866 = call { ptr } %865(ptr nonnull %result.i9.i) #40
  %.fca.0.extract53.i1361.i = extractvalue { ptr } %866, 0
  %867 = sext i32 %861 to i64
  %868 = shl nsw i64 %867, 5
  %869 = getelementptr i8, ptr %.fca.0.extract53.i1361.i, i64 %868
  %870 = load ptr, ptr %869, align 8
  %871 = getelementptr i8, ptr %869, i64 8
  %872 = load i64, ptr %871, align 4
  %.sroa_idx.i1362.i = getelementptr i8, ptr %869, i64 16
  %873 = load i64, ptr %.sroa_idx.i1362.i, align 4
  %874 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %875 = call { ptr } %865(ptr nonnull %result.i9.i) #40
  %.fca.0.extract51.i1363.i = extractvalue { ptr } %875, 0
  %876 = getelementptr i8, ptr %.fca.0.extract51.i1363.i, i64 %868
  store ptr %.sroa.0.0306.i1351.i, ptr %876, align 8
  %877 = getelementptr i8, ptr %876, i64 8
  store i64 %.sroa.6.0305.i1352.in.i, ptr %877, align 4
  %.sroa_idx100.i1364.i = getelementptr i8, ptr %876, i64 16
  store i64 %.sroa.12.0304.i1353.in.i, ptr %.sroa_idx100.i1364.i, align 4
  %.sroa_idx101.i1365.i = getelementptr i8, ptr %876, i64 24
  store i32 %.sroa.17.0303.i1354.i, ptr %.sroa_idx101.i1365.i, align 4
  %878 = icmp ne ptr %870, @nil_typ
  %879 = icmp ne ptr %870, null
  %.not90.i1366.i = and i1 %878, %879
  br i1 %.not90.i1366.i, label %.cont.i1371.i, label %885

.cont.i1371.i:                                    ; preds = %847
  %880 = add nuw nsw i32 %.0308.i1349.i, 1
  %881 = xor i1 %.070307.i1350.i, true
  %hash_coef_ptr.i.i60.i1374.i = getelementptr i8, ptr %870, i64 8
  %tbl_size_ptr.i.i61.i1375.i = getelementptr i8, ptr %870, i64 16
  %offset_tbl_ptr.i.i62.i1376.i = getelementptr i8, ptr %870, i64 40
  %hash_coef.i.i63.i1377.i = load i64, ptr %hash_coef_ptr.i.i60.i1374.i, align 4
  %tbl_size.i.i64.i1378.i = load i64, ptr %tbl_size_ptr.i.i61.i1375.i, align 4
  %offset_tbl.i.i65.i1379.i = load ptr, ptr %offset_tbl_ptr.i.i62.i1376.i, align 8
  %product.i.i.i66.i1380.i = mul i64 %hash_coef.i.i63.i1377.i, 4015701072841558310
  %shifted.i.i.i67.i1381.i = lshr i64 %product.i.i.i66.i1380.i, 32
  %xored.i.i.i68.i1382.i = xor i64 %shifted.i.i.i67.i1381.i, %product.i.i.i66.i1380.i
  %hash.i.i.i69.i1383.i = and i64 %xored.i.i.i68.i1382.i, %tbl_size.i.i64.i1378.i
  %offset_ptr.i.i70.i1384.i = getelementptr i32, ptr %offset_tbl.i.i65.i1379.i, i64 %hash.i.i.i69.i1383.i
  %offset.i.i71.i1385.i = load i32, ptr %offset_ptr.i.i70.i1384.i, align 4
  %882 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %883 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %884 = icmp ult i32 %.0308.i1349.i, 99
  br i1 %884, label %847, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1394.i

885:                                              ; preds = %847
  %886 = load i32, ptr %97, align 4
  %887 = add i32 %886, 1
  %888 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %887, ptr %97, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1394.i

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1394.i: ; preds = %.cont.i1371.i, %885
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %41)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %42)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %43)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %44)
  br label %._crit_edge.i913.i

._crit_edge.i913.i:                               ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1394.i, %832
  %889 = add nuw nsw i32 %.045.i911.i, 1
  %890 = icmp slt i32 %889, %767
  br i1 %890, label %832, label %CuckooMap_insert_keyK_valueV.exit.i

CuckooMap_insert_keyK_valueV.exit.i:              ; preds = %._crit_edge.i913.i, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit896.thread.i, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit482.i, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit.i, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit351.i, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.i
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %891 = icmp ult i32 %.063.i, 999999
  br i1 %891, label %._crit_edge.i, label %._crit_edge2.i

._crit_edge2.i:                                   ; preds = %CuckooMap_insert_keyK_valueV.exit.i
  %892 = call i64 @clock()
  %893 = load ptr, ptr %90, align 8
  %894 = call i32 %893({ ptr, i160 } { ptr @i32_typ, i160 999999 }) #42
  %895 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %896 = load i32, ptr %92, align 8
  %897 = add i32 %896, -1
  %898 = and i32 %897, %894
  %899 = load ptr, ptr %93, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %900 = sext i32 %898 to i64
  %901 = shl nsw i64 %900, 5
  %902 = getelementptr i8, ptr %899, i64 %901
  %903 = load ptr, ptr %902, align 8
  %904 = icmp ne ptr %903, @nil_typ
  %905 = icmp ne ptr %903, null
  %.not44.i.i = and i1 %904, %905
  br i1 %.not44.i.i, label %906, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread.i

906:                                              ; preds = %._crit_edge2.i
  %907 = getelementptr i8, ptr %902, i64 8
  %908 = load i64, ptr %907, align 4
  %.sroa_idx.i545.i = getelementptr i8, ptr %902, i64 16
  %909 = load i64, ptr %.sroa_idx.i545.i, align 4
  %910 = inttoptr i64 %908 to ptr
  %911 = inttoptr i64 %909 to ptr
  %hash_coef_ptr.i.i2.i.i = getelementptr i8, ptr %903, i64 8
  %tbl_size_ptr.i.i3.i.i = getelementptr i8, ptr %903, i64 16
  %offset_tbl_ptr.i.i4.i.i = getelementptr i8, ptr %903, i64 40
  %hash_coef.i.i5.i.i = load i64, ptr %hash_coef_ptr.i.i2.i.i, align 4, !noalias !441
  %tbl_size.i.i6.i.i = load i64, ptr %tbl_size_ptr.i.i3.i.i, align 4, !noalias !441
  %offset_tbl.i.i7.i.i = load ptr, ptr %offset_tbl_ptr.i.i4.i.i, align 8, !noalias !441
  %product.i.i.i8.i.i = mul i64 %hash_coef.i.i5.i.i, 4015701072841558310
  %shifted.i.i.i9.i.i = lshr i64 %product.i.i.i8.i.i, 32
  %xored.i.i.i10.i.i = xor i64 %shifted.i.i.i9.i.i, %product.i.i.i8.i.i
  %hash.i.i.i11.i.i = and i64 %xored.i.i.i10.i.i, %tbl_size.i.i6.i.i
  %offset_ptr.i.i12.i.i = getelementptr i32, ptr %offset_tbl.i.i7.i.i, i64 %hash.i.i.i11.i.i
  %offset.i.i13.i.i = load i32, ptr %offset_ptr.i.i12.i.i, align 4, !noalias !441
  %912 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %903, 0
  %913 = insertvalue { ptr, ptr, ptr, i32 } %912, ptr %910, 1
  %914 = insertvalue { ptr, ptr, ptr, i32 } %913, ptr %911, 2
  %915 = insertvalue { ptr, ptr, ptr, i32 } %914, i32 %offset.i.i13.i.i, 3
  %916 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0) #37
  %917 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %903) #37
  %918 = sext i32 %offset.i.i13.i.i to i64
  %919 = getelementptr ptr, ptr %903, i64 %918
  %920 = getelementptr i8, ptr %919, i64 64
  %921 = load ptr, ptr %920, align 8
  %result.i.i546.i = call ptr %921({ ptr, ptr, ptr, i32 } %915, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %922 = call i32 %result.i.i546.i({ ptr, ptr, ptr, i32 } %915, { ptr, ptr, ptr, i32 } %915, ptr nonnull align 8 %0) #42
  %923 = icmp eq i32 %922, %894
  br i1 %923, label %._crit_edge.i547.i, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread.i

._crit_edge.i547.i:                               ; preds = %906
  %924 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %925 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %903)
  %926 = getelementptr i8, ptr %919, i64 48
  %927 = load ptr, ptr %926, align 8
  %result.i15.i548.i = call ptr %927({ ptr, ptr, ptr, i32 } %915, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %928 = call { ptr, i160 } %result.i15.i548.i({ ptr, ptr, ptr, i32 } %915, { ptr, ptr, ptr, i32 } %915, ptr nonnull align 8 %0) #42
  %929 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %930 = load ptr, ptr %91, align 8
  %931 = call i1 %930({ ptr, i160 } %928, { ptr, i160 } { ptr @i32_typ, i160 999999 }) #42
  br i1 %931, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.i, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread.i

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread.i: ; preds = %._crit_edge.i547.i, %906, %._crit_edge2.i
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %939

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.i: ; preds = %._crit_edge.i547.i
  %932 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %933 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %903)
  %934 = getelementptr i8, ptr %919, i64 56
  %935 = load ptr, ptr %934, align 8
  %result.i16.i549.i = call ptr %935({ ptr, ptr, ptr, i32 } %915, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %936 = call { ptr, i160 } %result.i16.i549.i({ ptr, ptr, ptr, i32 } %915, { ptr, ptr, ptr, i32 } %915, ptr nonnull align 8 %0) #42
  %.fca.0.extract21.i.i = extractvalue { ptr, i160 } %936, 0
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %937 = icmp ne ptr %.fca.0.extract21.i.i, @nil_typ
  %938 = icmp ne ptr %.fca.0.extract21.i.i, null
  %.not63.i.i = and i1 %937, %938
  br i1 %.not63.i.i, label %CuckooMap_get_keyK.exit.i, label %939

939:                                              ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.i, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread.i
  %940 = add i32 %894, 2127912214
  %941 = shl i32 %894, 12
  %942 = add i32 %940, %941
  %943 = ashr i32 %942, 19
  %944 = xor i32 %942, %943
  %945 = xor i32 %944, -949894596
  %946 = add i32 %945, 374761393
  %947 = shl i32 %945, 5
  %948 = add i32 %946, %947
  %949 = add i32 %948, -744332180
  %950 = shl i32 %948, 9
  %951 = xor i32 %949, %950
  %952 = add i32 %951, -42973499
  %953 = shl i32 %951, 3
  %954 = add i32 %952, %953
  %955 = ashr i32 %954, 16
  %956 = xor i32 %954, %955
  %957 = xor i32 %956, -1252372727
  %958 = load i32, ptr %92, align 8
  %959 = add i32 %958, -1
  %960 = and i32 %959, %957
  %961 = load ptr, ptr %94, align 8
  %962 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %963 = sext i32 %960 to i64
  %964 = shl nsw i64 %963, 5
  %965 = getelementptr i8, ptr %961, i64 %964
  %966 = load ptr, ptr %965, align 8
  %967 = icmp ne ptr %966, @nil_typ
  %968 = icmp ne ptr %966, null
  %.not44.i579.i = and i1 %967, %968
  br i1 %.not44.i579.i, label %969, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit604.i

969:                                              ; preds = %939
  %970 = getelementptr i8, ptr %965, i64 8
  %971 = load i64, ptr %970, align 4
  %.sroa_idx.i584.i = getelementptr i8, ptr %965, i64 16
  %972 = load i64, ptr %.sroa_idx.i584.i, align 4
  %973 = inttoptr i64 %971 to ptr
  %974 = inttoptr i64 %972 to ptr
  %hash_coef_ptr.i.i2.i585.i = getelementptr i8, ptr %966, i64 8
  %tbl_size_ptr.i.i3.i586.i = getelementptr i8, ptr %966, i64 16
  %offset_tbl_ptr.i.i4.i587.i = getelementptr i8, ptr %966, i64 40
  %hash_coef.i.i5.i588.i = load i64, ptr %hash_coef_ptr.i.i2.i585.i, align 4, !noalias !444
  %tbl_size.i.i6.i589.i = load i64, ptr %tbl_size_ptr.i.i3.i586.i, align 4, !noalias !444
  %offset_tbl.i.i7.i590.i = load ptr, ptr %offset_tbl_ptr.i.i4.i587.i, align 8, !noalias !444
  %product.i.i.i8.i591.i = mul i64 %hash_coef.i.i5.i588.i, 4015701072841558310
  %shifted.i.i.i9.i592.i = lshr i64 %product.i.i.i8.i591.i, 32
  %xored.i.i.i10.i593.i = xor i64 %shifted.i.i.i9.i592.i, %product.i.i.i8.i591.i
  %hash.i.i.i11.i594.i = and i64 %xored.i.i.i10.i593.i, %tbl_size.i.i6.i589.i
  %offset_ptr.i.i12.i595.i = getelementptr i32, ptr %offset_tbl.i.i7.i590.i, i64 %hash.i.i.i11.i594.i
  %offset.i.i13.i596.i = load i32, ptr %offset_ptr.i.i12.i595.i, align 4, !noalias !444
  %975 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %966, 0
  %976 = insertvalue { ptr, ptr, ptr, i32 } %975, ptr %973, 1
  %977 = insertvalue { ptr, ptr, ptr, i32 } %976, ptr %974, 2
  %978 = insertvalue { ptr, ptr, ptr, i32 } %977, i32 %offset.i.i13.i596.i, 3
  %979 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0) #37
  %980 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %966) #37
  %981 = sext i32 %offset.i.i13.i596.i to i64
  %982 = getelementptr ptr, ptr %966, i64 %981
  %983 = getelementptr i8, ptr %982, i64 64
  %984 = load ptr, ptr %983, align 8
  %result.i.i597.i = call ptr %984({ ptr, ptr, ptr, i32 } %978, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %985 = call i32 %result.i.i597.i({ ptr, ptr, ptr, i32 } %978, { ptr, ptr, ptr, i32 } %978, ptr nonnull align 8 %0) #42
  %986 = icmp eq i32 %985, %894
  br i1 %986, label %._crit_edge.i598.i, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit604.i

._crit_edge.i598.i:                               ; preds = %969
  %987 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %988 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %966)
  %989 = getelementptr i8, ptr %982, i64 48
  %990 = load ptr, ptr %989, align 8
  %result.i15.i599.i = call ptr %990({ ptr, ptr, ptr, i32 } %978, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %991 = call { ptr, i160 } %result.i15.i599.i({ ptr, ptr, ptr, i32 } %978, { ptr, ptr, ptr, i32 } %978, ptr nonnull align 8 %0) #42
  %992 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %993 = load ptr, ptr %91, align 8
  %994 = call i1 %993({ ptr, i160 } %991, { ptr, i160 } { ptr @i32_typ, i160 999999 }) #42
  br i1 %994, label %995, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit604.i

995:                                              ; preds = %._crit_edge.i598.i
  %996 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %997 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %966)
  %998 = getelementptr i8, ptr %982, i64 56
  %999 = load ptr, ptr %998, align 8
  %result.i16.i601.i = call ptr %999({ ptr, ptr, ptr, i32 } %978, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %1000 = call { ptr, i160 } %result.i16.i601.i({ ptr, ptr, ptr, i32 } %978, { ptr, ptr, ptr, i32 } %978, ptr nonnull align 8 %0) #42
  %.fca.0.extract21.i602.i = extractvalue { ptr, i160 } %1000, 0
  %.fca.1.extract22.i603.i = extractvalue { ptr, i160 } %1000, 1
  br label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit604.i

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit604.i: ; preds = %995, %._crit_edge.i598.i, %969, %939
  %.reg2mem43.sroa.3.0.i580.i = phi i160 [ %.fca.1.extract22.i603.i, %995 ], [ poison, %._crit_edge.i598.i ], [ poison, %939 ], [ poison, %969 ]
  %.reg2mem41.0.i581.i = phi ptr [ %.fca.0.extract21.i602.i, %995 ], [ @nil_typ, %._crit_edge.i598.i ], [ @nil_typ, %939 ], [ @nil_typ, %969 ]
  %.reload40.fca.0.insert.i582.i = insertvalue { ptr, i160 } poison, ptr %.reg2mem41.0.i581.i, 0
  %.reload40.fca.1.insert.i583.i = insertvalue { ptr, i160 } %.reload40.fca.0.insert.i582.i, i160 %.reg2mem43.sroa.3.0.i580.i, 1
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1001 = icmp ne ptr %.reg2mem41.0.i581.i, @nil_typ
  %1002 = icmp ne ptr %.reg2mem41.0.i581.i, null
  %.not65.not.not.i.i = and i1 %1001, %1002
  %cond.fr27.i.i = freeze i1 %.not65.not.not.i.i
  %spec.select.i.i = select i1 %cond.fr27.i.i, ptr %.reg2mem41.0.i581.i, ptr @nil_typ
  br label %CuckooMap_get_keyK.exit.i

CuckooMap_get_keyK.exit.i:                        ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit604.i, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.i
  %1003 = phi ptr [ %spec.select.i.i, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit604.i ], [ %.fca.0.extract21.i.i, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.i ]
  %.pn.i.i = phi { ptr, i160 } [ %.reload40.fca.1.insert.i583.i, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit604.i ], [ %936, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.i ]
  %1004 = icmp ne ptr %1003, @nil_typ
  %1005 = icmp ne ptr %1003, null
  %.not143.i = and i1 %1004, %1005
  br i1 %.not143.i, label %._crit_edge3.i, label %._crit_edge4.i

._crit_edge3.i:                                   ; preds = %CuckooMap_get_keyK.exit.i
  %1006 = extractvalue { ptr, i160 } %.pn.i.i, 1
  %.sroa.2.8.extract.trunc.i = trunc i160 %1006 to i32
  %.not147.i = icmp eq i32 %.sroa.2.8.extract.trunc.i, 1000000
  br label %._crit_edge4.i

._crit_edge4.i:                                   ; preds = %._crit_edge3.i, %CuckooMap_get_keyK.exit.i
  %.3.i = phi i1 [ %.not147.i, %._crit_edge3.i ], [ false, %CuckooMap_get_keyK.exit.i ]
  %1007 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1008 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %1009 = load i32, ptr %97, align 4
  %.not148.i = icmp eq i32 %1009, 1000000
  %1010 = select i1 %.not148.i, i1 %.3.i, i1 false
  %result.i21.i = call noalias nonnull align 32 dereferenceable(18) ptr @bump_malloc_inner(i64 noundef 18, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <17 x i8> <i8 73, i8 110, i8 115, i8 101, i8 114, i8 116, i8 32, i8 83, i8 101, i8 113, i8 117, i8 101, i8 110, i8 116, i8 105, i8 97, i8 108>, ptr %result.i21.i, align 32
  %1011 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO) #37
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1012 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0) #37
  %1013 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %result.i.i618.i = call noalias nonnull dereferenceable(18) ptr @bump_malloc_inner(i64 noundef 18, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture nofree noundef nonnull writeonly align 1 dereferenceable(18) %result.i.i618.i, ptr noalias nocapture nofree noundef nonnull readonly align 32 dereferenceable(18) %result.i21.i, i64 noundef 17, i1 noundef false)
  %1014 = sub i64 %892, %96
  %1015 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %1016 = getelementptr inbounds i8, ptr %result.i.i618.i, i64 17
  store i8 0, ptr %1016, align 1
  %puts.i.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(18) %result.i.i618.i) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %result.i3.i.i = call noalias nonnull align 16 dereferenceable(15) ptr @bump_malloc_inner(i64 noundef 15, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <14 x i8> <i8 32, i8 32, i8 79, i8 112, i8 101, i8 114, i8 97, i8 116, i8 105, i8 111, i8 110, i8 115, i8 58, i8 32>, ptr %result.i3.i.i, align 16
  %result.i.i268.i.i = call noalias nonnull dereferenceable(15) ptr @bump_malloc_inner(i64 noundef 15, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture nofree noundef nonnull writeonly align 1 dereferenceable(15) %result.i.i268.i.i, ptr noalias nocapture nofree noundef nonnull readonly align 16 dereferenceable(15) %result.i3.i.i, i64 noundef 14, i1 noundef false)
  %puts.i.i.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(15) %result.i.i268.i.i) #42
  %1017 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 noundef 1000000) #42
  %result.i9.i.i = call noalias nonnull align 16 dereferenceable(15) ptr @bump_malloc_inner(i64 noundef 15, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <14 x i8> <i8 32, i8 32, i8 84, i8 111, i8 116, i8 97, i8 108, i8 32, i8 84, i8 105, i8 109, i8 101, i8 58, i8 32>, ptr %result.i9.i.i, align 16
  %result.i.i282.i.i = call noalias nonnull dereferenceable(15) ptr @bump_malloc_inner(i64 noundef 15, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture nofree noundef nonnull writeonly align 1 dereferenceable(15) %result.i.i282.i.i, ptr noalias nocapture nofree noundef nonnull readonly align 16 dereferenceable(15) %result.i9.i.i, i64 noundef 14, i1 noundef false)
  %puts.i206.i.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(15) %result.i.i282.i.i) #42
  %1018 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(6) @i64_string, i64 %1014) #42
  %result.i15.i.i = call noalias nonnull align 4 dereferenceable(4) ptr @bump_malloc_inner(i64 noundef 4, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <3 x i8> <i8 32, i8 109, i8 115>, ptr %result.i15.i.i, align 4
  %result.i.i301.i.i = call noalias nonnull dereferenceable(4) ptr @bump_malloc_inner(i64 noundef 4, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture nofree noundef nonnull writeonly align 1 dereferenceable(4) %result.i.i301.i.i, ptr noalias nocapture nofree noundef nonnull readonly align 4 dereferenceable(4) %result.i15.i.i, i64 noundef 3, i1 noundef false)
  %puts.i226.i.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(4) %result.i.i301.i.i) #42
  %1019 = icmp sgt i64 %1014, 0
  br i1 %1019, label %1020, label %benchmark_insert_sequential.exit

1020:                                             ; preds = %._crit_edge4.i
  %1021 = mul i64 %1014, 1000000
  %1022 = sdiv i64 %1021, 1000000
  br label %benchmark_insert_sequential.exit

benchmark_insert_sequential.exit:                 ; preds = %._crit_edge4.i, %1020
  %.0.i.i = phi i64 [ %1022, %1020 ], [ 0, %._crit_edge4.i ]
  %result.i20.i.i = call noalias nonnull align 16 dereferenceable(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <15 x i8> <i8 32, i8 32, i8 84, i8 105, i8 109, i8 101, i8 47, i8 79, i8 112, i8 58, i8 32, i8 32, i8 32, i8 32, i8 126>, ptr %result.i20.i.i, align 16
  %result.i.i320.i.i = call noalias nonnull dereferenceable(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture nofree noundef nonnull writeonly align 1 dereferenceable(16) %result.i.i320.i.i, ptr noalias nocapture nofree noundef nonnull readonly align 16 dereferenceable(16) %result.i20.i.i, i64 noundef 15, i1 noundef false)
  %puts.i246.i.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(16) %result.i.i320.i.i) #42
  %1023 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(6) @i64_string, i64 %.0.i.i) #42
  %result.i26.i.i = call noalias nonnull align 4 dereferenceable(4) ptr @bump_malloc_inner(i64 noundef 4, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <3 x i8> <i8 32, i8 110, i8 115>, ptr %result.i26.i.i, align 4
  %result.i.i339.i.i = call noalias nonnull dereferenceable(4) ptr @bump_malloc_inner(i64 noundef 4, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture nofree noundef nonnull writeonly align 1 dereferenceable(4) %result.i.i339.i.i, ptr noalias nocapture nofree noundef nonnull readonly align 4 dereferenceable(4) %result.i26.i.i, i64 noundef 3, i1 noundef false)
  %puts.i266.i.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(4) %result.i.i339.i.i) #42
  %result.i25.i = call noalias nonnull align 32 dereferenceable(19) ptr @bump_malloc_inner(i64 noundef 19, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <18 x i8> <i8 32, i8 32, i8 32, i8 32, i8 86, i8 101, i8 114, i8 105, i8 102, i8 105, i8 99, i8 97, i8 116, i8 105, i8 111, i8 110, i8 58, i8 32>, ptr %result.i25.i, align 32
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1024 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0) #37
  %1025 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %result.i.i633.i = call noalias nonnull dereferenceable(19) ptr @bump_malloc_inner(i64 noundef 19, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture nofree noundef nonnull writeonly align 1 dereferenceable(19) %result.i.i633.i, ptr noalias nocapture nofree noundef nonnull readonly align 32 dereferenceable(19) %result.i25.i, i64 noundef 18, i1 noundef false)
  %1026 = getelementptr inbounds i8, ptr %result.i.i633.i, i64 18
  store i8 0, ptr %1026, align 1
  %puts.i211.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(19) %result.i.i633.i) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %..i = select i1 %1010, <4 x i8> <i8 80, i8 65, i8 83, i8 83>, <4 x i8> <i8 70, i8 65, i8 73, i8 76>
  %.184.i = select i1 %1010, ptr %73, ptr %77
  %.185.i = select i1 %1010, ptr %74, ptr %78
  %.186.i = select i1 %1010, ptr %75, ptr %79
  %.187.i = select i1 %1010, ptr %76, ptr %80
  store ptr @_parameterization_Bufferi8, ptr %.184.i, align 8
  %.184.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %1010, ptr %73, ptr %77
  %.184.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.184.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 8
  store ptr @_parameterization_i32, ptr %.184.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %.184.sroa.sel196.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %1010, ptr %73, ptr %77
  %.184.sroa.sel196.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.184.sroa.sel196.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 16
  store ptr @_parameterization_i32, ptr %.184.sroa.sel196.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %1027 = call ptr @llvm.invariant.start.p0(i64 noundef 9, ptr nocapture nofree noundef nonnull align 8 dereferenceable(24) %.184.i)
  store ptr @buffer_typ, ptr %.185.i, align 8
  %.185.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %1010, ptr %74, ptr %78
  %.185.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.185.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 8
  store ptr @i32_typ, ptr %.185.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %.185.sroa.sel191.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %1010, ptr %74, ptr %78
  %.185.sroa.sel191.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.185.sroa.sel191.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 16
  store ptr @i32_typ, ptr %.185.sroa.sel191.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %1028 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %.185.i)
  store ptr @_parameterization_String, ptr %.186.i, align 8
  %1029 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %.186.i)
  %1030 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  store ptr @String, ptr %.187.i, align 8
  %1031 = call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %.187.i) #37
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1032 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0) #37
  %1033 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %result.i.i652.i = call noalias nonnull dereferenceable(5) ptr @bump_malloc_inner(i64 noundef 5, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <4 x i8> %..i, ptr %result.i.i652.i, align 1
  %1034 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %1035 = getelementptr inbounds i8, ptr %result.i.i652.i, i64 4
  store i8 0, ptr %1035, align 1
  %puts.i231.i = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(5) %result.i.i652.i) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 24, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(24) %73)
  call void @llvm.lifetime.end.p0(i64 noundef 24, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(24) %74)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %75)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %76)
  call void @llvm.lifetime.end.p0(i64 noundef 24, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(24) %77)
  call void @llvm.lifetime.end.p0(i64 noundef 24, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(24) %78)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %79)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(8) %80)
  call void @benchmark_insert_random(i32 noundef 1000000)
  call void @llvm.lifetime.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(24) %33)
  call void @llvm.lifetime.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(24) %34)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %35)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %36)
  call void @llvm.lifetime.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(24) %37)
  call void @llvm.lifetime.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(24) %38)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %39)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %40)
  %result.i9.i7 = call noalias nonnull align 8 dereferenceable(64) ptr @bump_malloc_inner(i64 noundef 64, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr @_parameterization_i32, ptr %result.i9.i7, align 8
  %1036 = getelementptr inbounds i8, ptr %result.i9.i7, i64 8
  store ptr @_parameterization_i32, ptr %1036, align 8
  %1037 = getelementptr inbounds i8, ptr %result.i9.i7, i64 16
  store ptr @_parameterization_Pairi32._i32, ptr %1037, align 8
  %1038 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(64) %result.i9.i7) #44
  %result.i10.i8 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i.i6)
  %result.i11.i9 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i10.i8, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i.i6) #42
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i.i6)
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i10.i8, ptr noalias nofree noundef nonnull readnone @uixwpatxai, ptr noalias nofree noundef nonnull readnone @i32_hasher) #44
  %ret.i.i10 = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i10.i8) #48
  %1039 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i10.i8) #44
  %result.i12.i11 = call noalias dereferenceable_or_null(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.lifetime.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i13.i5)
  %result.i14.i12 = call i32 @VirtualProtect(ptr nofree noundef dereferenceable_or_null(24) %result.i12.i11, i64 noundef 16, i32 noundef 64, ptr nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i13.i5) #42
  call void @llvm.lifetime.end.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 4 dereferenceable(4) %oldProtect.i13.i5)
  call void @llvm.init.trampoline(ptr nocapture nofree noundef writeonly dereferenceable_or_null(24) %result.i12.i11, ptr noalias nofree noundef nonnull readnone @peclnbhgie, ptr noalias nofree noundef nonnull readnone @i32_eq) #44
  %ret.i15.i13 = call ptr @llvm.adjust.trampoline(ptr nofree noundef readonly dereferenceable_or_null(24) %result.i12.i11) #48
  %1040 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef dereferenceable_or_null(24) %result.i12.i11) #44
  %1041 = getelementptr inbounds i8, ptr %result.i9.i7, i64 48
  store ptr %ret.i.i10, ptr %1041, align 8
  %1042 = getelementptr inbounds i8, ptr %result.i9.i7, i64 56
  store ptr %ret.i15.i13, ptr %1042, align 8
  %1043 = getelementptr inbounds i8, ptr %result.i9.i7, i64 40
  store i32 8, ptr %1043, align 8
  %result.i.i132.i = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %1044 = getelementptr inbounds i8, ptr %result.i9.i7, i64 24
  store ptr %result.i.i132.i, ptr %1044, align 8
  %result.i1.i.i14 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %1045 = getelementptr inbounds i8, ptr %result.i9.i7, i64 32
  store ptr %result.i1.i.i14, ptr %1045, align 8
  %1046 = getelementptr inbounds i8, ptr %result.i9.i7, i64 44
  %1047 = insertvalue { ptr, ptr, ptr, i32 } { ptr @CuckooMap, ptr undef, ptr undef, i32 undef }, ptr %result.i9.i7, 1
  %1048 = insertvalue { ptr, ptr, ptr, i32 } %1047, ptr undef, 2
  %1049 = insertvalue { ptr, ptr, ptr, i32 } %1048, i32 10, 3
  %1050 = insertvalue { ptr, ptr, ptr, i32 } %1047, i32 10, 3
  br label %._crit_edge.i15

._crit_edge.i15:                                  ; preds = %CuckooMap_insert_keyK_valueV.exit.i42, %benchmark_insert_sequential.exit
  %.0106.i = phi i32 [ %1051, %CuckooMap_insert_keyK_valueV.exit.i42 ], [ 0, %benchmark_insert_sequential.exit ]
  %1051 = add nuw nsw i32 %.0106.i, 1
  %.sroa.0133.0.insert.ext.i = zext nneg i32 %.0106.i to i160
  %1052 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0133.0.insert.ext.i, 1
  %.sroa.0130.0.insert.ext.i = zext nneg i32 %1051 to i160
  %1053 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0130.0.insert.ext.i, 1
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1054 = load ptr, ptr %1041, align 8
  %1055 = call i32 %1054({ ptr, i160 } %1052) #42
  %1056 = load i32, ptr %1043, align 8
  %1057 = add i32 %1056, -1
  %1058 = and i32 %1057, %1055
  %1059 = load ptr, ptr %1044, align 8
  %1060 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1061 = sext i32 %1058 to i64
  %1062 = shl nsw i64 %1061, 5
  %1063 = getelementptr i8, ptr %1059, i64 %1062
  %1064 = load ptr, ptr %1063, align 8
  %1065 = getelementptr i8, ptr %1063, i64 8
  %1066 = icmp ne ptr %1064, @nil_typ
  %1067 = icmp ne ptr %1064, null
  %.not64.i.i16 = and i1 %1066, %1067
  br i1 %.not64.i.i16, label %1068, label %1166

1068:                                             ; preds = %._crit_edge.i15
  %1069 = load i64, ptr %1065, align 4
  %.sroa_idx.i.i117 = getelementptr i8, ptr %1063, i64 16
  %1070 = load i64, ptr %.sroa_idx.i.i117, align 4
  %1071 = inttoptr i64 %1069 to ptr
  %1072 = inttoptr i64 %1070 to ptr
  %hash_coef_ptr.i.i3.i.i118 = getelementptr i8, ptr %1064, i64 8
  %tbl_size_ptr.i.i4.i.i119 = getelementptr i8, ptr %1064, i64 16
  %offset_tbl_ptr.i.i5.i.i120 = getelementptr i8, ptr %1064, i64 40
  %hash_coef.i.i6.i.i121 = load i64, ptr %hash_coef_ptr.i.i3.i.i118, align 4, !noalias !447
  %tbl_size.i.i7.i.i122 = load i64, ptr %tbl_size_ptr.i.i4.i.i119, align 4, !noalias !447
  %offset_tbl.i.i8.i.i123 = load ptr, ptr %offset_tbl_ptr.i.i5.i.i120, align 8, !noalias !447
  %product.i.i.i9.i.i124 = mul i64 %hash_coef.i.i6.i.i121, 4015701072841558310
  %shifted.i.i.i10.i.i125 = lshr i64 %product.i.i.i9.i.i124, 32
  %xored.i.i.i11.i.i126 = xor i64 %shifted.i.i.i10.i.i125, %product.i.i.i9.i.i124
  %hash.i.i.i12.i.i127 = and i64 %xored.i.i.i11.i.i126, %tbl_size.i.i7.i.i122
  %offset_ptr.i.i13.i.i128 = getelementptr i32, ptr %offset_tbl.i.i8.i.i123, i64 %hash.i.i.i12.i.i127
  %offset.i.i14.i.i129 = load i32, ptr %offset_ptr.i.i13.i.i128, align 4, !noalias !447
  %1073 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1064, 0
  %1074 = insertvalue { ptr, ptr, ptr, i32 } %1073, ptr %1071, 1
  %1075 = insertvalue { ptr, ptr, ptr, i32 } %1074, ptr %1072, 2
  %1076 = insertvalue { ptr, ptr, ptr, i32 } %1075, i32 %offset.i.i14.i.i129, 3
  %1077 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0) #37
  %1078 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1064) #37
  %1079 = sext i32 %offset.i.i14.i.i129 to i64
  %1080 = getelementptr ptr, ptr %1064, i64 %1079
  %1081 = getelementptr i8, ptr %1080, i64 64
  %1082 = load ptr, ptr %1081, align 8
  %result.i.i.i130 = call ptr %1082({ ptr, ptr, ptr, i32 } %1076, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %1083 = call i32 %result.i.i.i130({ ptr, ptr, ptr, i32 } %1076, { ptr, ptr, ptr, i32 } %1076, ptr nonnull align 8 %0) #42
  %1084 = icmp eq i32 %1083, %1055
  br i1 %1084, label %._crit_edge.i356.i, label %1166

._crit_edge.i356.i:                               ; preds = %1068
  %1085 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1086 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1064)
  %1087 = getelementptr i8, ptr %1080, i64 48
  %1088 = load ptr, ptr %1087, align 8
  %result.i16.i357.i = call ptr %1088({ ptr, ptr, ptr, i32 } %1076, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %1089 = call { ptr, i160 } %result.i16.i357.i({ ptr, ptr, ptr, i32 } %1076, { ptr, ptr, ptr, i32 } %1076, ptr nonnull align 8 %0) #42
  %1090 = load ptr, ptr %1042, align 8
  %1091 = call i1 %1090({ ptr, i160 } %1089, { ptr, i160 } %1052) #42
  br i1 %1091, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.i131, label %1166

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.i131: ; preds = %._crit_edge.i356.i
  %1092 = load ptr, ptr %result.i9.i7, align 8
  %1093 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1094 = load ptr, ptr %1036, align 8
  %1095 = load ptr, ptr %1092, align 8, !alias.scope !450
  %1096 = getelementptr i8, ptr %1095, i64 72
  %1097 = load ptr, ptr %1096, align 8, !alias.scope !450
  %result.i.i.i358.i = call { i64, i64 } %1097(ptr nocapture nofree nonnull readonly align 8 %1092) #41, !alias.scope !450
  %1098 = extractvalue { i64, i64 } %result.i.i.i358.i, 0
  %1099 = extractvalue { i64, i64 } %result.i.i.i358.i, 1
  %1100 = urem i64 20, %1099
  %1101 = icmp eq i64 %1100, 0
  %1102 = sub i64 %1099, %1100
  %1103 = select i1 %1101, i64 0, i64 %1102
  %1104 = add i64 %1098, 20
  %1105 = add i64 %1104, %1103
  %1106 = load ptr, ptr %1094, align 8, !alias.scope !450
  %1107 = getelementptr i8, ptr %1106, i64 72
  %1108 = load ptr, ptr %1107, align 8, !alias.scope !450
  %result.i1.i.i359.i = call { i64, i64 } %1108(ptr nocapture nofree nonnull readonly align 8 %1094) #41, !alias.scope !450
  %1109 = extractvalue { i64, i64 } %result.i1.i.i359.i, 0
  %1110 = extractvalue { i64, i64 } %result.i1.i.i359.i, 1
  %1111 = call i64 @llvm.umax.i64(i64 %1099, i64 %1110) #38
  %1112 = call i64 @llvm.umax.i64(i64 %1111, i64 noundef 8) #38, !range !16
  %1113 = urem i64 %1105, %1110
  %1114 = icmp eq i64 %1113, 0
  %1115 = sub i64 %1110, %1113
  %1116 = select i1 %1114, i64 0, i64 %1115
  %1117 = add i64 %1109, %1105
  %1118 = add i64 %1117, %1116
  %1119 = urem i64 %1118, %1112
  %1120 = icmp eq i64 %1119, 0
  %1121 = sub i64 %1112, %1119
  %1122 = select i1 %1120, i64 0, i64 %1121
  %1123 = add i64 %1122, %1118
  %result.i20.i360.i = call noalias nonnull align 8 dereferenceable(16) ptr @bump_malloc_inner(i64 noundef %1123, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %1092, ptr %result.i20.i360.i, align 8
  %1124 = getelementptr inbounds i8, ptr %result.i20.i360.i, i64 8
  store ptr %1094, ptr %1124, align 8
  %1125 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i360.i)
  %1126 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1127 = load ptr, ptr %1092, align 8
  %1128 = getelementptr i8, ptr %1127, i64 72
  %1129 = load ptr, ptr %1128, align 8
  %result.i.i54.i.i132 = call { i64, i64 } %1129(ptr nocapture nofree nonnull readonly align 8 %1092) #41
  %1130 = extractvalue { i64, i64 } %result.i.i54.i.i132, 1
  %1131 = urem i64 20, %1130
  %1132 = icmp eq i64 %1131, 0
  %reass.sub783 = sub i64 %1130, %1131
  %1133 = add i64 %reass.sub783, 20
  %1134 = select i1 %1132, i64 20, i64 %1133
  %1135 = getelementptr i8, ptr %result.i20.i360.i, i64 %1134
  %1136 = getelementptr i8, ptr %1127, i64 64
  %1137 = load ptr, ptr %1136, align 8
  call void %1137({ ptr, i160 } %1052, ptr nocapture nofree nonnull readonly align 8 %1092, ptr nocapture nofree writeonly %1135) #49
  %1138 = load ptr, ptr %result.i20.i360.i, align 8
  %1139 = load ptr, ptr %1138, align 8
  %1140 = getelementptr i8, ptr %1139, i64 72
  %1141 = load ptr, ptr %1140, align 8
  %result.i.i55.i.i133 = call { i64, i64 } %1141(ptr nocapture nofree nonnull readonly align 8 %1138) #41
  %1142 = extractvalue { i64, i64 } %result.i.i55.i.i133, 0
  %1143 = extractvalue { i64, i64 } %result.i.i55.i.i133, 1
  %1144 = urem i64 20, %1143
  %1145 = icmp eq i64 %1144, 0
  %1146 = sub i64 %1143, %1144
  %1147 = select i1 %1145, i64 0, i64 %1146
  %1148 = add i64 %1142, 20
  %1149 = add i64 %1148, %1147
  %1150 = load ptr, ptr %1124, align 8
  %1151 = load ptr, ptr %1150, align 8
  %1152 = getelementptr i8, ptr %1151, i64 72
  %1153 = load ptr, ptr %1152, align 8
  %result.i1.i56.i.i134 = call { i64, i64 } %1153(ptr nocapture nofree nonnull readonly align 8 %1150) #41
  %1154 = extractvalue { i64, i64 } %result.i1.i56.i.i134, 1
  %1155 = urem i64 %1149, %1154
  %1156 = icmp eq i64 %1155, 0
  %1157 = sub i64 %1154, %1155
  %1158 = select i1 %1156, i64 0, i64 %1157
  %1159 = getelementptr i8, ptr %result.i20.i360.i, i64 %1149
  %1160 = getelementptr i8, ptr %1159, i64 %1158
  %1161 = getelementptr i8, ptr %1151, i64 64
  %1162 = load ptr, ptr %1161, align 8
  call void %1162({ ptr, i160 } %1053, ptr nocapture nofree nonnull readonly align 8 %1150, ptr nocapture nofree writeonly %1160) #49
  %1163 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %1164 = getelementptr inbounds i8, ptr %result.i20.i360.i, i64 16
  store i32 %1055, ptr %1164, align 8
  store ptr @Entry, ptr %1063, align 8
  %1165 = ptrtoint ptr %result.i20.i360.i to i64
  store i64 %1165, ptr %1065, align 4
  %.sroa_idx28.i.i135 = getelementptr i8, ptr %1063, i64 24
  store i32 10, ptr %.sroa_idx28.i.i135, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %CuckooMap_insert_keyK_valueV.exit.i42

1166:                                             ; preds = %._crit_edge.i356.i, %1068, %._crit_edge.i15
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1167 = add i32 %1055, 2127912214
  %1168 = shl i32 %1055, 12
  %1169 = add i32 %1167, %1168
  %1170 = ashr i32 %1169, 19
  %1171 = xor i32 %1169, %1170
  %1172 = xor i32 %1171, -949894596
  %1173 = add i32 %1172, 374761393
  %1174 = shl i32 %1172, 5
  %1175 = add i32 %1173, %1174
  %1176 = add i32 %1175, -744332180
  %1177 = shl i32 %1175, 9
  %1178 = xor i32 %1176, %1177
  %1179 = add i32 %1178, -42973499
  %1180 = shl i32 %1178, 3
  %1181 = add i32 %1179, %1180
  %1182 = ashr i32 %1181, 16
  %1183 = xor i32 %1181, %1182
  %1184 = xor i32 %1183, -1252372727
  %1185 = load i32, ptr %1043, align 8
  %1186 = add i32 %1185, -1
  %1187 = and i32 %1186, %1184
  %1188 = load ptr, ptr %1045, align 8
  %1189 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1190 = sext i32 %1187 to i64
  %1191 = shl nsw i64 %1190, 5
  %1192 = getelementptr i8, ptr %1188, i64 %1191
  %1193 = load ptr, ptr %1192, align 8
  %1194 = getelementptr i8, ptr %1192, i64 8
  %1195 = icmp ne ptr %1193, @nil_typ
  %1196 = icmp ne ptr %1193, null
  %.not64.i389.i = and i1 %1195, %1196
  br i1 %.not64.i389.i, label %1197, label %1295

1197:                                             ; preds = %1166
  %1198 = load i64, ptr %1194, align 4
  %.sroa_idx.i391.i = getelementptr i8, ptr %1192, i64 16
  %1199 = load i64, ptr %.sroa_idx.i391.i, align 4
  %1200 = inttoptr i64 %1198 to ptr
  %1201 = inttoptr i64 %1199 to ptr
  %hash_coef_ptr.i.i3.i392.i = getelementptr i8, ptr %1193, i64 8
  %tbl_size_ptr.i.i4.i393.i = getelementptr i8, ptr %1193, i64 16
  %offset_tbl_ptr.i.i5.i394.i = getelementptr i8, ptr %1193, i64 40
  %hash_coef.i.i6.i395.i = load i64, ptr %hash_coef_ptr.i.i3.i392.i, align 4, !noalias !453
  %tbl_size.i.i7.i396.i = load i64, ptr %tbl_size_ptr.i.i4.i393.i, align 4, !noalias !453
  %offset_tbl.i.i8.i397.i = load ptr, ptr %offset_tbl_ptr.i.i5.i394.i, align 8, !noalias !453
  %product.i.i.i9.i398.i = mul i64 %hash_coef.i.i6.i395.i, 4015701072841558310
  %shifted.i.i.i10.i399.i = lshr i64 %product.i.i.i9.i398.i, 32
  %xored.i.i.i11.i400.i = xor i64 %shifted.i.i.i10.i399.i, %product.i.i.i9.i398.i
  %hash.i.i.i12.i401.i = and i64 %xored.i.i.i11.i400.i, %tbl_size.i.i7.i396.i
  %offset_ptr.i.i13.i402.i = getelementptr i32, ptr %offset_tbl.i.i8.i397.i, i64 %hash.i.i.i12.i401.i
  %offset.i.i14.i403.i = load i32, ptr %offset_ptr.i.i13.i402.i, align 4, !noalias !453
  %1202 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1193, 0
  %1203 = insertvalue { ptr, ptr, ptr, i32 } %1202, ptr %1200, 1
  %1204 = insertvalue { ptr, ptr, ptr, i32 } %1203, ptr %1201, 2
  %1205 = insertvalue { ptr, ptr, ptr, i32 } %1204, i32 %offset.i.i14.i403.i, 3
  %1206 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0) #37
  %1207 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1193) #37
  %1208 = sext i32 %offset.i.i14.i403.i to i64
  %1209 = getelementptr ptr, ptr %1193, i64 %1208
  %1210 = getelementptr i8, ptr %1209, i64 64
  %1211 = load ptr, ptr %1210, align 8
  %result.i.i404.i = call ptr %1211({ ptr, ptr, ptr, i32 } %1205, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %1212 = call i32 %result.i.i404.i({ ptr, ptr, ptr, i32 } %1205, { ptr, ptr, ptr, i32 } %1205, ptr nonnull align 8 %0) #42
  %1213 = icmp eq i32 %1212, %1055
  br i1 %1213, label %._crit_edge.i405.i, label %1295

._crit_edge.i405.i:                               ; preds = %1197
  %1214 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1215 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1193)
  %1216 = getelementptr i8, ptr %1209, i64 48
  %1217 = load ptr, ptr %1216, align 8
  %result.i16.i406.i = call ptr %1217({ ptr, ptr, ptr, i32 } %1205, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %1218 = call { ptr, i160 } %result.i16.i406.i({ ptr, ptr, ptr, i32 } %1205, { ptr, ptr, ptr, i32 } %1205, ptr nonnull align 8 %0) #42
  %1219 = load ptr, ptr %1042, align 8
  %1220 = call i1 %1219({ ptr, i160 } %1218, { ptr, i160 } %1052) #42
  br i1 %1220, label %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit418.i, label %1295

CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit418.i: ; preds = %._crit_edge.i405.i
  %1221 = load ptr, ptr %result.i9.i7, align 8
  %1222 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1223 = load ptr, ptr %1036, align 8
  %1224 = load ptr, ptr %1221, align 8, !alias.scope !456
  %1225 = getelementptr i8, ptr %1224, i64 72
  %1226 = load ptr, ptr %1225, align 8, !alias.scope !456
  %result.i.i.i410.i = call { i64, i64 } %1226(ptr nocapture nofree nonnull readonly align 8 %1221) #41, !alias.scope !456
  %1227 = extractvalue { i64, i64 } %result.i.i.i410.i, 0
  %1228 = extractvalue { i64, i64 } %result.i.i.i410.i, 1
  %1229 = urem i64 20, %1228
  %1230 = icmp eq i64 %1229, 0
  %1231 = sub i64 %1228, %1229
  %1232 = select i1 %1230, i64 0, i64 %1231
  %1233 = add i64 %1227, 20
  %1234 = add i64 %1233, %1232
  %1235 = load ptr, ptr %1223, align 8, !alias.scope !456
  %1236 = getelementptr i8, ptr %1235, i64 72
  %1237 = load ptr, ptr %1236, align 8, !alias.scope !456
  %result.i1.i.i411.i = call { i64, i64 } %1237(ptr nocapture nofree nonnull readonly align 8 %1223) #41, !alias.scope !456
  %1238 = extractvalue { i64, i64 } %result.i1.i.i411.i, 0
  %1239 = extractvalue { i64, i64 } %result.i1.i.i411.i, 1
  %1240 = call i64 @llvm.umax.i64(i64 %1228, i64 %1239) #38
  %1241 = call i64 @llvm.umax.i64(i64 %1240, i64 noundef 8) #38, !range !16
  %1242 = urem i64 %1234, %1239
  %1243 = icmp eq i64 %1242, 0
  %1244 = sub i64 %1239, %1242
  %1245 = select i1 %1243, i64 0, i64 %1244
  %1246 = add i64 %1238, %1234
  %1247 = add i64 %1246, %1245
  %1248 = urem i64 %1247, %1241
  %1249 = icmp eq i64 %1248, 0
  %1250 = sub i64 %1241, %1248
  %1251 = select i1 %1249, i64 0, i64 %1250
  %1252 = add i64 %1251, %1247
  %result.i20.i412.i = call noalias nonnull align 8 dereferenceable(16) ptr @bump_malloc_inner(i64 noundef %1252, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %1221, ptr %result.i20.i412.i, align 8
  %1253 = getelementptr inbounds i8, ptr %result.i20.i412.i, i64 8
  store ptr %1223, ptr %1253, align 8
  %1254 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20.i412.i)
  %1255 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1256 = load ptr, ptr %1221, align 8
  %1257 = getelementptr i8, ptr %1256, i64 72
  %1258 = load ptr, ptr %1257, align 8
  %result.i.i54.i413.i = call { i64, i64 } %1258(ptr nocapture nofree nonnull readonly align 8 %1221) #41
  %1259 = extractvalue { i64, i64 } %result.i.i54.i413.i, 1
  %1260 = urem i64 20, %1259
  %1261 = icmp eq i64 %1260, 0
  %reass.sub782 = sub i64 %1259, %1260
  %1262 = add i64 %reass.sub782, 20
  %1263 = select i1 %1261, i64 20, i64 %1262
  %1264 = getelementptr i8, ptr %result.i20.i412.i, i64 %1263
  %1265 = getelementptr i8, ptr %1256, i64 64
  %1266 = load ptr, ptr %1265, align 8
  call void %1266({ ptr, i160 } %1052, ptr nocapture nofree nonnull readonly align 8 %1221, ptr nocapture nofree writeonly %1264) #49
  %1267 = load ptr, ptr %result.i20.i412.i, align 8
  %1268 = load ptr, ptr %1267, align 8
  %1269 = getelementptr i8, ptr %1268, i64 72
  %1270 = load ptr, ptr %1269, align 8
  %result.i.i55.i415.i = call { i64, i64 } %1270(ptr nocapture nofree nonnull readonly align 8 %1267) #41
  %1271 = extractvalue { i64, i64 } %result.i.i55.i415.i, 0
  %1272 = extractvalue { i64, i64 } %result.i.i55.i415.i, 1
  %1273 = urem i64 20, %1272
  %1274 = icmp eq i64 %1273, 0
  %1275 = sub i64 %1272, %1273
  %1276 = select i1 %1274, i64 0, i64 %1275
  %1277 = add i64 %1271, 20
  %1278 = add i64 %1277, %1276
  %1279 = load ptr, ptr %1253, align 8
  %1280 = load ptr, ptr %1279, align 8
  %1281 = getelementptr i8, ptr %1280, i64 72
  %1282 = load ptr, ptr %1281, align 8
  %result.i1.i56.i416.i = call { i64, i64 } %1282(ptr nocapture nofree nonnull readonly align 8 %1279) #41
  %1283 = extractvalue { i64, i64 } %result.i1.i56.i416.i, 1
  %1284 = urem i64 %1278, %1283
  %1285 = icmp eq i64 %1284, 0
  %1286 = sub i64 %1283, %1284
  %1287 = select i1 %1285, i64 0, i64 %1286
  %1288 = getelementptr i8, ptr %result.i20.i412.i, i64 %1278
  %1289 = getelementptr i8, ptr %1288, i64 %1287
  %1290 = getelementptr i8, ptr %1280, i64 64
  %1291 = load ptr, ptr %1290, align 8
  call void %1291({ ptr, i160 } %1053, ptr nocapture nofree nonnull readonly align 8 %1279, ptr nocapture nofree writeonly %1289) #49
  %1292 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %1293 = getelementptr inbounds i8, ptr %result.i20.i412.i, i64 16
  store i32 %1055, ptr %1293, align 8
  store ptr @Entry, ptr %1192, align 8
  %1294 = ptrtoint ptr %result.i20.i412.i to i64
  store i64 %1294, ptr %1194, align 4
  %.sroa_idx28.i417.i = getelementptr i8, ptr %1192, i64 24
  store i32 10, ptr %.sroa_idx28.i417.i, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %CuckooMap_insert_keyK_valueV.exit.i42

1295:                                             ; preds = %._crit_edge.i405.i, %1197, %1166
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1296 = load i32, ptr %1046, align 4
  %1297 = load i32, ptr %1043, align 8
  %.not.i.i17 = icmp slt i32 %1296, %1297
  br i1 %.not.i.i17, label %._crit_edge.i.i18, label %1298

1298:                                             ; preds = %1295
  %1299 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1300 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1301 = load ptr, ptr %1044, align 8
  %1302 = load ptr, ptr %1045, align 8
  %1303 = shl i32 %1297, 1
  %spec.select.i433.i = call i32 @llvm.smax.i32(i32 %1303, i32 noundef 16) #37
  store i32 %spec.select.i433.i, ptr %1043, align 8
  %1304 = zext nneg i32 %spec.select.i433.i to i64
  %1305 = shl nuw nsw i64 %1304, 5
  %result.i.i434.i = call noalias ptr @bump_malloc_inner(i64 noundef %1305, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i434.i, ptr %1044, align 8
  %result.i1.i435.i = call noalias ptr @bump_malloc_inner(i64 noundef %1305, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i435.i, ptr %1045, align 8
  store i32 0, ptr %1046, align 4
  %1306 = icmp sgt i32 %1297, 0
  br i1 %1306, label %.lr.ph.i.i102, label %._crit_edge.i.i18

.lr.ph.i.i102:                                    ; preds = %1298, %._crit_edge.i830.i
  %.045.i.i103 = phi i32 [ %1363, %._crit_edge.i830.i ], [ 0, %1298 ]
  %1307 = zext nneg i32 %.045.i.i103 to i64
  %1308 = shl nuw nsw i64 %1307, 5
  %1309 = getelementptr i8, ptr %1301, i64 %1308
  %1310 = load ptr, ptr %1309, align 8
  %1311 = icmp ne ptr %1310, @nil_typ
  %1312 = icmp ne ptr %1310, null
  %.not16.i.i104 = and i1 %1311, %1312
  br i1 %.not16.i.i104, label %1313, label %._crit_edge.i830.i

1313:                                             ; preds = %.lr.ph.i.i102
  %1314 = getelementptr i8, ptr %1309, i64 8
  %1315 = load i64, ptr %1314, align 4
  %.sroa_idx.i831.i = getelementptr i8, ptr %1309, i64 16
  %1316 = load i64, ptr %.sroa_idx.i831.i, align 4
  %hash_coef_ptr.i.i3.i832.i = getelementptr i8, ptr %1310, i64 8
  %tbl_size_ptr.i.i4.i833.i = getelementptr i8, ptr %1310, i64 16
  %offset_tbl_ptr.i.i5.i834.i = getelementptr i8, ptr %1310, i64 40
  %1317 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %21)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %22)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %23)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %24)
  %hash_coef.i.i17.i.i106 = load i64, ptr %hash_coef_ptr.i.i3.i832.i, align 4, !noalias !23
  %tbl_size.i.i18.i.i107 = load i64, ptr %tbl_size_ptr.i.i4.i833.i, align 4, !noalias !23
  %offset_tbl.i.i19.i.i108 = load ptr, ptr %offset_tbl_ptr.i.i5.i834.i, align 8, !noalias !23
  %product.i.i.i20.i.i109 = mul i64 %hash_coef.i.i17.i.i106, 4015701072841558310
  %shifted.i.i.i21.i.i110 = lshr i64 %product.i.i.i20.i.i109, 32
  %xored.i.i.i22.i.i111 = xor i64 %shifted.i.i.i21.i.i110, %product.i.i.i20.i.i109
  %hash.i.i.i23.i.i112 = and i64 %xored.i.i.i22.i.i111, %tbl_size.i.i18.i.i107
  %offset_ptr.i.i24.i.i113 = getelementptr i32, ptr %offset_tbl.i.i19.i.i108, i64 %hash.i.i.i23.i.i112
  %offset.i.i39.i.i114 = load i32, ptr %offset_ptr.i.i24.i.i113, align 4, !noalias !459
  %1318 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1319 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1320 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %1321

1321:                                             ; preds = %.cont.i1105.i, %1313
  %.0308.i1088.i = phi i32 [ 0, %1313 ], [ %1354, %.cont.i1105.i ]
  %.070307.i1089.i = phi i1 [ true, %1313 ], [ %1355, %.cont.i1105.i ]
  %.sroa.0.0306.i1090.i = phi ptr [ %1310, %1313 ], [ %1344, %.cont.i1105.i ]
  %.sroa.6.0305.i1091.in.i = phi i64 [ %1315, %1313 ], [ %1346, %.cont.i1105.i ]
  %.sroa.12.0304.i1092.in.i = phi i64 [ %1316, %1313 ], [ %1347, %.cont.i1105.i ]
  %.sroa.17.0303.i1093.i = phi i32 [ %offset.i.i39.i.i114, %1313 ], [ %offset.i.i71.i1119.i, %.cont.i1105.i ]
  %.sroa.12.0304.i1092.i = inttoptr i64 %.sroa.12.0304.i1092.in.i to ptr
  %.sroa.6.0305.i1091.i = inttoptr i64 %.sroa.6.0305.i1091.in.i to ptr
  %1322 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1090.i, 0
  %1323 = insertvalue { ptr, ptr, ptr, i32 } %1322, ptr %.sroa.6.0305.i1091.i, 1
  %1324 = insertvalue { ptr, ptr, ptr, i32 } %1323, ptr %.sroa.12.0304.i1092.i, 2
  %1325 = insertvalue { ptr, ptr, ptr, i32 } %1324, i32 %.sroa.17.0303.i1093.i, 3
  %1326 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1090.i)
  %1327 = sext i32 %.sroa.17.0303.i1093.i to i64
  %1328 = getelementptr ptr, ptr %.sroa.0.0306.i1090.i, i64 %1327
  %1329 = getelementptr i8, ptr %1328, i64 64
  %1330 = load ptr, ptr %1329, align 8
  %result.i43.i1094.i = call ptr %1330({ ptr, ptr, ptr, i32 } %1325, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %1331 = call i32 %result.i43.i1094.i({ ptr, ptr, ptr, i32 } %1325, { ptr, ptr, ptr, i32 } %1325, ptr nonnull align 8 %0) #42
  %..i1095.i = select i1 %.070307.i1089.i, ptr %21, ptr %23
  %.184.i1096.i = select i1 %.070307.i1089.i, i64 104, i64 112
  %.185.i1097.i = select i1 %.070307.i1089.i, ptr %22, ptr %24
  %.186.i1098.i = select i1 %.070307.i1089.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1095.i, align 8
  %1332 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1095.i)
  %1333 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1096.i
  %1334 = load ptr, ptr %1333, align 8
  store ptr @i32_typ, ptr %.185.i1097.i, align 8
  %result.i44.i1099.i = call ptr %1334({ ptr, ptr, ptr, i32 } %1050, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1097.i) #45
  %1335 = call i32 %result.i44.i1099.i({ ptr, ptr, ptr, i32 } %1050, { ptr, ptr, ptr, i32 } %1050, ptr nonnull align 8 dereferenceable(8) %..i1095.i, i32 %1331) #42
  %1336 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1337 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1098.i
  %1338 = load ptr, ptr %1337, align 8
  %1339 = load ptr, ptr %1338, align 8
  %1340 = call { ptr } %1339(ptr nonnull %result.i9.i7) #40
  %.fca.0.extract53.i1100.i = extractvalue { ptr } %1340, 0
  %1341 = sext i32 %1335 to i64
  %1342 = shl nsw i64 %1341, 5
  %1343 = getelementptr i8, ptr %.fca.0.extract53.i1100.i, i64 %1342
  %1344 = load ptr, ptr %1343, align 8
  %1345 = getelementptr i8, ptr %1343, i64 8
  %1346 = load i64, ptr %1345, align 4
  %.sroa_idx.i1101.i = getelementptr i8, ptr %1343, i64 16
  %1347 = load i64, ptr %.sroa_idx.i1101.i, align 4
  %1348 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1349 = call { ptr } %1339(ptr nonnull %result.i9.i7) #40
  %.fca.0.extract51.i.i115 = extractvalue { ptr } %1349, 0
  %1350 = getelementptr i8, ptr %.fca.0.extract51.i.i115, i64 %1342
  store ptr %.sroa.0.0306.i1090.i, ptr %1350, align 8
  %1351 = getelementptr i8, ptr %1350, i64 8
  store i64 %.sroa.6.0305.i1091.in.i, ptr %1351, align 4
  %.sroa_idx100.i1102.i = getelementptr i8, ptr %1350, i64 16
  store i64 %.sroa.12.0304.i1092.in.i, ptr %.sroa_idx100.i1102.i, align 4
  %.sroa_idx101.i1103.i = getelementptr i8, ptr %1350, i64 24
  store i32 %.sroa.17.0303.i1093.i, ptr %.sroa_idx101.i1103.i, align 4
  %1352 = icmp ne ptr %1344, @nil_typ
  %1353 = icmp ne ptr %1344, null
  %.not90.i1104.i = and i1 %1352, %1353
  br i1 %.not90.i1104.i, label %.cont.i1105.i, label %1359

.cont.i1105.i:                                    ; preds = %1321
  %1354 = add nuw nsw i32 %.0308.i1088.i, 1
  %1355 = xor i1 %.070307.i1089.i, true
  %hash_coef_ptr.i.i60.i1108.i = getelementptr i8, ptr %1344, i64 8
  %tbl_size_ptr.i.i61.i1109.i = getelementptr i8, ptr %1344, i64 16
  %offset_tbl_ptr.i.i62.i1110.i = getelementptr i8, ptr %1344, i64 40
  %hash_coef.i.i63.i1111.i = load i64, ptr %hash_coef_ptr.i.i60.i1108.i, align 4
  %tbl_size.i.i64.i1112.i = load i64, ptr %tbl_size_ptr.i.i61.i1109.i, align 4
  %offset_tbl.i.i65.i1113.i = load ptr, ptr %offset_tbl_ptr.i.i62.i1110.i, align 8
  %product.i.i.i66.i1114.i = mul i64 %hash_coef.i.i63.i1111.i, 4015701072841558310
  %shifted.i.i.i67.i1115.i = lshr i64 %product.i.i.i66.i1114.i, 32
  %xored.i.i.i68.i1116.i = xor i64 %shifted.i.i.i67.i1115.i, %product.i.i.i66.i1114.i
  %hash.i.i.i69.i1117.i = and i64 %xored.i.i.i68.i1116.i, %tbl_size.i.i64.i1112.i
  %offset_ptr.i.i70.i1118.i = getelementptr i32, ptr %offset_tbl.i.i65.i1113.i, i64 %hash.i.i.i69.i1117.i
  %offset.i.i71.i1119.i = load i32, ptr %offset_ptr.i.i70.i1118.i, align 4
  %1356 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1357 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1358 = icmp ult i32 %.0308.i1088.i, 99
  br i1 %1358, label %1321, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1121.i

1359:                                             ; preds = %1321
  %1360 = load i32, ptr %1046, align 4
  %1361 = add i32 %1360, 1
  %1362 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1361, ptr %1046, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1121.i

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1121.i: ; preds = %.cont.i1105.i, %1359
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %21)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %22)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %23)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %24)
  br label %._crit_edge.i830.i

._crit_edge.i830.i:                               ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1121.i, %.lr.ph.i.i102
  %1363 = add nuw nsw i32 %.045.i.i103, 1
  %1364 = icmp slt i32 %1363, %1297
  br i1 %1364, label %.lr.ph.i.i102, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit.i105

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit.i105: ; preds = %._crit_edge.i830.i, %._crit_edge.i860.i
  %.045.i858.i = phi i32 [ %1421, %._crit_edge.i860.i ], [ 0, %._crit_edge.i830.i ]
  %1365 = zext nneg i32 %.045.i858.i to i64
  %1366 = shl nuw nsw i64 %1365, 5
  %1367 = getelementptr i8, ptr %1302, i64 %1366
  %1368 = load ptr, ptr %1367, align 8
  %1369 = icmp ne ptr %1368, @nil_typ
  %1370 = icmp ne ptr %1368, null
  %.not16.i859.i = and i1 %1369, %1370
  br i1 %.not16.i859.i, label %1371, label %._crit_edge.i860.i

1371:                                             ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit.i105
  %1372 = getelementptr i8, ptr %1367, i64 8
  %1373 = load i64, ptr %1372, align 4
  %.sroa_idx.i861.i = getelementptr i8, ptr %1367, i64 16
  %1374 = load i64, ptr %.sroa_idx.i861.i, align 4
  %hash_coef_ptr.i.i3.i862.i = getelementptr i8, ptr %1368, i64 8
  %tbl_size_ptr.i.i4.i863.i = getelementptr i8, ptr %1368, i64 16
  %offset_tbl_ptr.i.i5.i864.i = getelementptr i8, ptr %1368, i64 40
  %1375 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %17)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %18)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %19)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %20)
  %hash_coef.i.i17.i1139.i = load i64, ptr %hash_coef_ptr.i.i3.i862.i, align 4, !noalias !23
  %tbl_size.i.i18.i1140.i = load i64, ptr %tbl_size_ptr.i.i4.i863.i, align 4, !noalias !23
  %offset_tbl.i.i19.i1141.i = load ptr, ptr %offset_tbl_ptr.i.i5.i864.i, align 8, !noalias !23
  %product.i.i.i20.i1142.i = mul i64 %hash_coef.i.i17.i1139.i, 4015701072841558310
  %shifted.i.i.i21.i1143.i = lshr i64 %product.i.i.i20.i1142.i, 32
  %xored.i.i.i22.i1144.i = xor i64 %shifted.i.i.i21.i1143.i, %product.i.i.i20.i1142.i
  %hash.i.i.i23.i1145.i = and i64 %xored.i.i.i22.i1144.i, %tbl_size.i.i18.i1140.i
  %offset_ptr.i.i24.i1146.i = getelementptr i32, ptr %offset_tbl.i.i19.i1141.i, i64 %hash.i.i.i23.i1145.i
  %offset.i.i39.i1147.i = load i32, ptr %offset_ptr.i.i24.i1146.i, align 4, !noalias !462
  %1376 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1377 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1378 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %1379

1379:                                             ; preds = %.cont.i1170.i, %1371
  %.0308.i1148.i = phi i32 [ 0, %1371 ], [ %1412, %.cont.i1170.i ]
  %.070307.i1149.i = phi i1 [ true, %1371 ], [ %1413, %.cont.i1170.i ]
  %.sroa.0.0306.i1150.i = phi ptr [ %1368, %1371 ], [ %1402, %.cont.i1170.i ]
  %.sroa.6.0305.i1151.in.i = phi i64 [ %1373, %1371 ], [ %1404, %.cont.i1170.i ]
  %.sroa.12.0304.i1152.in.i = phi i64 [ %1374, %1371 ], [ %1405, %.cont.i1170.i ]
  %.sroa.17.0303.i1153.i = phi i32 [ %offset.i.i39.i1147.i, %1371 ], [ %offset.i.i71.i1184.i, %.cont.i1170.i ]
  %.sroa.12.0304.i1152.i = inttoptr i64 %.sroa.12.0304.i1152.in.i to ptr
  %.sroa.6.0305.i1151.i = inttoptr i64 %.sroa.6.0305.i1151.in.i to ptr
  %1380 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1150.i, 0
  %1381 = insertvalue { ptr, ptr, ptr, i32 } %1380, ptr %.sroa.6.0305.i1151.i, 1
  %1382 = insertvalue { ptr, ptr, ptr, i32 } %1381, ptr %.sroa.12.0304.i1152.i, 2
  %1383 = insertvalue { ptr, ptr, ptr, i32 } %1382, i32 %.sroa.17.0303.i1153.i, 3
  %1384 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1150.i)
  %1385 = sext i32 %.sroa.17.0303.i1153.i to i64
  %1386 = getelementptr ptr, ptr %.sroa.0.0306.i1150.i, i64 %1385
  %1387 = getelementptr i8, ptr %1386, i64 64
  %1388 = load ptr, ptr %1387, align 8
  %result.i43.i1154.i = call ptr %1388({ ptr, ptr, ptr, i32 } %1383, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %1389 = call i32 %result.i43.i1154.i({ ptr, ptr, ptr, i32 } %1383, { ptr, ptr, ptr, i32 } %1383, ptr nonnull align 8 %0) #42
  %..i1155.i = select i1 %.070307.i1149.i, ptr %17, ptr %19
  %.184.i1156.i = select i1 %.070307.i1149.i, i64 104, i64 112
  %.185.i1157.i = select i1 %.070307.i1149.i, ptr %18, ptr %20
  %.186.i1158.i = select i1 %.070307.i1149.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1155.i, align 8
  %1390 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1155.i)
  %1391 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1156.i
  %1392 = load ptr, ptr %1391, align 8
  store ptr @i32_typ, ptr %.185.i1157.i, align 8
  %result.i44.i1159.i = call ptr %1392({ ptr, ptr, ptr, i32 } %1050, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1157.i) #45
  %1393 = call i32 %result.i44.i1159.i({ ptr, ptr, ptr, i32 } %1050, { ptr, ptr, ptr, i32 } %1050, ptr nonnull align 8 dereferenceable(8) %..i1155.i, i32 %1389) #42
  %1394 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1395 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1158.i
  %1396 = load ptr, ptr %1395, align 8
  %1397 = load ptr, ptr %1396, align 8
  %1398 = call { ptr } %1397(ptr nonnull %result.i9.i7) #40
  %.fca.0.extract53.i1160.i = extractvalue { ptr } %1398, 0
  %1399 = sext i32 %1393 to i64
  %1400 = shl nsw i64 %1399, 5
  %1401 = getelementptr i8, ptr %.fca.0.extract53.i1160.i, i64 %1400
  %1402 = load ptr, ptr %1401, align 8
  %1403 = getelementptr i8, ptr %1401, i64 8
  %1404 = load i64, ptr %1403, align 4
  %.sroa_idx.i1161.i = getelementptr i8, ptr %1401, i64 16
  %1405 = load i64, ptr %.sroa_idx.i1161.i, align 4
  %1406 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1407 = call { ptr } %1397(ptr nonnull %result.i9.i7) #40
  %.fca.0.extract51.i1162.i = extractvalue { ptr } %1407, 0
  %1408 = getelementptr i8, ptr %.fca.0.extract51.i1162.i, i64 %1400
  store ptr %.sroa.0.0306.i1150.i, ptr %1408, align 8
  %1409 = getelementptr i8, ptr %1408, i64 8
  store i64 %.sroa.6.0305.i1151.in.i, ptr %1409, align 4
  %.sroa_idx100.i1163.i = getelementptr i8, ptr %1408, i64 16
  store i64 %.sroa.12.0304.i1152.in.i, ptr %.sroa_idx100.i1163.i, align 4
  %.sroa_idx101.i1164.i = getelementptr i8, ptr %1408, i64 24
  store i32 %.sroa.17.0303.i1153.i, ptr %.sroa_idx101.i1164.i, align 4
  %1410 = icmp ne ptr %1402, @nil_typ
  %1411 = icmp ne ptr %1402, null
  %.not90.i1165.i = and i1 %1410, %1411
  br i1 %.not90.i1165.i, label %.cont.i1170.i, label %1417

.cont.i1170.i:                                    ; preds = %1379
  %1412 = add nuw nsw i32 %.0308.i1148.i, 1
  %1413 = xor i1 %.070307.i1149.i, true
  %hash_coef_ptr.i.i60.i1173.i = getelementptr i8, ptr %1402, i64 8
  %tbl_size_ptr.i.i61.i1174.i = getelementptr i8, ptr %1402, i64 16
  %offset_tbl_ptr.i.i62.i1175.i = getelementptr i8, ptr %1402, i64 40
  %hash_coef.i.i63.i1176.i = load i64, ptr %hash_coef_ptr.i.i60.i1173.i, align 4
  %tbl_size.i.i64.i1177.i = load i64, ptr %tbl_size_ptr.i.i61.i1174.i, align 4
  %offset_tbl.i.i65.i1178.i = load ptr, ptr %offset_tbl_ptr.i.i62.i1175.i, align 8
  %product.i.i.i66.i1179.i = mul i64 %hash_coef.i.i63.i1176.i, 4015701072841558310
  %shifted.i.i.i67.i1180.i = lshr i64 %product.i.i.i66.i1179.i, 32
  %xored.i.i.i68.i1181.i = xor i64 %shifted.i.i.i67.i1180.i, %product.i.i.i66.i1179.i
  %hash.i.i.i69.i1182.i = and i64 %xored.i.i.i68.i1181.i, %tbl_size.i.i64.i1177.i
  %offset_ptr.i.i70.i1183.i = getelementptr i32, ptr %offset_tbl.i.i65.i1178.i, i64 %hash.i.i.i69.i1182.i
  %offset.i.i71.i1184.i = load i32, ptr %offset_ptr.i.i70.i1183.i, align 4
  %1414 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1415 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1416 = icmp ult i32 %.0308.i1148.i, 99
  br i1 %1416, label %1379, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1193.i

1417:                                             ; preds = %1379
  %1418 = load i32, ptr %1046, align 4
  %1419 = add i32 %1418, 1
  %1420 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1419, ptr %1046, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1193.i

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1193.i: ; preds = %.cont.i1170.i, %1417
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %17)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %18)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %19)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %20)
  br label %._crit_edge.i860.i

._crit_edge.i860.i:                               ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1193.i, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit.i105
  %1421 = add nuw nsw i32 %.045.i858.i, 1
  %1422 = icmp slt i32 %1421, %1297
  br i1 %1422, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit.i105, label %._crit_edge.i.i18

._crit_edge.i.i18:                                ; preds = %._crit_edge.i860.i, %1298, %1295
  %1423 = load ptr, ptr %result.i9.i7, align 8
  %1424 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1425 = load ptr, ptr %1036, align 8
  %1426 = load ptr, ptr %1423, align 8
  %1427 = getelementptr i8, ptr %1426, i64 72
  %1428 = load ptr, ptr %1427, align 8
  %result.i.i.i.i19 = call { i64, i64 } %1428(ptr nocapture nofree nonnull readonly align 8 %1423) #41
  %1429 = extractvalue { i64, i64 } %result.i.i.i.i19, 0
  %1430 = extractvalue { i64, i64 } %result.i.i.i.i19, 1
  %1431 = urem i64 20, %1430
  %1432 = icmp eq i64 %1431, 0
  %1433 = sub i64 %1430, %1431
  %1434 = select i1 %1432, i64 0, i64 %1433
  %1435 = add i64 %1429, 20
  %1436 = add i64 %1435, %1434
  %1437 = load ptr, ptr %1425, align 8
  %1438 = getelementptr i8, ptr %1437, i64 72
  %1439 = load ptr, ptr %1438, align 8
  %result.i1.i.i.i20 = call { i64, i64 } %1439(ptr nocapture nofree nonnull readonly align 8 %1425) #41
  %1440 = extractvalue { i64, i64 } %result.i1.i.i.i20, 0
  %1441 = extractvalue { i64, i64 } %result.i1.i.i.i20, 1
  %1442 = call i64 @llvm.umax.i64(i64 %1430, i64 %1441) #38
  %1443 = call i64 @llvm.umax.i64(i64 %1442, i64 noundef 8) #38, !range !16
  %1444 = urem i64 %1436, %1441
  %1445 = icmp eq i64 %1444, 0
  %1446 = sub i64 %1441, %1444
  %1447 = select i1 %1445, i64 0, i64 %1446
  %1448 = add i64 %1440, %1436
  %1449 = add i64 %1448, %1447
  %1450 = urem i64 %1449, %1443
  %1451 = icmp eq i64 %1450, 0
  %1452 = sub i64 %1443, %1450
  %1453 = select i1 %1451, i64 0, i64 %1452
  %1454 = add i64 %1453, %1449
  %result.i16.i.i21 = call noalias nonnull align 8 dereferenceable(16) ptr @bump_malloc_inner(i64 noundef %1454, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %1423, ptr %result.i16.i.i21, align 8
  %1455 = getelementptr inbounds i8, ptr %result.i16.i.i21, i64 8
  store ptr %1425, ptr %1455, align 8
  %1456 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i16.i.i21)
  %1457 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1458 = load ptr, ptr %1423, align 8
  %1459 = getelementptr i8, ptr %1458, i64 72
  %1460 = load ptr, ptr %1459, align 8
  %result.i.i110.i.i22 = call { i64, i64 } %1460(ptr nocapture nofree nonnull readonly align 8 %1423) #41
  %1461 = extractvalue { i64, i64 } %result.i.i110.i.i22, 1
  %1462 = urem i64 20, %1461
  %1463 = icmp eq i64 %1462, 0
  %reass.sub781 = sub i64 %1461, %1462
  %1464 = add i64 %reass.sub781, 20
  %1465 = select i1 %1463, i64 20, i64 %1464
  %1466 = getelementptr i8, ptr %result.i16.i.i21, i64 %1465
  %1467 = getelementptr i8, ptr %1458, i64 64
  %1468 = load ptr, ptr %1467, align 8
  call void %1468({ ptr, i160 } %1052, ptr nocapture nofree nonnull readonly align 8 %1423, ptr nocapture nofree writeonly %1466) #49
  %1469 = load ptr, ptr %result.i16.i.i21, align 8
  %1470 = load ptr, ptr %1469, align 8
  %1471 = getelementptr i8, ptr %1470, i64 72
  %1472 = load ptr, ptr %1471, align 8
  %result.i.i111.i.i23 = call { i64, i64 } %1472(ptr nocapture nofree nonnull readonly align 8 %1469) #41
  %1473 = extractvalue { i64, i64 } %result.i.i111.i.i23, 0
  %1474 = extractvalue { i64, i64 } %result.i.i111.i.i23, 1
  %1475 = urem i64 20, %1474
  %1476 = icmp eq i64 %1475, 0
  %1477 = sub i64 %1474, %1475
  %1478 = select i1 %1476, i64 0, i64 %1477
  %1479 = add i64 %1473, 20
  %1480 = add i64 %1479, %1478
  %1481 = load ptr, ptr %1455, align 8
  %1482 = load ptr, ptr %1481, align 8
  %1483 = getelementptr i8, ptr %1482, i64 72
  %1484 = load ptr, ptr %1483, align 8
  %result.i1.i112.i.i24 = call { i64, i64 } %1484(ptr nocapture nofree nonnull readonly align 8 %1481) #41
  %1485 = extractvalue { i64, i64 } %result.i1.i112.i.i24, 1
  %1486 = urem i64 %1480, %1485
  %1487 = icmp eq i64 %1486, 0
  %1488 = sub i64 %1485, %1486
  %1489 = select i1 %1487, i64 0, i64 %1488
  %1490 = getelementptr i8, ptr %result.i16.i.i21, i64 %1480
  %1491 = getelementptr i8, ptr %1490, i64 %1489
  %1492 = getelementptr i8, ptr %1482, i64 64
  %1493 = load ptr, ptr %1492, align 8
  call void %1493({ ptr, i160 } %1053, ptr nocapture nofree nonnull readonly align 8 %1481, ptr nocapture nofree writeonly %1491) #49
  %1494 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %1495 = getelementptr inbounds i8, ptr %result.i16.i.i21, i64 16
  store i32 %1055, ptr %1495, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %29)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %30)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %31)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %32)
  %1496 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1497 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1498 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %1499

1499:                                             ; preds = %.cont.i.i87, %._crit_edge.i.i18
  %.0308.i.i25 = phi i32 [ 0, %._crit_edge.i.i18 ], [ %1534, %.cont.i.i87 ]
  %.070307.i.i26 = phi i1 [ true, %._crit_edge.i.i18 ], [ %1535, %.cont.i.i87 ]
  %.sroa.0.0306.i.i27 = phi ptr [ @Entry, %._crit_edge.i.i18 ], [ %1522, %.cont.i.i87 ]
  %.sroa.6.0305.i.i28 = phi ptr [ %result.i16.i.i21, %._crit_edge.i.i18 ], [ %.sroa.speculated111.i.i88, %.cont.i.i87 ]
  %.sroa.12.0304.i.i29 = phi ptr [ undef, %._crit_edge.i.i18 ], [ %.sroa.speculated105.i.i89, %.cont.i.i87 ]
  %.sroa.17.0303.i.i30 = phi i32 [ 10, %._crit_edge.i.i18 ], [ %offset.i.i71.i.i101, %.cont.i.i87 ]
  %1500 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i.i27, 0
  %1501 = insertvalue { ptr, ptr, ptr, i32 } %1500, ptr %.sroa.6.0305.i.i28, 1
  %1502 = insertvalue { ptr, ptr, ptr, i32 } %1501, ptr %.sroa.12.0304.i.i29, 2
  %1503 = insertvalue { ptr, ptr, ptr, i32 } %1502, i32 %.sroa.17.0303.i.i30, 3
  %1504 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i.i27)
  %1505 = sext i32 %.sroa.17.0303.i.i30 to i64
  %1506 = getelementptr ptr, ptr %.sroa.0.0306.i.i27, i64 %1505
  %1507 = getelementptr i8, ptr %1506, i64 64
  %1508 = load ptr, ptr %1507, align 8
  %result.i43.i.i31 = call ptr %1508({ ptr, ptr, ptr, i32 } %1503, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %1509 = call i32 %result.i43.i.i31({ ptr, ptr, ptr, i32 } %1503, { ptr, ptr, ptr, i32 } %1503, ptr nonnull align 8 %0) #42
  %..i.i32 = select i1 %.070307.i.i26, ptr %29, ptr %31
  %.184.i.i33 = select i1 %.070307.i.i26, i64 104, i64 112
  %.185.i.i34 = select i1 %.070307.i.i26, ptr %30, ptr %32
  %.186.i.i35 = select i1 %.070307.i.i26, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i.i32, align 8
  %1510 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i.i32)
  %1511 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i.i33
  %1512 = load ptr, ptr %1511, align 8
  store ptr @i32_typ, ptr %.185.i.i34, align 8
  %result.i44.i.i36 = call ptr %1512({ ptr, ptr, ptr, i32 } %1049, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i.i34) #45
  %1513 = call i32 %result.i44.i.i36({ ptr, ptr, ptr, i32 } %1049, { ptr, ptr, ptr, i32 } %1049, ptr nonnull align 8 dereferenceable(8) %..i.i32, i32 %1509) #42
  %1514 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1515 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i.i35
  %1516 = load ptr, ptr %1515, align 8
  %1517 = load ptr, ptr %1516, align 8
  %1518 = call { ptr } %1517(ptr nonnull %result.i9.i7) #40
  %.fca.0.extract53.i.i37 = extractvalue { ptr } %1518, 0
  %1519 = sext i32 %1513 to i64
  %1520 = shl nsw i64 %1519, 5
  %1521 = getelementptr i8, ptr %.fca.0.extract53.i.i37, i64 %1520
  %1522 = load ptr, ptr %1521, align 8
  %1523 = getelementptr i8, ptr %1521, i64 8
  %1524 = load i64, ptr %1523, align 4
  %.sroa_idx.i452.i = getelementptr i8, ptr %1521, i64 16
  %1525 = load i64, ptr %.sroa_idx.i452.i, align 4
  %1526 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1527 = call { ptr } %1517(ptr nonnull %result.i9.i7) #40
  %.fca.0.extract51.i453.i = extractvalue { ptr } %1527, 0
  %1528 = getelementptr i8, ptr %.fca.0.extract51.i453.i, i64 %1520
  store ptr %.sroa.0.0306.i.i27, ptr %1528, align 8
  %1529 = getelementptr i8, ptr %1528, i64 8
  %1530 = ptrtoint ptr %.sroa.6.0305.i.i28 to i64
  %1531 = ptrtoint ptr %.sroa.12.0304.i.i29 to i64
  store i64 %1530, ptr %1529, align 4
  %.sroa_idx100.i.i38 = getelementptr i8, ptr %1528, i64 16
  store i64 %1531, ptr %.sroa_idx100.i.i38, align 4
  %.sroa_idx101.i.i39 = getelementptr i8, ptr %1528, i64 24
  store i32 %.sroa.17.0303.i.i30, ptr %.sroa_idx101.i.i39, align 4
  %1532 = icmp ne ptr %1522, @nil_typ
  %1533 = icmp ne ptr %1522, null
  %.not90.i.i40 = and i1 %1532, %1533
  br i1 %.not90.i.i40, label %.cont.i.i87, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit.i41

.cont.i.i87:                                      ; preds = %1499
  %1534 = add nuw nsw i32 %.0308.i.i25, 1
  %1535 = xor i1 %.070307.i.i26, true
  %.sroa.speculated111.i.i88 = inttoptr i64 %1524 to ptr
  %.sroa.speculated105.i.i89 = inttoptr i64 %1525 to ptr
  %hash_coef_ptr.i.i60.i.i90 = getelementptr i8, ptr %1522, i64 8
  %tbl_size_ptr.i.i61.i.i91 = getelementptr i8, ptr %1522, i64 16
  %offset_tbl_ptr.i.i62.i.i92 = getelementptr i8, ptr %1522, i64 40
  %hash_coef.i.i63.i.i93 = load i64, ptr %hash_coef_ptr.i.i60.i.i90, align 4
  %tbl_size.i.i64.i.i94 = load i64, ptr %tbl_size_ptr.i.i61.i.i91, align 4
  %offset_tbl.i.i65.i.i95 = load ptr, ptr %offset_tbl_ptr.i.i62.i.i92, align 8
  %product.i.i.i66.i.i96 = mul i64 %hash_coef.i.i63.i.i93, 4015701072841558310
  %shifted.i.i.i67.i.i97 = lshr i64 %product.i.i.i66.i.i96, 32
  %xored.i.i.i68.i.i98 = xor i64 %shifted.i.i.i67.i.i97, %product.i.i.i66.i.i96
  %hash.i.i.i69.i.i99 = and i64 %xored.i.i.i68.i.i98, %tbl_size.i.i64.i.i94
  %offset_ptr.i.i70.i.i100 = getelementptr i32, ptr %offset_tbl.i.i65.i.i95, i64 %hash.i.i.i69.i.i99
  %offset.i.i71.i.i101 = load i32, ptr %offset_ptr.i.i70.i.i100, align 4
  %1536 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1537 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1538 = icmp ult i32 %.0308.i.i25, 99
  br i1 %1538, label %1499, label %1542

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit.i41: ; preds = %1499
  %1539 = load i32, ptr %1046, align 4
  %1540 = add i32 %1539, 1
  %1541 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1540, ptr %1046, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %29)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %30)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %31)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %32)
  br label %CuckooMap_insert_keyK_valueV.exit.i42

1542:                                             ; preds = %.cont.i.i87
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %29)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %30)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %31)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %32)
  %1543 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1544 = load ptr, ptr %1044, align 8
  %1545 = load ptr, ptr %1045, align 8
  %1546 = load i32, ptr %1043, align 8
  %1547 = shl i32 %1546, 1
  %spec.select.i470.i = call i32 @llvm.smax.i32(i32 %1547, i32 noundef 16) #37
  store i32 %spec.select.i470.i, ptr %1043, align 8
  %1548 = zext nneg i32 %spec.select.i470.i to i64
  %1549 = shl nuw nsw i64 %1548, 5
  %result.i.i471.i = call noalias ptr @bump_malloc_inner(i64 noundef %1549, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i471.i, ptr %1044, align 8
  %result.i1.i472.i = call noalias ptr @bump_malloc_inner(i64 noundef %1549, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i472.i, ptr %1045, align 8
  store i32 0, ptr %1046, align 4
  %1550 = icmp sgt i32 %1546, 0
  br i1 %1550, label %.lr.ph.i880.i, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948.i

.lr.ph.i880.i:                                    ; preds = %1542, %._crit_edge.i895.i
  %.045.i893.i = phi i32 [ %1607, %._crit_edge.i895.i ], [ 0, %1542 ]
  %1551 = zext nneg i32 %.045.i893.i to i64
  %1552 = shl nuw nsw i64 %1551, 5
  %1553 = getelementptr i8, ptr %1544, i64 %1552
  %1554 = load ptr, ptr %1553, align 8
  %1555 = icmp ne ptr %1554, @nil_typ
  %1556 = icmp ne ptr %1554, null
  %.not16.i894.i = and i1 %1555, %1556
  br i1 %.not16.i894.i, label %1557, label %._crit_edge.i895.i

1557:                                             ; preds = %.lr.ph.i880.i
  %1558 = getelementptr i8, ptr %1553, i64 8
  %1559 = load i64, ptr %1558, align 4
  %.sroa_idx.i896.i = getelementptr i8, ptr %1553, i64 16
  %1560 = load i64, ptr %.sroa_idx.i896.i, align 4
  %hash_coef_ptr.i.i3.i897.i = getelementptr i8, ptr %1554, i64 8
  %tbl_size_ptr.i.i4.i898.i = getelementptr i8, ptr %1554, i64 16
  %offset_tbl_ptr.i.i5.i899.i = getelementptr i8, ptr %1554, i64 40
  %1561 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %13)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %14)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %15)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %16)
  %hash_coef.i.i17.i1211.i = load i64, ptr %hash_coef_ptr.i.i3.i897.i, align 4, !noalias !23
  %tbl_size.i.i18.i1212.i = load i64, ptr %tbl_size_ptr.i.i4.i898.i, align 4, !noalias !23
  %offset_tbl.i.i19.i1213.i = load ptr, ptr %offset_tbl_ptr.i.i5.i899.i, align 8, !noalias !23
  %product.i.i.i20.i1214.i = mul i64 %hash_coef.i.i17.i1211.i, 4015701072841558310
  %shifted.i.i.i21.i1215.i = lshr i64 %product.i.i.i20.i1214.i, 32
  %xored.i.i.i22.i1216.i = xor i64 %shifted.i.i.i21.i1215.i, %product.i.i.i20.i1214.i
  %hash.i.i.i23.i1217.i = and i64 %xored.i.i.i22.i1216.i, %tbl_size.i.i18.i1212.i
  %offset_ptr.i.i24.i1218.i = getelementptr i32, ptr %offset_tbl.i.i19.i1213.i, i64 %hash.i.i.i23.i1217.i
  %offset.i.i39.i1219.i = load i32, ptr %offset_ptr.i.i24.i1218.i, align 4, !noalias !465
  %1562 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1563 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1564 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %1565

1565:                                             ; preds = %.cont.i1242.i, %1557
  %.0308.i1220.i = phi i32 [ 0, %1557 ], [ %1598, %.cont.i1242.i ]
  %.070307.i1221.i = phi i1 [ true, %1557 ], [ %1599, %.cont.i1242.i ]
  %.sroa.0.0306.i1222.i = phi ptr [ %1554, %1557 ], [ %1588, %.cont.i1242.i ]
  %.sroa.6.0305.i1223.in.i = phi i64 [ %1559, %1557 ], [ %1590, %.cont.i1242.i ]
  %.sroa.12.0304.i1224.in.i = phi i64 [ %1560, %1557 ], [ %1591, %.cont.i1242.i ]
  %.sroa.17.0303.i1225.i = phi i32 [ %offset.i.i39.i1219.i, %1557 ], [ %offset.i.i71.i1256.i, %.cont.i1242.i ]
  %.sroa.12.0304.i1224.i = inttoptr i64 %.sroa.12.0304.i1224.in.i to ptr
  %.sroa.6.0305.i1223.i = inttoptr i64 %.sroa.6.0305.i1223.in.i to ptr
  %1566 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1222.i, 0
  %1567 = insertvalue { ptr, ptr, ptr, i32 } %1566, ptr %.sroa.6.0305.i1223.i, 1
  %1568 = insertvalue { ptr, ptr, ptr, i32 } %1567, ptr %.sroa.12.0304.i1224.i, 2
  %1569 = insertvalue { ptr, ptr, ptr, i32 } %1568, i32 %.sroa.17.0303.i1225.i, 3
  %1570 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1222.i)
  %1571 = sext i32 %.sroa.17.0303.i1225.i to i64
  %1572 = getelementptr ptr, ptr %.sroa.0.0306.i1222.i, i64 %1571
  %1573 = getelementptr i8, ptr %1572, i64 64
  %1574 = load ptr, ptr %1573, align 8
  %result.i43.i1226.i = call ptr %1574({ ptr, ptr, ptr, i32 } %1569, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %1575 = call i32 %result.i43.i1226.i({ ptr, ptr, ptr, i32 } %1569, { ptr, ptr, ptr, i32 } %1569, ptr nonnull align 8 %0) #42
  %..i1227.i = select i1 %.070307.i1221.i, ptr %13, ptr %15
  %.184.i1228.i = select i1 %.070307.i1221.i, i64 104, i64 112
  %.185.i1229.i = select i1 %.070307.i1221.i, ptr %14, ptr %16
  %.186.i1230.i = select i1 %.070307.i1221.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1227.i, align 8
  %1576 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1227.i)
  %1577 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1228.i
  %1578 = load ptr, ptr %1577, align 8
  store ptr @i32_typ, ptr %.185.i1229.i, align 8
  %result.i44.i1231.i = call ptr %1578({ ptr, ptr, ptr, i32 } %1050, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1229.i) #45
  %1579 = call i32 %result.i44.i1231.i({ ptr, ptr, ptr, i32 } %1050, { ptr, ptr, ptr, i32 } %1050, ptr nonnull align 8 dereferenceable(8) %..i1227.i, i32 %1575) #42
  %1580 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1581 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1230.i
  %1582 = load ptr, ptr %1581, align 8
  %1583 = load ptr, ptr %1582, align 8
  %1584 = call { ptr } %1583(ptr nonnull %result.i9.i7) #40
  %.fca.0.extract53.i1232.i = extractvalue { ptr } %1584, 0
  %1585 = sext i32 %1579 to i64
  %1586 = shl nsw i64 %1585, 5
  %1587 = getelementptr i8, ptr %.fca.0.extract53.i1232.i, i64 %1586
  %1588 = load ptr, ptr %1587, align 8
  %1589 = getelementptr i8, ptr %1587, i64 8
  %1590 = load i64, ptr %1589, align 4
  %.sroa_idx.i1233.i = getelementptr i8, ptr %1587, i64 16
  %1591 = load i64, ptr %.sroa_idx.i1233.i, align 4
  %1592 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1593 = call { ptr } %1583(ptr nonnull %result.i9.i7) #40
  %.fca.0.extract51.i1234.i = extractvalue { ptr } %1593, 0
  %1594 = getelementptr i8, ptr %.fca.0.extract51.i1234.i, i64 %1586
  store ptr %.sroa.0.0306.i1222.i, ptr %1594, align 8
  %1595 = getelementptr i8, ptr %1594, i64 8
  store i64 %.sroa.6.0305.i1223.in.i, ptr %1595, align 4
  %.sroa_idx100.i1235.i = getelementptr i8, ptr %1594, i64 16
  store i64 %.sroa.12.0304.i1224.in.i, ptr %.sroa_idx100.i1235.i, align 4
  %.sroa_idx101.i1236.i = getelementptr i8, ptr %1594, i64 24
  store i32 %.sroa.17.0303.i1225.i, ptr %.sroa_idx101.i1236.i, align 4
  %1596 = icmp ne ptr %1588, @nil_typ
  %1597 = icmp ne ptr %1588, null
  %.not90.i1237.i = and i1 %1596, %1597
  br i1 %.not90.i1237.i, label %.cont.i1242.i, label %1603

.cont.i1242.i:                                    ; preds = %1565
  %1598 = add nuw nsw i32 %.0308.i1220.i, 1
  %1599 = xor i1 %.070307.i1221.i, true
  %hash_coef_ptr.i.i60.i1245.i = getelementptr i8, ptr %1588, i64 8
  %tbl_size_ptr.i.i61.i1246.i = getelementptr i8, ptr %1588, i64 16
  %offset_tbl_ptr.i.i62.i1247.i = getelementptr i8, ptr %1588, i64 40
  %hash_coef.i.i63.i1248.i = load i64, ptr %hash_coef_ptr.i.i60.i1245.i, align 4
  %tbl_size.i.i64.i1249.i = load i64, ptr %tbl_size_ptr.i.i61.i1246.i, align 4
  %offset_tbl.i.i65.i1250.i = load ptr, ptr %offset_tbl_ptr.i.i62.i1247.i, align 8
  %product.i.i.i66.i1251.i = mul i64 %hash_coef.i.i63.i1248.i, 4015701072841558310
  %shifted.i.i.i67.i1252.i = lshr i64 %product.i.i.i66.i1251.i, 32
  %xored.i.i.i68.i1253.i = xor i64 %shifted.i.i.i67.i1252.i, %product.i.i.i66.i1251.i
  %hash.i.i.i69.i1254.i = and i64 %xored.i.i.i68.i1253.i, %tbl_size.i.i64.i1249.i
  %offset_ptr.i.i70.i1255.i = getelementptr i32, ptr %offset_tbl.i.i65.i1250.i, i64 %hash.i.i.i69.i1254.i
  %offset.i.i71.i1256.i = load i32, ptr %offset_ptr.i.i70.i1255.i, align 4
  %1600 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1601 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1602 = icmp ult i32 %.0308.i1220.i, 99
  br i1 %1602, label %1565, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1265.i

1603:                                             ; preds = %1565
  %1604 = load i32, ptr %1046, align 4
  %1605 = add i32 %1604, 1
  %1606 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1605, ptr %1046, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1265.i

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1265.i: ; preds = %.cont.i1242.i, %1603
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %13)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %14)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %15)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %16)
  br label %._crit_edge.i895.i

._crit_edge.i895.i:                               ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1265.i, %.lr.ph.i880.i
  %1607 = add nuw nsw i32 %.045.i893.i, 1
  %1608 = icmp slt i32 %1607, %1546
  br i1 %1608, label %.lr.ph.i880.i, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit913.i

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit913.i: ; preds = %._crit_edge.i895.i, %._crit_edge.i930.i
  %.045.i928.i = phi i32 [ %1665, %._crit_edge.i930.i ], [ 0, %._crit_edge.i895.i ]
  %1609 = zext nneg i32 %.045.i928.i to i64
  %1610 = shl nuw nsw i64 %1609, 5
  %1611 = getelementptr i8, ptr %1545, i64 %1610
  %1612 = load ptr, ptr %1611, align 8
  %1613 = icmp ne ptr %1612, @nil_typ
  %1614 = icmp ne ptr %1612, null
  %.not16.i929.i = and i1 %1613, %1614
  br i1 %.not16.i929.i, label %1615, label %._crit_edge.i930.i

1615:                                             ; preds = %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit913.i
  %1616 = getelementptr i8, ptr %1611, i64 8
  %1617 = load i64, ptr %1616, align 4
  %.sroa_idx.i931.i = getelementptr i8, ptr %1611, i64 16
  %1618 = load i64, ptr %.sroa_idx.i931.i, align 4
  %hash_coef_ptr.i.i3.i932.i = getelementptr i8, ptr %1612, i64 8
  %tbl_size_ptr.i.i4.i933.i = getelementptr i8, ptr %1612, i64 16
  %offset_tbl_ptr.i.i5.i934.i = getelementptr i8, ptr %1612, i64 40
  %1619 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %9)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %10)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %11)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %12)
  %hash_coef.i.i17.i1283.i = load i64, ptr %hash_coef_ptr.i.i3.i932.i, align 4, !noalias !23
  %tbl_size.i.i18.i1284.i = load i64, ptr %tbl_size_ptr.i.i4.i933.i, align 4, !noalias !23
  %offset_tbl.i.i19.i1285.i = load ptr, ptr %offset_tbl_ptr.i.i5.i934.i, align 8, !noalias !23
  %product.i.i.i20.i1286.i = mul i64 %hash_coef.i.i17.i1283.i, 4015701072841558310
  %shifted.i.i.i21.i1287.i = lshr i64 %product.i.i.i20.i1286.i, 32
  %xored.i.i.i22.i1288.i = xor i64 %shifted.i.i.i21.i1287.i, %product.i.i.i20.i1286.i
  %hash.i.i.i23.i1289.i = and i64 %xored.i.i.i22.i1288.i, %tbl_size.i.i18.i1284.i
  %offset_ptr.i.i24.i1290.i = getelementptr i32, ptr %offset_tbl.i.i19.i1285.i, i64 %hash.i.i.i23.i1289.i
  %offset.i.i39.i1291.i = load i32, ptr %offset_ptr.i.i24.i1290.i, align 4, !noalias !468
  %1620 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1621 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1622 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %1623

1623:                                             ; preds = %.cont.i1314.i, %1615
  %.0308.i1292.i = phi i32 [ 0, %1615 ], [ %1656, %.cont.i1314.i ]
  %.070307.i1293.i = phi i1 [ true, %1615 ], [ %1657, %.cont.i1314.i ]
  %.sroa.0.0306.i1294.i = phi ptr [ %1612, %1615 ], [ %1646, %.cont.i1314.i ]
  %.sroa.6.0305.i1295.in.i = phi i64 [ %1617, %1615 ], [ %1648, %.cont.i1314.i ]
  %.sroa.12.0304.i1296.in.i = phi i64 [ %1618, %1615 ], [ %1649, %.cont.i1314.i ]
  %.sroa.17.0303.i1297.i = phi i32 [ %offset.i.i39.i1291.i, %1615 ], [ %offset.i.i71.i1328.i, %.cont.i1314.i ]
  %.sroa.12.0304.i1296.i = inttoptr i64 %.sroa.12.0304.i1296.in.i to ptr
  %.sroa.6.0305.i1295.i = inttoptr i64 %.sroa.6.0305.i1295.in.i to ptr
  %1624 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1294.i, 0
  %1625 = insertvalue { ptr, ptr, ptr, i32 } %1624, ptr %.sroa.6.0305.i1295.i, 1
  %1626 = insertvalue { ptr, ptr, ptr, i32 } %1625, ptr %.sroa.12.0304.i1296.i, 2
  %1627 = insertvalue { ptr, ptr, ptr, i32 } %1626, i32 %.sroa.17.0303.i1297.i, 3
  %1628 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1294.i)
  %1629 = sext i32 %.sroa.17.0303.i1297.i to i64
  %1630 = getelementptr ptr, ptr %.sroa.0.0306.i1294.i, i64 %1629
  %1631 = getelementptr i8, ptr %1630, i64 64
  %1632 = load ptr, ptr %1631, align 8
  %result.i43.i1298.i = call ptr %1632({ ptr, ptr, ptr, i32 } %1627, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %1633 = call i32 %result.i43.i1298.i({ ptr, ptr, ptr, i32 } %1627, { ptr, ptr, ptr, i32 } %1627, ptr nonnull align 8 %0) #42
  %..i1299.i = select i1 %.070307.i1293.i, ptr %9, ptr %11
  %.184.i1300.i = select i1 %.070307.i1293.i, i64 104, i64 112
  %.185.i1301.i = select i1 %.070307.i1293.i, ptr %10, ptr %12
  %.186.i1302.i = select i1 %.070307.i1293.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1299.i, align 8
  %1634 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1299.i)
  %1635 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1300.i
  %1636 = load ptr, ptr %1635, align 8
  store ptr @i32_typ, ptr %.185.i1301.i, align 8
  %result.i44.i1303.i = call ptr %1636({ ptr, ptr, ptr, i32 } %1050, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1301.i) #45
  %1637 = call i32 %result.i44.i1303.i({ ptr, ptr, ptr, i32 } %1050, { ptr, ptr, ptr, i32 } %1050, ptr nonnull align 8 dereferenceable(8) %..i1299.i, i32 %1633) #42
  %1638 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1639 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1302.i
  %1640 = load ptr, ptr %1639, align 8
  %1641 = load ptr, ptr %1640, align 8
  %1642 = call { ptr } %1641(ptr nonnull %result.i9.i7) #40
  %.fca.0.extract53.i1304.i = extractvalue { ptr } %1642, 0
  %1643 = sext i32 %1637 to i64
  %1644 = shl nsw i64 %1643, 5
  %1645 = getelementptr i8, ptr %.fca.0.extract53.i1304.i, i64 %1644
  %1646 = load ptr, ptr %1645, align 8
  %1647 = getelementptr i8, ptr %1645, i64 8
  %1648 = load i64, ptr %1647, align 4
  %.sroa_idx.i1305.i = getelementptr i8, ptr %1645, i64 16
  %1649 = load i64, ptr %.sroa_idx.i1305.i, align 4
  %1650 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1651 = call { ptr } %1641(ptr nonnull %result.i9.i7) #40
  %.fca.0.extract51.i1306.i = extractvalue { ptr } %1651, 0
  %1652 = getelementptr i8, ptr %.fca.0.extract51.i1306.i, i64 %1644
  store ptr %.sroa.0.0306.i1294.i, ptr %1652, align 8
  %1653 = getelementptr i8, ptr %1652, i64 8
  store i64 %.sroa.6.0305.i1295.in.i, ptr %1653, align 4
  %.sroa_idx100.i1307.i = getelementptr i8, ptr %1652, i64 16
  store i64 %.sroa.12.0304.i1296.in.i, ptr %.sroa_idx100.i1307.i, align 4
  %.sroa_idx101.i1308.i = getelementptr i8, ptr %1652, i64 24
  store i32 %.sroa.17.0303.i1297.i, ptr %.sroa_idx101.i1308.i, align 4
  %1654 = icmp ne ptr %1646, @nil_typ
  %1655 = icmp ne ptr %1646, null
  %.not90.i1309.i = and i1 %1654, %1655
  br i1 %.not90.i1309.i, label %.cont.i1314.i, label %1661

.cont.i1314.i:                                    ; preds = %1623
  %1656 = add nuw nsw i32 %.0308.i1292.i, 1
  %1657 = xor i1 %.070307.i1293.i, true
  %hash_coef_ptr.i.i60.i1317.i = getelementptr i8, ptr %1646, i64 8
  %tbl_size_ptr.i.i61.i1318.i = getelementptr i8, ptr %1646, i64 16
  %offset_tbl_ptr.i.i62.i1319.i = getelementptr i8, ptr %1646, i64 40
  %hash_coef.i.i63.i1320.i = load i64, ptr %hash_coef_ptr.i.i60.i1317.i, align 4
  %tbl_size.i.i64.i1321.i = load i64, ptr %tbl_size_ptr.i.i61.i1318.i, align 4
  %offset_tbl.i.i65.i1322.i = load ptr, ptr %offset_tbl_ptr.i.i62.i1319.i, align 8
  %product.i.i.i66.i1323.i = mul i64 %hash_coef.i.i63.i1320.i, 4015701072841558310
  %shifted.i.i.i67.i1324.i = lshr i64 %product.i.i.i66.i1323.i, 32
  %xored.i.i.i68.i1325.i = xor i64 %shifted.i.i.i67.i1324.i, %product.i.i.i66.i1323.i
  %hash.i.i.i69.i1326.i = and i64 %xored.i.i.i68.i1325.i, %tbl_size.i.i64.i1321.i
  %offset_ptr.i.i70.i1327.i = getelementptr i32, ptr %offset_tbl.i.i65.i1322.i, i64 %hash.i.i.i69.i1326.i
  %offset.i.i71.i1328.i = load i32, ptr %offset_ptr.i.i70.i1327.i, align 4
  %1658 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1659 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1660 = icmp ult i32 %.0308.i1292.i, 99
  br i1 %1660, label %1623, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1337.i

1661:                                             ; preds = %1623
  %1662 = load i32, ptr %1046, align 4
  %1663 = add i32 %1662, 1
  %1664 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1663, ptr %1046, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1337.i

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1337.i: ; preds = %.cont.i1314.i, %1661
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %9)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %10)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %11)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %12)
  br label %._crit_edge.i930.i

._crit_edge.i930.i:                               ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1337.i, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit913.i
  %1665 = add nuw nsw i32 %.045.i928.i, 1
  %1666 = icmp slt i32 %1665, %1546
  br i1 %1666, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit913.i, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948.i

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948.i: ; preds = %._crit_edge.i930.i, %1542
  %1667 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %25)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %26)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %27)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %28)
  %hash_coef.i.i17.i495.i = load i64, ptr %hash_coef_ptr.i.i60.i.i90, align 4, !noalias !23
  %tbl_size.i.i18.i496.i = load i64, ptr %tbl_size_ptr.i.i61.i.i91, align 4, !noalias !23
  %offset_tbl.i.i19.i497.i = load ptr, ptr %offset_tbl_ptr.i.i62.i.i92, align 8, !noalias !23
  %product.i.i.i20.i498.i = mul i64 %hash_coef.i.i17.i495.i, 4015701072841558310
  %shifted.i.i.i21.i499.i = lshr i64 %product.i.i.i20.i498.i, 32
  %xored.i.i.i22.i500.i = xor i64 %shifted.i.i.i21.i499.i, %product.i.i.i20.i498.i
  %hash.i.i.i23.i501.i = and i64 %xored.i.i.i22.i500.i, %tbl_size.i.i18.i496.i
  %offset_ptr.i.i24.i502.i = getelementptr i32, ptr %offset_tbl.i.i19.i497.i, i64 %hash.i.i.i23.i501.i
  %offset.i.i39.i503.i = load i32, ptr %offset_ptr.i.i24.i502.i, align 4, !noalias !471
  %1668 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1669 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1670 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %1671

1671:                                             ; preds = %.cont.i527.i, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948.i
  %.0308.i505.i = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948.i ], [ %1704, %.cont.i527.i ]
  %.070307.i506.i = phi i1 [ true, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948.i ], [ %1705, %.cont.i527.i ]
  %.sroa.0.0306.i507.i = phi ptr [ %1522, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948.i ], [ %1694, %.cont.i527.i ]
  %.sroa.6.0305.i508.in.i = phi i64 [ %1524, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948.i ], [ %1696, %.cont.i527.i ]
  %.sroa.12.0304.i509.in.i = phi i64 [ %1525, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948.i ], [ %1697, %.cont.i527.i ]
  %.sroa.17.0303.i510.i = phi i32 [ %offset.i.i39.i503.i, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit948.i ], [ %offset.i.i71.i541.i, %.cont.i527.i ]
  %.sroa.12.0304.i509.i = inttoptr i64 %.sroa.12.0304.i509.in.i to ptr
  %.sroa.6.0305.i508.i = inttoptr i64 %.sroa.6.0305.i508.in.i to ptr
  %1672 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i507.i, 0
  %1673 = insertvalue { ptr, ptr, ptr, i32 } %1672, ptr %.sroa.6.0305.i508.i, 1
  %1674 = insertvalue { ptr, ptr, ptr, i32 } %1673, ptr %.sroa.12.0304.i509.i, 2
  %1675 = insertvalue { ptr, ptr, ptr, i32 } %1674, i32 %.sroa.17.0303.i510.i, 3
  %1676 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i507.i)
  %1677 = sext i32 %.sroa.17.0303.i510.i to i64
  %1678 = getelementptr ptr, ptr %.sroa.0.0306.i507.i, i64 %1677
  %1679 = getelementptr i8, ptr %1678, i64 64
  %1680 = load ptr, ptr %1679, align 8
  %result.i43.i511.i = call ptr %1680({ ptr, ptr, ptr, i32 } %1675, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %1681 = call i32 %result.i43.i511.i({ ptr, ptr, ptr, i32 } %1675, { ptr, ptr, ptr, i32 } %1675, ptr nonnull align 8 %0) #42
  %..i512.i = select i1 %.070307.i506.i, ptr %25, ptr %27
  %.184.i513.i = select i1 %.070307.i506.i, i64 104, i64 112
  %.185.i514.i = select i1 %.070307.i506.i, ptr %26, ptr %28
  %.186.i515.i = select i1 %.070307.i506.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i512.i, align 8
  %1682 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i512.i)
  %1683 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i513.i
  %1684 = load ptr, ptr %1683, align 8
  store ptr @i32_typ, ptr %.185.i514.i, align 8
  %result.i44.i516.i = call ptr %1684({ ptr, ptr, ptr, i32 } %1049, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i514.i) #45
  %1685 = call i32 %result.i44.i516.i({ ptr, ptr, ptr, i32 } %1049, { ptr, ptr, ptr, i32 } %1049, ptr nonnull align 8 dereferenceable(8) %..i512.i, i32 %1681) #42
  %1686 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1687 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i515.i
  %1688 = load ptr, ptr %1687, align 8
  %1689 = load ptr, ptr %1688, align 8
  %1690 = call { ptr } %1689(ptr nonnull %result.i9.i7) #40
  %.fca.0.extract53.i517.i = extractvalue { ptr } %1690, 0
  %1691 = sext i32 %1685 to i64
  %1692 = shl nsw i64 %1691, 5
  %1693 = getelementptr i8, ptr %.fca.0.extract53.i517.i, i64 %1692
  %1694 = load ptr, ptr %1693, align 8
  %1695 = getelementptr i8, ptr %1693, i64 8
  %1696 = load i64, ptr %1695, align 4
  %.sroa_idx.i518.i = getelementptr i8, ptr %1693, i64 16
  %1697 = load i64, ptr %.sroa_idx.i518.i, align 4
  %1698 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1699 = call { ptr } %1689(ptr nonnull %result.i9.i7) #40
  %.fca.0.extract51.i519.i = extractvalue { ptr } %1699, 0
  %1700 = getelementptr i8, ptr %.fca.0.extract51.i519.i, i64 %1692
  store ptr %.sroa.0.0306.i507.i, ptr %1700, align 8
  %1701 = getelementptr i8, ptr %1700, i64 8
  store i64 %.sroa.6.0305.i508.in.i, ptr %1701, align 4
  %.sroa_idx100.i520.i = getelementptr i8, ptr %1700, i64 16
  store i64 %.sroa.12.0304.i509.in.i, ptr %.sroa_idx100.i520.i, align 4
  %.sroa_idx101.i521.i = getelementptr i8, ptr %1700, i64 24
  store i32 %.sroa.17.0303.i510.i, ptr %.sroa_idx101.i521.i, align 4
  %1702 = icmp ne ptr %1694, @nil_typ
  %1703 = icmp ne ptr %1694, null
  %.not90.i522.i = and i1 %1702, %1703
  br i1 %.not90.i522.i, label %.cont.i527.i, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit550.i

.cont.i527.i:                                     ; preds = %1671
  %1704 = add nuw nsw i32 %.0308.i505.i, 1
  %1705 = xor i1 %.070307.i506.i, true
  %hash_coef_ptr.i.i60.i530.i = getelementptr i8, ptr %1694, i64 8
  %tbl_size_ptr.i.i61.i531.i = getelementptr i8, ptr %1694, i64 16
  %offset_tbl_ptr.i.i62.i532.i = getelementptr i8, ptr %1694, i64 40
  %hash_coef.i.i63.i533.i = load i64, ptr %hash_coef_ptr.i.i60.i530.i, align 4
  %tbl_size.i.i64.i534.i = load i64, ptr %tbl_size_ptr.i.i61.i531.i, align 4
  %offset_tbl.i.i65.i535.i = load ptr, ptr %offset_tbl_ptr.i.i62.i532.i, align 8
  %product.i.i.i66.i536.i = mul i64 %hash_coef.i.i63.i533.i, 4015701072841558310
  %shifted.i.i.i67.i537.i = lshr i64 %product.i.i.i66.i536.i, 32
  %xored.i.i.i68.i538.i = xor i64 %shifted.i.i.i67.i537.i, %product.i.i.i66.i536.i
  %hash.i.i.i69.i539.i = and i64 %xored.i.i.i68.i538.i, %tbl_size.i.i64.i534.i
  %offset_ptr.i.i70.i540.i = getelementptr i32, ptr %offset_tbl.i.i65.i535.i, i64 %hash.i.i.i69.i539.i
  %offset.i.i71.i541.i = load i32, ptr %offset_ptr.i.i70.i540.i, align 4
  %1706 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1707 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1708 = icmp ult i32 %.0308.i505.i, 99
  br i1 %1708, label %1671, label %1712

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit550.i: ; preds = %1671
  %1709 = load i32, ptr %1046, align 4
  %1710 = add i32 %1709, 1
  %1711 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1710, ptr %1046, align 4
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %25)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %26)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %27)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %28)
  br label %CuckooMap_insert_keyK_valueV.exit.i42

1712:                                             ; preds = %.cont.i527.i
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %25)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %26)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %27)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %28)
  %1713 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1714 = load ptr, ptr %1044, align 8
  %1715 = load ptr, ptr %1045, align 8
  %1716 = load i32, ptr %1043, align 8
  %1717 = shl i32 %1716, 1
  %spec.select.i566.i = call i32 @llvm.smax.i32(i32 %1717, i32 noundef 16) #37
  store i32 %spec.select.i566.i, ptr %1043, align 8
  %1718 = zext nneg i32 %spec.select.i566.i to i64
  %1719 = shl nuw nsw i64 %1718, 5
  %result.i.i567.i = call noalias ptr @bump_malloc_inner(i64 noundef %1719, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i567.i, ptr %1044, align 8
  %result.i1.i568.i = call noalias ptr @bump_malloc_inner(i64 noundef %1719, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i1.i568.i, ptr %1045, align 8
  store i32 0, ptr %1046, align 4
  %1720 = icmp sgt i32 %1716, 0
  br i1 %1720, label %.lr.ph.i950.i, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit983.thread.i

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit983.thread.i: ; preds = %1712
  %1721 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %CuckooMap_insert_keyK_valueV.exit.i42

.lr.ph.i950.i:                                    ; preds = %1712, %._crit_edge.i965.i
  %.045.i963.i = phi i32 [ %1778, %._crit_edge.i965.i ], [ 0, %1712 ]
  %1722 = zext nneg i32 %.045.i963.i to i64
  %1723 = shl nuw nsw i64 %1722, 5
  %1724 = getelementptr i8, ptr %1714, i64 %1723
  %1725 = load ptr, ptr %1724, align 8
  %1726 = icmp ne ptr %1725, @nil_typ
  %1727 = icmp ne ptr %1725, null
  %.not16.i964.i = and i1 %1726, %1727
  br i1 %.not16.i964.i, label %1728, label %._crit_edge.i965.i

1728:                                             ; preds = %.lr.ph.i950.i
  %1729 = getelementptr i8, ptr %1724, i64 8
  %1730 = load i64, ptr %1729, align 4
  %.sroa_idx.i966.i = getelementptr i8, ptr %1724, i64 16
  %1731 = load i64, ptr %.sroa_idx.i966.i, align 4
  %hash_coef_ptr.i.i3.i967.i = getelementptr i8, ptr %1725, i64 8
  %tbl_size_ptr.i.i4.i968.i = getelementptr i8, ptr %1725, i64 16
  %offset_tbl_ptr.i.i5.i969.i = getelementptr i8, ptr %1725, i64 40
  %1732 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %5)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %6)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %7)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %8)
  %hash_coef.i.i17.i1355.i = load i64, ptr %hash_coef_ptr.i.i3.i967.i, align 4, !noalias !23
  %tbl_size.i.i18.i1356.i = load i64, ptr %tbl_size_ptr.i.i4.i968.i, align 4, !noalias !23
  %offset_tbl.i.i19.i1357.i = load ptr, ptr %offset_tbl_ptr.i.i5.i969.i, align 8, !noalias !23
  %product.i.i.i20.i1358.i = mul i64 %hash_coef.i.i17.i1355.i, 4015701072841558310
  %shifted.i.i.i21.i1359.i = lshr i64 %product.i.i.i20.i1358.i, 32
  %xored.i.i.i22.i1360.i = xor i64 %shifted.i.i.i21.i1359.i, %product.i.i.i20.i1358.i
  %hash.i.i.i23.i1361.i = and i64 %xored.i.i.i22.i1360.i, %tbl_size.i.i18.i1356.i
  %offset_ptr.i.i24.i1362.i = getelementptr i32, ptr %offset_tbl.i.i19.i1357.i, i64 %hash.i.i.i23.i1361.i
  %offset.i.i39.i1363.i = load i32, ptr %offset_ptr.i.i24.i1362.i, align 4, !noalias !474
  %1733 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1734 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1735 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %1736

1736:                                             ; preds = %.cont.i1386.i, %1728
  %.0308.i1364.i = phi i32 [ 0, %1728 ], [ %1769, %.cont.i1386.i ]
  %.070307.i1365.i = phi i1 [ true, %1728 ], [ %1770, %.cont.i1386.i ]
  %.sroa.0.0306.i1366.i = phi ptr [ %1725, %1728 ], [ %1759, %.cont.i1386.i ]
  %.sroa.6.0305.i1367.in.i = phi i64 [ %1730, %1728 ], [ %1761, %.cont.i1386.i ]
  %.sroa.12.0304.i1368.in.i = phi i64 [ %1731, %1728 ], [ %1762, %.cont.i1386.i ]
  %.sroa.17.0303.i1369.i = phi i32 [ %offset.i.i39.i1363.i, %1728 ], [ %offset.i.i71.i1400.i, %.cont.i1386.i ]
  %.sroa.12.0304.i1368.i = inttoptr i64 %.sroa.12.0304.i1368.in.i to ptr
  %.sroa.6.0305.i1367.i = inttoptr i64 %.sroa.6.0305.i1367.in.i to ptr
  %1737 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1366.i, 0
  %1738 = insertvalue { ptr, ptr, ptr, i32 } %1737, ptr %.sroa.6.0305.i1367.i, 1
  %1739 = insertvalue { ptr, ptr, ptr, i32 } %1738, ptr %.sroa.12.0304.i1368.i, 2
  %1740 = insertvalue { ptr, ptr, ptr, i32 } %1739, i32 %.sroa.17.0303.i1369.i, 3
  %1741 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1366.i)
  %1742 = sext i32 %.sroa.17.0303.i1369.i to i64
  %1743 = getelementptr ptr, ptr %.sroa.0.0306.i1366.i, i64 %1742
  %1744 = getelementptr i8, ptr %1743, i64 64
  %1745 = load ptr, ptr %1744, align 8
  %result.i43.i1370.i = call ptr %1745({ ptr, ptr, ptr, i32 } %1740, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %1746 = call i32 %result.i43.i1370.i({ ptr, ptr, ptr, i32 } %1740, { ptr, ptr, ptr, i32 } %1740, ptr nonnull align 8 %0) #42
  %..i1371.i = select i1 %.070307.i1365.i, ptr %5, ptr %7
  %.184.i1372.i = select i1 %.070307.i1365.i, i64 104, i64 112
  %.185.i1373.i = select i1 %.070307.i1365.i, ptr %6, ptr %8
  %.186.i1374.i = select i1 %.070307.i1365.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1371.i, align 8
  %1747 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1371.i)
  %1748 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1372.i
  %1749 = load ptr, ptr %1748, align 8
  store ptr @i32_typ, ptr %.185.i1373.i, align 8
  %result.i44.i1375.i = call ptr %1749({ ptr, ptr, ptr, i32 } %1050, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1373.i) #45
  %1750 = call i32 %result.i44.i1375.i({ ptr, ptr, ptr, i32 } %1050, { ptr, ptr, ptr, i32 } %1050, ptr nonnull align 8 dereferenceable(8) %..i1371.i, i32 %1746) #42
  %1751 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1752 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1374.i
  %1753 = load ptr, ptr %1752, align 8
  %1754 = load ptr, ptr %1753, align 8
  %1755 = call { ptr } %1754(ptr nonnull %result.i9.i7) #40
  %.fca.0.extract53.i1376.i = extractvalue { ptr } %1755, 0
  %1756 = sext i32 %1750 to i64
  %1757 = shl nsw i64 %1756, 5
  %1758 = getelementptr i8, ptr %.fca.0.extract53.i1376.i, i64 %1757
  %1759 = load ptr, ptr %1758, align 8
  %1760 = getelementptr i8, ptr %1758, i64 8
  %1761 = load i64, ptr %1760, align 4
  %.sroa_idx.i1377.i = getelementptr i8, ptr %1758, i64 16
  %1762 = load i64, ptr %.sroa_idx.i1377.i, align 4
  %1763 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1764 = call { ptr } %1754(ptr nonnull %result.i9.i7) #40
  %.fca.0.extract51.i1378.i = extractvalue { ptr } %1764, 0
  %1765 = getelementptr i8, ptr %.fca.0.extract51.i1378.i, i64 %1757
  store ptr %.sroa.0.0306.i1366.i, ptr %1765, align 8
  %1766 = getelementptr i8, ptr %1765, i64 8
  store i64 %.sroa.6.0305.i1367.in.i, ptr %1766, align 4
  %.sroa_idx100.i1379.i = getelementptr i8, ptr %1765, i64 16
  store i64 %.sroa.12.0304.i1368.in.i, ptr %.sroa_idx100.i1379.i, align 4
  %.sroa_idx101.i1380.i = getelementptr i8, ptr %1765, i64 24
  store i32 %.sroa.17.0303.i1369.i, ptr %.sroa_idx101.i1380.i, align 4
  %1767 = icmp ne ptr %1759, @nil_typ
  %1768 = icmp ne ptr %1759, null
  %.not90.i1381.i = and i1 %1767, %1768
  br i1 %.not90.i1381.i, label %.cont.i1386.i, label %1774

.cont.i1386.i:                                    ; preds = %1736
  %1769 = add nuw nsw i32 %.0308.i1364.i, 1
  %1770 = xor i1 %.070307.i1365.i, true
  %hash_coef_ptr.i.i60.i1389.i = getelementptr i8, ptr %1759, i64 8
  %tbl_size_ptr.i.i61.i1390.i = getelementptr i8, ptr %1759, i64 16
  %offset_tbl_ptr.i.i62.i1391.i = getelementptr i8, ptr %1759, i64 40
  %hash_coef.i.i63.i1392.i = load i64, ptr %hash_coef_ptr.i.i60.i1389.i, align 4
  %tbl_size.i.i64.i1393.i = load i64, ptr %tbl_size_ptr.i.i61.i1390.i, align 4
  %offset_tbl.i.i65.i1394.i = load ptr, ptr %offset_tbl_ptr.i.i62.i1391.i, align 8
  %product.i.i.i66.i1395.i = mul i64 %hash_coef.i.i63.i1392.i, 4015701072841558310
  %shifted.i.i.i67.i1396.i = lshr i64 %product.i.i.i66.i1395.i, 32
  %xored.i.i.i68.i1397.i = xor i64 %shifted.i.i.i67.i1396.i, %product.i.i.i66.i1395.i
  %hash.i.i.i69.i1398.i = and i64 %xored.i.i.i68.i1397.i, %tbl_size.i.i64.i1393.i
  %offset_ptr.i.i70.i1399.i = getelementptr i32, ptr %offset_tbl.i.i65.i1394.i, i64 %hash.i.i.i69.i1398.i
  %offset.i.i71.i1400.i = load i32, ptr %offset_ptr.i.i70.i1399.i, align 4
  %1771 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1772 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1773 = icmp ult i32 %.0308.i1364.i, 99
  br i1 %1773, label %1736, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1409.i

1774:                                             ; preds = %1736
  %1775 = load i32, ptr %1046, align 4
  %1776 = add i32 %1775, 1
  %1777 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1776, ptr %1046, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1409.i

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1409.i: ; preds = %.cont.i1386.i, %1774
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %6)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %8)
  br label %._crit_edge.i965.i

._crit_edge.i965.i:                               ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1409.i, %.lr.ph.i950.i
  %1778 = add nuw nsw i32 %.045.i963.i, 1
  %1779 = icmp slt i32 %1778, %1716
  br i1 %1779, label %.lr.ph.i950.i, label %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit983.i

CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit983.i: ; preds = %._crit_edge.i965.i
  %1780 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  br label %1781

1781:                                             ; preds = %._crit_edge.i1000.i, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit983.i
  %.045.i998.i = phi i32 [ 0, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit983.i ], [ %1838, %._crit_edge.i1000.i ]
  %1782 = zext nneg i32 %.045.i998.i to i64
  %1783 = shl nuw nsw i64 %1782, 5
  %1784 = getelementptr i8, ptr %1715, i64 %1783
  %1785 = load ptr, ptr %1784, align 8
  %1786 = icmp ne ptr %1785, @nil_typ
  %1787 = icmp ne ptr %1785, null
  %.not16.i999.i = and i1 %1786, %1787
  br i1 %.not16.i999.i, label %1788, label %._crit_edge.i1000.i

1788:                                             ; preds = %1781
  %1789 = getelementptr i8, ptr %1784, i64 8
  %1790 = load i64, ptr %1789, align 4
  %.sroa_idx.i1001.i = getelementptr i8, ptr %1784, i64 16
  %1791 = load i64, ptr %.sroa_idx.i1001.i, align 4
  %hash_coef_ptr.i.i3.i1002.i = getelementptr i8, ptr %1785, i64 8
  %tbl_size_ptr.i.i4.i1003.i = getelementptr i8, ptr %1785, i64 16
  %offset_tbl_ptr.i.i5.i1004.i = getelementptr i8, ptr %1785, i64 40
  %1792 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %2)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %3)
  call void @llvm.lifetime.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %4)
  %hash_coef.i.i17.i1427.i = load i64, ptr %hash_coef_ptr.i.i3.i1002.i, align 4, !noalias !23
  %tbl_size.i.i18.i1428.i = load i64, ptr %tbl_size_ptr.i.i4.i1003.i, align 4, !noalias !23
  %offset_tbl.i.i19.i1429.i = load ptr, ptr %offset_tbl_ptr.i.i5.i1004.i, align 8, !noalias !23
  %product.i.i.i20.i1430.i = mul i64 %hash_coef.i.i17.i1427.i, 4015701072841558310
  %shifted.i.i.i21.i1431.i = lshr i64 %product.i.i.i20.i1430.i, 32
  %xored.i.i.i22.i1432.i = xor i64 %shifted.i.i.i21.i1431.i, %product.i.i.i20.i1430.i
  %hash.i.i.i23.i1433.i = and i64 %xored.i.i.i22.i1432.i, %tbl_size.i.i18.i1428.i
  %offset_ptr.i.i24.i1434.i = getelementptr i32, ptr %offset_tbl.i.i19.i1429.i, i64 %hash.i.i.i23.i1433.i
  %offset.i.i39.i1435.i = load i32, ptr %offset_ptr.i.i24.i1434.i, align 4, !noalias !477
  %1793 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1794 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1795 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %1796

1796:                                             ; preds = %.cont.i1458.i, %1788
  %.0308.i1436.i = phi i32 [ 0, %1788 ], [ %1829, %.cont.i1458.i ]
  %.070307.i1437.i = phi i1 [ true, %1788 ], [ %1830, %.cont.i1458.i ]
  %.sroa.0.0306.i1438.i = phi ptr [ %1785, %1788 ], [ %1819, %.cont.i1458.i ]
  %.sroa.6.0305.i1439.in.i = phi i64 [ %1790, %1788 ], [ %1821, %.cont.i1458.i ]
  %.sroa.12.0304.i1440.in.i = phi i64 [ %1791, %1788 ], [ %1822, %.cont.i1458.i ]
  %.sroa.17.0303.i1441.i = phi i32 [ %offset.i.i39.i1435.i, %1788 ], [ %offset.i.i71.i1472.i, %.cont.i1458.i ]
  %.sroa.12.0304.i1440.i = inttoptr i64 %.sroa.12.0304.i1440.in.i to ptr
  %.sroa.6.0305.i1439.i = inttoptr i64 %.sroa.6.0305.i1439.in.i to ptr
  %1797 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306.i1438.i, 0
  %1798 = insertvalue { ptr, ptr, ptr, i32 } %1797, ptr %.sroa.6.0305.i1439.i, 1
  %1799 = insertvalue { ptr, ptr, ptr, i32 } %1798, ptr %.sroa.12.0304.i1440.i, 2
  %1800 = insertvalue { ptr, ptr, ptr, i32 } %1799, i32 %.sroa.17.0303.i1441.i, 3
  %1801 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306.i1438.i)
  %1802 = sext i32 %.sroa.17.0303.i1441.i to i64
  %1803 = getelementptr ptr, ptr %.sroa.0.0306.i1438.i, i64 %1802
  %1804 = getelementptr i8, ptr %1803, i64 64
  %1805 = load ptr, ptr %1804, align 8
  %result.i43.i1442.i = call ptr %1805({ ptr, ptr, ptr, i32 } %1800, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %1806 = call i32 %result.i43.i1442.i({ ptr, ptr, ptr, i32 } %1800, { ptr, ptr, ptr, i32 } %1800, ptr nonnull align 8 %0) #42
  %..i1443.i = select i1 %.070307.i1437.i, ptr %1, ptr %3
  %.184.i1444.i = select i1 %.070307.i1437.i, i64 104, i64 112
  %.185.i1445.i = select i1 %.070307.i1437.i, ptr %2, ptr %4
  %.186.i1446.i = select i1 %.070307.i1437.i, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %..i1443.i, align 8
  %1807 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %..i1443.i)
  %1808 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.184.i1444.i
  %1809 = load ptr, ptr %1808, align 8
  store ptr @i32_typ, ptr %.185.i1445.i, align 8
  %result.i44.i1447.i = call ptr %1809({ ptr, ptr, ptr, i32 } %1050, ptr nocapture nofree noundef nonnull readonly align 8 %.185.i1445.i) #45
  %1810 = call i32 %result.i44.i1447.i({ ptr, ptr, ptr, i32 } %1050, { ptr, ptr, ptr, i32 } %1050, ptr nonnull align 8 dereferenceable(8) %..i1443.i, i32 %1806) #42
  %1811 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1812 = getelementptr i8, ptr getelementptr inbounds (i8, ptr @CuckooMap, i64 80), i64 %.186.i1446.i
  %1813 = load ptr, ptr %1812, align 8
  %1814 = load ptr, ptr %1813, align 8
  %1815 = call { ptr } %1814(ptr nonnull %result.i9.i7) #40
  %.fca.0.extract53.i1448.i = extractvalue { ptr } %1815, 0
  %1816 = sext i32 %1810 to i64
  %1817 = shl nsw i64 %1816, 5
  %1818 = getelementptr i8, ptr %.fca.0.extract53.i1448.i, i64 %1817
  %1819 = load ptr, ptr %1818, align 8
  %1820 = getelementptr i8, ptr %1818, i64 8
  %1821 = load i64, ptr %1820, align 4
  %.sroa_idx.i1449.i = getelementptr i8, ptr %1818, i64 16
  %1822 = load i64, ptr %.sroa_idx.i1449.i, align 4
  %1823 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1824 = call { ptr } %1814(ptr nonnull %result.i9.i7) #40
  %.fca.0.extract51.i1450.i = extractvalue { ptr } %1824, 0
  %1825 = getelementptr i8, ptr %.fca.0.extract51.i1450.i, i64 %1817
  store ptr %.sroa.0.0306.i1438.i, ptr %1825, align 8
  %1826 = getelementptr i8, ptr %1825, i64 8
  store i64 %.sroa.6.0305.i1439.in.i, ptr %1826, align 4
  %.sroa_idx100.i1451.i = getelementptr i8, ptr %1825, i64 16
  store i64 %.sroa.12.0304.i1440.in.i, ptr %.sroa_idx100.i1451.i, align 4
  %.sroa_idx101.i1452.i = getelementptr i8, ptr %1825, i64 24
  store i32 %.sroa.17.0303.i1441.i, ptr %.sroa_idx101.i1452.i, align 4
  %1827 = icmp ne ptr %1819, @nil_typ
  %1828 = icmp ne ptr %1819, null
  %.not90.i1453.i = and i1 %1827, %1828
  br i1 %.not90.i1453.i, label %.cont.i1458.i, label %1834

.cont.i1458.i:                                    ; preds = %1796
  %1829 = add nuw nsw i32 %.0308.i1436.i, 1
  %1830 = xor i1 %.070307.i1437.i, true
  %hash_coef_ptr.i.i60.i1461.i = getelementptr i8, ptr %1819, i64 8
  %tbl_size_ptr.i.i61.i1462.i = getelementptr i8, ptr %1819, i64 16
  %offset_tbl_ptr.i.i62.i1463.i = getelementptr i8, ptr %1819, i64 40
  %hash_coef.i.i63.i1464.i = load i64, ptr %hash_coef_ptr.i.i60.i1461.i, align 4
  %tbl_size.i.i64.i1465.i = load i64, ptr %tbl_size_ptr.i.i61.i1462.i, align 4
  %offset_tbl.i.i65.i1466.i = load ptr, ptr %offset_tbl_ptr.i.i62.i1463.i, align 8
  %product.i.i.i66.i1467.i = mul i64 %hash_coef.i.i63.i1464.i, 4015701072841558310
  %shifted.i.i.i67.i1468.i = lshr i64 %product.i.i.i66.i1467.i, 32
  %xored.i.i.i68.i1469.i = xor i64 %shifted.i.i.i67.i1468.i, %product.i.i.i66.i1467.i
  %hash.i.i.i69.i1470.i = and i64 %xored.i.i.i68.i1469.i, %tbl_size.i.i64.i1465.i
  %offset_ptr.i.i70.i1471.i = getelementptr i32, ptr %offset_tbl.i.i65.i1466.i, i64 %hash.i.i.i69.i1470.i
  %offset.i.i71.i1472.i = load i32, ptr %offset_ptr.i.i70.i1471.i, align 4
  %1831 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %1832 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %1833 = icmp ult i32 %.0308.i1436.i, 99
  br i1 %1833, label %1796, label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1481.i

1834:                                             ; preds = %1796
  %1835 = load i32, ptr %1046, align 4
  %1836 = add i32 %1835, 1
  %1837 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  store i32 %1836, ptr %1046, align 4
  br label %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1481.i

CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1481.i: ; preds = %.cont.i1458.i, %1834
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %4)
  br label %._crit_edge.i1000.i

._crit_edge.i1000.i:                              ; preds = %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit1481.i, %1781
  %1838 = add nuw nsw i32 %.045.i998.i, 1
  %1839 = icmp slt i32 %1838, %1716
  br i1 %1839, label %1781, label %CuckooMap_insert_keyK_valueV.exit.i42

CuckooMap_insert_keyK_valueV.exit.i42:            ; preds = %._crit_edge.i1000.i, %CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32.exit983.thread.i, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit550.i, %CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V.exit.i41, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit418.i, %CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.i131
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1840 = icmp ult i32 %.0106.i, 999999
  br i1 %1840, label %._crit_edge.i15, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %CuckooMap_insert_keyK_valueV.exit.i42
  %1841 = call i64 @clock()
  br label %1842

1842:                                             ; preds = %._crit_edge2.i51, %.lr.ph.i
  %.2112.i = phi i32 [ 0, %.lr.ph.i ], [ %1970, %._crit_edge2.i51 ]
  %.0141111.i = phi i64 [ 0, %.lr.ph.i ], [ %.1142.i, %._crit_edge2.i51 ]
  %.0144110.i = phi i1 [ true, %.lr.ph.i ], [ %.1145.i, %._crit_edge2.i51 ]
  %.sroa.0117.0.insert.ext.i = zext nneg i32 %.2112.i to i160
  %1843 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.0117.0.insert.ext.i, 1
  %1844 = load ptr, ptr %1041, align 8
  %1845 = call i32 %1844({ ptr, i160 } %1843) #42
  %1846 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %1847 = load i32, ptr %1043, align 8
  %1848 = add i32 %1847, -1
  %1849 = and i32 %1848, %1845
  %1850 = load ptr, ptr %1044, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1851 = sext i32 %1849 to i64
  %1852 = shl nsw i64 %1851, 5
  %1853 = getelementptr i8, ptr %1850, i64 %1852
  %1854 = load ptr, ptr %1853, align 8
  %1855 = icmp ne ptr %1854, @nil_typ
  %1856 = icmp ne ptr %1854, null
  %.not44.i.i43 = and i1 %1855, %1856
  br i1 %.not44.i.i43, label %1857, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread.i44

1857:                                             ; preds = %1842
  %1858 = getelementptr i8, ptr %1853, i64 8
  %1859 = load i64, ptr %1858, align 4
  %.sroa_idx.i613.i = getelementptr i8, ptr %1853, i64 16
  %1860 = load i64, ptr %.sroa_idx.i613.i, align 4
  %1861 = inttoptr i64 %1859 to ptr
  %1862 = inttoptr i64 %1860 to ptr
  %hash_coef_ptr.i.i2.i.i72 = getelementptr i8, ptr %1854, i64 8
  %tbl_size_ptr.i.i3.i.i73 = getelementptr i8, ptr %1854, i64 16
  %offset_tbl_ptr.i.i4.i.i74 = getelementptr i8, ptr %1854, i64 40
  %hash_coef.i.i5.i.i75 = load i64, ptr %hash_coef_ptr.i.i2.i.i72, align 4, !noalias !480
  %tbl_size.i.i6.i.i76 = load i64, ptr %tbl_size_ptr.i.i3.i.i73, align 4, !noalias !480
  %offset_tbl.i.i7.i.i77 = load ptr, ptr %offset_tbl_ptr.i.i4.i.i74, align 8, !noalias !480
  %product.i.i.i8.i.i78 = mul i64 %hash_coef.i.i5.i.i75, 4015701072841558310
  %shifted.i.i.i9.i.i79 = lshr i64 %product.i.i.i8.i.i78, 32
  %xored.i.i.i10.i.i80 = xor i64 %shifted.i.i.i9.i.i79, %product.i.i.i8.i.i78
  %hash.i.i.i11.i.i81 = and i64 %xored.i.i.i10.i.i80, %tbl_size.i.i6.i.i76
  %offset_ptr.i.i12.i.i82 = getelementptr i32, ptr %offset_tbl.i.i7.i.i77, i64 %hash.i.i.i11.i.i81
  %offset.i.i13.i.i83 = load i32, ptr %offset_ptr.i.i12.i.i82, align 4, !noalias !480
  %1863 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1854, 0
  %1864 = insertvalue { ptr, ptr, ptr, i32 } %1863, ptr %1861, 1
  %1865 = insertvalue { ptr, ptr, ptr, i32 } %1864, ptr %1862, 2
  %1866 = insertvalue { ptr, ptr, ptr, i32 } %1865, i32 %offset.i.i13.i.i83, 3
  %1867 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0) #37
  %1868 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1854) #37
  %1869 = sext i32 %offset.i.i13.i.i83 to i64
  %1870 = getelementptr ptr, ptr %1854, i64 %1869
  %1871 = getelementptr i8, ptr %1870, i64 64
  %1872 = load ptr, ptr %1871, align 8
  %result.i.i614.i = call ptr %1872({ ptr, ptr, ptr, i32 } %1866, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %1873 = call i32 %result.i.i614.i({ ptr, ptr, ptr, i32 } %1866, { ptr, ptr, ptr, i32 } %1866, ptr nonnull align 8 %0) #42
  %1874 = icmp eq i32 %1873, %1845
  br i1 %1874, label %._crit_edge.i615.i, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread.i44

._crit_edge.i615.i:                               ; preds = %1857
  %1875 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1876 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1854)
  %1877 = getelementptr i8, ptr %1870, i64 48
  %1878 = load ptr, ptr %1877, align 8
  %result.i15.i616.i = call ptr %1878({ ptr, ptr, ptr, i32 } %1866, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %1879 = call { ptr, i160 } %result.i15.i616.i({ ptr, ptr, ptr, i32 } %1866, { ptr, ptr, ptr, i32 } %1866, ptr nonnull align 8 %0) #42
  %1880 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1881 = load ptr, ptr %1042, align 8
  %1882 = call i1 %1881({ ptr, i160 } %1879, { ptr, i160 } %1843) #42
  br i1 %1882, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.i84, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread.i44

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread.i44: ; preds = %._crit_edge.i615.i, %1857, %1842
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  br label %1891

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.i84: ; preds = %._crit_edge.i615.i
  %1883 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1884 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1854)
  %1885 = getelementptr i8, ptr %1870, i64 56
  %1886 = load ptr, ptr %1885, align 8
  %result.i16.i617.i = call ptr %1886({ ptr, ptr, ptr, i32 } %1866, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %1887 = call { ptr, i160 } %result.i16.i617.i({ ptr, ptr, ptr, i32 } %1866, { ptr, ptr, ptr, i32 } %1866, ptr nonnull align 8 %0) #42
  %.fca.0.extract21.i.i85 = extractvalue { ptr, i160 } %1887, 0
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1888 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1889 = icmp ne ptr %.fca.0.extract21.i.i85, @nil_typ
  %1890 = icmp ne ptr %.fca.0.extract21.i.i85, null
  %.not63.i.i86 = and i1 %1889, %1890
  br i1 %.not63.i.i86, label %CuckooMap_get_keyK.exit.i48, label %1891

1891:                                             ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.i84, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.thread.i44
  %1892 = add i32 %1845, 2127912214
  %1893 = shl i32 %1845, 12
  %1894 = add i32 %1892, %1893
  %1895 = ashr i32 %1894, 19
  %1896 = xor i32 %1894, %1895
  %1897 = xor i32 %1896, -949894596
  %1898 = add i32 %1897, 374761393
  %1899 = shl i32 %1897, 5
  %1900 = add i32 %1898, %1899
  %1901 = add i32 %1900, -744332180
  %1902 = shl i32 %1900, 9
  %1903 = xor i32 %1901, %1902
  %1904 = add i32 %1903, -42973499
  %1905 = shl i32 %1903, 3
  %1906 = add i32 %1904, %1905
  %1907 = ashr i32 %1906, 16
  %1908 = xor i32 %1906, %1907
  %1909 = xor i32 %1908, -1252372727
  %1910 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1911 = load i32, ptr %1043, align 8
  %1912 = add i32 %1911, -1
  %1913 = and i32 %1912, %1909
  %1914 = load ptr, ptr %1045, align 8
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1915 = sext i32 %1913 to i64
  %1916 = shl nsw i64 %1915, 5
  %1917 = getelementptr i8, ptr %1914, i64 %1916
  %1918 = load ptr, ptr %1917, align 8
  %1919 = icmp ne ptr %1918, @nil_typ
  %1920 = icmp ne ptr %1918, null
  %.not44.i647.i = and i1 %1919, %1920
  br i1 %.not44.i647.i, label %1921, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit672.i

1921:                                             ; preds = %1891
  %1922 = getelementptr i8, ptr %1917, i64 8
  %1923 = load i64, ptr %1922, align 4
  %.sroa_idx.i652.i = getelementptr i8, ptr %1917, i64 16
  %1924 = load i64, ptr %.sroa_idx.i652.i, align 4
  %1925 = inttoptr i64 %1923 to ptr
  %1926 = inttoptr i64 %1924 to ptr
  %hash_coef_ptr.i.i2.i653.i = getelementptr i8, ptr %1918, i64 8
  %tbl_size_ptr.i.i3.i654.i = getelementptr i8, ptr %1918, i64 16
  %offset_tbl_ptr.i.i4.i655.i = getelementptr i8, ptr %1918, i64 40
  %hash_coef.i.i5.i656.i = load i64, ptr %hash_coef_ptr.i.i2.i653.i, align 4, !noalias !483
  %tbl_size.i.i6.i657.i = load i64, ptr %tbl_size_ptr.i.i3.i654.i, align 4, !noalias !483
  %offset_tbl.i.i7.i658.i = load ptr, ptr %offset_tbl_ptr.i.i4.i655.i, align 8, !noalias !483
  %product.i.i.i8.i659.i = mul i64 %hash_coef.i.i5.i656.i, 4015701072841558310
  %shifted.i.i.i9.i660.i = lshr i64 %product.i.i.i8.i659.i, 32
  %xored.i.i.i10.i661.i = xor i64 %shifted.i.i.i9.i660.i, %product.i.i.i8.i659.i
  %hash.i.i.i11.i662.i = and i64 %xored.i.i.i10.i661.i, %tbl_size.i.i6.i657.i
  %offset_ptr.i.i12.i663.i = getelementptr i32, ptr %offset_tbl.i.i7.i658.i, i64 %hash.i.i.i11.i662.i
  %offset.i.i13.i664.i = load i32, ptr %offset_ptr.i.i12.i663.i, align 4, !noalias !483
  %1927 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %1918, 0
  %1928 = insertvalue { ptr, ptr, ptr, i32 } %1927, ptr %1925, 1
  %1929 = insertvalue { ptr, ptr, ptr, i32 } %1928, ptr %1926, 2
  %1930 = insertvalue { ptr, ptr, ptr, i32 } %1929, i32 %offset.i.i13.i664.i, 3
  %1931 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0) #37
  %1932 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1918) #37
  %1933 = sext i32 %offset.i.i13.i664.i to i64
  %1934 = getelementptr ptr, ptr %1918, i64 %1933
  %1935 = getelementptr i8, ptr %1934, i64 64
  %1936 = load ptr, ptr %1935, align 8
  %result.i.i665.i = call ptr %1936({ ptr, ptr, ptr, i32 } %1930, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %1937 = call i32 %result.i.i665.i({ ptr, ptr, ptr, i32 } %1930, { ptr, ptr, ptr, i32 } %1930, ptr nonnull align 8 %0) #42
  %1938 = icmp eq i32 %1937, %1845
  br i1 %1938, label %._crit_edge.i666.i, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit672.i

._crit_edge.i666.i:                               ; preds = %1921
  %1939 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1940 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1918)
  %1941 = getelementptr i8, ptr %1934, i64 48
  %1942 = load ptr, ptr %1941, align 8
  %result.i15.i667.i = call ptr %1942({ ptr, ptr, ptr, i32 } %1930, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %1943 = call { ptr, i160 } %result.i15.i667.i({ ptr, ptr, ptr, i32 } %1930, { ptr, ptr, ptr, i32 } %1930, ptr nonnull align 8 %0) #42
  %1944 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1945 = load ptr, ptr %1042, align 8
  %1946 = call i1 %1945({ ptr, i160 } %1943, { ptr, i160 } %1843) #42
  br i1 %1946, label %1947, label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit672.i

1947:                                             ; preds = %._crit_edge.i666.i
  %1948 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1949 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %1918)
  %1950 = getelementptr i8, ptr %1934, i64 56
  %1951 = load ptr, ptr %1950, align 8
  %result.i16.i669.i = call ptr %1951({ ptr, ptr, ptr, i32 } %1930, ptr nocapture nofree noundef nonnull readonly align 8 %0) #45
  %1952 = call { ptr, i160 } %result.i16.i669.i({ ptr, ptr, ptr, i32 } %1930, { ptr, ptr, ptr, i32 } %1930, ptr nonnull align 8 %0) #42
  %.fca.0.extract21.i670.i = extractvalue { ptr, i160 } %1952, 0
  %.fca.1.extract22.i671.i = extractvalue { ptr, i160 } %1952, 1
  br label %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit672.i

CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit672.i: ; preds = %1947, %._crit_edge.i666.i, %1921, %1891
  %.reg2mem43.sroa.3.0.i648.i = phi i160 [ %.fca.1.extract22.i671.i, %1947 ], [ poison, %._crit_edge.i666.i ], [ poison, %1891 ], [ poison, %1921 ]
  %.reg2mem41.0.i649.i = phi ptr [ %.fca.0.extract21.i670.i, %1947 ], [ @nil_typ, %._crit_edge.i666.i ], [ @nil_typ, %1891 ], [ @nil_typ, %1921 ]
  %.reload40.fca.0.insert.i650.i = insertvalue { ptr, i160 } poison, ptr %.reg2mem41.0.i649.i, 0
  %.reload40.fca.1.insert.i651.i = insertvalue { ptr, i160 } %.reload40.fca.0.insert.i650.i, i160 %.reg2mem43.sroa.3.0.i648.i, 1
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1953 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap)
  %1954 = icmp ne ptr %.reg2mem41.0.i649.i, @nil_typ
  %1955 = icmp ne ptr %.reg2mem41.0.i649.i, null
  %.not65.not.not.i.i45 = and i1 %1954, %1955
  %cond.fr27.i.i46 = freeze i1 %.not65.not.not.i.i45
  %spec.select.i.i47 = select i1 %cond.fr27.i.i46, ptr %.reg2mem41.0.i649.i, ptr @nil_typ
  br label %CuckooMap_get_keyK.exit.i48

CuckooMap_get_keyK.exit.i48:                      ; preds = %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit672.i, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.i84
  %1956 = phi ptr [ %spec.select.i.i47, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit672.i ], [ %.fca.0.extract21.i.i85, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.i84 ]
  %.pn.i.i49 = phi { ptr, i160 } [ %.reload40.fca.1.insert.i651.i, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit672.i ], [ %1887, %CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil.exit.i84 ]
  %1957 = icmp ne ptr %1956, @nil_typ
  %1958 = icmp ne ptr %1956, null
  %.not150.i = and i1 %1957, %1958
  br i1 %.not150.i, label %1959, label %._crit_edge.lr.ph.i.i

1959:                                             ; preds = %CuckooMap_get_keyK.exit.i48
  %1960 = extractvalue { ptr, i160 } %.pn.i.i49, 1
  %.sroa.2.8.extract.trunc.i71 = trunc i160 %1960 to i32
  %1961 = sext i32 %.sroa.2.8.extract.trunc.i71 to i64
  %1962 = add i64 %.0141111.i, %1961
  br label %._crit_edge2.i51

._crit_edge.lr.ph.i.i:                            ; preds = %CuckooMap_get_keyK.exit.i48
  %result.i19.i = call noalias align 64 dereferenceable_or_null(56) ptr @bump_malloc_inner(i64 noundef 56, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %1963 = load <55 x i8>, ptr @ikfyp_Error_Nil_returned_during_sequential_hit_test_for_key_, align 64
  store <55 x i8> %1963, ptr %result.i19.i, align 64
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1964 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0) #37
  %1965 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %result.i.i686.i = call noalias dereferenceable_or_null(56) ptr @bump_malloc_inner(i64 noundef 56, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.memcpy.p0.p0.i64(ptr nocapture nofree noundef nonnull writeonly align 1 dereferenceable(56) %result.i.i686.i, ptr nocapture nofree noundef nonnull readonly align 64 dereferenceable(56) %result.i19.i, i64 noundef 55, i1 noundef false)
  %1966 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %1967 = getelementptr i8, ptr %result.i.i686.i, i64 55
  store i8 0, ptr %1967, align 1
  %puts.i.i50 = call i32 @puts(ptr nocapture nofree noundef nonnull readonly dereferenceable(56) %result.i.i686.i) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1968 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  %1969 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %.2112.i) #42
  br label %._crit_edge2.i51

._crit_edge2.i51:                                 ; preds = %._crit_edge.lr.ph.i.i, %1959
  %.1145.i = phi i1 [ %.0144110.i, %1959 ], [ false, %._crit_edge.lr.ph.i.i ]
  %.1142.i = phi i64 [ %1962, %1959 ], [ %.0141111.i, %._crit_edge.lr.ph.i.i ]
  %1970 = add nuw nsw i32 %.2112.i, 1
  %1971 = icmp ult i32 %.2112.i, 999999
  br i1 %1971, label %1842, label %._crit_edge.lr.ph.i702.i

._crit_edge.lr.ph.i702.i:                         ; preds = %._crit_edge2.i51
  %1972 = call i64 @clock()
  %result.i25.i52 = call noalias align 32 dereferenceable_or_null(19) ptr @bump_malloc_inner(i64 noundef 19, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <18 x i8> <i8 71, i8 101, i8 116, i8 32, i8 83, i8 101, i8 113, i8 117, i8 101, i8 110, i8 116, i8 105, i8 97, i8 108, i8 32, i8 72, i8 105, i8 116>, ptr %result.i25.i52, align 32
  %1973 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO) #37
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1974 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0) #37
  %1975 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %result.i.i701.i = call noalias dereferenceable_or_null(19) ptr @bump_malloc_inner(i64 noundef 19, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.memcpy.p0.p0.i64(ptr nocapture nofree noundef nonnull writeonly align 1 dereferenceable(19) %result.i.i701.i, ptr nocapture nofree noundef nonnull readonly align 32 dereferenceable(19) %result.i25.i52, i64 noundef 18, i1 noundef false)
  %1976 = sub i64 %1972, %1841
  %1977 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %1978 = getelementptr i8, ptr %result.i.i701.i, i64 18
  store i8 0, ptr %1978, align 1
  %puts.i258.i = call i32 @puts(ptr nocapture nofree noundef nonnull readonly dereferenceable(19) %result.i.i701.i) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %result.i3.i.i53 = call noalias align 16 dereferenceable_or_null(15) ptr @bump_malloc_inner(i64 noundef 15, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <14 x i8> <i8 32, i8 32, i8 79, i8 112, i8 101, i8 114, i8 97, i8 116, i8 105, i8 111, i8 110, i8 115, i8 58, i8 32>, ptr %result.i3.i.i53, align 16
  %result.i.i268.i.i54 = call noalias dereferenceable_or_null(15) ptr @bump_malloc_inner(i64 noundef 15, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.memcpy.p0.p0.i64(ptr nocapture nofree noundef nonnull writeonly align 1 dereferenceable(15) %result.i.i268.i.i54, ptr nocapture nofree noundef nonnull readonly align 16 dereferenceable(15) %result.i3.i.i53, i64 noundef 14, i1 noundef false)
  %puts.i.i.i55 = call i32 @puts(ptr nocapture nofree noundef nonnull readonly dereferenceable(15) %result.i.i268.i.i54) #42
  %1979 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 noundef 1000000) #42
  %result.i9.i.i56 = call noalias align 16 dereferenceable_or_null(15) ptr @bump_malloc_inner(i64 noundef 15, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <14 x i8> <i8 32, i8 32, i8 84, i8 111, i8 116, i8 97, i8 108, i8 32, i8 84, i8 105, i8 109, i8 101, i8 58, i8 32>, ptr %result.i9.i.i56, align 16
  %result.i.i282.i.i57 = call noalias dereferenceable_or_null(15) ptr @bump_malloc_inner(i64 noundef 15, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.memcpy.p0.p0.i64(ptr nocapture nofree noundef nonnull writeonly align 1 dereferenceable(15) %result.i.i282.i.i57, ptr nocapture nofree noundef nonnull readonly align 16 dereferenceable(15) %result.i9.i.i56, i64 noundef 14, i1 noundef false)
  %puts.i206.i.i58 = call i32 @puts(ptr nocapture nofree noundef nonnull readonly dereferenceable(15) %result.i.i282.i.i57) #42
  %1980 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(6) @i64_string, i64 %1976) #42
  %result.i15.i.i59 = call noalias align 4 dereferenceable_or_null(4) ptr @bump_malloc_inner(i64 noundef 4, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <3 x i8> <i8 32, i8 109, i8 115>, ptr %result.i15.i.i59, align 4
  %result.i.i301.i.i60 = call noalias dereferenceable_or_null(4) ptr @bump_malloc_inner(i64 noundef 4, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.memcpy.p0.p0.i64(ptr nocapture nofree noundef nonnull writeonly align 1 dereferenceable(4) %result.i.i301.i.i60, ptr nocapture nofree noundef nonnull readonly align 4 dereferenceable(4) %result.i15.i.i59, i64 noundef 3, i1 noundef false)
  %puts.i226.i.i61 = call i32 @puts(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) %result.i.i301.i.i60) #42
  %1981 = icmp sgt i64 %1976, 0
  br i1 %1981, label %1982, label %._crit_edge.lr.ph.i487

1982:                                             ; preds = %._crit_edge.lr.ph.i702.i
  %1983 = mul i64 %1976, 1000000
  %1984 = sdiv i64 %1983, 1000000
  br label %._crit_edge.lr.ph.i487

._crit_edge.lr.ph.i487:                           ; preds = %._crit_edge.lr.ph.i702.i, %1982
  %.0.i.i62 = phi i64 [ %1984, %1982 ], [ 0, %._crit_edge.lr.ph.i702.i ]
  %result.i20.i.i63 = call noalias align 16 dereferenceable_or_null(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <15 x i8> <i8 32, i8 32, i8 84, i8 105, i8 109, i8 101, i8 47, i8 79, i8 112, i8 58, i8 32, i8 32, i8 32, i8 32, i8 126>, ptr %result.i20.i.i63, align 16
  %result.i.i320.i.i64 = call noalias dereferenceable_or_null(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.memcpy.p0.p0.i64(ptr nocapture nofree noundef nonnull writeonly align 1 dereferenceable(16) %result.i.i320.i.i64, ptr nocapture nofree noundef nonnull readonly align 16 dereferenceable(16) %result.i20.i.i63, i64 noundef 15, i1 noundef false)
  %puts.i246.i.i65 = call i32 @puts(ptr nocapture nofree noundef nonnull readonly dereferenceable(16) %result.i.i320.i.i64) #42
  %1985 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(6) @i64_string, i64 %.0.i.i62) #42
  %result.i26.i.i66 = call noalias align 4 dereferenceable_or_null(4) ptr @bump_malloc_inner(i64 noundef 4, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <3 x i8> <i8 32, i8 110, i8 115>, ptr %result.i26.i.i66, align 4
  %result.i.i339.i.i67 = call noalias dereferenceable_or_null(4) ptr @bump_malloc_inner(i64 noundef 4, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.memcpy.p0.p0.i64(ptr nocapture nofree noundef nonnull writeonly align 1 dereferenceable(4) %result.i.i339.i.i67, ptr nocapture nofree noundef nonnull readonly align 4 dereferenceable(4) %result.i26.i.i66, i64 noundef 3, i1 noundef false)
  %puts.i266.i.i68 = call i32 @puts(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) %result.i.i339.i.i67) #42
  %.not.i = icmp eq i64 %.1142.i, 500000500000
  %result.i29.i = call noalias align 32 dereferenceable_or_null(19) ptr @bump_malloc_inner(i64 noundef 19, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <18 x i8> <i8 32, i8 32, i8 32, i8 32, i8 86, i8 101, i8 114, i8 105, i8 102, i8 105, i8 99, i8 97, i8 116, i8 105, i8 111, i8 110, i8 58, i8 32>, ptr %result.i29.i, align 32
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1986 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0) #37
  %1987 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %result.i.i720.i = call noalias dereferenceable_or_null(19) ptr @bump_malloc_inner(i64 noundef 19, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.memcpy.p0.p0.i64(ptr nocapture nofree noundef nonnull writeonly align 1 dereferenceable(19) %result.i.i720.i, ptr nocapture nofree noundef nonnull readonly align 32 dereferenceable(19) %result.i29.i, i64 noundef 18, i1 noundef false)
  %spec.select.i = select i1 %.not.i, i1 %.1145.i, i1 false
  %1988 = getelementptr i8, ptr %result.i.i720.i, i64 18
  store i8 0, ptr %1988, align 1
  %puts.i278.i = call i32 @puts(ptr nocapture nofree noundef nonnull readonly dereferenceable(19) %result.i.i720.i) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %..i69 = select i1 %spec.select.i, <4 x i8> <i8 80, i8 65, i8 83, i8 83>, <4 x i8> <i8 70, i8 65, i8 73, i8 76>
  %.187.i70 = select i1 %spec.select.i, ptr %33, ptr %37
  %.188.i = select i1 %spec.select.i, ptr %34, ptr %38
  %.189.i = select i1 %spec.select.i, ptr %35, ptr %39
  %.190.i = select i1 %spec.select.i, ptr %36, ptr %40
  store ptr @_parameterization_Bufferi8, ptr %.187.i70, align 8
  %.187.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %spec.select.i, ptr %33, ptr %37
  %.187.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.187.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 8
  store ptr @_parameterization_i32, ptr %.187.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %.187.sroa.sel199.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %spec.select.i, ptr %33, ptr %37
  %.187.sroa.sel199.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.187.sroa.sel199.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 16
  store ptr @_parameterization_i32, ptr %.187.sroa.sel199.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %1989 = call ptr @llvm.invariant.start.p0(i64 noundef 9, ptr nocapture nofree noundef nonnull align 8 dereferenceable(24) %.187.i70)
  store ptr @buffer_typ, ptr %.188.i, align 8
  %.188.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %spec.select.i, ptr %34, ptr %38
  %.188.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.188.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 8
  store ptr @i32_typ, ptr %.188.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %.188.sroa.sel194.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v = select i1 %spec.select.i, ptr %34, ptr %38
  %.188.sroa.sel194.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel = getelementptr inbounds i8, ptr %.188.sroa.sel194.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v, i64 16
  store ptr @i32_typ, ptr %.188.sroa.sel194.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.i.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel.v.sroa.sel, align 8
  %1990 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %.188.i)
  store ptr @_parameterization_String, ptr %.189.i, align 8
  %1991 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %.189.i)
  %1992 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  store ptr @String, ptr %.190.i, align 8
  %1993 = call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %.190.i) #37
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1994 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0) #37
  %1995 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %result.i.i739.i = call noalias dereferenceable_or_null(5) ptr @bump_malloc_inner(i64 noundef 5, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <4 x i8> %..i69, ptr %result.i.i739.i, align 1
  %1996 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %1997 = getelementptr i8, ptr %result.i.i739.i, i64 4
  store i8 0, ptr %1997, align 1
  %puts.i298.i = call i32 @puts(ptr nocapture nofree noundef nonnull readonly dereferenceable(5) %result.i.i739.i) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  call void @llvm.lifetime.end.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(24) %33)
  call void @llvm.lifetime.end.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(24) %34)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %35)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %36)
  call void @llvm.lifetime.end.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(24) %37)
  call void @llvm.lifetime.end.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(24) %38)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %39)
  call void @llvm.lifetime.end.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %40)
  call void @benchmark_get_random_hit(i32 noundef 1000000)
  call void @benchmark_get_random_miss(i32 noundef 1000000)
  call void @benchmark_remove_random(i32 noundef 1000000)
  %result.i136 = call noalias align 32 dereferenceable_or_null(28) ptr @bump_malloc_inner(i64 noundef 28, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <27 x i8> <i8 45, i8 45, i8 45, i8 32, i8 66, i8 101, i8 110, i8 99, i8 104, i8 109, i8 97, i8 114, i8 107, i8 115, i8 32, i8 67, i8 111, i8 109, i8 112, i8 108, i8 101, i8 116, i8 101, i8 32, i8 45, i8 45, i8 45>, ptr %result.i136, align 32
  %1998 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @IO)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  %1999 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0) #37
  %2000 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %0)
  %result.i.i486 = call noalias dereferenceable_or_null(28) ptr @bump_malloc_inner(i64 noundef 28, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  call void @llvm.memcpy.p0.p0.i64(ptr nocapture nofree noundef nonnull writeonly align 1 dereferenceable(28) %result.i.i486, ptr nocapture nofree noundef nonnull readonly align 32 dereferenceable(28) %result.i136, i64 noundef 27, i1 noundef false)
  %2001 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %2002 = getelementptr i8, ptr %result.i.i486, i64 27
  store i8 0, ptr %2002, align 1
  %puts.i330 = call i32 @puts(ptr nocapture nofree noundef nonnull readonly dereferenceable(28) %result.i.i486) #42
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %0)
  ret i32 0
}

define void @setup_landing_pad() #10 {
  %result.i = call noalias dereferenceable_or_null(5368709120) ptr @VirtualAlloc(ptr nofree noundef align 4294967296 null, i64 noundef 5368709120, i32 noundef 12288, i32 noundef 4) #51
  store ptr %result.i, ptr @current_ptr, align 8
  %sp = call ptr @llvm.stacksave.p0() #52
  store ptr %sp, ptr @into_caller_buf, align 8
  store ptr blockaddress(@setup_landing_pad, %landing_pad), ptr getelementptr inbounds (i8, ptr @into_caller_buf, i64 8), align 8
  store ptr %sp, ptr getelementptr inbounds (i8, ptr @into_caller_buf, i64 16), align 8
  %result.i.i = call noalias noundef nonnull align 8 dereferenceable(8388608) ptr @VirtualAlloc(ptr nofree noundef align 4294967296 null, i64 noundef 8388608, i32 noundef 12288, i32 noundef 4) #51
  store ptr @setup_landing_pad, ptr %result.i.i, align 8
  %stack_top.i = getelementptr inbounds i8, ptr %result.i.i, i64 8388608
  %stack_top_i64.i = ptrtoint ptr %stack_top.i to i64
  %stack_top_aligned.i = and i64 %stack_top_i64.i, -16
  %into_callee_buf.i = getelementptr inbounds i8, ptr %result.i.i, i64 8
  %arg_passer_slot.i = getelementptr inbounds i8, ptr %result.i.i, i64 32
  %into_callee_second_word.i = getelementptr inbounds i8, ptr %result.i.i, i64 16
  %into_callee_third_word.i = getelementptr inbounds i8, ptr %result.i.i, i64 24
  store i64 %stack_top_aligned.i, ptr %into_callee_buf.i, align 8
  store i64 %stack_top_aligned.i, ptr %into_callee_third_word.i, align 8
  store ptr @arg_passer, ptr %arg_passer_slot.i, align 8
  %is_finished.i = getelementptr inbounds i8, ptr %result.i.i, i64 40
  store i1 false, ptr %is_finished.i, align 8
  call void @coroutine_trampoline(ptr noundef nonnull align 8 dereferenceable(8388592) %into_callee_second_word.i)
  store ptr %result.i.i, ptr @current_coroutine, align 8
  %retval.i = load i1, ptr @always_one, align 1
  br i1 %retval.i, label %exit, label %landing_pad

landing_pad:                                      ; preds = %0
  %ok = call i32 @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @string_string, ptr nofree noundef nonnull align 16 dereferenceable(45) @exception_message) #42
  %cc.unpack = load ptr, ptr @current_coroutine, align 8
  %cc1 = insertvalue { ptr } poison, ptr %cc.unpack, 0
  call void @report_exception({ ptr } %cc1) #42
  call void @exit()
  unreachable

exit:                                             ; preds = %0
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0)
define noalias ptr @virtual_reserve(i64 %size) local_unnamed_addr #17 {
  %result = call noalias ptr @VirtualAlloc(ptr nofree noundef align 4294967296 null, i64 %size, i32 noundef 12288, i32 noundef 4) #51
  ret ptr %result
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn
declare ptr @llvm.stacksave.p0() #18

define void @arg_passer(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %current_coroutine) #10 {
  %func = load ptr, ptr %current_coroutine, align 8
  call void %func()
  ret void
}

define noundef nonnull ptr @coroutine_create(ptr nofree %func, ptr nofree %arg_passer) local_unnamed_addr #10 {
  %result.i = call noalias noundef nonnull align 8 dereferenceable(8388608) ptr @VirtualAlloc(ptr nofree noundef align 4294967296 null, i64 noundef 8388608, i32 noundef 12288, i32 noundef 4) #51
  store ptr %func, ptr %result.i, align 8
  %stack_top = getelementptr inbounds i8, ptr %result.i, i64 8388608
  %stack_top_i64 = ptrtoint ptr %stack_top to i64
  %stack_top_aligned = and i64 %stack_top_i64, -16
  %into_callee_buf = getelementptr inbounds i8, ptr %result.i, i64 8
  %arg_passer_slot = getelementptr inbounds i8, ptr %result.i, i64 32
  %into_callee_second_word = getelementptr inbounds i8, ptr %result.i, i64 16
  %into_callee_third_word = getelementptr inbounds i8, ptr %result.i, i64 24
  store i64 %stack_top_aligned, ptr %into_callee_buf, align 8
  store i64 %stack_top_aligned, ptr %into_callee_third_word, align 8
  store ptr %arg_passer, ptr %arg_passer_slot, align 8
  %is_finished = getelementptr inbounds i8, ptr %result.i, i64 40
  store i1 false, ptr %is_finished, align 8
  call void @coroutine_trampoline(ptr noundef nonnull align 8 dereferenceable(8388592) %into_callee_second_word)
  ret ptr %result.i
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none)
define i1 @returns_one() local_unnamed_addr #19 {
  %retval = load i1, ptr @always_one, align 1
  ret i1 %retval
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(ptr nocapture noundef readonly, ...) local_unnamed_addr #20

declare void @exit() local_unnamed_addr #10

declare void @coroutine_trampoline(ptr) local_unnamed_addr #10

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(1)
declare noalias ptr @VirtualAlloc(ptr, i64, i32, i32) local_unnamed_addr #21

; Function Attrs: mustprogress nofree norecurse nosync nounwind speculatable willreturn memory(argmem: read)
define ptr @typegetter_wrapper(ptr nocapture nofree noundef nonnull readonly %f, ptr nocapture nofree noundef nonnull readonly %0) local_unnamed_addr #0 {
  %result = call ptr %f(ptr nocapture nofree noundef nonnull readonly %0) #41
  ret ptr %result
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind speculatable willreturn memory(argmem: read)
define { ptr, i160 } @box_wrapper(ptr nocapture nofree noundef nonnull readonly %f, ptr nocapture nofree readonly %0, ptr nocapture nofree readonly %1) local_unnamed_addr #0 {
  %result = call { ptr, i160 } %f(ptr nocapture nofree readonly %0, ptr nocapture nofree readonly %1) #41
  ret { ptr, i160 } %result
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind speculatable willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @unbox_wrapper(ptr nocapture nofree noundef nonnull readonly %f, { ptr, i160 } %0, ptr nocapture nofree readonly %1, ptr nocapture nofree writeonly %2) local_unnamed_addr #22 {
  call void %f({ ptr, i160 } %0, ptr nocapture nofree readonly %1, ptr nocapture nofree writeonly %2) #49
  ret void
}

define { i64, i64 } @_data_size_tuple_typ(ptr nocapture nofree readonly align 4 %0) local_unnamed_addr #10 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load i64, ptr %2, align 4
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %1, %.lr.ph
  %.in = phi i64 [ %22, %.lr.ph ], [ %3, %1 ]
  %5 = phi i64 [ %20, %.lr.ph ], [ 1, %1 ]
  %.reg2mem22.011 = phi i64 [ %19, %.lr.ph ], [ 0, %1 ]
  %.reg2mem20.010 = phi i64 [ %13, %.lr.ph ], [ 1, %1 ]
  %6 = inttoptr i64 %.in to ptr
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr i8, ptr %7, i64 72
  %9 = load ptr, ptr %8, align 8
  %10 = tail call { i64, i64 } %9(ptr nonnull align 8 %6)
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = extractvalue { i64, i64 } %10, 1
  %13 = tail call i64 @llvm.umax.i64(i64 %12, i64 %.reg2mem20.010)
  %14 = urem i64 %.reg2mem22.011, %12
  %15 = icmp eq i64 %14, 0
  %16 = sub i64 %12, %14
  %17 = select i1 %15, i64 0, i64 %16
  %18 = add i64 %11, %.reg2mem22.011
  %19 = add i64 %18, %17
  %20 = add i64 %5, 1
  %21 = getelementptr ptr, ptr %0, i64 %20
  %22 = load i64, ptr %21, align 4
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %1
  %.reg2mem20.0.lcssa = phi i64 [ 1, %1 ], [ %13, %.lr.ph ]
  %.reg2mem22.0.lcssa = phi i64 [ 0, %1 ], [ %19, %.lr.ph ]
  %24 = urem i64 %.reg2mem22.0.lcssa, %.reg2mem20.0.lcssa
  %25 = icmp eq i64 %24, 0
  %26 = sub i64 %.reg2mem20.0.lcssa, %24
  %27 = select i1 %25, i64 0, i64 %26
  %28 = add i64 %27, %.reg2mem22.0.lcssa
  %29 = insertvalue { i64, i64 } undef, i64 %28, 0
  %30 = insertvalue { i64, i64 } %29, i64 %.reg2mem20.0.lcssa, 1
  ret { i64, i64 } %30
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #9

define { i64, i64 } @_data_size_union_typ(ptr nocapture nofree readonly align 4 %0) #10 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load i64, ptr %2, align 4
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %._crit_edge.thread, label %.lr.ph

.lr.ph:                                           ; preds = %1, %.lr.ph
  %.in = phi i64 [ %22, %.lr.ph ], [ %3, %1 ]
  %5 = phi i64 [ %20, %.lr.ph ], [ 1, %1 ]
  %.reg2mem22.011 = phi i64 [ %19, %.lr.ph ], [ 0, %1 ]
  %.reg2mem20.010 = phi i64 [ %13, %.lr.ph ], [ 1, %1 ]
  %6 = inttoptr i64 %.in to ptr
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr i8, ptr %7, i64 72
  %9 = load ptr, ptr %8, align 8
  %10 = tail call { i64, i64 } %9(ptr nonnull align 8 %6)
  %11 = extractvalue { i64, i64 } %10, 0
  %12 = extractvalue { i64, i64 } %10, 1
  %13 = tail call i64 @llvm.umax.i64(i64 noundef %12, i64 noundef %.reg2mem20.010)
  %14 = urem i64 %.reg2mem22.011, %12
  %15 = icmp eq i64 %14, 0
  %16 = sub i64 %12, %14
  %17 = select i1 %15, i64 0, i64 %16
  %18 = tail call i64 @llvm.umax.i64(i64 noundef %11, i64 noundef %.reg2mem22.011)
  %19 = tail call i64 @llvm.umax.i64(i64 noundef %18, i64 noundef %17)
  %20 = add i64 %5, 1
  %21 = getelementptr ptr, ptr %0, i64 %20
  %22 = load i64, ptr %21, align 4
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph
  %right_size = icmp eq i64 %19, 32
  %spec.select6 = select i1 %right_size, i64 0, i64 8
  %24 = add i64 %spec.select6, %19
  br label %._crit_edge.thread

._crit_edge.thread:                               ; preds = %._crit_edge, %1
  %.reg2mem20.0.lcssa4 = phi i64 [ 1, %1 ], [ %13, %._crit_edge ]
  %final_size = phi i64 [ 8, %1 ], [ %24, %._crit_edge ]
  %25 = urem i64 %final_size, %.reg2mem20.0.lcssa4
  %26 = icmp eq i64 %25, 0
  %27 = sub i64 %.reg2mem20.0.lcssa4, %25
  %28 = select i1 %26, i64 0, i64 %27
  %29 = add i64 %28, %final_size
  %30 = insertvalue { i64, i64 } undef, i64 %29, 0
  %31 = insertvalue { i64, i64 } %30, i64 %.reg2mem20.0.lcssa4, 1
  ret { i64, i64 } %31
}

define void @_unbox_union_typ({ ptr, i160 } %0, ptr nocapture nofree readonly align 4 %1, ptr nocapture nofree writeonly %dest) #10 {
  %3 = alloca { ptr, i160 }, align 8
  %.fca.0.extract = extractvalue { ptr, i160 } %0, 0
  store ptr %.fca.0.extract, ptr %3, align 8
  %.fca.1.extract = extractvalue { ptr, i160 } %0, 1
  %.fca.1.gep = getelementptr inbounds i8, ptr %3, i64 8
  store i160 %.fca.1.extract, ptr %.fca.1.gep, align 8
  %4 = getelementptr i8, ptr %1, i64 8
  %5 = load i64, ptr %4, align 4
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %_data_size_union_typ.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %2, %.lr.ph.i
  %.in.i = phi i64 [ %24, %.lr.ph.i ], [ %5, %2 ]
  %7 = phi i64 [ %22, %.lr.ph.i ], [ 1, %2 ]
  %.reg2mem22.011.i = phi i64 [ %21, %.lr.ph.i ], [ 0, %2 ]
  %.reg2mem20.010.i = phi i64 [ %15, %.lr.ph.i ], [ 1, %2 ]
  %8 = inttoptr i64 %.in.i to ptr
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr i8, ptr %9, i64 72
  %11 = load ptr, ptr %10, align 8
  %12 = call { i64, i64 } %11(ptr nonnull align 8 %8)
  %13 = extractvalue { i64, i64 } %12, 0
  %14 = extractvalue { i64, i64 } %12, 1
  %15 = call i64 @llvm.umax.i64(i64 noundef %14, i64 noundef %.reg2mem20.010.i)
  %16 = urem i64 %.reg2mem22.011.i, %14
  %17 = icmp eq i64 %16, 0
  %18 = sub i64 %14, %16
  %19 = select i1 %17, i64 0, i64 %18
  %20 = call i64 @llvm.umax.i64(i64 noundef %13, i64 noundef %.reg2mem22.011.i)
  %21 = call i64 @llvm.umax.i64(i64 noundef %20, i64 noundef %19)
  %22 = add i64 %7, 1
  %23 = getelementptr ptr, ptr %1, i64 %22
  %24 = load i64, ptr %23, align 4
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %._crit_edge.i, label %.lr.ph.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %right_size.i = icmp eq i64 %21, 32
  %spec.select6.i = select i1 %right_size.i, i64 0, i64 8
  %26 = add i64 %spec.select6.i, %21
  br label %_data_size_union_typ.exit

_data_size_union_typ.exit:                        ; preds = %2, %._crit_edge.i
  %.reg2mem20.0.lcssa4.i = phi i64 [ 1, %2 ], [ %15, %._crit_edge.i ]
  %final_size.i = phi i64 [ 8, %2 ], [ %26, %._crit_edge.i ]
  %27 = trunc i160 %.fca.1.extract to i64
  %28 = inttoptr i64 %27 to ptr
  %29 = urem i64 %final_size.i, %.reg2mem20.0.lcssa4.i
  %30 = icmp eq i64 %29, 0
  %31 = sub i64 %.reg2mem20.0.lcssa4.i, %29
  %32 = select i1 %30, i64 0, i64 %31
  %33 = add i64 %32, %final_size.i
  %34 = icmp slt i64 %33, 17
  %35 = icmp eq i64 %33, 32
  %36 = select i1 %34, ptr %.fca.1.gep, ptr %28
  %source = select i1 %35, ptr %3, ptr %36
  call void @llvm.memcpy.inline.p0.p0.i64(ptr nocapture nofree writeonly align 1 %dest, ptr nocapture nofree readonly align 1 %source, i64 %33, i1 noundef false)
  ret void
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.inline.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #23

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define void @assume_offset(ptr nocapture nofree noundef nonnull readnone align 8 dereferenceable(8) %fat_ptr, ptr nocapture nofree readnone align 4 %id_ptr) local_unnamed_addr #1 {
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind speculatable willreturn memory(argmem: read)
define i1 @subtype_test_wrapper(ptr nocapture nofree noundef nonnull readonly %f, i64 %tbl_size, i64 %hash_coef, i64 %cand_id, i64 %candidate, ptr nofree readonly %supertype_tbl) local_unnamed_addr #0 {
  %result = call i1 %f(i64 %tbl_size, i64 %hash_coef, i64 %cand_id, i64 %candidate, ptr %supertype_tbl) #41
  ret i1 %result
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define void @arg_buffer_filler(ptr nocapture nofree readnone %coroutine) local_unnamed_addr #1 {
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none)
define ptr @get_current_coroutine() local_unnamed_addr #19 {
  %current_coroutine = load ptr, ptr @current_coroutine, align 8
  ret ptr %current_coroutine
}

; Function Attrs: noinline nounwind memory(readwrite)
define preserve_nonecc void @context_switch(ptr nocapture nofree noundef nonnull writeonly align 8 dereferenceable(24) %from_buf, ptr %to_buf) #24 {
  %from_buf_second_word = getelementptr inbounds i8, ptr %from_buf, i64 8
  %from_buf_third_word = getelementptr inbounds i8, ptr %from_buf, i64 16
  store ptr blockaddress(@context_switch, %return_from_switch), ptr %from_buf_second_word, align 8
  %sp = call ptr @llvm.stacksave.p0() #52
  store ptr %sp, ptr %from_buf, align 8
  store ptr %sp, ptr %from_buf_third_word, align 8
  %retval.i = load i1, ptr @always_one, align 1
  br i1 %retval.i, label %do_switch, label %return_from_switch

do_switch:                                        ; preds = %0
  call void @llvm.eh.sjlj.longjmp(ptr %to_buf) #53
  unreachable

return_from_switch:                               ; preds = %0
  ret void
}

; Function Attrs: noreturn nounwind
declare void @llvm.eh.sjlj.longjmp(ptr) #25

; Function Attrs: nounwind
define void @coroutine_yield(ptr nocapture nofree nonnull writeonly align 8 dereferenceable(24) %current_coroutine) local_unnamed_addr #11 {
  %into_callee_buf = getelementptr inbounds i8, ptr %current_coroutine, i64 8
  call preserve_nonecc void @context_switch(ptr nocapture nofree noundef nonnull writeonly align 8 dereferenceable(24) %into_callee_buf, ptr noundef nonnull align 8 dereferenceable(24) @into_caller_buf) #54
  ret void
}

; Function Attrs: nounwind
define void @coroutine_call(ptr %coroutine) local_unnamed_addr #11 {
  %old_into_caller.unpack = load ptr, ptr @into_caller_buf, align 8
  %old_into_caller.unpack1 = load ptr, ptr getelementptr inbounds (i8, ptr @into_caller_buf, i64 8), align 8
  %old_into_caller.unpack2 = load ptr, ptr getelementptr inbounds (i8, ptr @into_caller_buf, i64 16), align 8
  %old_coroutine = load ptr, ptr @current_coroutine, align 8
  store ptr %coroutine, ptr @current_coroutine, align 8
  %into_callee_buf = getelementptr i8, ptr %coroutine, i64 8
  call preserve_nonecc void @context_switch(ptr nocapture nofree noundef nonnull writeonly align 8 dereferenceable(24) @into_caller_buf, ptr %into_callee_buf) #54
  store ptr %old_coroutine, ptr @current_coroutine, align 8
  store ptr %old_into_caller.unpack, ptr @into_caller_buf, align 8
  store ptr %old_into_caller.unpack1, ptr getelementptr inbounds (i8, ptr @into_caller_buf, i64 8), align 8
  store ptr %old_into_caller.unpack2, ptr getelementptr inbounds (i8, ptr @into_caller_buf, i64 16), align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_bool_typ(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 ptrtoint (ptr getelementptr (i1, ptr null, i32 1) to i64), i64 1 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, i160 } @_box_bool_typ(ptr nocapture nofree noundef nonnull readonly dereferenceable(1) %0, ptr nocapture nofree readnone %1) #2 {
  %3 = load i8, ptr %0, align 1
  %.sroa.2.sroa.0.0.insert.ext = zext i8 %3 to i160
  %4 = insertvalue { ptr, i160 } { ptr @bool_typ, i160 undef }, i160 %.sroa.2.sroa.0.0.insert.ext, 1
  ret { ptr, i160 } %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @_unbox_bool_typ({ ptr, i160 } %0, ptr nocapture nofree readnone %1, ptr nocapture nofree noundef nonnull writeonly dereferenceable(1) %2) #3 {
  %.fca.1.extract = extractvalue { ptr, i160 } %0, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i8
  store i8 %.sroa.1.8.extract.trunc, ptr %2, align 1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_any_typ(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 32, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_Object(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 0, i64 1 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_i32_typ(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 4, i64 4 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, i160 } @_box_i32_typ(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) %0, ptr nocapture nofree readnone %1) #2 {
  %3 = load i32, ptr %0, align 1
  %.sroa.2.sroa.0.0.insert.ext = zext i32 %3 to i160
  %4 = insertvalue { ptr, i160 } { ptr @i32_typ, i160 undef }, i160 %.sroa.2.sroa.0.0.insert.ext, 1
  ret { ptr, i160 } %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @_unbox_i32_typ({ ptr, i160 } %0, ptr nocapture nofree readnone %1, ptr nocapture nofree noundef nonnull writeonly dereferenceable(4) %2) #3 {
  %.fca.1.extract = extractvalue { ptr, i160 } %0, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  store i32 %.sroa.1.8.extract.trunc, ptr %2, align 1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_i64_typ(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 8, i64 4 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, i160 } @_box_i64_typ(ptr nocapture nofree noundef nonnull readonly dereferenceable(8) %0, ptr nocapture nofree readnone %1) #2 {
  %3 = load i64, ptr %0, align 1
  %.sroa.2.sroa.0.0.insert.ext = zext i64 %3 to i160
  %4 = insertvalue { ptr, i160 } { ptr @i64_typ, i160 undef }, i160 %.sroa.2.sroa.0.0.insert.ext, 1
  ret { ptr, i160 } %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @_unbox_i64_typ({ ptr, i160 } %0, ptr nocapture nofree readnone %1, ptr nocapture nofree noundef nonnull writeonly dereferenceable(8) %2) #3 {
  %.fca.1.extract = extractvalue { ptr, i160 } %0, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i64
  store i64 %.sroa.1.8.extract.trunc, ptr %2, align 1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_nil_typ(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 ptrtoint (ptr getelementptr ([0 x i8], ptr null, i32 1) to i64), i64 1 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { ptr, i160 } @_box_nil_typ(ptr nocapture nofree readnone %0, ptr nocapture nofree readnone %1) #1 {
  ret { ptr, i160 } { ptr @nil_typ, i160 undef }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define void @_unbox_nil_typ({ ptr, i160 } %0, ptr nocapture nofree readnone %1, ptr nocapture nofree readnone %2) #1 {
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_function_typ(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 8, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, i160 } @_box_function_typ(ptr nocapture nofree noundef nonnull readonly dereferenceable(8) %0, ptr nocapture nofree readnone %1) #2 {
  %3 = load i64, ptr %0, align 1
  %.sroa.2.sroa.0.0.insert.ext = zext i64 %3 to i160
  %4 = insertvalue { ptr, i160 } { ptr @function_typ, i160 undef }, i160 %.sroa.2.sroa.0.0.insert.ext, 1
  ret { ptr, i160 } %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @_unbox_function_typ({ ptr, i160 } %0, ptr nocapture nofree readnone %1, ptr nocapture nofree noundef nonnull writeonly dereferenceable(8) %2) #3 {
  %.fca.1.extract = extractvalue { ptr, i160 } %0, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i64
  store i64 %.sroa.1.8.extract.trunc, ptr %2, align 1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_buffer_typ(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 8, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, i160 } @_box_buffer_typ(ptr nocapture nofree noundef nonnull readonly dereferenceable(8) %0, ptr nocapture nofree readnone %1) #2 {
  %3 = load i64, ptr %0, align 1
  %.sroa.2.sroa.0.0.insert.ext = zext i64 %3 to i160
  %4 = insertvalue { ptr, i160 } { ptr @buffer_typ, i160 undef }, i160 %.sroa.2.sroa.0.0.insert.ext, 1
  ret { ptr, i160 } %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @_unbox_buffer_typ({ ptr, i160 } %0, ptr nocapture nofree readnone %1, ptr nocapture nofree noundef nonnull writeonly dereferenceable(8) %2) #3 {
  %.fca.1.extract = extractvalue { ptr, i160 } %0, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i64
  store i64 %.sroa.1.8.extract.trunc, ptr %2, align 1
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, inaccessiblemem: none)
define { i64, i64 } @_data_size_Pair(ptr nocapture nofree readonly align 8 %0) #26 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr i8, ptr %4, i64 72
  %6 = load ptr, ptr %5, align 8
  %result.i = call { i64, i64 } %6(ptr nocapture nofree nonnull readonly align 8 %3) #41
  %7 = extractvalue { i64, i64 } %result.i, 0
  %8 = extractvalue { i64, i64 } %result.i, 1
  %9 = urem i64 16, %8
  %10 = icmp eq i64 %9, 0
  %11 = sub i64 %8, %9
  %12 = select i1 %10, i64 0, i64 %11
  %13 = add i64 %7, 16
  %14 = add i64 %13, %12
  %15 = getelementptr i8, ptr %0, i64 16
  %16 = load ptr, ptr %15, align 8
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr i8, ptr %17, i64 72
  %19 = load ptr, ptr %18, align 8
  %result.i1 = call { i64, i64 } %19(ptr nocapture nofree nonnull readonly align 8 %16) #41
  %20 = extractvalue { i64, i64 } %result.i1, 0
  %21 = extractvalue { i64, i64 } %result.i1, 1
  %22 = tail call i64 @llvm.umax.i64(i64 %8, i64 %21) #38
  %23 = tail call i64 @llvm.umax.i64(i64 %22, i64 noundef 8) #38, !range !16
  %24 = urem i64 %14, %21
  %25 = icmp eq i64 %24, 0
  %26 = sub i64 %21, %24
  %27 = select i1 %25, i64 0, i64 %26
  %28 = add i64 %20, %14
  %29 = add i64 %28, %27
  %30 = urem i64 %29, %23
  %31 = icmp eq i64 %30, 0
  %32 = sub i64 %23, %30
  %33 = select i1 %31, i64 0, i64 %32
  %34 = add i64 %33, %29
  %35 = insertvalue { i64, i64 } undef, i64 %34, 0
  %36 = insertvalue { i64, i64 } %35, i64 %23, 1
  ret { i64, i64 } %36
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @Pair_field_Pair_0(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @Pair_field_Pair_1(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Pair_B_init_firstT_secondU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 136
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Pair_B_first_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 144
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Pair_B_second_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 152
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @Pair_init_firstT_secondU({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, i160 } %3, { ptr, i160 } %4) #5 {
  %.fca.0.extract11 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract12 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract11, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract11, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract11, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !486
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !486
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !486
  %product.i.i.i = mul i64 %hash_coef.i.i, 9197944775169318296
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !486
  %6 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef align 8 %.fca.0.extract11) #37
  %7 = sext i32 %offset.i.i to i64
  %8 = getelementptr ptr, ptr %.fca.0.extract11, i64 %7
  %9 = getelementptr i8, ptr %8, i64 16
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr i8, ptr %10, i64 8
  %12 = load ptr, ptr %11, align 8
  call void %12(ptr %.fca.1.extract12, { ptr, i160 } %3) #39
  %13 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef align 8 %.fca.0.extract11) #37
  %14 = getelementptr i8, ptr %8, i64 24
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr i8, ptr %15, i64 8
  %17 = load ptr, ptr %16, align 8
  call void %17(ptr %.fca.1.extract12, { ptr, i160 } %4) #39
  ret void
}

; Function Attrs: mustprogress nounwind willreturn
define { ptr, i160 } @Pair_first_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #6 {
  %.fca.0.extract3 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract4 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract3, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract3, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract3, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !489
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !489
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !489
  %product.i.i.i = mul i64 %hash_coef.i.i, 9197944775169318296
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !489
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef align 8 %.fca.0.extract3) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract3, i64 %5
  %7 = getelementptr i8, ptr %6, i64 16
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = call { ptr, i160 } %9(ptr %.fca.1.extract4) #40
  ret { ptr, i160 } %10
}

; Function Attrs: mustprogress nounwind willreturn
define { ptr, i160 } @Pair_second_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #6 {
  %.fca.0.extract3 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract4 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract3, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract3, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract3, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !492
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !492
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !492
  %product.i.i.i = mul i64 %hash_coef.i.i, 9197944775169318296
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !492
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef align 8 %.fca.0.extract3) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract3, i64 %5
  %7 = getelementptr i8, ptr %6, i64 24
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = call { ptr, i160 } %9(ptr %.fca.1.extract4) #40
  ret { ptr, i160 } %10
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, inaccessiblemem: none)
define { ptr, i160 } @Pair_getter_second(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(16) %0) #26 {
  %2 = load ptr, ptr %0, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr i8, ptr %3, i64 72
  %5 = load ptr, ptr %4, align 8
  %result.i = call { i64, i64 } %5(ptr nocapture nofree nonnull readonly align 8 %2) #41
  %6 = extractvalue { i64, i64 } %result.i, 0
  %7 = extractvalue { i64, i64 } %result.i, 1
  %8 = urem i64 16, %7
  %9 = icmp eq i64 %8, 0
  %10 = sub i64 %7, %8
  %11 = select i1 %9, i64 0, i64 %10
  %12 = add i64 %6, 16
  %13 = add i64 %12, %11
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr i8, ptr %16, i64 72
  %18 = load ptr, ptr %17, align 8
  %result.i1 = call { i64, i64 } %18(ptr nocapture nofree nonnull readonly align 8 %15) #41
  %19 = extractvalue { i64, i64 } %result.i1, 1
  %20 = urem i64 %13, %19
  %21 = icmp eq i64 %20, 0
  %22 = sub i64 %19, %20
  %23 = select i1 %21, i64 0, i64 %22
  %24 = getelementptr i8, ptr %0, i64 %13
  %25 = getelementptr i8, ptr %24, i64 %23
  %26 = getelementptr i8, ptr %16, i64 56
  %27 = load ptr, ptr %26, align 8
  %result.i2 = call { ptr, i160 } %27(ptr nocapture nofree readonly %25, ptr nocapture nofree nonnull readonly align 8 %15) #41
  ret { ptr, i160 } %result.i2
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @Pair_setter_second(ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %0, { ptr, i160 } %1) #27 {
  %3 = load ptr, ptr %0, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr i8, ptr %4, i64 72
  %6 = load ptr, ptr %5, align 8
  %result.i = call { i64, i64 } %6(ptr nocapture nofree nonnull readonly align 8 %3) #41
  %7 = extractvalue { i64, i64 } %result.i, 0
  %8 = extractvalue { i64, i64 } %result.i, 1
  %9 = urem i64 16, %8
  %10 = icmp eq i64 %9, 0
  %11 = sub i64 %8, %9
  %12 = select i1 %10, i64 0, i64 %11
  %13 = add i64 %7, 16
  %14 = add i64 %13, %12
  %15 = getelementptr inbounds i8, ptr %0, i64 8
  %16 = load ptr, ptr %15, align 8
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr i8, ptr %17, i64 72
  %19 = load ptr, ptr %18, align 8
  %result.i1 = call { i64, i64 } %19(ptr nocapture nofree nonnull readonly align 8 %16) #41
  %20 = extractvalue { i64, i64 } %result.i1, 1
  %21 = urem i64 %14, %20
  %22 = icmp eq i64 %21, 0
  %23 = sub i64 %20, %21
  %24 = select i1 %22, i64 0, i64 %23
  %25 = getelementptr i8, ptr %0, i64 %14
  %26 = getelementptr i8, ptr %25, i64 %24
  %27 = getelementptr i8, ptr %17, i64 64
  %28 = load ptr, ptr %27, align 8
  call void %28({ ptr, i160 } %1, ptr nocapture nofree nonnull readonly align 8 %16, ptr nocapture nofree writeonly %26) #49
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, inaccessiblemem: none)
define { ptr, i160 } @Pair_getter_first(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #26 {
  %2 = load ptr, ptr %0, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr i8, ptr %3, i64 72
  %5 = load ptr, ptr %4, align 8
  %result.i = call { i64, i64 } %5(ptr nocapture nofree nonnull readonly align 8 %2) #41
  %6 = extractvalue { i64, i64 } %result.i, 1
  %7 = urem i64 16, %6
  %8 = icmp eq i64 %7, 0
  %reass.sub = sub i64 %6, %7
  %9 = add i64 %reass.sub, 16
  %10 = select i1 %8, i64 16, i64 %9
  %11 = getelementptr i8, ptr %0, i64 %10
  %12 = getelementptr i8, ptr %3, i64 56
  %13 = load ptr, ptr %12, align 8
  %result.i1 = call { ptr, i160 } %13(ptr nocapture nofree readonly %11, ptr nocapture nofree nonnull readonly align 8 %2) #41
  ret { ptr, i160 } %result.i1
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @Pair_setter_first(ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %0, { ptr, i160 } %1) #27 {
  %3 = load ptr, ptr %0, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr i8, ptr %4, i64 72
  %6 = load ptr, ptr %5, align 8
  %result.i = call { i64, i64 } %6(ptr nocapture nofree nonnull readonly align 8 %3) #41
  %7 = extractvalue { i64, i64 } %result.i, 1
  %8 = urem i64 16, %7
  %9 = icmp eq i64 %8, 0
  %reass.sub = sub i64 %7, %8
  %10 = add i64 %reass.sub, 16
  %11 = select i1 %9, i64 16, i64 %10
  %12 = getelementptr i8, ptr %0, i64 %11
  %13 = getelementptr i8, ptr %4, i64 64
  %14 = load ptr, ptr %13, align 8
  call void %14({ ptr, i160 } %1, ptr nocapture nofree nonnull readonly align 8 %3, ptr nocapture nofree writeonly %12) #49
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_String(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 16, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define noundef nonnull align 8 dereferenceable(16) ptr @String_field_String_0(ptr nocapture nofree readnone %0) #1 {
  ret ptr @_parameterization_Character
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite)
define noundef nonnull ptr @String_B__Self_from_c_string_c_stringBufferi8(ptr nocapture nofree %0) #28 {
  %2 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %0)
  ret ptr @String__Self_from_c_string_c_stringBufferi8
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_init_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 320
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_init_bytesBufferi8_lengthi32_capacityi32({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 328
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_length_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 336
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_capacity_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 344
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_bytes_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 352
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_c_string_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 360
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_append_xi8({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 368
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_extend_strString({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 376
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B__index_xi32({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 384
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B__EQ_otherString({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 392
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_pop_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 400
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_copy_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 408
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_iterator_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 416
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_each_fFunctionT_to_Nothing({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 424
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_reduce_accumulatorT_fFunctionT._T_to_T({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 432
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_all_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 440
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_any_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 448
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_map_fFunctionT_to_U({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 456
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_filter_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 464
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_chain_otherIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 472
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_interleave_otherIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 480
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_zip_otherIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 488
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_product_otherIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 496
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @String_B_repr_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 504
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, argmem: read, inaccessiblemem: none)
define { ptr, ptr, ptr, i32 } @String__Self_from_c_string_c_stringBufferi8(ptr nocapture nofree readnone %0, { ptr } %1) #29 {
  %.fca.0.extract = extractvalue { ptr } %1, 0
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge, %2
  %.0 = phi i32 [ 0, %2 ], [ %.1, %._crit_edge ]
  %3 = sext i32 %.0 to i64
  %4 = getelementptr i8, ptr %.fca.0.extract, i64 %3
  %5 = load i8, ptr %4, align 1
  %.not = icmp ne i8 %5, 0
  %6 = zext i1 %.not to i32
  %.1 = add i32 %.0, %6
  br i1 %.not, label %._crit_edge, label %7

7:                                                ; preds = %._crit_edge
  %result.i1 = call noalias align 8 dereferenceable_or_null(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %8 = add i32 %.1, 1
  %9 = insertvalue { ptr, ptr, ptr, i32 } { ptr @String, ptr undef, ptr undef, i32 undef }, ptr %result.i1, 1
  %10 = insertvalue { ptr, ptr, ptr, i32 } %9, ptr undef, 2
  %11 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 10, 3
  store ptr %.fca.0.extract, ptr %result.i1, align 8
  %12 = getelementptr i8, ptr %result.i1, i64 8
  store i32 %.1, ptr %12, align 8
  %13 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String) #37
  %14 = getelementptr i8, ptr %result.i1, i64 12
  store i32 %8, ptr %14, align 4
  ret { ptr, ptr, ptr, i32 } %11
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @String_init_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #5 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !495
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !495
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !495
  %product.i.i.i = mul i64 %hash_coef.i.i, 6499063144389013426
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !495
  %result.i = call noalias dereferenceable_or_null(1) ptr @bump_malloc_inner(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract, i64 %5
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr i8, ptr %7, i64 8
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr } undef, ptr %result.i, 0
  call void %9(ptr %.fca.1.extract, { ptr } %10) #39
  %11 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %12 = getelementptr i8, ptr %6, i64 16
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr i8, ptr %13, i64 8
  %15 = load ptr, ptr %14, align 8
  call void %15(ptr %.fca.1.extract, i32 1) #39
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %17 = getelementptr i8, ptr %6, i64 8
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr i8, ptr %18, i64 8
  %20 = load ptr, ptr %19, align 8
  call void %20(ptr %.fca.1.extract, i32 0) #39
  ret void
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @String_init_bytesBufferi8_lengthi32_capacityi32({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr } %3, i32 %4, i32 %5) #5 {
  %.fca.0.extract2 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !498
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !498
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !498
  %product.i.i.i = mul i64 %hash_coef.i.i, 6499063144389013426
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !498
  %7 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef align 8 %.fca.0.extract2) #37
  %8 = sext i32 %offset.i.i to i64
  %9 = getelementptr ptr, ptr %.fca.0.extract2, i64 %8
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr i8, ptr %10, i64 8
  %12 = load ptr, ptr %11, align 8
  call void %12(ptr %.fca.1.extract, { ptr } %3) #39
  %13 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef align 8 %.fca.0.extract2) #37
  %14 = getelementptr i8, ptr %9, i64 8
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr i8, ptr %15, i64 8
  %17 = load ptr, ptr %16, align 8
  call void %17(ptr %.fca.1.extract, i32 %4) #39
  %18 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef align 8 %.fca.0.extract2) #37
  %19 = getelementptr i8, ptr %9, i64 16
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr i8, ptr %20, i64 8
  %22 = load ptr, ptr %21, align 8
  call void %22(ptr %.fca.1.extract, i32 %5) #39
  ret void
}

; Function Attrs: mustprogress nounwind willreturn
define i32 @String_length_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #6 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !501
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !501
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !501
  %product.i.i.i = mul i64 %hash_coef.i.i, 6499063144389013426
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !501
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract, i64 %5
  %7 = getelementptr i8, ptr %6, i64 8
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = call i32 %9(ptr %.fca.1.extract) #40
  ret i32 %10
}

; Function Attrs: mustprogress nounwind willreturn
define i32 @String_capacity_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #6 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !504
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !504
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !504
  %product.i.i.i = mul i64 %hash_coef.i.i, 6499063144389013426
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !504
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract, i64 %5
  %7 = getelementptr i8, ptr %6, i64 16
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = call i32 %9(ptr %.fca.1.extract) #40
  ret i32 %10
}

; Function Attrs: mustprogress nounwind willreturn
define { ptr } @String_bytes_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #6 {
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !507
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !507
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !507
  %product.i.i.i = mul i64 %hash_coef.i.i, 6499063144389013426
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !507
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef align 8 %.fca.0.extract1) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract1, i64 %5
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr %7, align 8
  %9 = call { ptr } %8(ptr %.fca.1.extract) #40
  ret { ptr } %9
}

; Function Attrs: mustprogress nounwind willreturn
define { ptr } @String_c_string_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #6 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8
  %product.i.i.i = mul i64 %hash_coef.i.i, 6499063144389013426
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract, i64 %5
  %7 = getelementptr i8, ptr %6, i64 8
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = call i32 %9(ptr %.fca.1.extract) #40
  %11 = add i32 %10, 1
  %12 = sext i32 %11 to i64
  %result.i = call noalias ptr @bump_malloc_inner(i64 noundef %12, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %13 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %14 = load ptr, ptr %7, align 8
  %15 = load ptr, ptr %14, align 8
  %16 = call i32 %15(ptr %.fca.1.extract) #40
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %._crit_edge.lr.ph, label %._crit_edge1._crit_edge

._crit_edge.lr.ph:                                ; preds = %3
  %18 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.lr.ph, %._crit_edge
  %.08 = phi i32 [ 0, %._crit_edge.lr.ph ], [ %26, %._crit_edge ]
  %19 = load ptr, ptr %6, align 8
  %20 = load ptr, ptr %19, align 8
  %21 = call { ptr } %20(ptr %.fca.1.extract) #40
  %.fca.0.extract15 = extractvalue { ptr } %21, 0
  %22 = zext nneg i32 %.08 to i64
  %23 = getelementptr i8, ptr %.fca.0.extract15, i64 %22
  %24 = load i8, ptr %23, align 1
  %25 = getelementptr i8, ptr %result.i, i64 %22
  store i8 %24, ptr %25, align 1
  %26 = add nuw nsw i32 %.08, 1
  %27 = load ptr, ptr %7, align 8
  %28 = load ptr, ptr %27, align 8
  %29 = call i32 %28(ptr %.fca.1.extract) #40
  %30 = icmp slt i32 %26, %29
  br i1 %30, label %._crit_edge, label %._crit_edge1._crit_edge

._crit_edge1._crit_edge:                          ; preds = %._crit_edge, %3
  %31 = phi ptr [ %15, %3 ], [ %28, %._crit_edge ]
  %32 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %33 = call i32 %31(ptr %.fca.1.extract) #40
  %34 = sext i32 %33 to i64
  %35 = getelementptr i8, ptr %result.i, i64 %34
  store i8 0, ptr %35, align 1
  %36 = insertvalue { ptr } undef, ptr %result.i, 0
  ret { ptr } %36
}

; Function Attrs: mustprogress nounwind willreturn
define { ptr, ptr, ptr, i32 } @String_append_xi8({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, i8 %3) #6 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8
  %product.i.i.i = mul i64 %hash_coef.i.i, 6499063144389013426
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract, i64 %6
  %8 = getelementptr i8, ptr %7, i64 8
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = call i32 %10(ptr %.fca.1.extract) #40
  %12 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #37
  %13 = getelementptr i8, ptr %7, i64 16
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr %14, align 8
  %16 = call i32 %15(ptr %.fca.1.extract) #40
  %17 = icmp slt i32 %11, %16
  br i1 %17, label %.loopexit, label %18

18:                                               ; preds = %4
  %19 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %20 = call i32 %15(ptr %.fca.1.extract) #40
  %21 = shl i32 %20, 1
  %22 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %23 = getelementptr i8, ptr %14, i64 8
  %24 = load ptr, ptr %23, align 8
  call void %24(ptr %.fca.1.extract, i32 %21) #39
  %25 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %26 = load ptr, ptr %7, align 8
  %27 = load ptr, ptr %26, align 8
  %28 = call { ptr } %27(ptr %.fca.1.extract) #40
  %.fca.0.extract17 = extractvalue { ptr } %28, 0
  %29 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %30 = load ptr, ptr %13, align 8
  %31 = load ptr, ptr %30, align 8
  %32 = call i32 %31(ptr %.fca.1.extract) #40
  %33 = sext i32 %32 to i64
  %result.i = call noalias ptr @bump_malloc_inner(i64 noundef %33, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %34 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %35 = load ptr, ptr %7, align 8
  %36 = getelementptr i8, ptr %35, i64 8
  %37 = load ptr, ptr %36, align 8
  %38 = insertvalue { ptr } undef, ptr %result.i, 0
  call void %37(ptr %.fca.1.extract, { ptr } %38) #39
  %39 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %40 = load ptr, ptr %8, align 8
  %41 = load ptr, ptr %40, align 8
  %42 = call i32 %41(ptr %.fca.1.extract) #40
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %._crit_edge.lr.ph, label %.loopexit

._crit_edge.lr.ph:                                ; preds = %18
  %44 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.lr.ph, %._crit_edge
  %.043 = phi i32 [ 0, %._crit_edge.lr.ph ], [ %52, %._crit_edge ]
  %45 = zext nneg i32 %.043 to i64
  %46 = getelementptr i8, ptr %.fca.0.extract17, i64 %45
  %47 = load i8, ptr %46, align 1
  %48 = load ptr, ptr %7, align 8
  %49 = load ptr, ptr %48, align 8
  %50 = call { ptr } %49(ptr %.fca.1.extract) #40
  %.fca.0.extract5 = extractvalue { ptr } %50, 0
  %51 = getelementptr i8, ptr %.fca.0.extract5, i64 %45
  store i8 %47, ptr %51, align 1
  %52 = add nuw nsw i32 %.043, 1
  %53 = load ptr, ptr %8, align 8
  %54 = load ptr, ptr %53, align 8
  %55 = call i32 %54(ptr %.fca.1.extract) #40
  %56 = icmp slt i32 %52, %55
  br i1 %56, label %._crit_edge, label %.loopexit

.loopexit:                                        ; preds = %._crit_edge, %18, %4
  %57 = phi ptr [ %41, %18 ], [ %10, %4 ], [ %54, %._crit_edge ]
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %58 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %59 = load ptr, ptr %7, align 8
  %60 = load ptr, ptr %59, align 8
  %61 = call { ptr } %60(ptr %.fca.1.extract) #40
  %62 = extractvalue { ptr } %61, 0
  %63 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %64 = call i32 %57(ptr %.fca.1.extract) #40
  %65 = sext i32 %64 to i64
  %66 = getelementptr i8, ptr %62, i64 %65
  store i8 %3, ptr %66, align 1
  %67 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %68 = load ptr, ptr %8, align 8
  %69 = load ptr, ptr %68, align 8
  %70 = call i32 %69(ptr %.fca.1.extract) #40
  %71 = add i32 %70, 1
  %72 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %73 = getelementptr i8, ptr %68, i64 8
  %74 = load ptr, ptr %73, align 8
  call void %74(ptr %.fca.1.extract, i32 %71) #39
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i, align 4
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i, align 4
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i, align 8
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 6499063144389013426
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i13 = load i32, ptr %offset_ptr.i.i12, align 4
  %75 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %76 = insertvalue { ptr, ptr, ptr, i32 } %75, ptr %.fca.1.extract, 1
  %77 = insertvalue { ptr, ptr, ptr, i32 } %76, ptr %.fca.2.extract, 2
  %78 = insertvalue { ptr, ptr, ptr, i32 } %77, i32 %offset.i.i13, 3
  ret { ptr, ptr, ptr, i32 } %78
}

; Function Attrs: nounwind
define { ptr, ptr, ptr, i32 } @String_extend_strString({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3) #11 {
  %5 = alloca [0 x ptr], align 8
  %.fca.0.extract12 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract13 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract12, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract12, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract12, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8
  %product.i.i.i = mul i64 %hash_coef.i.i, 6499063144389013426
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4
  %.fca.0.extract11 = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract11, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract11, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract11, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 6499063144389013426
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i13 = load i32, ptr %offset_ptr.i.i12, align 4
  %6 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract11, 0
  %7 = insertvalue { ptr, ptr, ptr, i32 } %6, ptr %.fca.1.extract, 1
  %8 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %.fca.2.extract, 2
  %9 = insertvalue { ptr, ptr, ptr, i32 } %8, i32 %offset.i.i13, 3
  %10 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %5) #44
  %11 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef align 8 %.fca.0.extract11) #44
  %12 = sext i32 %offset.i.i13 to i64
  %13 = getelementptr ptr, ptr %.fca.0.extract11, i64 %12
  %14 = getelementptr i8, ptr %13, i64 72
  %15 = load ptr, ptr %14, align 8
  %result.i = call ptr %15({ ptr, ptr, ptr, i32 } %9, ptr nocapture nofree noundef nonnull readonly align 8 %5) #45
  %16 = call { ptr } %result.i({ ptr, ptr, ptr, i32 } %9, { ptr, ptr, ptr, i32 } %9, ptr nonnull align 8 %5) #42
  %.fca.0.extract = extractvalue { ptr } %16, 0
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %5)
  %18 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef align 8 %.fca.0.extract11)
  %19 = getelementptr i8, ptr %13, i64 56
  %20 = load ptr, ptr %19, align 8
  %result.i15 = call ptr %20({ ptr, ptr, ptr, i32 } %9, ptr nocapture nofree noundef nonnull readonly align 8 %5) #45
  %21 = call i32 %result.i15({ ptr, ptr, ptr, i32 } %9, { ptr, ptr, ptr, i32 } %9, ptr nonnull align 8 %5) #42
  %22 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract12)
  %23 = sext i32 %offset.i.i to i64
  %24 = getelementptr ptr, ptr %.fca.0.extract12, i64 %23
  %25 = getelementptr i8, ptr %24, i64 8
  %26 = load ptr, ptr %25, align 8
  %27 = load ptr, ptr %26, align 8
  %28 = call i32 %27(ptr %.fca.1.extract13) #40
  %29 = add i32 %28, %21
  %30 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract12)
  %31 = getelementptr i8, ptr %24, i64 16
  %32 = load ptr, ptr %31, align 8
  %33 = load ptr, ptr %32, align 8
  %34 = call i32 %33(ptr %.fca.1.extract13) #40
  %35 = icmp slt i32 %29, %34
  %36 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract12)
  %37 = call i32 %27(ptr %.fca.1.extract13) #40
  br i1 %35, label %._crit_edge1.preheader, label %58

._crit_edge1.preheader:                           ; preds = %4
  %38 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract12)
  %39 = call i32 %27(ptr %.fca.1.extract13) #40
  %40 = add i32 %39, %21
  %41 = icmp slt i32 %37, %40
  br i1 %41, label %._crit_edge.lr.ph, label %.loopexit

._crit_edge.lr.ph:                                ; preds = %._crit_edge1.preheader
  %42 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract12)
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.lr.ph, %._crit_edge
  %.071 = phi i32 [ %37, %._crit_edge.lr.ph ], [ %51, %._crit_edge ]
  %.06870 = phi i32 [ 0, %._crit_edge.lr.ph ], [ %52, %._crit_edge ]
  %43 = sext i32 %.06870 to i64
  %44 = getelementptr i8, ptr %.fca.0.extract, i64 %43
  %45 = load i8, ptr %44, align 1
  %46 = load ptr, ptr %24, align 8
  %47 = load ptr, ptr %46, align 8
  %48 = call { ptr } %47(ptr %.fca.1.extract13) #40
  %.fca.0.extract57 = extractvalue { ptr } %48, 0
  %49 = sext i32 %.071 to i64
  %50 = getelementptr i8, ptr %.fca.0.extract57, i64 %49
  store i8 %45, ptr %50, align 1
  %51 = add nsw i32 %.071, 1
  %52 = add i32 %.06870, 1
  %53 = load ptr, ptr %25, align 8
  %54 = load ptr, ptr %53, align 8
  %55 = call i32 %54(ptr %.fca.1.extract13) #40
  %56 = add i32 %55, %21
  %57 = icmp slt i32 %51, %56
  br i1 %57, label %._crit_edge, label %.loopexit

58:                                               ; preds = %4
  %59 = add i32 %37, %21
  %60 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract12)
  %61 = getelementptr i8, ptr %32, i64 8
  %62 = load ptr, ptr %61, align 8
  call void %62(ptr %.fca.1.extract13, i32 %59) #39
  %63 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract12)
  %64 = load ptr, ptr %24, align 8
  %65 = load ptr, ptr %64, align 8
  %66 = call { ptr } %65(ptr %.fca.1.extract13) #40
  %.fca.0.extract49 = extractvalue { ptr } %66, 0
  %67 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract12)
  %68 = load ptr, ptr %31, align 8
  %69 = load ptr, ptr %68, align 8
  %70 = call i32 %69(ptr %.fca.1.extract13) #40
  %71 = sext i32 %70 to i64
  %result.i16 = call noalias ptr @bump_malloc_inner(i64 noundef %71, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %72 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract12)
  %73 = load ptr, ptr %24, align 8
  %74 = getelementptr i8, ptr %73, i64 8
  %75 = load ptr, ptr %74, align 8
  %76 = insertvalue { ptr } undef, ptr %result.i16, 0
  call void %75(ptr %.fca.1.extract13, { ptr } %76) #39
  %77 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract12)
  %78 = load ptr, ptr %25, align 8
  %79 = load ptr, ptr %78, align 8
  %80 = call i32 %79(ptr %.fca.1.extract13) #40
  %81 = add i32 %80, %21
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %58
  %83 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract12)
  br label %84

84:                                               ; preds = %.lr.ph, %._crit_edge2
  %85 = phi ptr [ %79, %.lr.ph ], [ %109, %._crit_edge2 ]
  %.07068 = phi i32 [ 0, %.lr.ph ], [ %.171, %._crit_edge2 ]
  %.07267 = phi i32 [ 0, %.lr.ph ], [ %.173, %._crit_edge2 ]
  %86 = call i32 %85(ptr %.fca.1.extract13) #40
  %87 = icmp slt i32 %.07068, %86
  br i1 %87, label %88, label %97

88:                                               ; preds = %84
  %89 = zext nneg i32 %.07068 to i64
  %90 = getelementptr i8, ptr %.fca.0.extract49, i64 %89
  %91 = load i8, ptr %90, align 1
  %92 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract12)
  %93 = load ptr, ptr %24, align 8
  %94 = load ptr, ptr %93, align 8
  %95 = call { ptr } %94(ptr %.fca.1.extract13) #40
  %.fca.0.extract29 = extractvalue { ptr } %95, 0
  %96 = getelementptr i8, ptr %.fca.0.extract29, i64 %89
  store i8 %91, ptr %96, align 1
  br label %._crit_edge2

97:                                               ; preds = %84
  %98 = sext i32 %.07267 to i64
  %99 = getelementptr i8, ptr %.fca.0.extract, i64 %98
  %100 = load i8, ptr %99, align 1
  %101 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract12)
  %102 = load ptr, ptr %24, align 8
  %103 = load ptr, ptr %102, align 8
  %104 = call { ptr } %103(ptr %.fca.1.extract13) #40
  %.fca.0.extract24 = extractvalue { ptr } %104, 0
  %105 = zext nneg i32 %.07068 to i64
  %106 = getelementptr i8, ptr %.fca.0.extract24, i64 %105
  store i8 %100, ptr %106, align 1
  %107 = add i32 %.07267, 1
  br label %._crit_edge2

._crit_edge2:                                     ; preds = %97, %88
  %.173 = phi i32 [ %.07267, %88 ], [ %107, %97 ]
  %.171 = add nuw nsw i32 %.07068, 1
  %108 = load ptr, ptr %25, align 8
  %109 = load ptr, ptr %108, align 8
  %110 = call i32 %109(ptr %.fca.1.extract13) #40
  %111 = add i32 %110, %21
  %112 = icmp slt i32 %.171, %111
  br i1 %112, label %84, label %.loopexit

.loopexit:                                        ; preds = %._crit_edge2, %._crit_edge, %58, %._crit_edge1.preheader
  %113 = phi ptr [ %27, %._crit_edge1.preheader ], [ %79, %58 ], [ %54, %._crit_edge ], [ %109, %._crit_edge2 ]
  %114 = phi ptr [ %26, %._crit_edge1.preheader ], [ %78, %58 ], [ %53, %._crit_edge ], [ %108, %._crit_edge2 ]
  %.fca.2.extract14 = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %115 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract12)
  %116 = call i32 %113(ptr %.fca.1.extract13) #40
  %117 = add i32 %116, %21
  %118 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract12)
  %119 = getelementptr i8, ptr %114, i64 8
  %120 = load ptr, ptr %119, align 8
  call void %120(ptr %.fca.1.extract13, i32 %117) #39
  %hash_coef.i.i21 = load i64, ptr %hash_coef_ptr.i.i, align 4
  %tbl_size.i.i22 = load i64, ptr %tbl_size_ptr.i.i, align 4
  %offset_tbl.i.i23 = load ptr, ptr %offset_tbl_ptr.i.i, align 8
  %product.i.i.i24 = mul i64 %hash_coef.i.i21, 6499063144389013426
  %shifted.i.i.i25 = lshr i64 %product.i.i.i24, 32
  %xored.i.i.i26 = xor i64 %shifted.i.i.i25, %product.i.i.i24
  %hash.i.i.i27 = and i64 %xored.i.i.i26, %tbl_size.i.i22
  %offset_ptr.i.i28 = getelementptr i32, ptr %offset_tbl.i.i23, i64 %hash.i.i.i27
  %offset.i.i29 = load i32, ptr %offset_ptr.i.i28, align 4
  %121 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract12, 0
  %122 = insertvalue { ptr, ptr, ptr, i32 } %121, ptr %.fca.1.extract13, 1
  %123 = insertvalue { ptr, ptr, ptr, i32 } %122, ptr %.fca.2.extract14, 2
  %124 = insertvalue { ptr, ptr, ptr, i32 } %123, i32 %offset.i.i29, 3
  ret { ptr, ptr, ptr, i32 } %124
}

; Function Attrs: nounwind
define i8 @String__index_xi32({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, i32 %3) #11 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !510
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !510
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !510
  %product.i.i.i = mul i64 %hash_coef.i.i, 6499063144389013426
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !510
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract, i64 %6
  %8 = getelementptr i8, ptr %7, i64 8
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = call i32 %10(ptr %.fca.1.extract) #40
  %12 = add i32 %11, -1
  %13 = icmp sgt i32 %3, %12
  br i1 %13, label %14, label %._crit_edge

14:                                               ; preds = %4
  %current_coroutine.i = load ptr, ptr @current_coroutine, align 8
  %into_callee_buf.i = getelementptr i8, ptr %current_coroutine.i, i64 8
  call preserve_nonecc void @context_switch(ptr nocapture nofree noundef nonnull writeonly align 8 dereferenceable(24) %into_callee_buf.i, ptr noundef nonnull align 8 dereferenceable(24) @into_caller_buf) #54
  br label %._crit_edge

._crit_edge:                                      ; preds = %14, %4
  %15 = icmp sgt i32 %3, -1
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  br i1 %15, label %17, label %23

17:                                               ; preds = %._crit_edge
  %18 = load ptr, ptr %7, align 8
  %19 = load ptr, ptr %18, align 8
  %20 = call { ptr } %19(ptr %.fca.1.extract) #40
  %.fca.0.extract18 = extractvalue { ptr } %20, 0
  %21 = zext nneg i32 %3 to i64
  %22 = getelementptr i8, ptr %.fca.0.extract18, i64 %21
  br label %40

23:                                               ; preds = %._crit_edge
  %24 = load ptr, ptr %8, align 8
  %25 = load ptr, ptr %24, align 8
  %26 = call i32 %25(ptr %.fca.1.extract) #40
  %27 = add i32 %26, %3
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %._crit_edge1

29:                                               ; preds = %23
  %current_coroutine.i1 = load ptr, ptr @current_coroutine, align 8
  %into_callee_buf.i2 = getelementptr i8, ptr %current_coroutine.i1, i64 8
  call preserve_nonecc void @context_switch(ptr nocapture nofree noundef nonnull writeonly align 8 dereferenceable(24) %into_callee_buf.i2, ptr noundef nonnull align 8 dereferenceable(24) @into_caller_buf) #54
  %.pre = load ptr, ptr %8, align 8
  %.pre7 = load ptr, ptr %.pre, align 8
  br label %._crit_edge1

._crit_edge1:                                     ; preds = %29, %23
  %30 = phi ptr [ %.pre7, %29 ], [ %25, %23 ]
  %31 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract)
  %32 = load ptr, ptr %7, align 8
  %33 = load ptr, ptr %32, align 8
  %34 = call { ptr } %33(ptr %.fca.1.extract) #40
  %.fca.0.extract11 = extractvalue { ptr } %34, 0
  %35 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract)
  %36 = call i32 %30(ptr %.fca.1.extract) #40
  %37 = add i32 %36, %3
  %38 = sext i32 %37 to i64
  %39 = getelementptr i8, ptr %.fca.0.extract11, i64 %38
  br label %40

40:                                               ; preds = %._crit_edge1, %17
  %.reg2mem20.0.in = phi ptr [ %22, %17 ], [ %39, %._crit_edge1 ]
  %.reg2mem20.0 = load i8, ptr %.reg2mem20.0.in, align 1
  ret i8 %.reg2mem20.0
}

; Function Attrs: nounwind
define noundef i1 @String__EQ_otherString({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3) #11 {
  %5 = alloca [0 x ptr], align 8
  %.fca.0.extract2 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract3 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !513
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !513
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !513
  %product.i.i.i = mul i64 %hash_coef.i.i, 6499063144389013426
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !513
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !516
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !516
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !516
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 6499063144389013426
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i13 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !516
  %6 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef align 8 %.fca.0.extract2) #37
  %7 = sext i32 %offset.i.i to i64
  %8 = getelementptr ptr, ptr %.fca.0.extract2, i64 %7
  %9 = getelementptr i8, ptr %8, i64 8
  %10 = load ptr, ptr %9, align 8
  %11 = load ptr, ptr %10, align 8
  %12 = call i32 %11(ptr %.fca.1.extract3) #40
  %13 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.1.extract, 1
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, ptr %.fca.2.extract, 2
  %16 = insertvalue { ptr, ptr, ptr, i32 } %15, i32 %offset.i.i13, 3
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %5) #50
  %18 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef align 8 %.fca.0.extract) #50
  %19 = sext i32 %offset.i.i13 to i64
  %20 = getelementptr ptr, ptr %.fca.0.extract, i64 %19
  %21 = getelementptr i8, ptr %20, i64 56
  %22 = load ptr, ptr %21, align 8
  %result.i = call ptr %22({ ptr, ptr, ptr, i32 } %16, ptr nocapture nofree noundef nonnull readonly align 8 %5) #45
  %23 = call i32 %result.i({ ptr, ptr, ptr, i32 } %16, { ptr, ptr, ptr, i32 } %16, ptr nonnull align 8 %5) #42
  %.not = icmp eq i32 %12, %23
  br i1 %.not, label %.preheader.preheader, label %.loopexit

.preheader.preheader:                             ; preds = %4
  %24 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract2)
  %25 = getelementptr i8, ptr %20, i64 72
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %29
  %.0 = phi i32 [ %spec.select, %29 ], [ 0, %.preheader.preheader ]
  %26 = load ptr, ptr %9, align 8
  %27 = load ptr, ptr %26, align 8
  %28 = call i32 %27(ptr %.fca.1.extract3) #40
  %.not26.not.not.not.not.not = icmp sge i32 %.0, %28
  br i1 %.not26.not.not.not.not.not, label %.loopexit, label %29

29:                                               ; preds = %.preheader
  %30 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract2)
  %31 = load ptr, ptr %8, align 8
  %32 = load ptr, ptr %31, align 8
  %33 = call { ptr } %32(ptr %.fca.1.extract3) #40
  %.fca.0.extract17 = extractvalue { ptr } %33, 0
  %34 = zext nneg i32 %.0 to i64
  %35 = getelementptr i8, ptr %.fca.0.extract17, i64 %34
  %36 = load i8, ptr %35, align 1
  %37 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %5)
  %38 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract)
  %39 = load ptr, ptr %25, align 8
  %result.i15 = call ptr %39({ ptr, ptr, ptr, i32 } %16, ptr nocapture nofree noundef nonnull readonly align 8 %5) #45
  %40 = call { ptr } %result.i15({ ptr, ptr, ptr, i32 } %16, { ptr, ptr, ptr, i32 } %16, ptr nonnull align 8 %5) #42
  %.fca.0.extract14 = extractvalue { ptr } %40, 0
  %41 = getelementptr i8, ptr %.fca.0.extract14, i64 %34
  %42 = load i8, ptr %41, align 1
  %.not25 = icmp eq i8 %36, %42
  %43 = zext i1 %.not25 to i32
  %spec.select = add nuw nsw i32 %.0, %43
  br i1 %.not25, label %.preheader, label %.loopexit

.loopexit:                                        ; preds = %.preheader, %29, %4
  %.reg2mem42.0 = phi i1 [ false, %4 ], [ %.not26.not.not.not.not.not, %29 ], [ %.not26.not.not.not.not.not, %.preheader ]
  ret i1 %.reg2mem42.0
}

; Function Attrs: mustprogress nounwind willreturn
define { ptr, i8 } @String_pop_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #6 {
  %.fca.0.extract4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract5 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract4, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract4, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract4, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !519
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !519
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !519
  %product.i.i.i = mul i64 %hash_coef.i.i, 6499063144389013426
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !519
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef align 8 %.fca.0.extract4) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract4, i64 %5
  %7 = getelementptr i8, ptr %6, i64 8
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = call i32 %9(ptr %.fca.1.extract5) #40
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %30, label %12

12:                                               ; preds = %3
  %13 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract4) #50
  %14 = call i32 %9(ptr %.fca.1.extract5) #40
  %15 = add i32 %14, -1
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract4) #50
  %17 = getelementptr i8, ptr %8, i64 8
  %18 = load ptr, ptr %17, align 8
  call void %18(ptr %.fca.1.extract5, i32 %15) #39
  %19 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract4) #50
  %20 = load ptr, ptr %6, align 8
  %21 = load ptr, ptr %20, align 8
  %22 = call { ptr } %21(ptr %.fca.1.extract5) #40
  %.fca.0.extract10 = extractvalue { ptr } %22, 0
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract4) #50
  %24 = load ptr, ptr %7, align 8
  %25 = load ptr, ptr %24, align 8
  %26 = call i32 %25(ptr %.fca.1.extract5) #40
  %27 = sext i32 %26 to i64
  %28 = getelementptr i8, ptr %.fca.0.extract10, i64 %27
  %29 = load i8, ptr %28, align 1
  br label %30

30:                                               ; preds = %12, %3
  %.reg2mem19.sroa.0.0 = phi ptr [ @i8_typ, %12 ], [ @nil_typ, %3 ]
  %.reg2mem19.sroa.3.0 = phi i8 [ %29, %12 ], [ undef, %3 ]
  %.reload20.fca.0.insert = insertvalue { ptr, i8 } poison, ptr %.reg2mem19.sroa.0.0, 0
  %.reload20.fca.1.insert = insertvalue { ptr, i8 } %.reload20.fca.0.insert, i8 %.reg2mem19.sroa.3.0, 1
  ret { ptr, i8 } %.reload20.fca.1.insert
}

; Function Attrs: mustprogress nounwind willreturn
define { ptr, ptr, ptr, i32 } @String_copy_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #6 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8
  %product.i.i.i = mul i64 %hash_coef.i.i, 6499063144389013426
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract, i64 %5
  %7 = getelementptr i8, ptr %6, i64 8
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = call i32 %9(ptr %.fca.1.extract) #40
  %11 = sext i32 %10 to i64
  %result.i = call noalias ptr @bump_malloc_inner(i64 noundef %11, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %12 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %13 = load ptr, ptr %7, align 8
  %14 = load ptr, ptr %13, align 8
  %15 = call i32 %14(ptr %.fca.1.extract) #40
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %._crit_edge.lr.ph, label %._crit_edge1._crit_edge

._crit_edge.lr.ph:                                ; preds = %3
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.lr.ph, %._crit_edge
  %.048 = phi i32 [ 0, %._crit_edge.lr.ph ], [ %25, %._crit_edge ]
  %18 = load ptr, ptr %6, align 8
  %19 = load ptr, ptr %18, align 8
  %20 = call { ptr } %19(ptr %.fca.1.extract) #40
  %.fca.0.extract24 = extractvalue { ptr } %20, 0
  %21 = zext nneg i32 %.048 to i64
  %22 = getelementptr i8, ptr %.fca.0.extract24, i64 %21
  %23 = load i8, ptr %22, align 1
  %24 = getelementptr i8, ptr %result.i, i64 %21
  store i8 %23, ptr %24, align 1
  %25 = add nuw nsw i32 %.048, 1
  %26 = load ptr, ptr %7, align 8
  %27 = load ptr, ptr %26, align 8
  %28 = call i32 %27(ptr %.fca.1.extract) #40
  %29 = icmp slt i32 %25, %28
  br i1 %29, label %._crit_edge, label %._crit_edge1._crit_edge

._crit_edge1._crit_edge:                          ; preds = %._crit_edge, %3
  %30 = phi ptr [ %14, %3 ], [ %27, %._crit_edge ]
  %31 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %32 = call i32 %30(ptr %.fca.1.extract) #40
  %33 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %34 = call i32 %30(ptr %.fca.1.extract) #40
  %result.i2 = call noalias align 8 dereferenceable_or_null(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %35 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %36 = load ptr, ptr %7, align 8
  %37 = load ptr, ptr %36, align 8
  %38 = call i32 %37(ptr %.fca.1.extract) #40
  %39 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %40 = call i32 %37(ptr %.fca.1.extract) #40
  %41 = insertvalue { ptr, ptr, ptr, i32 } { ptr @String, ptr undef, ptr undef, i32 undef }, ptr %result.i2, 1
  %42 = insertvalue { ptr, ptr, ptr, i32 } %41, ptr undef, 2
  %43 = insertvalue { ptr, ptr, ptr, i32 } %42, i32 10, 3
  store ptr %result.i, ptr %result.i2, align 8
  %44 = getelementptr i8, ptr %result.i2, i64 8
  store i32 %38, ptr %44, align 8
  %45 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String) #37
  %46 = getelementptr i8, ptr %result.i2, i64 12
  store i32 %40, ptr %46, align 4
  ret { ptr, ptr, ptr, i32 } %43
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, argmem: read, inaccessiblemem: none)
define { ptr, ptr, ptr, i32 } @String_iterator_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #30 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %result.i1 = call noalias align 8 dereferenceable_or_null(40) ptr @bump_malloc_inner(i64 noundef 40, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %hash_coef.i.i6 = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !23
  %tbl_size.i.i7 = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !23
  %offset_tbl.i.i8 = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !23
  %product.i.i.i9 = mul i64 %hash_coef.i.i6, 6499063144389013426
  %shifted.i.i.i10 = lshr i64 %product.i.i.i9, 32
  %xored.i.i.i11 = xor i64 %shifted.i.i.i10, %product.i.i.i9
  %hash.i.i.i12 = and i64 %xored.i.i.i11, %tbl_size.i.i7
  %offset_ptr.i.i13 = getelementptr i32, ptr %offset_tbl.i.i8, i64 %hash.i.i.i12
  %offset.i.i14 = load i32, ptr %offset_ptr.i.i13, align 4, !noalias !23
  %4 = insertvalue { ptr, ptr, ptr, i32 } { ptr @StringIterator, ptr undef, ptr undef, i32 undef }, ptr %result.i1, 1
  %5 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr undef, 2
  store ptr %.fca.0.extract, ptr %result.i1, align 8
  %6 = getelementptr inbounds i8, ptr %result.i1, i64 8
  store ptr %.fca.1.extract, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %result.i1, i64 16
  store ptr %.fca.2.extract, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %result.i1, i64 24
  store i32 %offset.i.i14, ptr %8, align 8
  %9 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @StringIterator) #37
  %10 = insertvalue { ptr, ptr, ptr, i32 } %5, i32 17, 3
  ret { ptr, ptr, ptr, i32 } %10
}

define void @Iterable_each_fFunctionT_to_Nothing({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr } %3) #10 {
  %5 = alloca [0 x ptr], align 8
  %.fca.0.extract5 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract6 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract7 = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !522
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !522
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !522
  %product.i.i.i = mul i64 %hash_coef.i.i, 3037712219555723519
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !522
  %.fca.0.extract3 = extractvalue { ptr } %3, 0
  %6 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract5, 0
  %7 = insertvalue { ptr, ptr, ptr, i32 } %6, ptr %.fca.1.extract6, 1
  %8 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %.fca.2.extract7, 2
  %9 = insertvalue { ptr, ptr, ptr, i32 } %8, i32 %offset.i.i, 3
  %10 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %5) #44
  %11 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract5) #44
  %12 = sext i32 %offset.i.i to i64
  %13 = getelementptr ptr, ptr %.fca.0.extract5, i64 %12
  %14 = getelementptr i8, ptr %13, i64 8
  %15 = load ptr, ptr %14, align 8
  %result.i = call ptr %15({ ptr, ptr, ptr, i32 } %9, ptr nocapture nofree noundef nonnull readonly align 8 %5) #45
  %16 = call { ptr, ptr, ptr, i32 } %result.i({ ptr, ptr, ptr, i32 } %9, { ptr, ptr, ptr, i32 } %9, ptr nonnull align 8 %5) #42
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %16, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %16, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %16, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 8673632051301757104
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !525
  %17 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %18 = insertvalue { ptr, ptr, ptr, i32 } %17, ptr %.fca.1.extract, 1
  %19 = insertvalue { ptr, ptr, ptr, i32 } %18, ptr %.fca.2.extract, 2
  %20 = insertvalue { ptr, ptr, ptr, i32 } %19, i32 %offset.i.i27, 3
  %21 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %5)
  %22 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef align 8 %.fca.0.extract)
  %23 = sext i32 %offset.i.i27 to i64
  %24 = getelementptr ptr, ptr %.fca.0.extract, i64 %23
  %25 = getelementptr i8, ptr %24, i64 8
  %26 = load ptr, ptr %25, align 8
  %result.i2936 = call ptr %26({ ptr, ptr, ptr, i32 } %20, ptr nocapture nofree noundef nonnull readonly align 8 %5) #45
  %27 = call { ptr, i160 } %result.i2936({ ptr, ptr, ptr, i32 } %20, { ptr, ptr, ptr, i32 } %20, ptr nonnull align 8 %5) #42
  %.fca.0.extract2237 = extractvalue { ptr, i160 } %27, 0
  %28 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract5)
  %29 = icmp ne ptr %.fca.0.extract2237, @nil_typ
  %30 = icmp ne ptr %.fca.0.extract2237, null
  %.not2838 = and i1 %29, %30
  br i1 %.not2838, label %._crit_edge, label %.critedge

._crit_edge:                                      ; preds = %4, %._crit_edge
  %31 = phi { ptr, i160 } [ %33, %._crit_edge ], [ %27, %4 ]
  call void %.fca.0.extract3({ ptr, i160 } %31)
  %32 = load ptr, ptr %25, align 8
  %result.i29 = call ptr %32({ ptr, ptr, ptr, i32 } %20, ptr nocapture nofree noundef nonnull readonly %5) #45
  %33 = call { ptr, i160 } %result.i29({ ptr, ptr, ptr, i32 } %20, { ptr, ptr, ptr, i32 } %20, ptr nonnull align 8 %5) #42
  %.fca.0.extract22 = extractvalue { ptr, i160 } %33, 0
  %34 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract5)
  %35 = icmp ne ptr %.fca.0.extract22, @nil_typ
  %36 = icmp ne ptr %.fca.0.extract22, null
  %.not28 = and i1 %35, %36
  br i1 %.not28, label %._crit_edge, label %.critedge

.critedge:                                        ; preds = %._crit_edge, %4
  ret void
}

define { ptr, i160 } @Iterable_reduce_accumulatorT_fFunctionT._T_to_T({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, i160 } %3, { ptr } %4) #10 {
  %6 = alloca [0 x ptr], align 8
  %.fca.0.extract13 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract14 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract15 = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract13, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract13, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract13, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !528
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !528
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !528
  %product.i.i.i = mul i64 %hash_coef.i.i, 3037712219555723519
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !528
  %.fca.0.extract3 = extractvalue { ptr } %4, 0
  %7 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract13, 0
  %8 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %.fca.1.extract14, 1
  %9 = insertvalue { ptr, ptr, ptr, i32 } %8, ptr %.fca.2.extract15, 2
  %10 = insertvalue { ptr, ptr, ptr, i32 } %9, i32 %offset.i.i, 3
  %11 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %6) #44
  %12 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract13) #44
  %13 = sext i32 %offset.i.i to i64
  %14 = getelementptr ptr, ptr %.fca.0.extract13, i64 %13
  %15 = getelementptr i8, ptr %14, i64 8
  %16 = load ptr, ptr %15, align 8
  %result.i = call ptr %16({ ptr, ptr, ptr, i32 } %10, ptr nocapture nofree noundef nonnull readonly align 8 %6) #45
  %17 = call { ptr, ptr, ptr, i32 } %result.i({ ptr, ptr, ptr, i32 } %10, { ptr, ptr, ptr, i32 } %10, ptr nonnull align 8 %6) #42
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %17, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %17, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %17, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 8673632051301757104
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !531
  %18 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %19 = insertvalue { ptr, ptr, ptr, i32 } %18, ptr %.fca.1.extract, 1
  %20 = insertvalue { ptr, ptr, ptr, i32 } %19, ptr %.fca.2.extract, 2
  %21 = insertvalue { ptr, ptr, ptr, i32 } %20, i32 %offset.i.i27, 3
  %22 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %6)
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef align 8 %.fca.0.extract)
  %24 = sext i32 %offset.i.i27 to i64
  %25 = getelementptr ptr, ptr %.fca.0.extract, i64 %24
  %26 = getelementptr i8, ptr %25, i64 8
  %27 = load ptr, ptr %26, align 8
  %result.i2941 = call ptr %27({ ptr, ptr, ptr, i32 } %21, ptr nocapture nofree noundef nonnull readonly align 8 %6) #45
  %28 = call { ptr, i160 } %result.i2941({ ptr, ptr, ptr, i32 } %21, { ptr, ptr, ptr, i32 } %21, ptr nonnull align 8 %6) #42
  %.fca.0.extract4042 = extractvalue { ptr, i160 } %28, 0
  %29 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract13)
  %30 = icmp ne ptr %.fca.0.extract4042, @nil_typ
  %31 = icmp ne ptr %.fca.0.extract4042, null
  %.not4843 = and i1 %30, %31
  br i1 %.not4843, label %._crit_edge, label %._crit_edge1._crit_edge

._crit_edge:                                      ; preds = %5, %._crit_edge
  %32 = phi { ptr, i160 } [ %35, %._crit_edge ], [ %28, %5 ]
  %.pn44 = phi { ptr, i160 } [ %33, %._crit_edge ], [ %3, %5 ]
  %33 = call { ptr, i160 } %.fca.0.extract3({ ptr, i160 } %.pn44, { ptr, i160 } %32)
  %34 = load ptr, ptr %26, align 8
  %result.i29 = call ptr %34({ ptr, ptr, ptr, i32 } %21, ptr nocapture nofree noundef nonnull readonly %6) #45
  %35 = call { ptr, i160 } %result.i29({ ptr, ptr, ptr, i32 } %21, { ptr, ptr, ptr, i32 } %21, ptr nonnull align 8 %6) #42
  %.fca.0.extract40 = extractvalue { ptr, i160 } %35, 0
  %36 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract13)
  %37 = icmp ne ptr %.fca.0.extract40, @nil_typ
  %38 = icmp ne ptr %.fca.0.extract40, null
  %.not48 = and i1 %37, %38
  br i1 %.not48, label %._crit_edge, label %._crit_edge1._crit_edge

._crit_edge1._crit_edge:                          ; preds = %._crit_edge, %5
  %.pn.lcssa = phi { ptr, i160 } [ %3, %5 ], [ %33, %._crit_edge ]
  ret { ptr, i160 } %.pn.lcssa
}

define noundef i1 @Iterable_all_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr } %3) #10 {
  %5 = alloca [0 x ptr], align 8
  %.fca.0.extract5 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract6 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract7 = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !534
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !534
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !534
  %product.i.i.i = mul i64 %hash_coef.i.i, 3037712219555723519
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !534
  %.fca.0.extract3 = extractvalue { ptr } %3, 0
  %6 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract5, 0
  %7 = insertvalue { ptr, ptr, ptr, i32 } %6, ptr %.fca.1.extract6, 1
  %8 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %.fca.2.extract7, 2
  %9 = insertvalue { ptr, ptr, ptr, i32 } %8, i32 %offset.i.i, 3
  %10 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %5) #44
  %11 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract5) #44
  %12 = sext i32 %offset.i.i to i64
  %13 = getelementptr ptr, ptr %.fca.0.extract5, i64 %12
  %14 = getelementptr i8, ptr %13, i64 8
  %15 = load ptr, ptr %14, align 8
  %result.i = call ptr %15({ ptr, ptr, ptr, i32 } %9, ptr nocapture nofree noundef nonnull readonly align 8 %5) #45
  %16 = call { ptr, ptr, ptr, i32 } %result.i({ ptr, ptr, ptr, i32 } %9, { ptr, ptr, ptr, i32 } %9, ptr nonnull align 8 %5) #42
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %16, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %16, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %16, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 8673632051301757104
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !537
  %17 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %18 = insertvalue { ptr, ptr, ptr, i32 } %17, ptr %.fca.1.extract, 1
  %19 = insertvalue { ptr, ptr, ptr, i32 } %18, ptr %.fca.2.extract, 2
  %20 = insertvalue { ptr, ptr, ptr, i32 } %19, i32 %offset.i.i27, 3
  %21 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %5)
  %22 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef align 8 %.fca.0.extract)
  %23 = sext i32 %offset.i.i27 to i64
  %24 = getelementptr ptr, ptr %.fca.0.extract, i64 %23
  %25 = getelementptr i8, ptr %24, i64 8
  br label %26

26:                                               ; preds = %32, %4
  %27 = load ptr, ptr %25, align 8
  %result.i29 = call ptr %27({ ptr, ptr, ptr, i32 } %20, ptr nocapture nofree noundef nonnull readonly align 8 %5) #45
  %28 = call { ptr, i160 } %result.i29({ ptr, ptr, ptr, i32 } %20, { ptr, ptr, ptr, i32 } %20, ptr nonnull align 8 %5) #42
  %.fca.0.extract25 = extractvalue { ptr, i160 } %28, 0
  %29 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract5)
  %30 = icmp eq ptr %.fca.0.extract25, @nil_typ
  %31 = icmp eq ptr %.fca.0.extract25, null
  %.not28.not = or i1 %30, %31
  br i1 %.not28.not, label %.critedge.cont, label %32

32:                                               ; preds = %26
  %33 = call i1 %.fca.0.extract3({ ptr, i160 } %28)
  br i1 %33, label %26, label %.critedge.cont

.critedge.cont:                                   ; preds = %32, %26
  ret i1 %.not28.not
}

define noundef i1 @Iterable_any_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr } %3) #10 {
  %5 = alloca [0 x ptr], align 8
  %.fca.0.extract5 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract6 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract7 = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !540
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !540
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !540
  %product.i.i.i = mul i64 %hash_coef.i.i, 3037712219555723519
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !540
  %.fca.0.extract3 = extractvalue { ptr } %3, 0
  %6 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract5, 0
  %7 = insertvalue { ptr, ptr, ptr, i32 } %6, ptr %.fca.1.extract6, 1
  %8 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %.fca.2.extract7, 2
  %9 = insertvalue { ptr, ptr, ptr, i32 } %8, i32 %offset.i.i, 3
  %10 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %5) #44
  %11 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract5) #44
  %12 = sext i32 %offset.i.i to i64
  %13 = getelementptr ptr, ptr %.fca.0.extract5, i64 %12
  %14 = getelementptr i8, ptr %13, i64 8
  %15 = load ptr, ptr %14, align 8
  %result.i = call ptr %15({ ptr, ptr, ptr, i32 } %9, ptr nocapture nofree noundef nonnull readonly align 8 %5) #45
  %16 = call { ptr, ptr, ptr, i32 } %result.i({ ptr, ptr, ptr, i32 } %9, { ptr, ptr, ptr, i32 } %9, ptr nonnull align 8 %5) #42
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %16, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %16, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %16, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 8673632051301757104
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !543
  %17 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %18 = insertvalue { ptr, ptr, ptr, i32 } %17, ptr %.fca.1.extract, 1
  %19 = insertvalue { ptr, ptr, ptr, i32 } %18, ptr %.fca.2.extract, 2
  %20 = insertvalue { ptr, ptr, ptr, i32 } %19, i32 %offset.i.i27, 3
  %21 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %5)
  %22 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef align 8 %.fca.0.extract)
  %23 = sext i32 %offset.i.i27 to i64
  %24 = getelementptr ptr, ptr %.fca.0.extract, i64 %23
  %25 = getelementptr i8, ptr %24, i64 8
  br label %26

26:                                               ; preds = %32, %4
  %27 = load ptr, ptr %25, align 8
  %result.i29 = call ptr %27({ ptr, ptr, ptr, i32 } %20, ptr nocapture nofree noundef nonnull readonly align 8 %5) #45
  %28 = call { ptr, i160 } %result.i29({ ptr, ptr, ptr, i32 } %20, { ptr, ptr, ptr, i32 } %20, ptr nonnull align 8 %5) #42
  %.fca.0.extract23 = extractvalue { ptr, i160 } %28, 0
  %29 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract5)
  %30 = icmp ne ptr %.fca.0.extract23, @nil_typ
  %31 = icmp ne ptr %.fca.0.extract23, null
  %.not26 = and i1 %30, %31
  br i1 %.not26, label %32, label %.critedge.cont

32:                                               ; preds = %26
  %33 = call i1 %.fca.0.extract3({ ptr, i160 } %28)
  br i1 %33, label %.critedge.cont, label %26

.critedge.cont:                                   ; preds = %32, %26
  ret i1 %.not26
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(readwrite, inaccessiblemem: none)
define { ptr, ptr, ptr, i32 } @Iterable_map_fFunctionT_to_U({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %2, { ptr } %3) #27 {
  %.fca.0.extract8 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract8, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract8, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract8, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !546
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !546
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !546
  %product.i.i.i = mul i64 %hash_coef.i.i, 3037712219555723519
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !546
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract8) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract8, i64 %6
  %8 = load ptr, ptr %7, align 8
  %result.i = call ptr %8(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract) #41
  %9 = load ptr, ptr %2, align 8
  %10 = getelementptr i8, ptr %9, i64 8
  %11 = load ptr, ptr %10, align 8
  %result.i2 = call noalias nonnull align 8 dereferenceable(56) ptr @bump_malloc_inner(i64 noundef 56, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i, ptr %result.i2, align 8
  %12 = getelementptr inbounds i8, ptr %result.i2, i64 8
  store ptr %11, ptr %12, align 8
  %13 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(56) %result.i2) #37
  %hash_coef.i.i7 = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !23
  %tbl_size.i.i8 = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !23
  %offset_tbl.i.i9 = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !23
  %product.i.i.i10 = mul i64 %hash_coef.i.i7, 3037712219555723519
  %shifted.i.i.i11 = lshr i64 %product.i.i.i10, 32
  %xored.i.i.i12 = xor i64 %shifted.i.i.i11, %product.i.i.i10
  %hash.i.i.i13 = and i64 %xored.i.i.i12, %tbl_size.i.i8
  %offset_ptr.i.i14 = getelementptr i32, ptr %offset_tbl.i.i9, i64 %hash.i.i.i13
  %offset.i.i15 = load i32, ptr %offset_ptr.i.i14, align 4, !noalias !23
  %14 = insertvalue { ptr, ptr, ptr, i32 } { ptr @MapIterable, ptr undef, ptr undef, i32 undef }, ptr %result.i2, 1
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, ptr undef, 2
  %16 = insertvalue { ptr, ptr, ptr, i32 } %15, i32 10, 3
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract8) #37
  %18 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract8) #37
  %19 = getelementptr inbounds i8, ptr %result.i2, i64 16
  store ptr %.fca.0.extract8, ptr %19, align 8
  %20 = getelementptr inbounds i8, ptr %result.i2, i64 24
  store ptr %.fca.1.extract, ptr %20, align 8
  %21 = getelementptr inbounds i8, ptr %result.i2, i64 32
  store ptr %.fca.2.extract, ptr %21, align 8
  %22 = getelementptr inbounds i8, ptr %result.i2, i64 40
  store i32 %offset.i.i15, ptr %22, align 8
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 408, ptr nocapture nofree noundef nonnull align 16 dereferenceable(488) @MapIterable) #37
  %24 = getelementptr inbounds i8, ptr %result.i2, i64 48
  %.fca.0.extract.i = extractvalue { ptr } %3, 0
  store ptr %.fca.0.extract.i, ptr %24, align 8
  ret { ptr, ptr, ptr, i32 } %16
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(readwrite, inaccessiblemem: none)
define { ptr, ptr, ptr, i32 } @Iterable_filter_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr } %3) #27 {
  %.fca.0.extract8 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract8, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract8, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract8, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !549
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !549
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !549
  %product.i.i.i = mul i64 %hash_coef.i.i, 3037712219555723519
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !549
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract8) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract8, i64 %6
  %8 = load ptr, ptr %7, align 8
  %result.i = call ptr %8(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract) #41
  %result.i2 = call noalias nonnull align 8 dereferenceable(48) ptr @bump_malloc_inner(i64 noundef 48, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i, ptr %result.i2, align 8
  %9 = call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(48) %result.i2) #37
  %hash_coef.i.i7 = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !23
  %tbl_size.i.i8 = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !23
  %offset_tbl.i.i9 = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !23
  %product.i.i.i10 = mul i64 %hash_coef.i.i7, 3037712219555723519
  %shifted.i.i.i11 = lshr i64 %product.i.i.i10, 32
  %xored.i.i.i12 = xor i64 %shifted.i.i.i11, %product.i.i.i10
  %hash.i.i.i13 = and i64 %xored.i.i.i12, %tbl_size.i.i8
  %offset_ptr.i.i14 = getelementptr i32, ptr %offset_tbl.i.i9, i64 %hash.i.i.i13
  %offset.i.i15 = load i32, ptr %offset_ptr.i.i14, align 4, !noalias !23
  %10 = insertvalue { ptr, ptr, ptr, i32 } { ptr @FilterIterable, ptr undef, ptr undef, i32 undef }, ptr %result.i2, 1
  %11 = insertvalue { ptr, ptr, ptr, i32 } %10, ptr undef, 2
  %12 = insertvalue { ptr, ptr, ptr, i32 } %11, i32 10, 3
  %13 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract8) #37
  %14 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract8) #37
  %15 = getelementptr inbounds i8, ptr %result.i2, i64 8
  store ptr %.fca.0.extract8, ptr %15, align 8
  %16 = getelementptr inbounds i8, ptr %result.i2, i64 16
  store ptr %.fca.1.extract, ptr %16, align 8
  %17 = getelementptr inbounds i8, ptr %result.i2, i64 24
  store ptr %.fca.2.extract, ptr %17, align 8
  %18 = getelementptr inbounds i8, ptr %result.i2, i64 32
  store i32 %offset.i.i15, ptr %18, align 8
  %19 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef nonnull align 16 dereferenceable(480) @FilterIterable) #37
  %20 = getelementptr inbounds i8, ptr %result.i2, i64 40
  %.fca.0.extract.i = extractvalue { ptr } %3, 0
  store ptr %.fca.0.extract.i, ptr %20, align 8
  ret { ptr, ptr, ptr, i32 } %12
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(readwrite, inaccessiblemem: none)
define { ptr, ptr, ptr, i32 } @Iterable_chain_otherIterableT({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3) #27 {
  %.fca.0.extract7 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract8 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract9 = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract7, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract7, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract7, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !552
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !552
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !552
  %product.i.i.i = mul i64 %hash_coef.i.i, 3037712219555723519
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !552
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract7) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract7, i64 %6
  %8 = load ptr, ptr %7, align 8
  %result.i = call ptr %8(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract8) #41
  %result.i16 = call noalias nonnull align 8 dereferenceable(72) ptr @bump_malloc_inner(i64 noundef 72, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i, ptr %result.i16, align 8
  %9 = call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(72) %result.i16) #37
  %hash_coef.i.i21 = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !23
  %tbl_size.i.i22 = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !23
  %offset_tbl.i.i23 = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !23
  %product.i.i.i24 = mul i64 %hash_coef.i.i21, 3037712219555723519
  %shifted.i.i.i25 = lshr i64 %product.i.i.i24, 32
  %xored.i.i.i26 = xor i64 %shifted.i.i.i25, %product.i.i.i24
  %hash.i.i.i27 = and i64 %xored.i.i.i26, %tbl_size.i.i22
  %offset_ptr.i.i28 = getelementptr i32, ptr %offset_tbl.i.i23, i64 %hash.i.i.i27
  %offset.i.i29 = load i32, ptr %offset_ptr.i.i28, align 4, !noalias !23
  %10 = insertvalue { ptr, ptr, ptr, i32 } { ptr @ChainIterable, ptr undef, ptr undef, i32 undef }, ptr %result.i16, 1
  %11 = insertvalue { ptr, ptr, ptr, i32 } %10, ptr undef, 2
  %12 = insertvalue { ptr, ptr, ptr, i32 } %11, i32 10, 3
  %13 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract7) #37
  %14 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract7) #37
  %15 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef nonnull align 16 dereferenceable(480) @ChainIterable) #37
  %16 = getelementptr inbounds i8, ptr %result.i16, i64 8
  store ptr %.fca.0.extract7, ptr %16, align 8
  %17 = getelementptr inbounds i8, ptr %result.i16, i64 16
  store ptr %.fca.1.extract8, ptr %17, align 8
  %18 = getelementptr inbounds i8, ptr %result.i16, i64 24
  store ptr %.fca.2.extract9, ptr %18, align 8
  %19 = getelementptr inbounds i8, ptr %result.i16, i64 32
  store i32 %offset.i.i29, ptr %19, align 8
  %hash_coef.i.i100 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i101 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i102 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i103 = mul i64 %hash_coef.i.i100, 3037712219555723519
  %shifted.i.i.i104 = lshr i64 %product.i.i.i103, 32
  %xored.i.i.i105 = xor i64 %shifted.i.i.i104, %product.i.i.i103
  %hash.i.i.i106 = and i64 %xored.i.i.i105, %tbl_size.i.i101
  %offset_ptr.i.i107 = getelementptr i32, ptr %offset_tbl.i.i102, i64 %hash.i.i.i106
  %offset.i.i95 = load i32, ptr %offset_ptr.i.i107, align 4, !noalias !555
  %20 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef nonnull align 16 dereferenceable(480) @ChainIterable) #37
  %21 = getelementptr inbounds i8, ptr %result.i16, i64 40
  store ptr %.fca.0.extract, ptr %21, align 8
  %22 = getelementptr inbounds i8, ptr %result.i16, i64 48
  store ptr %.fca.1.extract, ptr %22, align 8
  %23 = getelementptr inbounds i8, ptr %result.i16, i64 56
  store ptr %.fca.2.extract, ptr %23, align 8
  %24 = getelementptr inbounds i8, ptr %result.i16, i64 64
  store i32 %offset.i.i95, ptr %24, align 8
  ret { ptr, ptr, ptr, i32 } %12
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(readwrite, inaccessiblemem: none)
define { ptr, ptr, ptr, i32 } @Iterable_interleave_otherIterableT({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3) #27 {
  %.fca.0.extract7 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract8 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract9 = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract7, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract7, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract7, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !558
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !558
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !558
  %product.i.i.i = mul i64 %hash_coef.i.i, 3037712219555723519
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !558
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract7) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract7, i64 %6
  %8 = load ptr, ptr %7, align 8
  %result.i = call ptr %8(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract8) #41
  %result.i16 = call noalias nonnull align 8 dereferenceable(72) ptr @bump_malloc_inner(i64 noundef 72, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i, ptr %result.i16, align 8
  %9 = call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(72) %result.i16) #37
  %hash_coef.i.i21 = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !23
  %tbl_size.i.i22 = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !23
  %offset_tbl.i.i23 = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !23
  %product.i.i.i24 = mul i64 %hash_coef.i.i21, 3037712219555723519
  %shifted.i.i.i25 = lshr i64 %product.i.i.i24, 32
  %xored.i.i.i26 = xor i64 %shifted.i.i.i25, %product.i.i.i24
  %hash.i.i.i27 = and i64 %xored.i.i.i26, %tbl_size.i.i22
  %offset_ptr.i.i28 = getelementptr i32, ptr %offset_tbl.i.i23, i64 %hash.i.i.i27
  %offset.i.i29 = load i32, ptr %offset_ptr.i.i28, align 4, !noalias !23
  %10 = insertvalue { ptr, ptr, ptr, i32 } { ptr @InterleaveIterable, ptr undef, ptr undef, i32 undef }, ptr %result.i16, 1
  %11 = insertvalue { ptr, ptr, ptr, i32 } %10, ptr undef, 2
  %12 = insertvalue { ptr, ptr, ptr, i32 } %11, i32 10, 3
  %13 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract7) #37
  %14 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract7) #37
  %15 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef nonnull align 16 dereferenceable(480) @InterleaveIterable) #37
  %16 = getelementptr inbounds i8, ptr %result.i16, i64 8
  store ptr %.fca.0.extract7, ptr %16, align 8
  %17 = getelementptr inbounds i8, ptr %result.i16, i64 16
  store ptr %.fca.1.extract8, ptr %17, align 8
  %18 = getelementptr inbounds i8, ptr %result.i16, i64 24
  store ptr %.fca.2.extract9, ptr %18, align 8
  %19 = getelementptr inbounds i8, ptr %result.i16, i64 32
  store i32 %offset.i.i29, ptr %19, align 8
  %hash_coef.i.i100 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i101 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i102 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i103 = mul i64 %hash_coef.i.i100, 3037712219555723519
  %shifted.i.i.i104 = lshr i64 %product.i.i.i103, 32
  %xored.i.i.i105 = xor i64 %shifted.i.i.i104, %product.i.i.i103
  %hash.i.i.i106 = and i64 %xored.i.i.i105, %tbl_size.i.i101
  %offset_ptr.i.i107 = getelementptr i32, ptr %offset_tbl.i.i102, i64 %hash.i.i.i106
  %offset.i.i95 = load i32, ptr %offset_ptr.i.i107, align 4, !noalias !561
  %20 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef nonnull align 16 dereferenceable(480) @InterleaveIterable) #37
  %21 = getelementptr inbounds i8, ptr %result.i16, i64 40
  store ptr %.fca.0.extract, ptr %21, align 8
  %22 = getelementptr inbounds i8, ptr %result.i16, i64 48
  store ptr %.fca.1.extract, ptr %22, align 8
  %23 = getelementptr inbounds i8, ptr %result.i16, i64 56
  store ptr %.fca.2.extract, ptr %23, align 8
  %24 = getelementptr inbounds i8, ptr %result.i16, i64 64
  store i32 %offset.i.i95, ptr %24, align 8
  ret { ptr, ptr, ptr, i32 } %12
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(readwrite, inaccessiblemem: none)
define { ptr, ptr, ptr, i32 } @Iterable_zip_otherIterableU({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3) #27 {
  %.fca.0.extract30 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract31 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract32 = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract30, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract30, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract30, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !564
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !564
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !564
  %product.i.i.i = mul i64 %hash_coef.i.i, 3037712219555723519
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !564
  %.fca.0.extract23 = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract24 = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract25 = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %.fca.3.extract26 = extractvalue { ptr, ptr, ptr, i32 } %3, 3
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract23, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract23, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract23, i64 40
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract30) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract30, i64 %6
  %8 = load ptr, ptr %7, align 8
  %result.i = call ptr %8(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract31) #41
  %9 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract23) #37
  %10 = sext i32 %.fca.3.extract26 to i64
  %11 = getelementptr ptr, ptr %.fca.0.extract23, i64 %10
  %12 = load ptr, ptr %11, align 8
  %result.i15 = call ptr %12(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract24) #41
  %13 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract30) #37
  %14 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract23) #37
  %result.i16 = call noalias nonnull align 8 dereferenceable(32) ptr @bump_malloc_inner(i64 noundef 32, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %15 = getelementptr inbounds i8, ptr %result.i16, i64 16
  store ptr %result.i15, ptr %15, align 8
  %16 = getelementptr inbounds i8, ptr %result.i16, i64 8
  store ptr %result.i, ptr %16, align 8
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(32) %result.i16) #37
  store ptr @Pair, ptr %result.i16, align 8
  %result.i18 = call noalias nonnull align 8 dereferenceable(88) ptr @bump_malloc_inner(i64 noundef 88, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i, ptr %result.i18, align 8
  %18 = getelementptr inbounds i8, ptr %result.i18, i64 8
  store ptr %result.i15, ptr %18, align 8
  %19 = getelementptr inbounds i8, ptr %result.i18, i64 16
  store ptr %result.i16, ptr %19, align 8
  %20 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(88) %result.i18) #37
  %hash_coef.i.i23 = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !23
  %tbl_size.i.i24 = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !23
  %offset_tbl.i.i25 = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !23
  %product.i.i.i26 = mul i64 %hash_coef.i.i23, 3037712219555723519
  %shifted.i.i.i27 = lshr i64 %product.i.i.i26, 32
  %xored.i.i.i28 = xor i64 %shifted.i.i.i27, %product.i.i.i26
  %hash.i.i.i29 = and i64 %xored.i.i.i28, %tbl_size.i.i24
  %offset_ptr.i.i30 = getelementptr i32, ptr %offset_tbl.i.i25, i64 %hash.i.i.i29
  %offset.i.i31 = load i32, ptr %offset_ptr.i.i30, align 4, !noalias !23
  %21 = insertvalue { ptr, ptr, ptr, i32 } { ptr @ZipIterable, ptr undef, ptr undef, i32 undef }, ptr %result.i18, 1
  %22 = insertvalue { ptr, ptr, ptr, i32 } %21, ptr undef, 2
  %23 = insertvalue { ptr, ptr, ptr, i32 } %22, i32 10, 3
  %24 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract30) #37
  %25 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract23) #37
  %26 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef nonnull align 16 dereferenceable(496) @ZipIterable) #37
  %27 = getelementptr inbounds i8, ptr %result.i18, i64 24
  store ptr %.fca.0.extract30, ptr %27, align 8
  %28 = getelementptr inbounds i8, ptr %result.i18, i64 32
  store ptr %.fca.1.extract31, ptr %28, align 8
  %29 = getelementptr inbounds i8, ptr %result.i18, i64 40
  store ptr %.fca.2.extract32, ptr %29, align 8
  %30 = getelementptr inbounds i8, ptr %result.i18, i64 48
  store i32 %offset.i.i31, ptr %30, align 8
  %hash_coef.i.i102 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i103 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i104 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i105 = mul i64 %hash_coef.i.i102, 3037712219555723519
  %shifted.i.i.i106 = lshr i64 %product.i.i.i105, 32
  %xored.i.i.i107 = xor i64 %shifted.i.i.i106, %product.i.i.i105
  %hash.i.i.i108 = and i64 %xored.i.i.i107, %tbl_size.i.i103
  %offset_ptr.i.i109 = getelementptr i32, ptr %offset_tbl.i.i104, i64 %hash.i.i.i108
  %offset.i.i97 = load i32, ptr %offset_ptr.i.i109, align 4, !noalias !567
  %31 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef nonnull align 16 dereferenceable(496) @ZipIterable) #37
  %32 = getelementptr inbounds i8, ptr %result.i18, i64 56
  store ptr %.fca.0.extract23, ptr %32, align 8
  %33 = getelementptr inbounds i8, ptr %result.i18, i64 64
  store ptr %.fca.1.extract24, ptr %33, align 8
  %34 = getelementptr inbounds i8, ptr %result.i18, i64 72
  store ptr %.fca.2.extract25, ptr %34, align 8
  %35 = getelementptr inbounds i8, ptr %result.i18, i64 80
  store i32 %offset.i.i97, ptr %35, align 8
  ret { ptr, ptr, ptr, i32 } %23
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(readwrite, inaccessiblemem: none)
define { ptr, ptr, ptr, i32 } @Iterable_product_otherIterableU({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3) #27 {
  %.fca.0.extract30 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract31 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract32 = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract30, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract30, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract30, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !570
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !570
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !570
  %product.i.i.i = mul i64 %hash_coef.i.i, 3037712219555723519
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !570
  %.fca.0.extract23 = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract24 = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract25 = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %.fca.3.extract26 = extractvalue { ptr, ptr, ptr, i32 } %3, 3
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract23, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract23, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract23, i64 40
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract30) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract30, i64 %6
  %8 = load ptr, ptr %7, align 8
  %result.i = call ptr %8(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract31) #41
  %9 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract23) #37
  %10 = sext i32 %.fca.3.extract26 to i64
  %11 = getelementptr ptr, ptr %.fca.0.extract23, i64 %10
  %12 = load ptr, ptr %11, align 8
  %result.i15 = call ptr %12(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract24) #41
  %13 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract30) #37
  %14 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract23) #37
  %result.i16 = call noalias nonnull align 8 dereferenceable(32) ptr @bump_malloc_inner(i64 noundef 32, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %15 = getelementptr inbounds i8, ptr %result.i16, i64 16
  store ptr %result.i15, ptr %15, align 8
  %16 = getelementptr inbounds i8, ptr %result.i16, i64 8
  store ptr %result.i, ptr %16, align 8
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(32) %result.i16) #37
  store ptr @Pair, ptr %result.i16, align 8
  %result.i18 = call noalias nonnull align 8 dereferenceable(88) ptr @bump_malloc_inner(i64 noundef 88, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i, ptr %result.i18, align 8
  %18 = getelementptr inbounds i8, ptr %result.i18, i64 8
  store ptr %result.i15, ptr %18, align 8
  %19 = getelementptr inbounds i8, ptr %result.i18, i64 16
  store ptr %result.i16, ptr %19, align 8
  %20 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(88) %result.i18) #37
  %hash_coef.i.i23 = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !23
  %tbl_size.i.i24 = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !23
  %offset_tbl.i.i25 = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !23
  %product.i.i.i26 = mul i64 %hash_coef.i.i23, 3037712219555723519
  %shifted.i.i.i27 = lshr i64 %product.i.i.i26, 32
  %xored.i.i.i28 = xor i64 %shifted.i.i.i27, %product.i.i.i26
  %hash.i.i.i29 = and i64 %xored.i.i.i28, %tbl_size.i.i24
  %offset_ptr.i.i30 = getelementptr i32, ptr %offset_tbl.i.i25, i64 %hash.i.i.i29
  %offset.i.i31 = load i32, ptr %offset_ptr.i.i30, align 4, !noalias !23
  %21 = insertvalue { ptr, ptr, ptr, i32 } { ptr @ProductIterable, ptr undef, ptr undef, i32 undef }, ptr %result.i18, 1
  %22 = insertvalue { ptr, ptr, ptr, i32 } %21, ptr undef, 2
  %23 = insertvalue { ptr, ptr, ptr, i32 } %22, i32 10, 3
  %24 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract30) #37
  %25 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract23) #37
  %26 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef nonnull align 16 dereferenceable(496) @ProductIterable) #37
  %27 = getelementptr inbounds i8, ptr %result.i18, i64 24
  store ptr %.fca.0.extract30, ptr %27, align 8
  %28 = getelementptr inbounds i8, ptr %result.i18, i64 32
  store ptr %.fca.1.extract31, ptr %28, align 8
  %29 = getelementptr inbounds i8, ptr %result.i18, i64 40
  store ptr %.fca.2.extract32, ptr %29, align 8
  %30 = getelementptr inbounds i8, ptr %result.i18, i64 48
  store i32 %offset.i.i31, ptr %30, align 8
  %hash_coef.i.i102 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i103 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i104 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i105 = mul i64 %hash_coef.i.i102, 3037712219555723519
  %shifted.i.i.i106 = lshr i64 %product.i.i.i105, 32
  %xored.i.i.i107 = xor i64 %shifted.i.i.i106, %product.i.i.i105
  %hash.i.i.i108 = and i64 %xored.i.i.i107, %tbl_size.i.i103
  %offset_ptr.i.i109 = getelementptr i32, ptr %offset_tbl.i.i104, i64 %hash.i.i.i108
  %offset.i.i97 = load i32, ptr %offset_ptr.i.i109, align 4, !noalias !573
  %31 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef nonnull align 16 dereferenceable(496) @ProductIterable) #37
  %32 = getelementptr inbounds i8, ptr %result.i18, i64 56
  store ptr %.fca.0.extract23, ptr %32, align 8
  %33 = getelementptr inbounds i8, ptr %result.i18, i64 64
  store ptr %.fca.1.extract24, ptr %33, align 8
  %34 = getelementptr inbounds i8, ptr %result.i18, i64 72
  store ptr %.fca.2.extract25, ptr %34, align 8
  %35 = getelementptr inbounds i8, ptr %result.i18, i64 80
  store i32 %offset.i.i97, ptr %35, align 8
  ret { ptr, ptr, ptr, i32 } %23
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none)
define { ptr, ptr, ptr, i32 } @String_repr_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #8 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !23
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !23
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !23
  %product.i.i.i = mul i64 %hash_coef.i.i, 6499063144389013426
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i13 = load i32, ptr %offset_ptr.i.i, align 4, !noalias !576
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %5 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %.fca.1.extract, 1
  %6 = insertvalue { ptr, ptr, ptr, i32 } %5, ptr %.fca.2.extract, 2
  %7 = insertvalue { ptr, ptr, ptr, i32 } %6, i32 %offset.i.i13, 3
  ret { ptr, ptr, ptr, i32 } %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_ProductIterable(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 88, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ProductIterable_B_init_firstIterableT_secondIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 216
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @ProductIterable_field_ProductIterable_0(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @ProductIterable_field_ProductIterable_1(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @ProductIterable_field_ProductIterable_2(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ProductIterable_B_iterator_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 224
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ProductIterable_B_each_fFunctionT_to_Nothing({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 232
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ProductIterable_B_reduce_accumulatorT_fFunctionT._T_to_T({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 240
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ProductIterable_B_all_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 248
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ProductIterable_B_any_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 256
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ProductIterable_B_map_fFunctionT_to_U({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 264
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ProductIterable_B_filter_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 272
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ProductIterable_B_chain_otherIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 280
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ProductIterable_B_interleave_otherIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 288
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ProductIterable_B_zip_otherIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 296
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ProductIterable_B_product_otherIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 304
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @ProductIterable_init_firstIterableT_secondIterableU({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3, { ptr, ptr, ptr, i32 } %4) #5 {
  %.fca.0.extract9 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract10 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !579
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !579
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !579
  %product.i.i.i = mul i64 %hash_coef.i.i, 4128338911757318636
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !579
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract2 = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract3 = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 3037712219555723519
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !582
  %6 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract9) #37
  %7 = sext i32 %offset.i.i to i64
  %8 = getelementptr ptr, ptr %.fca.0.extract9, i64 %7
  %9 = getelementptr i8, ptr %8, i64 24
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr i8, ptr %10, i64 8
  %12 = load ptr, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract1, 0
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.1.extract2, 1
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, ptr %.fca.2.extract3, 2
  %16 = insertvalue { ptr, ptr, ptr, i32 } %15, i32 %offset.i.i27, 3
  call void %12(ptr %.fca.1.extract10, { ptr, ptr, ptr, i32 } %16) #39
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 2
  %hash_coef_ptr.i.i30 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i31 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i32 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i33 = load i64, ptr %hash_coef_ptr.i.i30, align 4, !noalias !23
  %tbl_size.i.i34 = load i64, ptr %tbl_size_ptr.i.i31, align 4, !noalias !23
  %offset_tbl.i.i35 = load ptr, ptr %offset_tbl_ptr.i.i32, align 8, !noalias !23
  %product.i.i.i36 = mul i64 %hash_coef.i.i33, 3037712219555723519
  %shifted.i.i.i37 = lshr i64 %product.i.i.i36, 32
  %xored.i.i.i38 = xor i64 %shifted.i.i.i37, %product.i.i.i36
  %hash.i.i.i39 = and i64 %xored.i.i.i38, %tbl_size.i.i34
  %offset_ptr.i.i40 = getelementptr i32, ptr %offset_tbl.i.i35, i64 %hash.i.i.i39
  %offset.i.i55 = load i32, ptr %offset_ptr.i.i40, align 4, !noalias !585
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract9) #37
  %18 = getelementptr i8, ptr %8, i64 32
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  %22 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %23 = insertvalue { ptr, ptr, ptr, i32 } %22, ptr %.fca.1.extract, 1
  %24 = insertvalue { ptr, ptr, ptr, i32 } %23, ptr %.fca.2.extract, 2
  %25 = insertvalue { ptr, ptr, ptr, i32 } %24, i32 %offset.i.i55, 3
  call void %21(ptr %.fca.1.extract10, { ptr, ptr, ptr, i32 } %25) #39
  ret void
}

; Function Attrs: nounwind
define { ptr, ptr, ptr, i32 } @ProductIterable_iterator_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #11 {
  %4 = alloca [0 x ptr], align 8
  %.fca.0.extract51 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract53 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract51, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract51, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract51, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !588
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !588
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !588
  %product.i.i.i = mul i64 %hash_coef.i.i, 4128338911757318636
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !588
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract51) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract51, i64 %6
  %8 = getelementptr i8, ptr %7, i64 24
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = call { ptr, ptr, ptr, i32 } %10(ptr %.fca.1.extract53) #40
  %.fca.0.extract43 = extractvalue { ptr, ptr, ptr, i32 } %11, 0
  %.fca.1.extract45 = extractvalue { ptr, ptr, ptr, i32 } %11, 1
  %.fca.2.extract47 = extractvalue { ptr, ptr, ptr, i32 } %11, 2
  %.fca.3.extract49 = extractvalue { ptr, ptr, ptr, i32 } %11, 3
  %12 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract43, 0
  %13 = insertvalue { ptr, ptr, ptr, i32 } %12, ptr %.fca.1.extract45, 1
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.2.extract47, 2
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, i32 %.fca.3.extract49, 3
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4) #50
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract43) #50
  %18 = sext i32 %.fca.3.extract49 to i64
  %19 = getelementptr ptr, ptr %.fca.0.extract43, i64 %18
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  %result.i = call ptr %21({ ptr, ptr, ptr, i32 } %15, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %22 = call { ptr, ptr, ptr, i32 } %result.i({ ptr, ptr, ptr, i32 } %15, { ptr, ptr, ptr, i32 } %15, ptr nonnull align 8 %4) #42
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract51)
  %24 = getelementptr i8, ptr %7, i64 32
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr %25, align 8
  %27 = call { ptr, ptr, ptr, i32 } %26(ptr %.fca.1.extract53) #40
  %28 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract51)
  %29 = load ptr, ptr %7, align 8
  %result.i15 = call ptr %29(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract53) #41
  %30 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract51)
  %31 = getelementptr i8, ptr %7, i64 8
  %32 = load ptr, ptr %31, align 8
  %result.i16 = call ptr %32(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract53) #41
  %33 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract51)
  %34 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract51)
  %result.i17 = call noalias nonnull align 8 dereferenceable(32) ptr @bump_malloc_inner(i64 noundef 32, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %35 = getelementptr inbounds i8, ptr %result.i17, i64 16
  store ptr %result.i16, ptr %35, align 8
  %36 = getelementptr inbounds i8, ptr %result.i17, i64 8
  store ptr %result.i15, ptr %36, align 8
  %37 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(32) %result.i17)
  store ptr @Pair, ptr %result.i17, align 8
  %result.i19 = call noalias nonnull align 8 dereferenceable(152) ptr @bump_malloc_inner(i64 noundef 152, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i15, ptr %result.i19, align 8
  %38 = getelementptr inbounds i8, ptr %result.i19, i64 8
  store ptr %result.i16, ptr %38, align 8
  %39 = getelementptr inbounds i8, ptr %result.i19, i64 16
  store ptr %result.i17, ptr %39, align 8
  %40 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(152) %result.i19)
  %41 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract51)
  %42 = load ptr, ptr %8, align 8
  %43 = load ptr, ptr %42, align 8
  %44 = call { ptr, ptr, ptr, i32 } %43(ptr %.fca.1.extract53) #40
  %.fca.0.extract9 = extractvalue { ptr, ptr, ptr, i32 } %44, 0
  %.fca.1.extract11 = extractvalue { ptr, ptr, ptr, i32 } %44, 1
  %.fca.2.extract13 = extractvalue { ptr, ptr, ptr, i32 } %44, 2
  %.fca.3.extract15 = extractvalue { ptr, ptr, ptr, i32 } %44, 3
  %45 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract9, 0
  %46 = insertvalue { ptr, ptr, ptr, i32 } %45, ptr %.fca.1.extract11, 1
  %47 = insertvalue { ptr, ptr, ptr, i32 } %46, ptr %.fca.2.extract13, 2
  %48 = insertvalue { ptr, ptr, ptr, i32 } %47, i32 %.fca.3.extract15, 3
  %49 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %50 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract9)
  %51 = sext i32 %.fca.3.extract15 to i64
  %52 = getelementptr ptr, ptr %.fca.0.extract9, i64 %51
  %53 = getelementptr i8, ptr %52, i64 8
  %54 = load ptr, ptr %53, align 8
  %result.i20 = call ptr %54({ ptr, ptr, ptr, i32 } %48, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %55 = call { ptr, ptr, ptr, i32 } %result.i20({ ptr, ptr, ptr, i32 } %48, { ptr, ptr, ptr, i32 } %48, ptr nonnull align 8 %4) #42
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %55, 0
  %.fca.1.extract3 = extractvalue { ptr, ptr, ptr, i32 } %55, 1
  %.fca.2.extract5 = extractvalue { ptr, ptr, ptr, i32 } %55, 2
  %hash_coef_ptr.i.i22 = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i23 = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i24 = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i25 = load i64, ptr %hash_coef_ptr.i.i22, align 4, !noalias !23
  %tbl_size.i.i26 = load i64, ptr %tbl_size_ptr.i.i23, align 4, !noalias !23
  %offset_tbl.i.i27 = load ptr, ptr %offset_tbl_ptr.i.i24, align 8, !noalias !23
  %product.i.i.i28 = mul i64 %hash_coef.i.i25, 8673632051301757104
  %shifted.i.i.i29 = lshr i64 %product.i.i.i28, 32
  %xored.i.i.i30 = xor i64 %shifted.i.i.i29, %product.i.i.i28
  %hash.i.i.i31 = and i64 %xored.i.i.i30, %tbl_size.i.i26
  %offset_ptr.i.i32 = getelementptr i32, ptr %offset_tbl.i.i27, i64 %hash.i.i.i31
  %56 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract51)
  %57 = load ptr, ptr %24, align 8
  %58 = load ptr, ptr %57, align 8
  %59 = call { ptr, ptr, ptr, i32 } %58(ptr %.fca.1.extract53) #40
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %59, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %59, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %59, 2
  %offset.i.i47 = load i32, ptr %offset_ptr.i.i32, align 4, !noalias !23
  %hash_coef_ptr.i.i50 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i51 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i52 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %60 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %61 = insertvalue { ptr, ptr, ptr, i32 } %60, ptr %.fca.1.extract, 1
  %62 = insertvalue { ptr, ptr, ptr, i32 } %61, ptr %.fca.2.extract, 2
  %63 = insertvalue { ptr, ptr, ptr, i32 } { ptr @ProductIterator, ptr undef, ptr undef, i32 undef }, ptr %result.i19, 1
  %64 = insertvalue { ptr, ptr, ptr, i32 } %63, ptr undef, 2
  %65 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract51)
  %66 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract51)
  call void @llvm.lifetime.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %67 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef nonnull align 16 dereferenceable(192) @ProductIterator) #37
  %68 = getelementptr inbounds i8, ptr %result.i19, i64 24
  store ptr %.fca.0.extract1, ptr %68, align 8
  %69 = getelementptr inbounds i8, ptr %result.i19, i64 32
  store ptr %.fca.1.extract3, ptr %69, align 8
  %70 = getelementptr inbounds i8, ptr %result.i19, i64 40
  store ptr %.fca.2.extract5, ptr %70, align 8
  %71 = getelementptr inbounds i8, ptr %result.i19, i64 48
  store i32 %offset.i.i47, ptr %71, align 8
  %hash_coef.i.i33.i = load i64, ptr %hash_coef_ptr.i.i50, align 4, !noalias !23
  %tbl_size.i.i34.i = load i64, ptr %tbl_size_ptr.i.i51, align 4, !noalias !23
  %offset_tbl.i.i35.i = load ptr, ptr %offset_tbl_ptr.i.i52, align 8, !noalias !23
  %product.i.i.i36.i = mul i64 %hash_coef.i.i33.i, 3037712219555723519
  %shifted.i.i.i37.i = lshr i64 %product.i.i.i36.i, 32
  %xored.i.i.i38.i = xor i64 %shifted.i.i.i37.i, %product.i.i.i36.i
  %hash.i.i.i39.i = and i64 %xored.i.i.i38.i, %tbl_size.i.i34.i
  %offset_ptr.i.i40.i = getelementptr i32, ptr %offset_tbl.i.i35.i, i64 %hash.i.i.i39.i
  %offset.i.i55.i = load i32, ptr %offset_ptr.i.i40.i, align 4, !noalias !591
  %72 = getelementptr inbounds i8, ptr %result.i19, i64 88
  store ptr %.fca.0.extract, ptr %72, align 8
  %73 = getelementptr inbounds i8, ptr %result.i19, i64 96
  store ptr %.fca.1.extract, ptr %73, align 8
  %74 = getelementptr inbounds i8, ptr %result.i19, i64 104
  store ptr %.fca.2.extract, ptr %74, align 8
  %75 = getelementptr inbounds i8, ptr %result.i19, i64 112
  store i32 %offset.i.i55.i, ptr %75, align 8
  %76 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef nonnull align 16 dereferenceable(192) @ProductIterator) #37
  %77 = insertvalue { ptr, ptr, ptr, i32 } %62, i32 %offset.i.i55.i, 3
  %78 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4) #37
  %79 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %80 = sext i32 %offset.i.i55.i to i64
  %81 = getelementptr ptr, ptr %.fca.0.extract, i64 %80
  %82 = getelementptr i8, ptr %81, i64 8
  %83 = load ptr, ptr %82, align 8
  %result.i.i = call ptr %83({ ptr, ptr, ptr, i32 } %77, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %84 = call { ptr, ptr, ptr, i32 } %result.i.i({ ptr, ptr, ptr, i32 } %77, { ptr, ptr, ptr, i32 } %77, ptr nonnull align 8 %4) #42
  %.fca.0.extract3.i = extractvalue { ptr, ptr, ptr, i32 } %84, 0
  %.fca.1.extract5.i = extractvalue { ptr, ptr, ptr, i32 } %84, 1
  %.fca.2.extract7.i = extractvalue { ptr, ptr, ptr, i32 } %84, 2
  %hash_coef_ptr.i.i58.i = getelementptr i8, ptr %.fca.0.extract3.i, i64 8
  %tbl_size_ptr.i.i59.i = getelementptr i8, ptr %.fca.0.extract3.i, i64 16
  %offset_tbl_ptr.i.i60.i = getelementptr i8, ptr %.fca.0.extract3.i, i64 40
  %hash_coef.i.i61.i = load i64, ptr %hash_coef_ptr.i.i58.i, align 4, !noalias !23
  %tbl_size.i.i62.i = load i64, ptr %tbl_size_ptr.i.i59.i, align 4, !noalias !23
  %offset_tbl.i.i63.i = load ptr, ptr %offset_tbl_ptr.i.i60.i, align 8, !noalias !23
  %product.i.i.i64.i = mul i64 %hash_coef.i.i61.i, 8673632051301757104
  %shifted.i.i.i65.i = lshr i64 %product.i.i.i64.i, 32
  %xored.i.i.i66.i = xor i64 %shifted.i.i.i65.i, %product.i.i.i64.i
  %hash.i.i.i67.i = and i64 %xored.i.i.i66.i, %tbl_size.i.i62.i
  %offset_ptr.i.i68.i = getelementptr i32, ptr %offset_tbl.i.i63.i, i64 %hash.i.i.i67.i
  %offset.i.i83.i = load i32, ptr %offset_ptr.i.i68.i, align 4, !noalias !594
  %85 = getelementptr inbounds i8, ptr %result.i19, i64 56
  store ptr %.fca.0.extract3.i, ptr %85, align 8
  %86 = getelementptr inbounds i8, ptr %result.i19, i64 64
  store ptr %.fca.1.extract5.i, ptr %86, align 8
  %87 = getelementptr inbounds i8, ptr %result.i19, i64 72
  store ptr %.fca.2.extract7.i, ptr %87, align 8
  %88 = getelementptr inbounds i8, ptr %result.i19, i64 80
  store i32 %offset.i.i83.i, ptr %88, align 8
  %89 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef nonnull align 16 dereferenceable(192) @ProductIterator)
  %90 = load ptr, ptr %68, align 8
  %91 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %90, 0
  %92 = load ptr, ptr %69, align 8
  %93 = insertvalue { ptr, ptr, ptr, i32 } %91, ptr %92, 1
  %94 = load ptr, ptr %70, align 8
  %95 = insertvalue { ptr, ptr, ptr, i32 } %93, ptr %94, 2
  %96 = load i32, ptr %71, align 8
  %97 = insertvalue { ptr, ptr, ptr, i32 } %95, i32 %96, 3
  %98 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %99 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef %90)
  %100 = sext i32 %96 to i64
  %101 = getelementptr ptr, ptr %90, i64 %100
  %102 = getelementptr i8, ptr %101, i64 8
  %103 = load ptr, ptr %102, align 8
  %result.i85.i = call ptr %103({ ptr, ptr, ptr, i32 } %97, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %104 = call { ptr, i160 } %result.i85.i({ ptr, ptr, ptr, i32 } %97, { ptr, ptr, ptr, i32 } %97, ptr nonnull align 8 %4) #42
  %105 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef nonnull align 16 dereferenceable(192) @ProductIterator)
  %106 = getelementptr inbounds i8, ptr %result.i19, i64 120
  %.fca.0.extract.i = extractvalue { ptr, i160 } %104, 0
  %.fca.1.extract.i = extractvalue { ptr, i160 } %104, 1
  store ptr %.fca.0.extract.i, ptr %106, align 8
  %107 = getelementptr inbounds i8, ptr %result.i19, i64 128
  store i160 %.fca.1.extract.i, ptr %107, align 8
  call void @llvm.lifetime.end.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %108 = insertvalue { ptr, ptr, ptr, i32 } %64, i32 21, 3
  ret { ptr, ptr, ptr, i32 } %108
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_ProductIterator(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 152, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ProductIterator_B_init_first_iteratorIteratorT_second_iterableIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 152
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @ProductIterator_field_ProductIterator_0(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @ProductIterator_field_ProductIterator_1(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @ProductIterator_field_ProductIterator_2(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ProductIterator_B_next_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 160
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nounwind
define void @ProductIterator_init_first_iteratorIteratorT_second_iterableIterableU({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3, { ptr, ptr, ptr, i32 } %4) #11 {
  %6 = alloca [0 x ptr], align 8
  %.fca.0.extract45 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract47 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract45, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract45, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract45, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !597
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !597
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !597
  %product.i.i.i = mul i64 %hash_coef.i.i, 1697250377212095568
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !597
  %.fca.0.extract33 = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract35 = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract37 = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract33, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract33, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract33, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 8673632051301757104
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !600
  %7 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef align 8 %.fca.0.extract45) #37
  %8 = sext i32 %offset.i.i to i64
  %9 = getelementptr ptr, ptr %.fca.0.extract45, i64 %8
  %10 = getelementptr i8, ptr %9, i64 24
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr i8, ptr %11, i64 8
  %13 = load ptr, ptr %12, align 8
  %14 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract33, 0
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, ptr %.fca.1.extract35, 1
  %16 = insertvalue { ptr, ptr, ptr, i32 } %15, ptr %.fca.2.extract37, 2
  %17 = insertvalue { ptr, ptr, ptr, i32 } %16, i32 %offset.i.i27, 3
  call void %13(ptr %.fca.1.extract47, { ptr, ptr, ptr, i32 } %17) #39
  %.fca.0.extract21 = extractvalue { ptr, ptr, ptr, i32 } %4, 0
  %.fca.1.extract23 = extractvalue { ptr, ptr, ptr, i32 } %4, 1
  %.fca.2.extract25 = extractvalue { ptr, ptr, ptr, i32 } %4, 2
  %hash_coef_ptr.i.i30 = getelementptr i8, ptr %.fca.0.extract21, i64 8
  %tbl_size_ptr.i.i31 = getelementptr i8, ptr %.fca.0.extract21, i64 16
  %offset_tbl_ptr.i.i32 = getelementptr i8, ptr %.fca.0.extract21, i64 40
  %hash_coef.i.i33 = load i64, ptr %hash_coef_ptr.i.i30, align 4, !noalias !23
  %tbl_size.i.i34 = load i64, ptr %tbl_size_ptr.i.i31, align 4, !noalias !23
  %offset_tbl.i.i35 = load ptr, ptr %offset_tbl_ptr.i.i32, align 8, !noalias !23
  %product.i.i.i36 = mul i64 %hash_coef.i.i33, 3037712219555723519
  %shifted.i.i.i37 = lshr i64 %product.i.i.i36, 32
  %xored.i.i.i38 = xor i64 %shifted.i.i.i37, %product.i.i.i36
  %hash.i.i.i39 = and i64 %xored.i.i.i38, %tbl_size.i.i34
  %offset_ptr.i.i40 = getelementptr i32, ptr %offset_tbl.i.i35, i64 %hash.i.i.i39
  %offset.i.i55 = load i32, ptr %offset_ptr.i.i40, align 4, !noalias !603
  %18 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef align 8 %.fca.0.extract45) #37
  %19 = getelementptr i8, ptr %9, i64 40
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr i8, ptr %20, i64 8
  %22 = load ptr, ptr %21, align 8
  %23 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract21, 0
  %24 = insertvalue { ptr, ptr, ptr, i32 } %23, ptr %.fca.1.extract23, 1
  %25 = insertvalue { ptr, ptr, ptr, i32 } %24, ptr %.fca.2.extract25, 2
  %26 = insertvalue { ptr, ptr, ptr, i32 } %25, i32 %offset.i.i55, 3
  call void %22(ptr %.fca.1.extract47, { ptr, ptr, ptr, i32 } %26) #39
  %27 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef align 8 %.fca.0.extract45) #37
  %28 = load ptr, ptr %19, align 8
  %29 = load ptr, ptr %28, align 8
  %30 = call { ptr, ptr, ptr, i32 } %29(ptr %.fca.1.extract47) #40
  %.fca.0.extract13 = extractvalue { ptr, ptr, ptr, i32 } %30, 0
  %.fca.1.extract15 = extractvalue { ptr, ptr, ptr, i32 } %30, 1
  %.fca.2.extract17 = extractvalue { ptr, ptr, ptr, i32 } %30, 2
  %.fca.3.extract19 = extractvalue { ptr, ptr, ptr, i32 } %30, 3
  %31 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract13, 0
  %32 = insertvalue { ptr, ptr, ptr, i32 } %31, ptr %.fca.1.extract15, 1
  %33 = insertvalue { ptr, ptr, ptr, i32 } %32, ptr %.fca.2.extract17, 2
  %34 = insertvalue { ptr, ptr, ptr, i32 } %33, i32 %.fca.3.extract19, 3
  %35 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %6) #37
  %36 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract13) #37
  %37 = sext i32 %.fca.3.extract19 to i64
  %38 = getelementptr ptr, ptr %.fca.0.extract13, i64 %37
  %39 = getelementptr i8, ptr %38, i64 8
  %40 = load ptr, ptr %39, align 8
  %result.i = call ptr %40({ ptr, ptr, ptr, i32 } %34, ptr nocapture nofree noundef nonnull readonly align 8 %6) #45
  %41 = call { ptr, ptr, ptr, i32 } %result.i({ ptr, ptr, ptr, i32 } %34, { ptr, ptr, ptr, i32 } %34, ptr nonnull align 8 %6) #42
  %.fca.0.extract3 = extractvalue { ptr, ptr, ptr, i32 } %41, 0
  %.fca.1.extract5 = extractvalue { ptr, ptr, ptr, i32 } %41, 1
  %.fca.2.extract7 = extractvalue { ptr, ptr, ptr, i32 } %41, 2
  %hash_coef_ptr.i.i58 = getelementptr i8, ptr %.fca.0.extract3, i64 8
  %tbl_size_ptr.i.i59 = getelementptr i8, ptr %.fca.0.extract3, i64 16
  %offset_tbl_ptr.i.i60 = getelementptr i8, ptr %.fca.0.extract3, i64 40
  %hash_coef.i.i61 = load i64, ptr %hash_coef_ptr.i.i58, align 4, !noalias !23
  %tbl_size.i.i62 = load i64, ptr %tbl_size_ptr.i.i59, align 4, !noalias !23
  %offset_tbl.i.i63 = load ptr, ptr %offset_tbl_ptr.i.i60, align 8, !noalias !23
  %product.i.i.i64 = mul i64 %hash_coef.i.i61, 8673632051301757104
  %shifted.i.i.i65 = lshr i64 %product.i.i.i64, 32
  %xored.i.i.i66 = xor i64 %shifted.i.i.i65, %product.i.i.i64
  %hash.i.i.i67 = and i64 %xored.i.i.i66, %tbl_size.i.i62
  %offset_ptr.i.i68 = getelementptr i32, ptr %offset_tbl.i.i63, i64 %hash.i.i.i67
  %offset.i.i83 = load i32, ptr %offset_ptr.i.i68, align 4, !noalias !606
  %42 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef align 8 %.fca.0.extract45)
  %43 = getelementptr i8, ptr %9, i64 32
  %44 = load ptr, ptr %43, align 8
  %45 = getelementptr i8, ptr %44, i64 8
  %46 = load ptr, ptr %45, align 8
  %47 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract3, 0
  %48 = insertvalue { ptr, ptr, ptr, i32 } %47, ptr %.fca.1.extract5, 1
  %49 = insertvalue { ptr, ptr, ptr, i32 } %48, ptr %.fca.2.extract7, 2
  %50 = insertvalue { ptr, ptr, ptr, i32 } %49, i32 %offset.i.i83, 3
  call void %46(ptr %.fca.1.extract47, { ptr, ptr, ptr, i32 } %50) #39
  %51 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef align 8 %.fca.0.extract45)
  %52 = load ptr, ptr %10, align 8
  %53 = load ptr, ptr %52, align 8
  %54 = call { ptr, ptr, ptr, i32 } %53(ptr %.fca.1.extract47) #40
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %54, 0
  %.fca.1.extract2 = extractvalue { ptr, ptr, ptr, i32 } %54, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %54, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %54, 3
  %55 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract1, 0
  %56 = insertvalue { ptr, ptr, ptr, i32 } %55, ptr %.fca.1.extract2, 1
  %57 = insertvalue { ptr, ptr, ptr, i32 } %56, ptr %.fca.2.extract, 2
  %58 = insertvalue { ptr, ptr, ptr, i32 } %57, i32 %.fca.3.extract, 3
  %59 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %6)
  %60 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef %.fca.0.extract1)
  %61 = sext i32 %.fca.3.extract to i64
  %62 = getelementptr ptr, ptr %.fca.0.extract1, i64 %61
  %63 = getelementptr i8, ptr %62, i64 8
  %64 = load ptr, ptr %63, align 8
  %result.i85 = call ptr %64({ ptr, ptr, ptr, i32 } %58, ptr nocapture nofree noundef nonnull readonly align 8 %6) #45
  %65 = call { ptr, i160 } %result.i85({ ptr, ptr, ptr, i32 } %58, { ptr, ptr, ptr, i32 } %58, ptr nonnull align 8 %6) #42
  %66 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef align 8 %.fca.0.extract45)
  %67 = getelementptr i8, ptr %9, i64 48
  %68 = load ptr, ptr %67, align 8
  %69 = getelementptr i8, ptr %68, i64 8
  %70 = load ptr, ptr %69, align 8
  call void %70(ptr %.fca.1.extract47, { ptr, i160 } %65) #39
  ret void
}

; Function Attrs: nounwind
define { ptr, i160 } @ProductIterator_next_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #11 {
  %4 = alloca [0 x ptr], align 8
  %.fca.0.extract10 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract12 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract10, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract10, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract10, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8
  %product.i.i.i = mul i64 %hash_coef.i.i, 1697250377212095568
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10) #44
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract10, i64 %6
  %8 = getelementptr i8, ptr %7, i64 48
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = call { ptr, i160 } %10(ptr %.fca.1.extract12) #40
  %12 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %.sroa.0.0103 = extractvalue { ptr, i160 } %11, 0
  %13 = icmp ne ptr %.sroa.0.0103, @nil_typ
  %14 = icmp ne ptr %.sroa.0.0103, null
  %.not82104 = and i1 %13, %14
  br i1 %.not82104, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %3
  %15 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %16 = getelementptr i8, ptr %7, i64 32
  %17 = getelementptr i8, ptr %7, i64 24
  %18 = getelementptr i8, ptr %7, i64 40
  br label %19

19:                                               ; preds = %.lr.ph, %38
  %.pn105 = phi { ptr, i160 } [ %11, %.lr.ph ], [ %83, %38 ]
  %20 = load ptr, ptr %16, align 8
  %21 = load ptr, ptr %20, align 8
  %22 = call { ptr, ptr, ptr, i32 } %21(ptr %.fca.1.extract12) #40
  %.fca.0.extract68 = extractvalue { ptr, ptr, ptr, i32 } %22, 0
  %.fca.1.extract70 = extractvalue { ptr, ptr, ptr, i32 } %22, 1
  %.fca.2.extract72 = extractvalue { ptr, ptr, ptr, i32 } %22, 2
  %.fca.3.extract74 = extractvalue { ptr, ptr, ptr, i32 } %22, 3
  %23 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract68, 0
  %24 = insertvalue { ptr, ptr, ptr, i32 } %23, ptr %.fca.1.extract70, 1
  %25 = insertvalue { ptr, ptr, ptr, i32 } %24, ptr %.fca.2.extract72, 2
  %26 = insertvalue { ptr, ptr, ptr, i32 } %25, i32 %.fca.3.extract74, 3
  %27 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %28 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef %.fca.0.extract68)
  %29 = sext i32 %.fca.3.extract74 to i64
  %30 = getelementptr ptr, ptr %.fca.0.extract68, i64 %29
  %31 = getelementptr i8, ptr %30, i64 8
  %32 = load ptr, ptr %31, align 8
  %result.i = call ptr %32({ ptr, ptr, ptr, i32 } %26, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %33 = call { ptr, i160 } %result.i({ ptr, ptr, ptr, i32 } %26, { ptr, ptr, ptr, i32 } %26, ptr nonnull align 8 %4) #42
  %.fca.0.extract61 = extractvalue { ptr, i160 } %33, 0
  %34 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %35 = icmp eq ptr %.fca.0.extract61, @nil_typ
  %36 = icmp eq ptr %.fca.0.extract61, null
  %.not84.not = or i1 %35, %36
  %37 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  br i1 %.not84.not, label %38, label %86

38:                                               ; preds = %19
  %39 = load ptr, ptr %17, align 8
  %40 = load ptr, ptr %39, align 8
  %41 = call { ptr, ptr, ptr, i32 } %40(ptr %.fca.1.extract12) #40
  %.fca.0.extract42 = extractvalue { ptr, ptr, ptr, i32 } %41, 0
  %.fca.1.extract44 = extractvalue { ptr, ptr, ptr, i32 } %41, 1
  %.fca.2.extract46 = extractvalue { ptr, ptr, ptr, i32 } %41, 2
  %.fca.3.extract48 = extractvalue { ptr, ptr, ptr, i32 } %41, 3
  %42 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract42, 0
  %43 = insertvalue { ptr, ptr, ptr, i32 } %42, ptr %.fca.1.extract44, 1
  %44 = insertvalue { ptr, ptr, ptr, i32 } %43, ptr %.fca.2.extract46, 2
  %45 = insertvalue { ptr, ptr, ptr, i32 } %44, i32 %.fca.3.extract48, 3
  %46 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %47 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef %.fca.0.extract42)
  %48 = sext i32 %.fca.3.extract48 to i64
  %49 = getelementptr ptr, ptr %.fca.0.extract42, i64 %48
  %50 = getelementptr i8, ptr %49, i64 8
  %51 = load ptr, ptr %50, align 8
  %result.i1 = call ptr %51({ ptr, ptr, ptr, i32 } %45, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %52 = call { ptr, i160 } %result.i1({ ptr, ptr, ptr, i32 } %45, { ptr, ptr, ptr, i32 } %45, ptr nonnull align 8 %4) #42
  %53 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %54 = load ptr, ptr %8, align 8
  %55 = getelementptr i8, ptr %54, i64 8
  %56 = load ptr, ptr %55, align 8
  call void %56(ptr %.fca.1.extract12, { ptr, i160 } %52) #39
  %57 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %58 = load ptr, ptr %18, align 8
  %59 = load ptr, ptr %58, align 8
  %60 = call { ptr, ptr, ptr, i32 } %59(ptr %.fca.1.extract12) #40
  %.fca.0.extract30 = extractvalue { ptr, ptr, ptr, i32 } %60, 0
  %.fca.1.extract32 = extractvalue { ptr, ptr, ptr, i32 } %60, 1
  %.fca.2.extract34 = extractvalue { ptr, ptr, ptr, i32 } %60, 2
  %.fca.3.extract35 = extractvalue { ptr, ptr, ptr, i32 } %60, 3
  %61 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract30, 0
  %62 = insertvalue { ptr, ptr, ptr, i32 } %61, ptr %.fca.1.extract32, 1
  %63 = insertvalue { ptr, ptr, ptr, i32 } %62, ptr %.fca.2.extract34, 2
  %64 = insertvalue { ptr, ptr, ptr, i32 } %63, i32 %.fca.3.extract35, 3
  %65 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %66 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract30)
  %67 = sext i32 %.fca.3.extract35 to i64
  %68 = getelementptr ptr, ptr %.fca.0.extract30, i64 %67
  %69 = getelementptr i8, ptr %68, i64 8
  %70 = load ptr, ptr %69, align 8
  %result.i2 = call ptr %70({ ptr, ptr, ptr, i32 } %64, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %71 = call { ptr, ptr, ptr, i32 } %result.i2({ ptr, ptr, ptr, i32 } %64, { ptr, ptr, ptr, i32 } %64, ptr nonnull align 8 %4) #42
  %.fca.0.extract20 = extractvalue { ptr, ptr, ptr, i32 } %71, 0
  %.fca.1.extract22 = extractvalue { ptr, ptr, ptr, i32 } %71, 1
  %.fca.2.extract24 = extractvalue { ptr, ptr, ptr, i32 } %71, 2
  %hash_coef_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract20, i64 8
  %tbl_size_ptr.i.i5 = getelementptr i8, ptr %.fca.0.extract20, i64 16
  %offset_tbl_ptr.i.i6 = getelementptr i8, ptr %.fca.0.extract20, i64 40
  %hash_coef.i.i7 = load i64, ptr %hash_coef_ptr.i.i4, align 4
  %tbl_size.i.i8 = load i64, ptr %tbl_size_ptr.i.i5, align 4
  %offset_tbl.i.i9 = load ptr, ptr %offset_tbl_ptr.i.i6, align 8
  %product.i.i.i10 = mul i64 %hash_coef.i.i7, 8673632051301757104
  %shifted.i.i.i11 = lshr i64 %product.i.i.i10, 32
  %xored.i.i.i12 = xor i64 %shifted.i.i.i11, %product.i.i.i10
  %hash.i.i.i13 = and i64 %xored.i.i.i12, %tbl_size.i.i8
  %offset_ptr.i.i14 = getelementptr i32, ptr %offset_tbl.i.i9, i64 %hash.i.i.i13
  %offset.i.i29 = load i32, ptr %offset_ptr.i.i14, align 4
  %72 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %73 = load ptr, ptr %16, align 8
  %74 = getelementptr i8, ptr %73, i64 8
  %75 = load ptr, ptr %74, align 8
  %76 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract20, 0
  %77 = insertvalue { ptr, ptr, ptr, i32 } %76, ptr %.fca.1.extract22, 1
  %78 = insertvalue { ptr, ptr, ptr, i32 } %77, ptr %.fca.2.extract24, 2
  %79 = insertvalue { ptr, ptr, ptr, i32 } %78, i32 %offset.i.i29, 3
  call void %75(ptr %.fca.1.extract12, { ptr, ptr, ptr, i32 } %79) #39
  %80 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %81 = load ptr, ptr %8, align 8
  %82 = load ptr, ptr %81, align 8
  %83 = call { ptr, i160 } %82(ptr %.fca.1.extract12) #40
  %.sroa.0.0 = extractvalue { ptr, i160 } %83, 0
  %84 = icmp ne ptr %.sroa.0.0, @nil_typ
  %85 = icmp ne ptr %.sroa.0.0, null
  %.not82 = and i1 %84, %85
  br i1 %.not82, label %19, label %.loopexit

86:                                               ; preds = %19
  %87 = load ptr, ptr %7, align 8
  %result.i31 = call align 8 ptr %87(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract12) #41
  %88 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %89 = getelementptr i8, ptr %7, i64 8
  %90 = load ptr, ptr %89, align 8
  %result.i32 = call align 8 ptr %90(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract12) #41
  %91 = load ptr, ptr %result.i31, align 8
  %92 = getelementptr i8, ptr %91, i64 72
  %93 = load ptr, ptr %92, align 8
  %result.i.i = call { i64, i64 } %93(ptr nocapture nofree nonnull readonly align 8 %result.i31) #41
  %94 = extractvalue { i64, i64 } %result.i.i, 0
  %95 = extractvalue { i64, i64 } %result.i.i, 1
  %96 = urem i64 16, %95
  %97 = icmp eq i64 %96, 0
  %98 = sub i64 %95, %96
  %99 = select i1 %97, i64 0, i64 %98
  %100 = add i64 %94, 16
  %101 = add i64 %100, %99
  %102 = load ptr, ptr %result.i32, align 8
  %103 = getelementptr i8, ptr %102, i64 72
  %104 = load ptr, ptr %103, align 8
  %result.i1.i = call { i64, i64 } %104(ptr nocapture nofree nonnull readonly align 8 %result.i32) #41
  %105 = extractvalue { i64, i64 } %result.i1.i, 0
  %106 = extractvalue { i64, i64 } %result.i1.i, 1
  %107 = call i64 @llvm.umax.i64(i64 %95, i64 %106) #38
  %108 = call i64 @llvm.umax.i64(i64 %107, i64 noundef 8) #38, !range !16
  %109 = urem i64 %101, %106
  %110 = icmp eq i64 %109, 0
  %111 = sub i64 %106, %109
  %112 = select i1 %110, i64 0, i64 %111
  %113 = add i64 %105, %101
  %114 = add i64 %113, %112
  %115 = urem i64 %114, %108
  %116 = icmp eq i64 %115, 0
  %117 = sub i64 %108, %115
  %118 = select i1 %116, i64 0, i64 %117
  %119 = add i64 %118, %114
  %result.i34 = call noalias nonnull align 8 dereferenceable(16) ptr @bump_malloc_inner(i64 noundef %119, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i31, ptr %result.i34, align 8
  %120 = getelementptr inbounds i8, ptr %result.i34, i64 8
  store ptr %result.i32, ptr %120, align 8
  %121 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %result.i34)
  %122 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %123 = call ptr @llvm.invariant.start.p0(i64 noundef 112, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %124 = load ptr, ptr %result.i31, align 8
  %125 = getelementptr i8, ptr %124, i64 72
  %126 = load ptr, ptr %125, align 8
  %result.i.i116 = call { i64, i64 } %126(ptr nocapture nofree nonnull readonly align 8 %result.i31) #41
  %127 = extractvalue { i64, i64 } %result.i.i116, 1
  %128 = urem i64 16, %127
  %129 = icmp eq i64 %128, 0
  %reass.sub133 = sub i64 %127, %128
  %130 = add i64 %reass.sub133, 16
  %131 = select i1 %129, i64 16, i64 %130
  %132 = getelementptr i8, ptr %result.i34, i64 %131
  %133 = getelementptr i8, ptr %124, i64 64
  %134 = load ptr, ptr %133, align 8
  call void %134({ ptr, i160 } %.pn105, ptr nocapture nofree nonnull readonly align 8 %result.i31, ptr nocapture nofree writeonly %132) #49
  %135 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @Pair) #37
  %136 = load ptr, ptr %result.i34, align 8
  %137 = load ptr, ptr %136, align 8
  %138 = getelementptr i8, ptr %137, i64 72
  %139 = load ptr, ptr %138, align 8
  %result.i.i117 = call { i64, i64 } %139(ptr nocapture nofree nonnull readonly align 8 %136) #41
  %140 = extractvalue { i64, i64 } %result.i.i117, 0
  %141 = extractvalue { i64, i64 } %result.i.i117, 1
  %142 = urem i64 16, %141
  %143 = icmp eq i64 %142, 0
  %144 = sub i64 %141, %142
  %145 = select i1 %143, i64 0, i64 %144
  %146 = add i64 %140, 16
  %147 = add i64 %146, %145
  %148 = load ptr, ptr %120, align 8
  %149 = load ptr, ptr %148, align 8
  %150 = getelementptr i8, ptr %149, i64 72
  %151 = load ptr, ptr %150, align 8
  %result.i1.i118 = call { i64, i64 } %151(ptr nocapture nofree nonnull readonly align 8 %148) #41
  %152 = extractvalue { i64, i64 } %result.i1.i118, 1
  %153 = urem i64 %147, %152
  %154 = icmp eq i64 %153, 0
  %155 = sub i64 %152, %153
  %156 = select i1 %154, i64 0, i64 %155
  %157 = getelementptr i8, ptr %result.i34, i64 %147
  %158 = getelementptr i8, ptr %157, i64 %156
  %159 = getelementptr i8, ptr %149, i64 64
  %160 = load ptr, ptr %159, align 8
  call void %160({ ptr, i160 } %33, ptr nocapture nofree nonnull readonly align 8 %148, ptr nocapture nofree writeonly %158) #49
  %161 = ptrtoint ptr %result.i34 to i64
  %.sroa.3.8.insert.ext = zext i64 %161 to i160
  %.sroa.3.8.insert.insert = or disjoint i160 %.sroa.3.8.insert.ext, 3402823669209384634633746074317682114560
  br label %.loopexit

.loopexit:                                        ; preds = %38, %3, %86
  %.reg2mem48.sroa.3.0 = phi i160 [ %.sroa.3.8.insert.insert, %86 ], [ undef, %3 ], [ undef, %38 ]
  %.reg2mem48.sroa.0.0 = phi ptr [ @Pair, %86 ], [ @nil_typ, %3 ], [ @nil_typ, %38 ]
  %.reload49.fca.0.insert = insertvalue { ptr, i160 } poison, ptr %.reg2mem48.sroa.0.0, 0
  %.reload49.fca.1.insert = insertvalue { ptr, i160 } %.reload49.fca.0.insert, i160 %.reg2mem48.sroa.3.0, 1
  ret { ptr, i160 } %.reload49.fca.1.insert
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, i160 } @ProductIterator_getter_current_first(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 120
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, i160 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 128
  %6 = load i160, ptr %5, align 8
  %7 = insertvalue { ptr, i160 } %4, i160 %6, 1
  ret { ptr, i160 } %7
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @ProductIterator_setter_current_first(ptr nocapture nofree writeonly align 8 %0, { ptr, i160 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 120
  %.fca.0.extract = extractvalue { ptr, i160 } %1, 0
  %.fca.1.extract = extractvalue { ptr, i160 } %1, 1
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 128
  store i160 %.fca.1.extract, ptr %4, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @ProductIterator_getter_second_iterable(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 88
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 96
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 104
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 112
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @ProductIterator_setter_second_iterable(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 88
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 96
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 104
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 112
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @ProductIterator_getter_second_iterator(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 56
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 64
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 72
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 80
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @ProductIterator_setter_second_iterator(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 56
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 64
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 72
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 80
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @ProductIterator_getter_first_iterator(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 24
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 32
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 40
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 48
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @ProductIterator_setter_first_iterator(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 24
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 32
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 40
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 48
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_Container(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 0, i64 1 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_Iterator(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 8, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @ProductIterable_getter_second(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 56
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 64
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 72
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 80
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @ProductIterable_setter_second(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 56
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 64
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 72
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 80
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @ProductIterable_getter_first(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 24
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 32
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 40
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 48
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @ProductIterable_setter_first(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 24
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 32
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 40
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 48
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_Iterable(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 8, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_ZipIterable(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 88, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ZipIterable_B_init_firstIterableT_secondIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 216
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @ZipIterable_field_ZipIterable_0(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @ZipIterable_field_ZipIterable_1(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @ZipIterable_field_ZipIterable_2(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ZipIterable_B_iterator_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 224
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ZipIterable_B_each_fFunctionT_to_Nothing({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 232
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ZipIterable_B_reduce_accumulatorT_fFunctionT._T_to_T({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 240
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ZipIterable_B_all_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 248
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ZipIterable_B_any_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 256
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ZipIterable_B_map_fFunctionT_to_U({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 264
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ZipIterable_B_filter_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 272
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ZipIterable_B_chain_otherIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 280
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ZipIterable_B_interleave_otherIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 288
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ZipIterable_B_zip_otherIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 296
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ZipIterable_B_product_otherIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 304
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @ZipIterable_init_firstIterableT_secondIterableU({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3, { ptr, ptr, ptr, i32 } %4) #5 {
  %.fca.0.extract9 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract10 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !609
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !609
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !609
  %product.i.i.i = mul i64 %hash_coef.i.i, 35232740166152944
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !609
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract2 = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract3 = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 3037712219555723519
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !612
  %6 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract9) #37
  %7 = sext i32 %offset.i.i to i64
  %8 = getelementptr ptr, ptr %.fca.0.extract9, i64 %7
  %9 = getelementptr i8, ptr %8, i64 24
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr i8, ptr %10, i64 8
  %12 = load ptr, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract1, 0
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.1.extract2, 1
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, ptr %.fca.2.extract3, 2
  %16 = insertvalue { ptr, ptr, ptr, i32 } %15, i32 %offset.i.i27, 3
  call void %12(ptr %.fca.1.extract10, { ptr, ptr, ptr, i32 } %16) #39
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 2
  %hash_coef_ptr.i.i30 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i31 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i32 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i33 = load i64, ptr %hash_coef_ptr.i.i30, align 4, !noalias !23
  %tbl_size.i.i34 = load i64, ptr %tbl_size_ptr.i.i31, align 4, !noalias !23
  %offset_tbl.i.i35 = load ptr, ptr %offset_tbl_ptr.i.i32, align 8, !noalias !23
  %product.i.i.i36 = mul i64 %hash_coef.i.i33, 3037712219555723519
  %shifted.i.i.i37 = lshr i64 %product.i.i.i36, 32
  %xored.i.i.i38 = xor i64 %shifted.i.i.i37, %product.i.i.i36
  %hash.i.i.i39 = and i64 %xored.i.i.i38, %tbl_size.i.i34
  %offset_ptr.i.i40 = getelementptr i32, ptr %offset_tbl.i.i35, i64 %hash.i.i.i39
  %offset.i.i55 = load i32, ptr %offset_ptr.i.i40, align 4, !noalias !615
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract9) #37
  %18 = getelementptr i8, ptr %8, i64 32
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  %22 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %23 = insertvalue { ptr, ptr, ptr, i32 } %22, ptr %.fca.1.extract, 1
  %24 = insertvalue { ptr, ptr, ptr, i32 } %23, ptr %.fca.2.extract, 2
  %25 = insertvalue { ptr, ptr, ptr, i32 } %24, i32 %offset.i.i55, 3
  call void %21(ptr %.fca.1.extract10, { ptr, ptr, ptr, i32 } %25) #39
  ret void
}

; Function Attrs: nounwind
define { ptr, ptr, ptr, i32 } @ZipIterable_iterator_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #11 {
  %4 = alloca [0 x ptr], align 8
  %.fca.0.extract71 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract73 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract71, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract71, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract71, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !618
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !618
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !618
  %product.i.i.i = mul i64 %hash_coef.i.i, 35232740166152944
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !618
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract71) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract71, i64 %6
  %8 = getelementptr i8, ptr %7, i64 24
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = call { ptr, ptr, ptr, i32 } %10(ptr %.fca.1.extract73) #40
  %.fca.0.extract63 = extractvalue { ptr, ptr, ptr, i32 } %11, 0
  %.fca.1.extract65 = extractvalue { ptr, ptr, ptr, i32 } %11, 1
  %.fca.2.extract67 = extractvalue { ptr, ptr, ptr, i32 } %11, 2
  %.fca.3.extract69 = extractvalue { ptr, ptr, ptr, i32 } %11, 3
  %12 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract63, 0
  %13 = insertvalue { ptr, ptr, ptr, i32 } %12, ptr %.fca.1.extract65, 1
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.2.extract67, 2
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, i32 %.fca.3.extract69, 3
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4) #50
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract63) #50
  %18 = sext i32 %.fca.3.extract69 to i64
  %19 = getelementptr ptr, ptr %.fca.0.extract63, i64 %18
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  %result.i = call ptr %21({ ptr, ptr, ptr, i32 } %15, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %22 = call { ptr, ptr, ptr, i32 } %result.i({ ptr, ptr, ptr, i32 } %15, { ptr, ptr, ptr, i32 } %15, ptr nonnull align 8 %4) #42
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %24 = getelementptr i8, ptr %7, i64 32
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr %25, align 8
  %27 = call { ptr, ptr, ptr, i32 } %26(ptr %.fca.1.extract73) #40
  %.fca.0.extract43 = extractvalue { ptr, ptr, ptr, i32 } %27, 0
  %.fca.1.extract45 = extractvalue { ptr, ptr, ptr, i32 } %27, 1
  %.fca.2.extract47 = extractvalue { ptr, ptr, ptr, i32 } %27, 2
  %.fca.3.extract49 = extractvalue { ptr, ptr, ptr, i32 } %27, 3
  %28 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract43, 0
  %29 = insertvalue { ptr, ptr, ptr, i32 } %28, ptr %.fca.1.extract45, 1
  %30 = insertvalue { ptr, ptr, ptr, i32 } %29, ptr %.fca.2.extract47, 2
  %31 = insertvalue { ptr, ptr, ptr, i32 } %30, i32 %.fca.3.extract49, 3
  %32 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %33 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract43)
  %34 = sext i32 %.fca.3.extract49 to i64
  %35 = getelementptr ptr, ptr %.fca.0.extract43, i64 %34
  %36 = getelementptr i8, ptr %35, i64 8
  %37 = load ptr, ptr %36, align 8
  %result.i15 = call ptr %37({ ptr, ptr, ptr, i32 } %31, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %38 = call { ptr, ptr, ptr, i32 } %result.i15({ ptr, ptr, ptr, i32 } %31, { ptr, ptr, ptr, i32 } %31, ptr nonnull align 8 %4) #42
  %39 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %40 = load ptr, ptr %7, align 8
  %result.i30 = call ptr %40(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract73) #41
  %41 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %42 = getelementptr i8, ptr %7, i64 8
  %43 = load ptr, ptr %42, align 8
  %result.i31 = call ptr %43(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract73) #41
  %44 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %45 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %result.i32 = call noalias nonnull align 8 dereferenceable(32) ptr @bump_malloc_inner(i64 noundef 32, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %46 = getelementptr inbounds i8, ptr %result.i32, i64 16
  store ptr %result.i31, ptr %46, align 8
  %47 = getelementptr inbounds i8, ptr %result.i32, i64 8
  store ptr %result.i30, ptr %47, align 8
  %48 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(32) %result.i32)
  store ptr @Pair, ptr %result.i32, align 8
  %result.i34 = call noalias nonnull align 8 dereferenceable(88) ptr @bump_malloc_inner(i64 noundef 88, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i30, ptr %result.i34, align 8
  %49 = getelementptr inbounds i8, ptr %result.i34, i64 8
  store ptr %result.i31, ptr %49, align 8
  %50 = getelementptr inbounds i8, ptr %result.i34, i64 16
  store ptr %result.i32, ptr %50, align 8
  %51 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(88) %result.i34)
  %52 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %53 = load ptr, ptr %8, align 8
  %54 = load ptr, ptr %53, align 8
  %55 = call { ptr, ptr, ptr, i32 } %54(ptr %.fca.1.extract73) #40
  %.fca.0.extract17 = extractvalue { ptr, ptr, ptr, i32 } %55, 0
  %.fca.1.extract19 = extractvalue { ptr, ptr, ptr, i32 } %55, 1
  %.fca.2.extract21 = extractvalue { ptr, ptr, ptr, i32 } %55, 2
  %.fca.3.extract23 = extractvalue { ptr, ptr, ptr, i32 } %55, 3
  %56 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract17, 0
  %57 = insertvalue { ptr, ptr, ptr, i32 } %56, ptr %.fca.1.extract19, 1
  %58 = insertvalue { ptr, ptr, ptr, i32 } %57, ptr %.fca.2.extract21, 2
  %59 = insertvalue { ptr, ptr, ptr, i32 } %58, i32 %.fca.3.extract23, 3
  %60 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %61 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract17)
  %62 = sext i32 %.fca.3.extract23 to i64
  %63 = getelementptr ptr, ptr %.fca.0.extract17, i64 %62
  %64 = getelementptr i8, ptr %63, i64 8
  %65 = load ptr, ptr %64, align 8
  %result.i35 = call ptr %65({ ptr, ptr, ptr, i32 } %59, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %66 = call { ptr, ptr, ptr, i32 } %result.i35({ ptr, ptr, ptr, i32 } %59, { ptr, ptr, ptr, i32 } %59, ptr nonnull align 8 %4) #42
  %.fca.0.extract5 = extractvalue { ptr, ptr, ptr, i32 } %66, 0
  %.fca.1.extract7 = extractvalue { ptr, ptr, ptr, i32 } %66, 1
  %.fca.2.extract9 = extractvalue { ptr, ptr, ptr, i32 } %66, 2
  %hash_coef_ptr.i.i37 = getelementptr i8, ptr %.fca.0.extract5, i64 8
  %tbl_size_ptr.i.i38 = getelementptr i8, ptr %.fca.0.extract5, i64 16
  %offset_tbl_ptr.i.i39 = getelementptr i8, ptr %.fca.0.extract5, i64 40
  %67 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %68 = load ptr, ptr %24, align 8
  %69 = load ptr, ptr %68, align 8
  %70 = call { ptr, ptr, ptr, i32 } %69(ptr %.fca.1.extract73) #40
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %70, 0
  %.fca.1.extract2 = extractvalue { ptr, ptr, ptr, i32 } %70, 1
  %.fca.2.extract3 = extractvalue { ptr, ptr, ptr, i32 } %70, 2
  %.fca.3.extract4 = extractvalue { ptr, ptr, ptr, i32 } %70, 3
  %71 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract1, 0
  %72 = insertvalue { ptr, ptr, ptr, i32 } %71, ptr %.fca.1.extract2, 1
  %73 = insertvalue { ptr, ptr, ptr, i32 } %72, ptr %.fca.2.extract3, 2
  %74 = insertvalue { ptr, ptr, ptr, i32 } %73, i32 %.fca.3.extract4, 3
  %75 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %76 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract1)
  %77 = sext i32 %.fca.3.extract4 to i64
  %78 = getelementptr ptr, ptr %.fca.0.extract1, i64 %77
  %79 = getelementptr i8, ptr %78, i64 8
  %80 = load ptr, ptr %79, align 8
  %result.i50 = call ptr %80({ ptr, ptr, ptr, i32 } %74, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %81 = call { ptr, ptr, ptr, i32 } %result.i50({ ptr, ptr, ptr, i32 } %74, { ptr, ptr, ptr, i32 } %74, ptr nonnull align 8 %4) #42
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %81, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %81, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %81, 2
  %hash_coef_ptr.i.i52 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i53 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i54 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i69 = load i64, ptr %hash_coef_ptr.i.i37, align 4, !noalias !23
  %tbl_size.i.i70 = load i64, ptr %tbl_size_ptr.i.i38, align 4, !noalias !23
  %offset_tbl.i.i71 = load ptr, ptr %offset_tbl_ptr.i.i39, align 8, !noalias !23
  %product.i.i.i72 = mul i64 %hash_coef.i.i69, 8673632051301757104
  %shifted.i.i.i73 = lshr i64 %product.i.i.i72, 32
  %xored.i.i.i74 = xor i64 %shifted.i.i.i73, %product.i.i.i72
  %hash.i.i.i75 = and i64 %xored.i.i.i74, %tbl_size.i.i70
  %offset_ptr.i.i76 = getelementptr i32, ptr %offset_tbl.i.i71, i64 %hash.i.i.i75
  %offset.i.i77 = load i32, ptr %offset_ptr.i.i76, align 4, !noalias !23
  %82 = insertvalue { ptr, ptr, ptr, i32 } { ptr @ZipIterator, ptr undef, ptr undef, i32 undef }, ptr %result.i34, 1
  %83 = insertvalue { ptr, ptr, ptr, i32 } %82, ptr undef, 2
  %84 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %85 = call ptr @llvm.invariant.start.p0(i64 noundef 416, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %86 = call ptr @llvm.invariant.start.p0(i64 noundef 96, ptr nocapture nofree noundef nonnull align 16 dereferenceable(176) @ZipIterator) #37
  %87 = getelementptr inbounds i8, ptr %result.i34, i64 24
  store ptr %.fca.0.extract5, ptr %87, align 8
  %88 = getelementptr inbounds i8, ptr %result.i34, i64 32
  store ptr %.fca.1.extract7, ptr %88, align 8
  %89 = getelementptr inbounds i8, ptr %result.i34, i64 40
  store ptr %.fca.2.extract9, ptr %89, align 8
  %90 = getelementptr inbounds i8, ptr %result.i34, i64 48
  store i32 %offset.i.i77, ptr %90, align 8
  %hash_coef.i.i33.i = load i64, ptr %hash_coef_ptr.i.i52, align 4, !noalias !23
  %tbl_size.i.i34.i = load i64, ptr %tbl_size_ptr.i.i53, align 4, !noalias !23
  %offset_tbl.i.i35.i = load ptr, ptr %offset_tbl_ptr.i.i54, align 8, !noalias !23
  %product.i.i.i36.i = mul i64 %hash_coef.i.i33.i, 8673632051301757104
  %shifted.i.i.i37.i = lshr i64 %product.i.i.i36.i, 32
  %xored.i.i.i38.i = xor i64 %shifted.i.i.i37.i, %product.i.i.i36.i
  %hash.i.i.i39.i = and i64 %xored.i.i.i38.i, %tbl_size.i.i34.i
  %offset_ptr.i.i40.i = getelementptr i32, ptr %offset_tbl.i.i35.i, i64 %hash.i.i.i39.i
  %offset.i.i55.i = load i32, ptr %offset_ptr.i.i40.i, align 4, !noalias !621
  %91 = call ptr @llvm.invariant.start.p0(i64 noundef 96, ptr nocapture nofree noundef nonnull align 16 dereferenceable(176) @ZipIterator) #37
  %92 = getelementptr inbounds i8, ptr %result.i34, i64 56
  store ptr %.fca.0.extract, ptr %92, align 8
  %93 = getelementptr inbounds i8, ptr %result.i34, i64 64
  store ptr %.fca.1.extract, ptr %93, align 8
  %94 = getelementptr inbounds i8, ptr %result.i34, i64 72
  store ptr %.fca.2.extract, ptr %94, align 8
  %95 = getelementptr inbounds i8, ptr %result.i34, i64 80
  store i32 %offset.i.i55.i, ptr %95, align 8
  %96 = insertvalue { ptr, ptr, ptr, i32 } %83, i32 19, 3
  ret { ptr, ptr, ptr, i32 } %96
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_ZipIterator(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 88, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ZipIterator_B_init_firstIteratorT_secondIteratorU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 136
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @ZipIterator_field_ZipIterator_0(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @ZipIterator_field_ZipIterator_1(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @ZipIterator_field_ZipIterator_2(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ZipIterator_B_next_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 144
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @ZipIterator_init_firstIteratorT_secondIteratorU({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3, { ptr, ptr, ptr, i32 } %4) #5 {
  %.fca.0.extract9 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract10 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !624
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !624
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !624
  %product.i.i.i = mul i64 %hash_coef.i.i, -2141114445739585318
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !624
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract2 = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract3 = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 8673632051301757104
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !627
  %6 = call ptr @llvm.invariant.start.p0(i64 noundef 96, ptr nocapture nofree noundef align 8 %.fca.0.extract9) #37
  %7 = sext i32 %offset.i.i to i64
  %8 = getelementptr ptr, ptr %.fca.0.extract9, i64 %7
  %9 = getelementptr i8, ptr %8, i64 24
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr i8, ptr %10, i64 8
  %12 = load ptr, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract1, 0
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.1.extract2, 1
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, ptr %.fca.2.extract3, 2
  %16 = insertvalue { ptr, ptr, ptr, i32 } %15, i32 %offset.i.i27, 3
  call void %12(ptr %.fca.1.extract10, { ptr, ptr, ptr, i32 } %16) #39
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 2
  %hash_coef_ptr.i.i30 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i31 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i32 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i33 = load i64, ptr %hash_coef_ptr.i.i30, align 4, !noalias !23
  %tbl_size.i.i34 = load i64, ptr %tbl_size_ptr.i.i31, align 4, !noalias !23
  %offset_tbl.i.i35 = load ptr, ptr %offset_tbl_ptr.i.i32, align 8, !noalias !23
  %product.i.i.i36 = mul i64 %hash_coef.i.i33, 8673632051301757104
  %shifted.i.i.i37 = lshr i64 %product.i.i.i36, 32
  %xored.i.i.i38 = xor i64 %shifted.i.i.i37, %product.i.i.i36
  %hash.i.i.i39 = and i64 %xored.i.i.i38, %tbl_size.i.i34
  %offset_ptr.i.i40 = getelementptr i32, ptr %offset_tbl.i.i35, i64 %hash.i.i.i39
  %offset.i.i55 = load i32, ptr %offset_ptr.i.i40, align 4, !noalias !630
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 96, ptr nocapture nofree noundef align 8 %.fca.0.extract9) #37
  %18 = getelementptr i8, ptr %8, i64 32
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  %22 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %23 = insertvalue { ptr, ptr, ptr, i32 } %22, ptr %.fca.1.extract, 1
  %24 = insertvalue { ptr, ptr, ptr, i32 } %23, ptr %.fca.2.extract, 2
  %25 = insertvalue { ptr, ptr, ptr, i32 } %24, i32 %offset.i.i55, 3
  call void %21(ptr %.fca.1.extract10, { ptr, ptr, ptr, i32 } %25) #39
  ret void
}

; Function Attrs: nounwind
define { ptr, i160 } @ZipIterator_next_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #11 {
  %4 = alloca [0 x ptr], align 8
  %.fca.0.extract28 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract30 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract28, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract28, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract28, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !633
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !633
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !633
  %product.i.i.i = mul i64 %hash_coef.i.i, -2141114445739585318
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !633
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 96, ptr nocapture nofree noundef align 8 %.fca.0.extract28) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract28, i64 %6
  %8 = getelementptr i8, ptr %7, i64 24
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = call { ptr, ptr, ptr, i32 } %10(ptr %.fca.1.extract30) #40
  %.fca.0.extract8 = extractvalue { ptr, ptr, ptr, i32 } %11, 0
  %.fca.1.extract10 = extractvalue { ptr, ptr, ptr, i32 } %11, 1
  %.fca.2.extract12 = extractvalue { ptr, ptr, ptr, i32 } %11, 2
  %.fca.3.extract14 = extractvalue { ptr, ptr, ptr, i32 } %11, 3
  %12 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract8, 0
  %13 = insertvalue { ptr, ptr, ptr, i32 } %12, ptr %.fca.1.extract10, 1
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.2.extract12, 2
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, i32 %.fca.3.extract14, 3
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4) #50
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef %.fca.0.extract8) #50
  %18 = sext i32 %.fca.3.extract14 to i64
  %19 = getelementptr ptr, ptr %.fca.0.extract8, i64 %18
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  %result.i = call ptr %21({ ptr, ptr, ptr, i32 } %15, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %22 = call { ptr, i160 } %result.i({ ptr, ptr, ptr, i32 } %15, { ptr, ptr, ptr, i32 } %15, ptr nonnull align 8 %4) #42
  %.fca.0.extract4 = extractvalue { ptr, i160 } %22, 0
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 96, ptr nocapture nofree noundef align 8 %.fca.0.extract28)
  %24 = getelementptr i8, ptr %7, i64 32
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr %25, align 8
  %27 = call { ptr, ptr, ptr, i32 } %26(ptr %.fca.1.extract30) #40
  %.fca.0.extract2 = extractvalue { ptr, ptr, ptr, i32 } %27, 0
  %.fca.1.extract3 = extractvalue { ptr, ptr, ptr, i32 } %27, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %27, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %27, 3
  %28 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract2, 0
  %29 = insertvalue { ptr, ptr, ptr, i32 } %28, ptr %.fca.1.extract3, 1
  %30 = insertvalue { ptr, ptr, ptr, i32 } %29, ptr %.fca.2.extract, 2
  %31 = insertvalue { ptr, ptr, ptr, i32 } %30, i32 %.fca.3.extract, 3
  %32 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %33 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef %.fca.0.extract2)
  %34 = sext i32 %.fca.3.extract to i64
  %35 = getelementptr ptr, ptr %.fca.0.extract2, i64 %34
  %36 = getelementptr i8, ptr %35, i64 8
  %37 = load ptr, ptr %36, align 8
  %result.i1 = call ptr %37({ ptr, ptr, ptr, i32 } %31, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %38 = call { ptr, i160 } %result.i1({ ptr, ptr, ptr, i32 } %31, { ptr, ptr, ptr, i32 } %31, ptr nonnull align 8 %4) #42
  %39 = call ptr @llvm.invariant.start.p0(i64 noundef 96, ptr nocapture nofree noundef align 8 %.fca.0.extract28)
  %40 = load ptr, ptr %7, align 8
  %41 = icmp ne ptr %.fca.0.extract4, @nil_typ
  %42 = icmp ne ptr %.fca.0.extract4, null
  %.not55 = and i1 %41, %42
  br i1 %.not55, label %43, label %123

43:                                               ; preds = %3
  %.fca.0.extract = extractvalue { ptr, i160 } %38, 0
  %44 = call ptr @llvm.invariant.start.p0(i64 noundef 96, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract28)
  %45 = icmp ne ptr %.fca.0.extract, @nil_typ
  %46 = icmp ne ptr %.fca.0.extract, null
  %.not57.not.not = and i1 %45, %46
  br i1 %.not57.not.not, label %47, label %123

47:                                               ; preds = %43
  %48 = getelementptr i8, ptr %7, i64 8
  %49 = load ptr, ptr %48, align 8
  %50 = call ptr @llvm.invariant.start.p0(i64 noundef 96, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract28)
  %result.i2 = call align 8 ptr %40(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract30) #41
  %51 = call ptr @llvm.invariant.start.p0(i64 noundef 96, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract28)
  %result.i3 = call align 8 ptr %49(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract30) #41
  %52 = load ptr, ptr %result.i2, align 8, !alias.scope !636
  %53 = getelementptr i8, ptr %52, i64 72
  %54 = load ptr, ptr %53, align 8, !alias.scope !636
  %result.i.i = call { i64, i64 } %54(ptr nocapture nofree nonnull readonly align 8 %result.i2) #41, !alias.scope !636
  %55 = extractvalue { i64, i64 } %result.i.i, 0
  %56 = extractvalue { i64, i64 } %result.i.i, 1
  %57 = urem i64 16, %56
  %58 = icmp eq i64 %57, 0
  %59 = sub i64 %56, %57
  %60 = select i1 %58, i64 0, i64 %59
  %61 = add i64 %55, 16
  %62 = add i64 %61, %60
  %63 = load ptr, ptr %result.i3, align 8, !alias.scope !636
  %64 = getelementptr i8, ptr %63, i64 72
  %65 = load ptr, ptr %64, align 8, !alias.scope !636
  %result.i1.i = call { i64, i64 } %65(ptr nocapture nofree nonnull readonly align 8 %result.i3) #41, !alias.scope !636
  %66 = extractvalue { i64, i64 } %result.i1.i, 0
  %67 = extractvalue { i64, i64 } %result.i1.i, 1
  %68 = call i64 @llvm.umax.i64(i64 %56, i64 %67) #38
  %69 = call i64 @llvm.umax.i64(i64 %68, i64 noundef 8) #38, !range !16
  %70 = urem i64 %62, %67
  %71 = icmp eq i64 %70, 0
  %72 = sub i64 %67, %70
  %73 = select i1 %71, i64 0, i64 %72
  %74 = add i64 %66, %62
  %75 = add i64 %74, %73
  %76 = urem i64 %75, %69
  %77 = icmp eq i64 %76, 0
  %78 = sub i64 %69, %76
  %79 = select i1 %77, i64 0, i64 %78
  %80 = add i64 %79, %75
  %result.i5 = call noalias nonnull align 8 dereferenceable(16) ptr @bump_malloc_inner(i64 noundef %80, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i2, ptr %result.i5, align 8
  %81 = getelementptr inbounds i8, ptr %result.i5, i64 8
  store ptr %result.i3, ptr %81, align 8
  %82 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %result.i5)
  %83 = call ptr @llvm.invariant.start.p0(i64 noundef 96, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract28)
  %84 = call ptr @llvm.invariant.start.p0(i64 noundef 96, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract28)
  %85 = load ptr, ptr %result.i2, align 8
  %86 = getelementptr i8, ptr %85, i64 72
  %87 = load ptr, ptr %86, align 8
  %result.i.i22 = call { i64, i64 } %87(ptr nocapture nofree nonnull readonly align 8 %result.i2) #41
  %88 = extractvalue { i64, i64 } %result.i.i22, 1
  %89 = urem i64 16, %88
  %90 = icmp eq i64 %89, 0
  %reass.sub25 = sub i64 %88, %89
  %91 = add i64 %reass.sub25, 16
  %92 = select i1 %90, i64 16, i64 %91
  %93 = getelementptr i8, ptr %result.i5, i64 %92
  %94 = getelementptr i8, ptr %85, i64 64
  %95 = load ptr, ptr %94, align 8
  call void %95({ ptr, i160 } %22, ptr nocapture nofree nonnull readonly align 8 %result.i2, ptr nocapture nofree writeonly %93) #49
  %96 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @Pair) #37
  %97 = load ptr, ptr %result.i5, align 8
  %98 = load ptr, ptr %97, align 8
  %99 = getelementptr i8, ptr %98, i64 72
  %100 = load ptr, ptr %99, align 8
  %result.i.i23 = call { i64, i64 } %100(ptr nocapture nofree nonnull readonly align 8 %97) #41
  %101 = extractvalue { i64, i64 } %result.i.i23, 0
  %102 = extractvalue { i64, i64 } %result.i.i23, 1
  %103 = urem i64 16, %102
  %104 = icmp eq i64 %103, 0
  %105 = sub i64 %102, %103
  %106 = select i1 %104, i64 0, i64 %105
  %107 = add i64 %101, 16
  %108 = add i64 %107, %106
  %109 = load ptr, ptr %81, align 8
  %110 = load ptr, ptr %109, align 8
  %111 = getelementptr i8, ptr %110, i64 72
  %112 = load ptr, ptr %111, align 8
  %result.i1.i24 = call { i64, i64 } %112(ptr nocapture nofree nonnull readonly align 8 %109) #41
  %113 = extractvalue { i64, i64 } %result.i1.i24, 1
  %114 = urem i64 %108, %113
  %115 = icmp eq i64 %114, 0
  %116 = sub i64 %113, %114
  %117 = select i1 %115, i64 0, i64 %116
  %118 = getelementptr i8, ptr %result.i5, i64 %108
  %119 = getelementptr i8, ptr %118, i64 %117
  %120 = getelementptr i8, ptr %110, i64 64
  %121 = load ptr, ptr %120, align 8
  call void %121({ ptr, i160 } %38, ptr nocapture nofree nonnull readonly align 8 %109, ptr nocapture nofree writeonly %119) #49
  %122 = ptrtoint ptr %result.i5 to i64
  %.sroa.344.8.insert.ext = zext i64 %122 to i160
  %.sroa.344.8.insert.insert = or disjoint i160 %.sroa.344.8.insert.ext, 3402823669209384634633746074317682114560
  br label %123

123:                                              ; preds = %47, %43, %3
  %.reg2mem41.sroa.3.0 = phi i160 [ %.sroa.344.8.insert.insert, %47 ], [ poison, %3 ], [ poison, %43 ]
  %.reg2mem39.0 = phi ptr [ @Pair, %47 ], [ @nil_typ, %3 ], [ @nil_typ, %43 ]
  %.reload38.fca.0.insert = insertvalue { ptr, i160 } poison, ptr %.reg2mem39.0, 0
  %.reload38.fca.1.insert = insertvalue { ptr, i160 } %.reload38.fca.0.insert, i160 %.reg2mem41.sroa.3.0, 1
  ret { ptr, i160 } %.reload38.fca.1.insert
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @ZipIterator_getter_second(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 56
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 64
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 72
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 80
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @ZipIterator_setter_second(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 56
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 64
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 72
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 80
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @ZipIterator_getter_first(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 24
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 32
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 40
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 48
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @ZipIterator_setter_first(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 24
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 32
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 40
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 48
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @ZipIterable_getter_second(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 56
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 64
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 72
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 80
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @ZipIterable_setter_second(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 56
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 64
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 72
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 80
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @ZipIterable_getter_first(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 24
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 32
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 40
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 48
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @ZipIterable_setter_first(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 24
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 32
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 40
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 48
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_InterleaveIterable(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 72, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @InterleaveIterable_B_init_firstIterableT_secondIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 200
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @InterleaveIterable_field_InterleaveIterable_0(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @InterleaveIterable_B_iterator_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 208
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @InterleaveIterable_B_each_fFunctionT_to_Nothing({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 216
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @InterleaveIterable_B_reduce_accumulatorT_fFunctionT._T_to_T({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 224
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @InterleaveIterable_B_all_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 232
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @InterleaveIterable_B_any_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 240
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @InterleaveIterable_B_map_fFunctionT_to_U({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 248
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @InterleaveIterable_B_filter_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 256
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @InterleaveIterable_B_chain_otherIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 264
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @InterleaveIterable_B_interleave_otherIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 272
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @InterleaveIterable_B_zip_otherIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 280
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @InterleaveIterable_B_product_otherIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 288
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @InterleaveIterable_init_firstIterableT_secondIterableT({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3, { ptr, ptr, ptr, i32 } %4) #5 {
  %.fca.0.extract9 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract10 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !639
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !639
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !639
  %product.i.i.i = mul i64 %hash_coef.i.i, 4936782714255954462
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !639
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract2 = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract3 = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 3037712219555723519
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !642
  %6 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract9) #37
  %7 = sext i32 %offset.i.i to i64
  %8 = getelementptr ptr, ptr %.fca.0.extract9, i64 %7
  %9 = getelementptr i8, ptr %8, i64 8
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr i8, ptr %10, i64 8
  %12 = load ptr, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract1, 0
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.1.extract2, 1
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, ptr %.fca.2.extract3, 2
  %16 = insertvalue { ptr, ptr, ptr, i32 } %15, i32 %offset.i.i27, 3
  call void %12(ptr %.fca.1.extract10, { ptr, ptr, ptr, i32 } %16) #39
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 2
  %hash_coef_ptr.i.i30 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i31 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i32 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i33 = load i64, ptr %hash_coef_ptr.i.i30, align 4, !noalias !23
  %tbl_size.i.i34 = load i64, ptr %tbl_size_ptr.i.i31, align 4, !noalias !23
  %offset_tbl.i.i35 = load ptr, ptr %offset_tbl_ptr.i.i32, align 8, !noalias !23
  %product.i.i.i36 = mul i64 %hash_coef.i.i33, 3037712219555723519
  %shifted.i.i.i37 = lshr i64 %product.i.i.i36, 32
  %xored.i.i.i38 = xor i64 %shifted.i.i.i37, %product.i.i.i36
  %hash.i.i.i39 = and i64 %xored.i.i.i38, %tbl_size.i.i34
  %offset_ptr.i.i40 = getelementptr i32, ptr %offset_tbl.i.i35, i64 %hash.i.i.i39
  %offset.i.i55 = load i32, ptr %offset_ptr.i.i40, align 4, !noalias !645
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract9) #37
  %18 = getelementptr i8, ptr %8, i64 16
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  %22 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %23 = insertvalue { ptr, ptr, ptr, i32 } %22, ptr %.fca.1.extract, 1
  %24 = insertvalue { ptr, ptr, ptr, i32 } %23, ptr %.fca.2.extract, 2
  %25 = insertvalue { ptr, ptr, ptr, i32 } %24, i32 %offset.i.i55, 3
  call void %21(ptr %.fca.1.extract10, { ptr, ptr, ptr, i32 } %25) #39
  ret void
}

; Function Attrs: nounwind
define { ptr, ptr, ptr, i32 } @InterleaveIterable_iterator_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #11 {
  %4 = alloca [0 x ptr], align 8
  %.fca.0.extract71 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract73 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract71, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract71, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract71, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !648
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !648
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !648
  %product.i.i.i = mul i64 %hash_coef.i.i, 4936782714255954462
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !648
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract71) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract71, i64 %6
  %8 = getelementptr i8, ptr %7, i64 8
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = call { ptr, ptr, ptr, i32 } %10(ptr %.fca.1.extract73) #40
  %.fca.0.extract63 = extractvalue { ptr, ptr, ptr, i32 } %11, 0
  %.fca.1.extract65 = extractvalue { ptr, ptr, ptr, i32 } %11, 1
  %.fca.2.extract67 = extractvalue { ptr, ptr, ptr, i32 } %11, 2
  %.fca.3.extract69 = extractvalue { ptr, ptr, ptr, i32 } %11, 3
  %12 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract63, 0
  %13 = insertvalue { ptr, ptr, ptr, i32 } %12, ptr %.fca.1.extract65, 1
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.2.extract67, 2
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, i32 %.fca.3.extract69, 3
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4) #50
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract63) #50
  %18 = sext i32 %.fca.3.extract69 to i64
  %19 = getelementptr ptr, ptr %.fca.0.extract63, i64 %18
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  %result.i = call ptr %21({ ptr, ptr, ptr, i32 } %15, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %22 = call { ptr, ptr, ptr, i32 } %result.i({ ptr, ptr, ptr, i32 } %15, { ptr, ptr, ptr, i32 } %15, ptr nonnull align 8 %4) #42
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %24 = getelementptr i8, ptr %7, i64 16
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr %25, align 8
  %27 = call { ptr, ptr, ptr, i32 } %26(ptr %.fca.1.extract73) #40
  %.fca.0.extract43 = extractvalue { ptr, ptr, ptr, i32 } %27, 0
  %.fca.1.extract45 = extractvalue { ptr, ptr, ptr, i32 } %27, 1
  %.fca.2.extract47 = extractvalue { ptr, ptr, ptr, i32 } %27, 2
  %.fca.3.extract49 = extractvalue { ptr, ptr, ptr, i32 } %27, 3
  %28 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract43, 0
  %29 = insertvalue { ptr, ptr, ptr, i32 } %28, ptr %.fca.1.extract45, 1
  %30 = insertvalue { ptr, ptr, ptr, i32 } %29, ptr %.fca.2.extract47, 2
  %31 = insertvalue { ptr, ptr, ptr, i32 } %30, i32 %.fca.3.extract49, 3
  %32 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %33 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract43)
  %34 = sext i32 %.fca.3.extract49 to i64
  %35 = getelementptr ptr, ptr %.fca.0.extract43, i64 %34
  %36 = getelementptr i8, ptr %35, i64 8
  %37 = load ptr, ptr %36, align 8
  %result.i15 = call ptr %37({ ptr, ptr, ptr, i32 } %31, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %38 = call { ptr, ptr, ptr, i32 } %result.i15({ ptr, ptr, ptr, i32 } %31, { ptr, ptr, ptr, i32 } %31, ptr nonnull align 8 %4) #42
  %39 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %40 = load ptr, ptr %7, align 8
  %result.i30 = call ptr %40(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract73) #41
  %result.i32 = call noalias nonnull align 8 dereferenceable(80) ptr @bump_malloc_inner(i64 noundef 80, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i30, ptr %result.i32, align 8
  %41 = call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(80) %result.i32)
  %42 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %43 = load ptr, ptr %8, align 8
  %44 = load ptr, ptr %43, align 8
  %45 = call { ptr, ptr, ptr, i32 } %44(ptr %.fca.1.extract73) #40
  %.fca.0.extract17 = extractvalue { ptr, ptr, ptr, i32 } %45, 0
  %.fca.1.extract19 = extractvalue { ptr, ptr, ptr, i32 } %45, 1
  %.fca.2.extract21 = extractvalue { ptr, ptr, ptr, i32 } %45, 2
  %.fca.3.extract23 = extractvalue { ptr, ptr, ptr, i32 } %45, 3
  %46 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract17, 0
  %47 = insertvalue { ptr, ptr, ptr, i32 } %46, ptr %.fca.1.extract19, 1
  %48 = insertvalue { ptr, ptr, ptr, i32 } %47, ptr %.fca.2.extract21, 2
  %49 = insertvalue { ptr, ptr, ptr, i32 } %48, i32 %.fca.3.extract23, 3
  %50 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %51 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract17)
  %52 = sext i32 %.fca.3.extract23 to i64
  %53 = getelementptr ptr, ptr %.fca.0.extract17, i64 %52
  %54 = getelementptr i8, ptr %53, i64 8
  %55 = load ptr, ptr %54, align 8
  %result.i33 = call ptr %55({ ptr, ptr, ptr, i32 } %49, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %56 = call { ptr, ptr, ptr, i32 } %result.i33({ ptr, ptr, ptr, i32 } %49, { ptr, ptr, ptr, i32 } %49, ptr nonnull align 8 %4) #42
  %.fca.0.extract5 = extractvalue { ptr, ptr, ptr, i32 } %56, 0
  %.fca.1.extract7 = extractvalue { ptr, ptr, ptr, i32 } %56, 1
  %.fca.2.extract9 = extractvalue { ptr, ptr, ptr, i32 } %56, 2
  %hash_coef_ptr.i.i35 = getelementptr i8, ptr %.fca.0.extract5, i64 8
  %tbl_size_ptr.i.i36 = getelementptr i8, ptr %.fca.0.extract5, i64 16
  %offset_tbl_ptr.i.i37 = getelementptr i8, ptr %.fca.0.extract5, i64 40
  %57 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %58 = load ptr, ptr %24, align 8
  %59 = load ptr, ptr %58, align 8
  %60 = call { ptr, ptr, ptr, i32 } %59(ptr %.fca.1.extract73) #40
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %60, 0
  %.fca.1.extract2 = extractvalue { ptr, ptr, ptr, i32 } %60, 1
  %.fca.2.extract3 = extractvalue { ptr, ptr, ptr, i32 } %60, 2
  %.fca.3.extract4 = extractvalue { ptr, ptr, ptr, i32 } %60, 3
  %61 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract1, 0
  %62 = insertvalue { ptr, ptr, ptr, i32 } %61, ptr %.fca.1.extract2, 1
  %63 = insertvalue { ptr, ptr, ptr, i32 } %62, ptr %.fca.2.extract3, 2
  %64 = insertvalue { ptr, ptr, ptr, i32 } %63, i32 %.fca.3.extract4, 3
  %65 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %66 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract1)
  %67 = sext i32 %.fca.3.extract4 to i64
  %68 = getelementptr ptr, ptr %.fca.0.extract1, i64 %67
  %69 = getelementptr i8, ptr %68, i64 8
  %70 = load ptr, ptr %69, align 8
  %result.i48 = call ptr %70({ ptr, ptr, ptr, i32 } %64, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %71 = call { ptr, ptr, ptr, i32 } %result.i48({ ptr, ptr, ptr, i32 } %64, { ptr, ptr, ptr, i32 } %64, ptr nonnull align 8 %4) #42
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %71, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %71, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %71, 2
  %hash_coef_ptr.i.i50 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i51 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i52 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i67 = load i64, ptr %hash_coef_ptr.i.i35, align 4, !noalias !23
  %tbl_size.i.i68 = load i64, ptr %tbl_size_ptr.i.i36, align 4, !noalias !23
  %offset_tbl.i.i69 = load ptr, ptr %offset_tbl_ptr.i.i37, align 8, !noalias !23
  %product.i.i.i70 = mul i64 %hash_coef.i.i67, 8673632051301757104
  %shifted.i.i.i71 = lshr i64 %product.i.i.i70, 32
  %xored.i.i.i72 = xor i64 %shifted.i.i.i71, %product.i.i.i70
  %hash.i.i.i73 = and i64 %xored.i.i.i72, %tbl_size.i.i68
  %offset_ptr.i.i74 = getelementptr i32, ptr %offset_tbl.i.i69, i64 %hash.i.i.i73
  %offset.i.i75 = load i32, ptr %offset_ptr.i.i74, align 4, !noalias !23
  %72 = insertvalue { ptr, ptr, ptr, i32 } { ptr @InterleaveIterator, ptr undef, ptr undef, i32 undef }, ptr %result.i32, 1
  %73 = insertvalue { ptr, ptr, ptr, i32 } %72, ptr undef, 2
  %74 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %75 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %76 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef nonnull align 16 dereferenceable(168) @InterleaveIterator) #37
  %77 = getelementptr inbounds i8, ptr %result.i32, i64 8
  store ptr %.fca.0.extract5, ptr %77, align 8
  %78 = getelementptr inbounds i8, ptr %result.i32, i64 16
  store ptr %.fca.1.extract7, ptr %78, align 8
  %79 = getelementptr inbounds i8, ptr %result.i32, i64 24
  store ptr %.fca.2.extract9, ptr %79, align 8
  %80 = getelementptr inbounds i8, ptr %result.i32, i64 32
  store i32 %offset.i.i75, ptr %80, align 8
  %hash_coef.i.i33.i = load i64, ptr %hash_coef_ptr.i.i50, align 4, !noalias !23
  %tbl_size.i.i34.i = load i64, ptr %tbl_size_ptr.i.i51, align 4, !noalias !23
  %offset_tbl.i.i35.i = load ptr, ptr %offset_tbl_ptr.i.i52, align 8, !noalias !23
  %product.i.i.i36.i = mul i64 %hash_coef.i.i33.i, 8673632051301757104
  %shifted.i.i.i37.i = lshr i64 %product.i.i.i36.i, 32
  %xored.i.i.i38.i = xor i64 %shifted.i.i.i37.i, %product.i.i.i36.i
  %hash.i.i.i39.i = and i64 %xored.i.i.i38.i, %tbl_size.i.i34.i
  %offset_ptr.i.i40.i = getelementptr i32, ptr %offset_tbl.i.i35.i, i64 %hash.i.i.i39.i
  %offset.i.i55.i = load i32, ptr %offset_ptr.i.i40.i, align 4, !noalias !651
  %81 = getelementptr inbounds i8, ptr %result.i32, i64 40
  store ptr %.fca.0.extract, ptr %81, align 8
  %82 = getelementptr inbounds i8, ptr %result.i32, i64 48
  store ptr %.fca.1.extract, ptr %82, align 8
  %83 = getelementptr inbounds i8, ptr %result.i32, i64 56
  store ptr %.fca.2.extract, ptr %83, align 8
  %84 = getelementptr inbounds i8, ptr %result.i32, i64 64
  store i32 %offset.i.i55.i, ptr %84, align 8
  %85 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef nonnull align 16 dereferenceable(168) @InterleaveIterator) #37
  %86 = getelementptr inbounds i8, ptr %result.i32, i64 72
  store i1 true, ptr %86, align 8
  %87 = insertvalue { ptr, ptr, ptr, i32 } %73, i32 18, 3
  ret { ptr, ptr, ptr, i32 } %87
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_InterleaveIterator(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 80, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @InterleaveIterator_B_init_firstIteratorT_secondIteratorT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 128
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @InterleaveIterator_field_InterleaveIterator_0(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @InterleaveIterator_B_next_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 136
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @InterleaveIterator_init_firstIteratorT_secondIteratorT({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3, { ptr, ptr, ptr, i32 } %4) #5 {
  %.fca.0.extract9 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract10 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !654
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !654
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !654
  %product.i.i.i = mul i64 %hash_coef.i.i, -3924664358248524505
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !654
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract2 = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract3 = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 8673632051301757104
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !657
  %6 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef align 8 %.fca.0.extract9) #37
  %7 = sext i32 %offset.i.i to i64
  %8 = getelementptr ptr, ptr %.fca.0.extract9, i64 %7
  %9 = getelementptr i8, ptr %8, i64 8
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr i8, ptr %10, i64 8
  %12 = load ptr, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract1, 0
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.1.extract2, 1
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, ptr %.fca.2.extract3, 2
  %16 = insertvalue { ptr, ptr, ptr, i32 } %15, i32 %offset.i.i27, 3
  call void %12(ptr %.fca.1.extract10, { ptr, ptr, ptr, i32 } %16) #39
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 2
  %hash_coef_ptr.i.i30 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i31 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i32 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i33 = load i64, ptr %hash_coef_ptr.i.i30, align 4, !noalias !23
  %tbl_size.i.i34 = load i64, ptr %tbl_size_ptr.i.i31, align 4, !noalias !23
  %offset_tbl.i.i35 = load ptr, ptr %offset_tbl_ptr.i.i32, align 8, !noalias !23
  %product.i.i.i36 = mul i64 %hash_coef.i.i33, 8673632051301757104
  %shifted.i.i.i37 = lshr i64 %product.i.i.i36, 32
  %xored.i.i.i38 = xor i64 %shifted.i.i.i37, %product.i.i.i36
  %hash.i.i.i39 = and i64 %xored.i.i.i38, %tbl_size.i.i34
  %offset_ptr.i.i40 = getelementptr i32, ptr %offset_tbl.i.i35, i64 %hash.i.i.i39
  %offset.i.i55 = load i32, ptr %offset_ptr.i.i40, align 4, !noalias !660
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef align 8 %.fca.0.extract9) #37
  %18 = getelementptr i8, ptr %8, i64 16
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  %22 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %23 = insertvalue { ptr, ptr, ptr, i32 } %22, ptr %.fca.1.extract, 1
  %24 = insertvalue { ptr, ptr, ptr, i32 } %23, ptr %.fca.2.extract, 2
  %25 = insertvalue { ptr, ptr, ptr, i32 } %24, i32 %offset.i.i55, 3
  call void %21(ptr %.fca.1.extract10, { ptr, ptr, ptr, i32 } %25) #39
  %26 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef align 8 %.fca.0.extract9) #37
  %27 = getelementptr i8, ptr %8, i64 24
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr i8, ptr %28, i64 8
  %30 = load ptr, ptr %29, align 8
  call void %30(ptr %.fca.1.extract10, i1 true) #39
  ret void
}

; Function Attrs: nounwind
define { ptr, i160 } @InterleaveIterator_next_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #11 {
.cont30:
  %3 = alloca [0 x ptr], align 8
  %.fca.0.extract3 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract4 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract3, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract3, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract3, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !663
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !663
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !663
  %product.i.i.i = mul i64 %hash_coef.i.i, -3924664358248524505
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !663
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef align 8 %.fca.0.extract3) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract3, i64 %5
  %7 = getelementptr i8, ptr %6, i64 24
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = call i1 %9(ptr %.fca.1.extract4) #40
  %11 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef align 8 %.fca.0.extract3) #37
  %12 = getelementptr i8, ptr %8, i64 8
  %13 = load ptr, ptr %12, align 8
  %not. = xor i1 %10, true
  %.68 = select i1 %10, i64 8, i64 16
  call void %13(ptr %.fca.1.extract4, i1 %not.) #39
  %14 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef align 8 %.fca.0.extract3) #37
  %15 = getelementptr i8, ptr %6, i64 %.68
  %16 = load ptr, ptr %15, align 8
  %17 = load ptr, ptr %16, align 8
  %18 = call { ptr, ptr, ptr, i32 } %17(ptr %.fca.1.extract4) #40
  %.fca.0.extract9 = extractvalue { ptr, ptr, ptr, i32 } %18, 0
  %.fca.1.extract10 = extractvalue { ptr, ptr, ptr, i32 } %18, 1
  %.fca.2.extract11 = extractvalue { ptr, ptr, ptr, i32 } %18, 2
  %.fca.3.extract12 = extractvalue { ptr, ptr, ptr, i32 } %18, 3
  %19 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract9, 0
  %20 = insertvalue { ptr, ptr, ptr, i32 } %19, ptr %.fca.1.extract10, 1
  %21 = insertvalue { ptr, ptr, ptr, i32 } %20, ptr %.fca.2.extract11, 2
  %22 = insertvalue { ptr, ptr, ptr, i32 } %21, i32 %.fca.3.extract12, 3
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %3) #37
  %24 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef %.fca.0.extract9) #37
  %25 = sext i32 %.fca.3.extract12 to i64
  %26 = getelementptr ptr, ptr %.fca.0.extract9, i64 %25
  %27 = getelementptr i8, ptr %26, i64 8
  %28 = load ptr, ptr %27, align 8
  %result.i = call ptr %28({ ptr, ptr, ptr, i32 } %22, ptr nocapture nofree noundef nonnull readonly align 8 %3) #45
  %29 = call { ptr, i160 } %result.i({ ptr, ptr, ptr, i32 } %22, { ptr, ptr, ptr, i32 } %22, ptr nonnull align 8 %3) #42
  ret { ptr, i160 } %29
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define i1 @InterleaveIterator_getter_on_first(ptr nocapture nofree readonly %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 72
  %3 = load i1, ptr %2, align 1
  ret i1 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @InterleaveIterator_setter_on_first(ptr nocapture nofree writeonly %0, i1 %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 72
  store i1 %1, ptr %3, align 1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @InterleaveIterator_getter_second(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 40
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 48
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 56
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 64
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @InterleaveIterator_setter_second(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 40
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 48
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 56
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 64
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @InterleaveIterator_getter_first(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 16
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 24
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 32
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @InterleaveIterator_setter_first(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 8
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 16
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 24
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 32
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @InterleaveIterable_getter_second(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 40
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 48
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 56
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 64
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @InterleaveIterable_setter_second(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 40
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 48
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 56
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 64
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @InterleaveIterable_getter_first(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 16
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 24
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 32
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @InterleaveIterable_setter_first(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 8
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 16
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 24
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 32
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_ChainIterable(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 72, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ChainIterable_B_init_firstIterableT_secondIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 200
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @ChainIterable_field_ChainIterable_0(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ChainIterable_B_iterator_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 208
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ChainIterable_B_each_fFunctionT_to_Nothing({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 216
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ChainIterable_B_reduce_accumulatorT_fFunctionT._T_to_T({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 224
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ChainIterable_B_all_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 232
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ChainIterable_B_any_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 240
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ChainIterable_B_map_fFunctionT_to_U({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 248
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ChainIterable_B_filter_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 256
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ChainIterable_B_chain_otherIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 264
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ChainIterable_B_interleave_otherIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 272
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ChainIterable_B_zip_otherIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 280
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ChainIterable_B_product_otherIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 288
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @ChainIterable_init_firstIterableT_secondIterableT({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3, { ptr, ptr, ptr, i32 } %4) #5 {
  %.fca.0.extract9 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract10 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !666
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !666
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !666
  %product.i.i.i = mul i64 %hash_coef.i.i, -2370247058431047815
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !666
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract2 = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract3 = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 3037712219555723519
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !669
  %6 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract9) #37
  %7 = sext i32 %offset.i.i to i64
  %8 = getelementptr ptr, ptr %.fca.0.extract9, i64 %7
  %9 = getelementptr i8, ptr %8, i64 8
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr i8, ptr %10, i64 8
  %12 = load ptr, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract1, 0
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.1.extract2, 1
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, ptr %.fca.2.extract3, 2
  %16 = insertvalue { ptr, ptr, ptr, i32 } %15, i32 %offset.i.i27, 3
  call void %12(ptr %.fca.1.extract10, { ptr, ptr, ptr, i32 } %16) #39
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 2
  %hash_coef_ptr.i.i30 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i31 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i32 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i33 = load i64, ptr %hash_coef_ptr.i.i30, align 4, !noalias !23
  %tbl_size.i.i34 = load i64, ptr %tbl_size_ptr.i.i31, align 4, !noalias !23
  %offset_tbl.i.i35 = load ptr, ptr %offset_tbl_ptr.i.i32, align 8, !noalias !23
  %product.i.i.i36 = mul i64 %hash_coef.i.i33, 3037712219555723519
  %shifted.i.i.i37 = lshr i64 %product.i.i.i36, 32
  %xored.i.i.i38 = xor i64 %shifted.i.i.i37, %product.i.i.i36
  %hash.i.i.i39 = and i64 %xored.i.i.i38, %tbl_size.i.i34
  %offset_ptr.i.i40 = getelementptr i32, ptr %offset_tbl.i.i35, i64 %hash.i.i.i39
  %offset.i.i55 = load i32, ptr %offset_ptr.i.i40, align 4, !noalias !672
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract9) #37
  %18 = getelementptr i8, ptr %8, i64 16
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  %22 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %23 = insertvalue { ptr, ptr, ptr, i32 } %22, ptr %.fca.1.extract, 1
  %24 = insertvalue { ptr, ptr, ptr, i32 } %23, ptr %.fca.2.extract, 2
  %25 = insertvalue { ptr, ptr, ptr, i32 } %24, i32 %offset.i.i55, 3
  call void %21(ptr %.fca.1.extract10, { ptr, ptr, ptr, i32 } %25) #39
  ret void
}

; Function Attrs: nounwind
define { ptr, ptr, ptr, i32 } @ChainIterable_iterator_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #11 {
  %4 = alloca [0 x ptr], align 8
  %.fca.0.extract71 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract73 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract71, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract71, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract71, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !675
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !675
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !675
  %product.i.i.i = mul i64 %hash_coef.i.i, -2370247058431047815
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !675
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract71) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract71, i64 %6
  %8 = getelementptr i8, ptr %7, i64 8
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = call { ptr, ptr, ptr, i32 } %10(ptr %.fca.1.extract73) #40
  %.fca.0.extract63 = extractvalue { ptr, ptr, ptr, i32 } %11, 0
  %.fca.1.extract65 = extractvalue { ptr, ptr, ptr, i32 } %11, 1
  %.fca.2.extract67 = extractvalue { ptr, ptr, ptr, i32 } %11, 2
  %.fca.3.extract69 = extractvalue { ptr, ptr, ptr, i32 } %11, 3
  %12 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract63, 0
  %13 = insertvalue { ptr, ptr, ptr, i32 } %12, ptr %.fca.1.extract65, 1
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.2.extract67, 2
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, i32 %.fca.3.extract69, 3
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4) #50
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract63) #50
  %18 = sext i32 %.fca.3.extract69 to i64
  %19 = getelementptr ptr, ptr %.fca.0.extract63, i64 %18
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  %result.i = call ptr %21({ ptr, ptr, ptr, i32 } %15, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %22 = call { ptr, ptr, ptr, i32 } %result.i({ ptr, ptr, ptr, i32 } %15, { ptr, ptr, ptr, i32 } %15, ptr nonnull align 8 %4) #42
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %24 = getelementptr i8, ptr %7, i64 16
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr %25, align 8
  %27 = call { ptr, ptr, ptr, i32 } %26(ptr %.fca.1.extract73) #40
  %.fca.0.extract43 = extractvalue { ptr, ptr, ptr, i32 } %27, 0
  %.fca.1.extract45 = extractvalue { ptr, ptr, ptr, i32 } %27, 1
  %.fca.2.extract47 = extractvalue { ptr, ptr, ptr, i32 } %27, 2
  %.fca.3.extract49 = extractvalue { ptr, ptr, ptr, i32 } %27, 3
  %28 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract43, 0
  %29 = insertvalue { ptr, ptr, ptr, i32 } %28, ptr %.fca.1.extract45, 1
  %30 = insertvalue { ptr, ptr, ptr, i32 } %29, ptr %.fca.2.extract47, 2
  %31 = insertvalue { ptr, ptr, ptr, i32 } %30, i32 %.fca.3.extract49, 3
  %32 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %33 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract43)
  %34 = sext i32 %.fca.3.extract49 to i64
  %35 = getelementptr ptr, ptr %.fca.0.extract43, i64 %34
  %36 = getelementptr i8, ptr %35, i64 8
  %37 = load ptr, ptr %36, align 8
  %result.i15 = call ptr %37({ ptr, ptr, ptr, i32 } %31, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %38 = call { ptr, ptr, ptr, i32 } %result.i15({ ptr, ptr, ptr, i32 } %31, { ptr, ptr, ptr, i32 } %31, ptr nonnull align 8 %4) #42
  %39 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %40 = load ptr, ptr %7, align 8
  %result.i30 = call ptr %40(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract73) #41
  %result.i32 = call noalias nonnull align 8 dereferenceable(80) ptr @bump_malloc_inner(i64 noundef 80, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i30, ptr %result.i32, align 8
  %41 = call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(80) %result.i32)
  %42 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %43 = load ptr, ptr %8, align 8
  %44 = load ptr, ptr %43, align 8
  %45 = call { ptr, ptr, ptr, i32 } %44(ptr %.fca.1.extract73) #40
  %.fca.0.extract17 = extractvalue { ptr, ptr, ptr, i32 } %45, 0
  %.fca.1.extract19 = extractvalue { ptr, ptr, ptr, i32 } %45, 1
  %.fca.2.extract21 = extractvalue { ptr, ptr, ptr, i32 } %45, 2
  %.fca.3.extract23 = extractvalue { ptr, ptr, ptr, i32 } %45, 3
  %46 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract17, 0
  %47 = insertvalue { ptr, ptr, ptr, i32 } %46, ptr %.fca.1.extract19, 1
  %48 = insertvalue { ptr, ptr, ptr, i32 } %47, ptr %.fca.2.extract21, 2
  %49 = insertvalue { ptr, ptr, ptr, i32 } %48, i32 %.fca.3.extract23, 3
  %50 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %51 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract17)
  %52 = sext i32 %.fca.3.extract23 to i64
  %53 = getelementptr ptr, ptr %.fca.0.extract17, i64 %52
  %54 = getelementptr i8, ptr %53, i64 8
  %55 = load ptr, ptr %54, align 8
  %result.i33 = call ptr %55({ ptr, ptr, ptr, i32 } %49, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %56 = call { ptr, ptr, ptr, i32 } %result.i33({ ptr, ptr, ptr, i32 } %49, { ptr, ptr, ptr, i32 } %49, ptr nonnull align 8 %4) #42
  %.fca.0.extract5 = extractvalue { ptr, ptr, ptr, i32 } %56, 0
  %.fca.1.extract7 = extractvalue { ptr, ptr, ptr, i32 } %56, 1
  %.fca.2.extract9 = extractvalue { ptr, ptr, ptr, i32 } %56, 2
  %hash_coef_ptr.i.i35 = getelementptr i8, ptr %.fca.0.extract5, i64 8
  %tbl_size_ptr.i.i36 = getelementptr i8, ptr %.fca.0.extract5, i64 16
  %offset_tbl_ptr.i.i37 = getelementptr i8, ptr %.fca.0.extract5, i64 40
  %57 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %58 = load ptr, ptr %24, align 8
  %59 = load ptr, ptr %58, align 8
  %60 = call { ptr, ptr, ptr, i32 } %59(ptr %.fca.1.extract73) #40
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %60, 0
  %.fca.1.extract2 = extractvalue { ptr, ptr, ptr, i32 } %60, 1
  %.fca.2.extract3 = extractvalue { ptr, ptr, ptr, i32 } %60, 2
  %.fca.3.extract4 = extractvalue { ptr, ptr, ptr, i32 } %60, 3
  %61 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract1, 0
  %62 = insertvalue { ptr, ptr, ptr, i32 } %61, ptr %.fca.1.extract2, 1
  %63 = insertvalue { ptr, ptr, ptr, i32 } %62, ptr %.fca.2.extract3, 2
  %64 = insertvalue { ptr, ptr, ptr, i32 } %63, i32 %.fca.3.extract4, 3
  %65 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %66 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract1)
  %67 = sext i32 %.fca.3.extract4 to i64
  %68 = getelementptr ptr, ptr %.fca.0.extract1, i64 %67
  %69 = getelementptr i8, ptr %68, i64 8
  %70 = load ptr, ptr %69, align 8
  %result.i48 = call ptr %70({ ptr, ptr, ptr, i32 } %64, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %71 = call { ptr, ptr, ptr, i32 } %result.i48({ ptr, ptr, ptr, i32 } %64, { ptr, ptr, ptr, i32 } %64, ptr nonnull align 8 %4) #42
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %71, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %71, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %71, 2
  %hash_coef_ptr.i.i50 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i51 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i52 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i67 = load i64, ptr %hash_coef_ptr.i.i35, align 4, !noalias !23
  %tbl_size.i.i68 = load i64, ptr %tbl_size_ptr.i.i36, align 4, !noalias !23
  %offset_tbl.i.i69 = load ptr, ptr %offset_tbl_ptr.i.i37, align 8, !noalias !23
  %product.i.i.i70 = mul i64 %hash_coef.i.i67, 8673632051301757104
  %shifted.i.i.i71 = lshr i64 %product.i.i.i70, 32
  %xored.i.i.i72 = xor i64 %shifted.i.i.i71, %product.i.i.i70
  %hash.i.i.i73 = and i64 %xored.i.i.i72, %tbl_size.i.i68
  %offset_ptr.i.i74 = getelementptr i32, ptr %offset_tbl.i.i69, i64 %hash.i.i.i73
  %offset.i.i75 = load i32, ptr %offset_ptr.i.i74, align 4, !noalias !23
  %72 = insertvalue { ptr, ptr, ptr, i32 } { ptr @ChainIterator, ptr undef, ptr undef, i32 undef }, ptr %result.i32, 1
  %73 = insertvalue { ptr, ptr, ptr, i32 } %72, ptr undef, 2
  %74 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %75 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract71)
  %76 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef nonnull align 16 dereferenceable(168) @ChainIterator) #37
  %77 = getelementptr inbounds i8, ptr %result.i32, i64 8
  store ptr %.fca.0.extract5, ptr %77, align 8
  %78 = getelementptr inbounds i8, ptr %result.i32, i64 16
  store ptr %.fca.1.extract7, ptr %78, align 8
  %79 = getelementptr inbounds i8, ptr %result.i32, i64 24
  store ptr %.fca.2.extract9, ptr %79, align 8
  %80 = getelementptr inbounds i8, ptr %result.i32, i64 32
  store i32 %offset.i.i75, ptr %80, align 8
  %hash_coef.i.i33.i = load i64, ptr %hash_coef_ptr.i.i50, align 4, !noalias !23
  %tbl_size.i.i34.i = load i64, ptr %tbl_size_ptr.i.i51, align 4, !noalias !23
  %offset_tbl.i.i35.i = load ptr, ptr %offset_tbl_ptr.i.i52, align 8, !noalias !23
  %product.i.i.i36.i = mul i64 %hash_coef.i.i33.i, 8673632051301757104
  %shifted.i.i.i37.i = lshr i64 %product.i.i.i36.i, 32
  %xored.i.i.i38.i = xor i64 %shifted.i.i.i37.i, %product.i.i.i36.i
  %hash.i.i.i39.i = and i64 %xored.i.i.i38.i, %tbl_size.i.i34.i
  %offset_ptr.i.i40.i = getelementptr i32, ptr %offset_tbl.i.i35.i, i64 %hash.i.i.i39.i
  %offset.i.i55.i = load i32, ptr %offset_ptr.i.i40.i, align 4, !noalias !678
  %81 = getelementptr inbounds i8, ptr %result.i32, i64 40
  store ptr %.fca.0.extract, ptr %81, align 8
  %82 = getelementptr inbounds i8, ptr %result.i32, i64 48
  store ptr %.fca.1.extract, ptr %82, align 8
  %83 = getelementptr inbounds i8, ptr %result.i32, i64 56
  store ptr %.fca.2.extract, ptr %83, align 8
  %84 = getelementptr inbounds i8, ptr %result.i32, i64 64
  store i32 %offset.i.i55.i, ptr %84, align 8
  %85 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef nonnull align 16 dereferenceable(168) @ChainIterator) #37
  %86 = getelementptr inbounds i8, ptr %result.i32, i64 72
  store i1 true, ptr %86, align 8
  %87 = insertvalue { ptr, ptr, ptr, i32 } %73, i32 18, 3
  ret { ptr, ptr, ptr, i32 } %87
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_ChainIterator(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 80, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ChainIterator_B_init_firstIteratorT_secondIteratorT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 128
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @ChainIterator_field_ChainIterator_0(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ChainIterator_B_next_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 136
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @ChainIterator_init_firstIteratorT_secondIteratorT({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3, { ptr, ptr, ptr, i32 } %4) #5 {
  %.fca.0.extract9 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract10 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract9, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !681
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !681
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !681
  %product.i.i.i = mul i64 %hash_coef.i.i, 6043157723929225452
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !681
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract2 = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract3 = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 8673632051301757104
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !684
  %6 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef align 8 %.fca.0.extract9) #37
  %7 = sext i32 %offset.i.i to i64
  %8 = getelementptr ptr, ptr %.fca.0.extract9, i64 %7
  %9 = getelementptr i8, ptr %8, i64 8
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr i8, ptr %10, i64 8
  %12 = load ptr, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract1, 0
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.1.extract2, 1
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, ptr %.fca.2.extract3, 2
  %16 = insertvalue { ptr, ptr, ptr, i32 } %15, i32 %offset.i.i27, 3
  call void %12(ptr %.fca.1.extract10, { ptr, ptr, ptr, i32 } %16) #39
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 2
  %hash_coef_ptr.i.i30 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i31 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i32 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i33 = load i64, ptr %hash_coef_ptr.i.i30, align 4, !noalias !23
  %tbl_size.i.i34 = load i64, ptr %tbl_size_ptr.i.i31, align 4, !noalias !23
  %offset_tbl.i.i35 = load ptr, ptr %offset_tbl_ptr.i.i32, align 8, !noalias !23
  %product.i.i.i36 = mul i64 %hash_coef.i.i33, 8673632051301757104
  %shifted.i.i.i37 = lshr i64 %product.i.i.i36, 32
  %xored.i.i.i38 = xor i64 %shifted.i.i.i37, %product.i.i.i36
  %hash.i.i.i39 = and i64 %xored.i.i.i38, %tbl_size.i.i34
  %offset_ptr.i.i40 = getelementptr i32, ptr %offset_tbl.i.i35, i64 %hash.i.i.i39
  %offset.i.i55 = load i32, ptr %offset_ptr.i.i40, align 4, !noalias !687
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef align 8 %.fca.0.extract9) #37
  %18 = getelementptr i8, ptr %8, i64 16
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  %22 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %23 = insertvalue { ptr, ptr, ptr, i32 } %22, ptr %.fca.1.extract, 1
  %24 = insertvalue { ptr, ptr, ptr, i32 } %23, ptr %.fca.2.extract, 2
  %25 = insertvalue { ptr, ptr, ptr, i32 } %24, i32 %offset.i.i55, 3
  call void %21(ptr %.fca.1.extract10, { ptr, ptr, ptr, i32 } %25) #39
  %26 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef align 8 %.fca.0.extract9) #37
  %27 = getelementptr i8, ptr %8, i64 24
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr i8, ptr %28, i64 8
  %30 = load ptr, ptr %29, align 8
  call void %30(ptr %.fca.1.extract10, i1 true) #39
  ret void
}

; Function Attrs: nounwind
define { ptr, i160 } @ChainIterator_next_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #11 {
  %4 = alloca [0 x ptr], align 8
  %.fca.0.extract5 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract6 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !690
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !690
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !690
  %product.i.i.i = mul i64 %hash_coef.i.i, 6043157723929225452
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !690
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef align 8 %.fca.0.extract5) #44
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract5, i64 %6
  %8 = getelementptr i8, ptr %7, i64 24
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = call i1 %10(ptr %.fca.1.extract6) #40
  %12 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef align 8 %.fca.0.extract5) #44
  br i1 %11, label %29, label %13

13:                                               ; preds = %3
  %14 = getelementptr i8, ptr %7, i64 16
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr %15, align 8
  %17 = call { ptr, ptr, ptr, i32 } %16(ptr %.fca.1.extract6) #40
  %.fca.0.extract24 = extractvalue { ptr, ptr, ptr, i32 } %17, 0
  %.fca.1.extract26 = extractvalue { ptr, ptr, ptr, i32 } %17, 1
  %.fca.2.extract28 = extractvalue { ptr, ptr, ptr, i32 } %17, 2
  %.fca.3.extract30 = extractvalue { ptr, ptr, ptr, i32 } %17, 3
  %18 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract24, 0
  %19 = insertvalue { ptr, ptr, ptr, i32 } %18, ptr %.fca.1.extract26, 1
  %20 = insertvalue { ptr, ptr, ptr, i32 } %19, ptr %.fca.2.extract28, 2
  %21 = insertvalue { ptr, ptr, ptr, i32 } %20, i32 %.fca.3.extract30, 3
  %22 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef %.fca.0.extract24)
  %24 = sext i32 %.fca.3.extract30 to i64
  %25 = getelementptr ptr, ptr %.fca.0.extract24, i64 %24
  %26 = getelementptr i8, ptr %25, i64 8
  %27 = load ptr, ptr %26, align 8
  %result.i = call ptr %27({ ptr, ptr, ptr, i32 } %21, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %28 = call { ptr, i160 } %result.i({ ptr, ptr, ptr, i32 } %21, { ptr, ptr, ptr, i32 } %21, ptr nonnull align 8 %4) #42
  %.fca.0.extract18 = extractvalue { ptr, i160 } %28, 0
  br label %52

29:                                               ; preds = %3
  %30 = getelementptr i8, ptr %7, i64 8
  %31 = load ptr, ptr %30, align 8
  %32 = load ptr, ptr %31, align 8
  %33 = call { ptr, ptr, ptr, i32 } %32(ptr %.fca.1.extract6) #40
  %.fca.0.extract14 = extractvalue { ptr, ptr, ptr, i32 } %33, 0
  %.fca.1.extract15 = extractvalue { ptr, ptr, ptr, i32 } %33, 1
  %.fca.2.extract16 = extractvalue { ptr, ptr, ptr, i32 } %33, 2
  %.fca.3.extract17 = extractvalue { ptr, ptr, ptr, i32 } %33, 3
  %34 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract14, 0
  %35 = insertvalue { ptr, ptr, ptr, i32 } %34, ptr %.fca.1.extract15, 1
  %36 = insertvalue { ptr, ptr, ptr, i32 } %35, ptr %.fca.2.extract16, 2
  %37 = insertvalue { ptr, ptr, ptr, i32 } %36, i32 %.fca.3.extract17, 3
  %38 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %39 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef %.fca.0.extract14)
  %40 = sext i32 %.fca.3.extract17 to i64
  %41 = getelementptr ptr, ptr %.fca.0.extract14, i64 %40
  %42 = getelementptr i8, ptr %41, i64 8
  %43 = load ptr, ptr %42, align 8
  %result.i1 = call ptr %43({ ptr, ptr, ptr, i32 } %37, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %44 = call { ptr, i160 } %result.i1({ ptr, ptr, ptr, i32 } %37, { ptr, ptr, ptr, i32 } %37, ptr nonnull align 8 %4) #42
  %.fca.0.extract10 = extractvalue { ptr, i160 } %44, 0
  %45 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract5)
  %46 = icmp eq ptr %.fca.0.extract10, @nil_typ
  %47 = icmp eq ptr %.fca.0.extract10, null
  %.not33.not = or i1 %46, %47
  br i1 %.not33.not, label %._crit_edge.preheader, label %52

._crit_edge.preheader:                            ; preds = %29
  %48 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract5)
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.preheader, %._crit_edge
  %49 = load ptr, ptr %8, align 8
  %50 = getelementptr i8, ptr %49, i64 8
  %51 = load ptr, ptr %50, align 8
  call void %51(ptr %.fca.1.extract6, i1 false) #39
  br label %._crit_edge

52:                                               ; preds = %29, %13
  %.reg2mem29.sroa.0.0 = phi ptr [ %.fca.0.extract18, %13 ], [ %.fca.0.extract10, %29 ]
  %.pn = phi { ptr, i160 } [ %28, %13 ], [ %44, %29 ]
  %.reload30.fca.0.insert = insertvalue { ptr, i160 } poison, ptr %.reg2mem29.sroa.0.0, 0
  %.reg2mem29.sroa.3.0 = extractvalue { ptr, i160 } %.pn, 1
  %.reload30.fca.1.insert = insertvalue { ptr, i160 } %.reload30.fca.0.insert, i160 %.reg2mem29.sroa.3.0, 1
  ret { ptr, i160 } %.reload30.fca.1.insert
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define i1 @ChainIterator_getter_on_first(ptr nocapture nofree readonly %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 72
  %3 = load i1, ptr %2, align 1
  ret i1 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @ChainIterator_setter_on_first(ptr nocapture nofree writeonly %0, i1 %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 72
  store i1 %1, ptr %3, align 1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @ChainIterator_getter_second(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 40
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 48
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 56
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 64
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @ChainIterator_setter_second(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 40
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 48
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 56
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 64
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @ChainIterator_getter_first(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 16
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 24
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 32
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @ChainIterator_setter_first(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 8
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 16
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 24
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 32
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @ChainIterable_getter_second(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 40
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 48
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 56
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 64
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @ChainIterable_setter_second(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 40
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 48
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 56
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 64
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @ChainIterable_getter_first(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 16
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 24
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 32
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @ChainIterable_setter_first(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 8
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 16
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 24
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 32
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_FilterIterable(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 48, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @FilterIterable_B_init_iterableIterableT_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 200
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @FilterIterable_field_FilterIterable_0(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @FilterIterable_B_iterator_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 208
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @FilterIterable_B_each_fFunctionT_to_Nothing({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 216
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @FilterIterable_B_reduce_accumulatorT_fFunctionT._T_to_T({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 224
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @FilterIterable_B_all_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 232
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @FilterIterable_B_any_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 240
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @FilterIterable_B_map_fFunctionT_to_U({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 248
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @FilterIterable_B_filter_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 256
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @FilterIterable_B_chain_otherIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 264
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @FilterIterable_B_interleave_otherIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 272
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @FilterIterable_B_zip_otherIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 280
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @FilterIterable_B_product_otherIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 288
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @FilterIterable_init_iterableIterableT_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3, { ptr } %4) #5 {
  %.fca.0.extract2 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract3 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !693
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !693
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !693
  %product.i.i.i = mul i64 %hash_coef.i.i, 8498466713076104350
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !693
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 3037712219555723519
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !696
  %6 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract2) #37
  %7 = sext i32 %offset.i.i to i64
  %8 = getelementptr ptr, ptr %.fca.0.extract2, i64 %7
  %9 = getelementptr i8, ptr %8, i64 8
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr i8, ptr %10, i64 8
  %12 = load ptr, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract1, 0
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.1.extract, 1
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, ptr %.fca.2.extract, 2
  %16 = insertvalue { ptr, ptr, ptr, i32 } %15, i32 %offset.i.i27, 3
  call void %12(ptr %.fca.1.extract3, { ptr, ptr, ptr, i32 } %16) #39
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract2) #37
  %18 = getelementptr i8, ptr %8, i64 16
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  call void %21(ptr %.fca.1.extract3, { ptr } %4) #39
  ret void
}

; Function Attrs: nounwind
define { ptr, ptr, ptr, i32 } @FilterIterable_iterator_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #11 {
  %4 = alloca [0 x ptr], align 8
  %.fca.0.extract35 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract37 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract35, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract35, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract35, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !699
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !699
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !699
  %product.i.i.i = mul i64 %hash_coef.i.i, 8498466713076104350
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !699
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract35) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract35, i64 %6
  %8 = getelementptr i8, ptr %7, i64 8
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = call { ptr, ptr, ptr, i32 } %10(ptr %.fca.1.extract37) #40
  %.fca.0.extract27 = extractvalue { ptr, ptr, ptr, i32 } %11, 0
  %.fca.1.extract29 = extractvalue { ptr, ptr, ptr, i32 } %11, 1
  %.fca.2.extract31 = extractvalue { ptr, ptr, ptr, i32 } %11, 2
  %.fca.3.extract33 = extractvalue { ptr, ptr, ptr, i32 } %11, 3
  %12 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract27, 0
  %13 = insertvalue { ptr, ptr, ptr, i32 } %12, ptr %.fca.1.extract29, 1
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.2.extract31, 2
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, i32 %.fca.3.extract33, 3
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4) #50
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract27) #50
  %18 = sext i32 %.fca.3.extract33 to i64
  %19 = getelementptr ptr, ptr %.fca.0.extract27, i64 %18
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  %result.i = call ptr %21({ ptr, ptr, ptr, i32 } %15, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %22 = call { ptr, ptr, ptr, i32 } %result.i({ ptr, ptr, ptr, i32 } %15, { ptr, ptr, ptr, i32 } %15, ptr nonnull align 8 %4) #42
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract35)
  %24 = getelementptr i8, ptr %7, i64 16
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr %25, align 8
  %27 = call { ptr } %26(ptr nonnull %.fca.1.extract37) #40
  %28 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract35)
  %29 = load ptr, ptr %7, align 8
  %result.i15 = call ptr %29(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract37) #41
  %result.i17 = call noalias nonnull align 8 dereferenceable(48) ptr @bump_malloc_inner(i64 noundef 48, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i15, ptr %result.i17, align 8
  %30 = call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(48) %result.i17)
  %31 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract35)
  %32 = load ptr, ptr %8, align 8
  %33 = load ptr, ptr %32, align 8
  %34 = call { ptr, ptr, ptr, i32 } %33(ptr %.fca.1.extract37) #40
  %.fca.0.extract2 = extractvalue { ptr, ptr, ptr, i32 } %34, 0
  %.fca.1.extract3 = extractvalue { ptr, ptr, ptr, i32 } %34, 1
  %.fca.2.extract4 = extractvalue { ptr, ptr, ptr, i32 } %34, 2
  %.fca.3.extract5 = extractvalue { ptr, ptr, ptr, i32 } %34, 3
  %35 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract2, 0
  %36 = insertvalue { ptr, ptr, ptr, i32 } %35, ptr %.fca.1.extract3, 1
  %37 = insertvalue { ptr, ptr, ptr, i32 } %36, ptr %.fca.2.extract4, 2
  %38 = insertvalue { ptr, ptr, ptr, i32 } %37, i32 %.fca.3.extract5, 3
  %39 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %40 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract2)
  %41 = sext i32 %.fca.3.extract5 to i64
  %42 = getelementptr ptr, ptr %.fca.0.extract2, i64 %41
  %43 = getelementptr i8, ptr %42, i64 8
  %44 = load ptr, ptr %43, align 8
  %result.i18 = call ptr %44({ ptr, ptr, ptr, i32 } %38, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %45 = call { ptr, ptr, ptr, i32 } %result.i18({ ptr, ptr, ptr, i32 } %38, { ptr, ptr, ptr, i32 } %38, ptr nonnull align 8 %4) #42
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %45, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %45, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %45, 2
  %hash_coef_ptr.i.i20 = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i21 = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i22 = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i23 = load i64, ptr %hash_coef_ptr.i.i20, align 4, !noalias !23
  %tbl_size.i.i24 = load i64, ptr %tbl_size_ptr.i.i21, align 4, !noalias !23
  %offset_tbl.i.i25 = load ptr, ptr %offset_tbl_ptr.i.i22, align 8, !noalias !23
  %product.i.i.i26 = mul i64 %hash_coef.i.i23, 8673632051301757104
  %shifted.i.i.i27 = lshr i64 %product.i.i.i26, 32
  %xored.i.i.i28 = xor i64 %shifted.i.i.i27, %product.i.i.i26
  %hash.i.i.i29 = and i64 %xored.i.i.i28, %tbl_size.i.i24
  %offset_ptr.i.i30 = getelementptr i32, ptr %offset_tbl.i.i25, i64 %hash.i.i.i29
  %46 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract35)
  %47 = load ptr, ptr %24, align 8
  %48 = load ptr, ptr %47, align 8
  %49 = call { ptr } %48(ptr %.fca.1.extract37) #40
  %offset.i.i45 = load i32, ptr %offset_ptr.i.i30, align 4, !noalias !23
  %50 = insertvalue { ptr, ptr, ptr, i32 } { ptr @FilterIterator, ptr undef, ptr undef, i32 undef }, ptr %result.i17, 1
  %51 = insertvalue { ptr, ptr, ptr, i32 } %50, ptr undef, 2
  %52 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract35)
  %53 = call ptr @llvm.invariant.start.p0(i64 noundef 400, ptr nocapture nofree noundef align 8 %.fca.0.extract35)
  %54 = getelementptr inbounds i8, ptr %result.i17, i64 8
  store ptr %.fca.0.extract1, ptr %54, align 8
  %55 = getelementptr inbounds i8, ptr %result.i17, i64 16
  store ptr %.fca.1.extract, ptr %55, align 8
  %56 = getelementptr inbounds i8, ptr %result.i17, i64 24
  store ptr %.fca.2.extract, ptr %56, align 8
  %57 = getelementptr inbounds i8, ptr %result.i17, i64 32
  store i32 %offset.i.i45, ptr %57, align 8
  %58 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @FilterIterator) #37
  %59 = getelementptr inbounds i8, ptr %result.i17, i64 40
  %.fca.0.extract.i = extractvalue { ptr } %49, 0
  store ptr %.fca.0.extract.i, ptr %59, align 8
  %60 = insertvalue { ptr, ptr, ptr, i32 } %51, i32 17, 3
  ret { ptr, ptr, ptr, i32 } %60
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_FilterIterator(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 48, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @FilterIterator_B_init_iteratorIteratorT_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 120
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @FilterIterator_field_FilterIterator_0(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @FilterIterator_B_next_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 128
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @FilterIterator_init_iteratorIteratorT_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3, { ptr } %4) #5 {
  %.fca.0.extract2 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract3 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !702
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !702
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !702
  %product.i.i.i = mul i64 %hash_coef.i.i, -1221365496900303883
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !702
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 8673632051301757104
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !705
  %6 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef align 8 %.fca.0.extract2) #37
  %7 = sext i32 %offset.i.i to i64
  %8 = getelementptr ptr, ptr %.fca.0.extract2, i64 %7
  %9 = getelementptr i8, ptr %8, i64 8
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr i8, ptr %10, i64 8
  %12 = load ptr, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract1, 0
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.1.extract, 1
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, ptr %.fca.2.extract, 2
  %16 = insertvalue { ptr, ptr, ptr, i32 } %15, i32 %offset.i.i27, 3
  call void %12(ptr %.fca.1.extract3, { ptr, ptr, ptr, i32 } %16) #39
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef align 8 %.fca.0.extract2) #37
  %18 = getelementptr i8, ptr %8, i64 16
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  call void %21(ptr %.fca.1.extract3, { ptr } %4) #39
  ret void
}

define { ptr, i160 } @FilterIterator_next_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #10 {
  %4 = alloca [0 x ptr], align 8
  %.fca.0.extract14 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract16 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract14, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract14, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract14, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !708
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !708
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !708
  %product.i.i.i = mul i64 %hash_coef.i.i, -1221365496900303883
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !708
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef align 8 %.fca.0.extract14) #44
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract14, i64 %6
  %8 = getelementptr i8, ptr %7, i64 8
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = call { ptr, ptr, ptr, i32 } %10(ptr %.fca.1.extract16) #40
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %11, 0
  %.fca.1.extract3 = extractvalue { ptr, ptr, ptr, i32 } %11, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %11, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %11, 3
  %12 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract1, 0
  %13 = insertvalue { ptr, ptr, ptr, i32 } %12, ptr %.fca.1.extract3, 1
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.2.extract, 2
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, i32 %.fca.3.extract, 3
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef %.fca.0.extract1)
  %18 = sext i32 %.fca.3.extract to i64
  %19 = getelementptr ptr, ptr %.fca.0.extract1, i64 %18
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  %result.i = call ptr %21({ ptr, ptr, ptr, i32 } %15, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %22 = call { ptr, i160 } %result.i({ ptr, ptr, ptr, i32 } %15, { ptr, ptr, ptr, i32 } %15, ptr nonnull align 8 %4) #42
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract14)
  %.sroa.0.021 = extractvalue { ptr, i160 } %22, 0
  %24 = icmp ne ptr %.sroa.0.021, @nil_typ
  %25 = icmp ne ptr %.sroa.0.021, null
  %.not5023 = and i1 %24, %25
  br i1 %.not5023, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %3
  %26 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract14)
  %27 = getelementptr i8, ptr %7, i64 16
  %28 = load ptr, ptr %27, align 8
  %29 = load ptr, ptr %28, align 8
  %30 = call { ptr } %29(ptr %.fca.1.extract16) #40
  %.fca.0.extract3731 = extractvalue { ptr } %30, 0
  %31 = call i1 %.fca.0.extract3731({ ptr, i160 } %22)
  br i1 %31, label %._crit_edge.loopexit, label %.lr.ph33.preheader

.lr.ph33.preheader:                               ; preds = %.lr.ph
  %32 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract14)
  br label %.lr.ph33

33:                                               ; preds = %.lr.ph33
  %34 = load ptr, ptr %27, align 8
  %35 = load ptr, ptr %34, align 8
  %36 = call { ptr } %35(ptr %.fca.1.extract16) #40
  %.fca.0.extract37 = extractvalue { ptr } %36, 0
  %37 = call i1 %.fca.0.extract37({ ptr, i160 } %51)
  br i1 %37, label %._crit_edge.loopexit, label %.lr.ph33

.lr.ph33:                                         ; preds = %.lr.ph33.preheader, %33
  %.pn2432 = phi { ptr, i160 } [ %51, %33 ], [ %22, %.lr.ph33.preheader ]
  %38 = load ptr, ptr %8, align 8
  %39 = load ptr, ptr %38, align 8
  %40 = call { ptr, ptr, ptr, i32 } %39(ptr %.fca.1.extract16) #40
  %.fca.0.extract28 = extractvalue { ptr, ptr, ptr, i32 } %40, 0
  %.fca.1.extract30 = extractvalue { ptr, ptr, ptr, i32 } %40, 1
  %.fca.2.extract32 = extractvalue { ptr, ptr, ptr, i32 } %40, 2
  %.fca.3.extract34 = extractvalue { ptr, ptr, ptr, i32 } %40, 3
  %41 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract28, 0
  %42 = insertvalue { ptr, ptr, ptr, i32 } %41, ptr %.fca.1.extract30, 1
  %43 = insertvalue { ptr, ptr, ptr, i32 } %42, ptr %.fca.2.extract32, 2
  %44 = insertvalue { ptr, ptr, ptr, i32 } %43, i32 %.fca.3.extract34, 3
  %45 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %46 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef %.fca.0.extract28)
  %47 = sext i32 %.fca.3.extract34 to i64
  %48 = getelementptr ptr, ptr %.fca.0.extract28, i64 %47
  %49 = getelementptr i8, ptr %48, i64 8
  %50 = load ptr, ptr %49, align 8
  %result.i1 = call ptr %50({ ptr, ptr, ptr, i32 } %44, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %51 = call { ptr, i160 } %result.i1({ ptr, ptr, ptr, i32 } %44, { ptr, ptr, ptr, i32 } %44, ptr nonnull align 8 %4) #42
  %.sroa.0.0 = extractvalue { ptr, i160 } %51, 0
  %52 = icmp ne ptr %.sroa.0.0, @nil_typ
  %53 = icmp ne ptr %.sroa.0.0, null
  %.not50 = and i1 %52, %53
  br i1 %.not50, label %33, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph33, %33, %.lr.ph
  %.pn24.lcssa = phi { ptr, i160 } [ %22, %.lr.ph ], [ %51, %33 ], [ %.pn2432, %.lr.ph33 ]
  %.reg2mem34.0.ph.ph = phi ptr [ %.sroa.0.021, %.lr.ph ], [ %.sroa.0.0, %33 ], [ @nil_typ, %.lr.ph33 ]
  %.sroa.3.026.le = extractvalue { ptr, i160 } %.pn24.lcssa, 1
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %3
  %.1.ph = phi i160 [ undef, %3 ], [ %.sroa.3.026.le, %._crit_edge.loopexit ]
  %.reg2mem34.0.ph = phi ptr [ @nil_typ, %3 ], [ %.reg2mem34.0.ph.ph, %._crit_edge.loopexit ]
  %.reload31.fca.0.insert = insertvalue { ptr, i160 } poison, ptr %.reg2mem34.0.ph, 0
  %.reload31.fca.1.insert = insertvalue { ptr, i160 } %.reload31.fca.0.insert, i160 %.1.ph, 1
  ret { ptr, i160 } %.reload31.fca.1.insert
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr } @FilterIterator_getter_f(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 40
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr } undef, ptr %3, 0
  ret { ptr } %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @FilterIterator_setter_f(ptr nocapture nofree writeonly align 8 %0, { ptr } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 40
  %.fca.0.extract = extractvalue { ptr } %1, 0
  store ptr %.fca.0.extract, ptr %3, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @FilterIterator_getter_iterator(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 16
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 24
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 32
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @FilterIterator_setter_iterator(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 8
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 16
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 24
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 32
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr } @FilterIterable_getter_f(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 40
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr } undef, ptr %3, 0
  ret { ptr } %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @FilterIterable_setter_f(ptr nocapture nofree writeonly align 8 %0, { ptr } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 40
  %.fca.0.extract = extractvalue { ptr } %1, 0
  store ptr %.fca.0.extract, ptr %3, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @FilterIterable_getter_iterable(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 16
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 24
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 32
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @FilterIterable_setter_iterable(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 8
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 16
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 24
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 32
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_MapIterable(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 56, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @MapIterable_B_init_iterableIterableT_fFunctionT_to_U({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 208
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @MapIterable_field_MapIterable_0(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @MapIterable_field_MapIterable_1(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @MapIterable_B_iterator_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 216
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @MapIterable_B_each_fFunctionT_to_Nothing({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 224
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @MapIterable_B_reduce_accumulatorT_fFunctionT._T_to_T({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 232
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @MapIterable_B_all_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 240
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @MapIterable_B_any_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 248
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @MapIterable_B_map_fFunctionT_to_U({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 256
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @MapIterable_B_filter_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 264
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @MapIterable_B_chain_otherIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 272
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @MapIterable_B_interleave_otherIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 280
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @MapIterable_B_zip_otherIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 288
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @MapIterable_B_product_otherIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 296
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @MapIterable_init_iterableIterableT_fFunctionT_to_U({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3, { ptr } %4) #5 {
  %.fca.0.extract2 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract3 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !711
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !711
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !711
  %product.i.i.i = mul i64 %hash_coef.i.i, -7488770571603291722
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !711
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 3037712219555723519
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !714
  %6 = call ptr @llvm.invariant.start.p0(i64 noundef 408, ptr nocapture nofree noundef align 8 %.fca.0.extract2) #37
  %7 = sext i32 %offset.i.i to i64
  %8 = getelementptr ptr, ptr %.fca.0.extract2, i64 %7
  %9 = getelementptr i8, ptr %8, i64 16
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr i8, ptr %10, i64 8
  %12 = load ptr, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract1, 0
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.1.extract, 1
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, ptr %.fca.2.extract, 2
  %16 = insertvalue { ptr, ptr, ptr, i32 } %15, i32 %offset.i.i27, 3
  call void %12(ptr %.fca.1.extract3, { ptr, ptr, ptr, i32 } %16) #39
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 408, ptr nocapture nofree noundef align 8 %.fca.0.extract2) #37
  %18 = getelementptr i8, ptr %8, i64 24
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  call void %21(ptr %.fca.1.extract3, { ptr } %4) #39
  ret void
}

; Function Attrs: nounwind
define { ptr, ptr, ptr, i32 } @MapIterable_iterator_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #11 {
  %4 = alloca [0 x ptr], align 8
  %.fca.0.extract35 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract37 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract35, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract35, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract35, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !717
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !717
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !717
  %product.i.i.i = mul i64 %hash_coef.i.i, -7488770571603291722
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !717
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 408, ptr nocapture nofree noundef align 8 %.fca.0.extract35) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract35, i64 %6
  %8 = getelementptr i8, ptr %7, i64 16
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = call { ptr, ptr, ptr, i32 } %10(ptr %.fca.1.extract37) #40
  %.fca.0.extract27 = extractvalue { ptr, ptr, ptr, i32 } %11, 0
  %.fca.1.extract29 = extractvalue { ptr, ptr, ptr, i32 } %11, 1
  %.fca.2.extract31 = extractvalue { ptr, ptr, ptr, i32 } %11, 2
  %.fca.3.extract33 = extractvalue { ptr, ptr, ptr, i32 } %11, 3
  %12 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract27, 0
  %13 = insertvalue { ptr, ptr, ptr, i32 } %12, ptr %.fca.1.extract29, 1
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.2.extract31, 2
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, i32 %.fca.3.extract33, 3
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4) #50
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract27) #50
  %18 = sext i32 %.fca.3.extract33 to i64
  %19 = getelementptr ptr, ptr %.fca.0.extract27, i64 %18
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  %result.i = call ptr %21({ ptr, ptr, ptr, i32 } %15, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %22 = call { ptr, ptr, ptr, i32 } %result.i({ ptr, ptr, ptr, i32 } %15, { ptr, ptr, ptr, i32 } %15, ptr nonnull align 8 %4) #42
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 408, ptr nocapture nofree noundef align 8 %.fca.0.extract35)
  %24 = getelementptr i8, ptr %7, i64 24
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr %25, align 8
  %27 = call { ptr } %26(ptr nonnull %.fca.1.extract37) #40
  %28 = call ptr @llvm.invariant.start.p0(i64 noundef 408, ptr nocapture nofree noundef align 8 %.fca.0.extract35)
  %29 = load ptr, ptr %7, align 8
  %result.i15 = call ptr %29(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract37) #41
  %30 = call ptr @llvm.invariant.start.p0(i64 noundef 408, ptr nocapture nofree noundef align 8 %.fca.0.extract35)
  %31 = getelementptr i8, ptr %7, i64 8
  %32 = load ptr, ptr %31, align 8
  %result.i16 = call ptr %32(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract37) #41
  %result.i18 = call noalias nonnull align 8 dereferenceable(56) ptr @bump_malloc_inner(i64 noundef 56, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i15, ptr %result.i18, align 8
  %33 = getelementptr inbounds i8, ptr %result.i18, i64 8
  store ptr %result.i16, ptr %33, align 8
  %34 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(56) %result.i18)
  %35 = call ptr @llvm.invariant.start.p0(i64 noundef 408, ptr nocapture nofree noundef align 8 %.fca.0.extract35)
  %36 = load ptr, ptr %8, align 8
  %37 = load ptr, ptr %36, align 8
  %38 = call { ptr, ptr, ptr, i32 } %37(ptr %.fca.1.extract37) #40
  %.fca.0.extract2 = extractvalue { ptr, ptr, ptr, i32 } %38, 0
  %.fca.1.extract3 = extractvalue { ptr, ptr, ptr, i32 } %38, 1
  %.fca.2.extract4 = extractvalue { ptr, ptr, ptr, i32 } %38, 2
  %.fca.3.extract5 = extractvalue { ptr, ptr, ptr, i32 } %38, 3
  %39 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract2, 0
  %40 = insertvalue { ptr, ptr, ptr, i32 } %39, ptr %.fca.1.extract3, 1
  %41 = insertvalue { ptr, ptr, ptr, i32 } %40, ptr %.fca.2.extract4, 2
  %42 = insertvalue { ptr, ptr, ptr, i32 } %41, i32 %.fca.3.extract5, 3
  %43 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %44 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef %.fca.0.extract2)
  %45 = sext i32 %.fca.3.extract5 to i64
  %46 = getelementptr ptr, ptr %.fca.0.extract2, i64 %45
  %47 = getelementptr i8, ptr %46, i64 8
  %48 = load ptr, ptr %47, align 8
  %result.i19 = call ptr %48({ ptr, ptr, ptr, i32 } %42, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %49 = call { ptr, ptr, ptr, i32 } %result.i19({ ptr, ptr, ptr, i32 } %42, { ptr, ptr, ptr, i32 } %42, ptr nonnull align 8 %4) #42
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %49, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %49, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %49, 2
  %hash_coef_ptr.i.i21 = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i22 = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i23 = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i24 = load i64, ptr %hash_coef_ptr.i.i21, align 4, !noalias !23
  %tbl_size.i.i25 = load i64, ptr %tbl_size_ptr.i.i22, align 4, !noalias !23
  %offset_tbl.i.i26 = load ptr, ptr %offset_tbl_ptr.i.i23, align 8, !noalias !23
  %product.i.i.i27 = mul i64 %hash_coef.i.i24, 8673632051301757104
  %shifted.i.i.i28 = lshr i64 %product.i.i.i27, 32
  %xored.i.i.i29 = xor i64 %shifted.i.i.i28, %product.i.i.i27
  %hash.i.i.i30 = and i64 %xored.i.i.i29, %tbl_size.i.i25
  %offset_ptr.i.i31 = getelementptr i32, ptr %offset_tbl.i.i26, i64 %hash.i.i.i30
  %50 = call ptr @llvm.invariant.start.p0(i64 noundef 408, ptr nocapture nofree noundef align 8 %.fca.0.extract35)
  %51 = load ptr, ptr %24, align 8
  %52 = load ptr, ptr %51, align 8
  %53 = call { ptr } %52(ptr %.fca.1.extract37) #40
  %offset.i.i46 = load i32, ptr %offset_ptr.i.i31, align 4, !noalias !23
  %54 = insertvalue { ptr, ptr, ptr, i32 } { ptr @MapIterator, ptr undef, ptr undef, i32 undef }, ptr %result.i18, 1
  %55 = insertvalue { ptr, ptr, ptr, i32 } %54, ptr undef, 2
  %56 = call ptr @llvm.invariant.start.p0(i64 noundef 408, ptr nocapture nofree noundef align 8 %.fca.0.extract35)
  %57 = call ptr @llvm.invariant.start.p0(i64 noundef 408, ptr nocapture nofree noundef align 8 %.fca.0.extract35)
  %58 = call ptr @llvm.invariant.start.p0(i64 noundef 408, ptr nocapture nofree noundef align 8 %.fca.0.extract35)
  %59 = getelementptr inbounds i8, ptr %result.i18, i64 16
  store ptr %.fca.0.extract1, ptr %59, align 8
  %60 = getelementptr inbounds i8, ptr %result.i18, i64 24
  store ptr %.fca.1.extract, ptr %60, align 8
  %61 = getelementptr inbounds i8, ptr %result.i18, i64 32
  store ptr %.fca.2.extract, ptr %61, align 8
  %62 = getelementptr inbounds i8, ptr %result.i18, i64 40
  store i32 %offset.i.i46, ptr %62, align 8
  %63 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef nonnull align 16 dereferenceable(168) @MapIterator) #37
  %64 = getelementptr inbounds i8, ptr %result.i18, i64 48
  %.fca.0.extract.i = extractvalue { ptr } %53, 0
  store ptr %.fca.0.extract.i, ptr %64, align 8
  %65 = insertvalue { ptr, ptr, ptr, i32 } %55, i32 18, 3
  ret { ptr, ptr, ptr, i32 } %65
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_MapIterator(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 56, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @MapIterator_B_init_iteratorIteratorT_fFunctionT_to_U({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 128
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @MapIterator_field_MapIterator_0(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @MapIterator_field_MapIterator_1(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @MapIterator_B_next_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 136
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @MapIterator_init_iteratorIteratorT_fFunctionT_to_U({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3, { ptr } %4) #5 {
  %.fca.0.extract2 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract3 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !720
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !720
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !720
  %product.i.i.i = mul i64 %hash_coef.i.i, -146553482626734782
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !720
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 8673632051301757104
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !723
  %6 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef align 8 %.fca.0.extract2) #37
  %7 = sext i32 %offset.i.i to i64
  %8 = getelementptr ptr, ptr %.fca.0.extract2, i64 %7
  %9 = getelementptr i8, ptr %8, i64 16
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr i8, ptr %10, i64 8
  %12 = load ptr, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract1, 0
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.1.extract, 1
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, ptr %.fca.2.extract, 2
  %16 = insertvalue { ptr, ptr, ptr, i32 } %15, i32 %offset.i.i27, 3
  call void %12(ptr %.fca.1.extract3, { ptr, ptr, ptr, i32 } %16) #39
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef align 8 %.fca.0.extract2) #37
  %18 = getelementptr i8, ptr %8, i64 24
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  call void %21(ptr %.fca.1.extract3, { ptr } %4) #39
  ret void
}

define { ptr, i160 } @MapIterator_next_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #10 {
  %4 = alloca [0 x ptr], align 8
  %.fca.0.extract12 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract14 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract12, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract12, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract12, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !726
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !726
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !726
  %product.i.i.i = mul i64 %hash_coef.i.i, -146553482626734782
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !726
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef align 8 %.fca.0.extract12) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract12, i64 %6
  %8 = getelementptr i8, ptr %7, i64 16
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = call { ptr, ptr, ptr, i32 } %10(ptr %.fca.1.extract14) #40
  %.fca.0.extract2 = extractvalue { ptr, ptr, ptr, i32 } %11, 0
  %.fca.1.extract3 = extractvalue { ptr, ptr, ptr, i32 } %11, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %11, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %11, 3
  %12 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract2, 0
  %13 = insertvalue { ptr, ptr, ptr, i32 } %12, ptr %.fca.1.extract3, 1
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.2.extract, 2
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, i32 %.fca.3.extract, 3
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4) #50
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef %.fca.0.extract2) #50
  %18 = sext i32 %.fca.3.extract to i64
  %19 = getelementptr ptr, ptr %.fca.0.extract2, i64 %18
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  %result.i = call ptr %21({ ptr, ptr, ptr, i32 } %15, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %22 = call { ptr, i160 } %result.i({ ptr, ptr, ptr, i32 } %15, { ptr, ptr, ptr, i32 } %15, ptr nonnull align 8 %4) #42
  %.fca.0.extract = extractvalue { ptr, i160 } %22, 0
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef align 8 %.fca.0.extract12)
  %24 = icmp ne ptr %.fca.0.extract, @nil_typ
  %25 = icmp ne ptr %.fca.0.extract, null
  %.not36 = and i1 %24, %25
  br i1 %.not36, label %26, label %33

26:                                               ; preds = %3
  %27 = call ptr @llvm.invariant.start.p0(i64 noundef 88, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract12)
  %28 = getelementptr i8, ptr %7, i64 24
  %29 = load ptr, ptr %28, align 8
  %30 = load ptr, ptr %29, align 8
  %31 = call { ptr } %30(ptr %.fca.1.extract14) #40
  %.fca.0.extract28 = extractvalue { ptr } %31, 0
  %32 = call { ptr, i160 } %.fca.0.extract28({ ptr, i160 } %22)
  %.fca.0.extract22 = extractvalue { ptr, i160 } %32, 0
  %.fca.1.extract24 = extractvalue { ptr, i160 } %32, 1
  br label %33

33:                                               ; preds = %26, %3
  %.reg2mem15.sroa.0.0 = phi ptr [ %.fca.0.extract22, %26 ], [ @nil_typ, %3 ]
  %.reg2mem15.sroa.3.0 = phi i160 [ %.fca.1.extract24, %26 ], [ undef, %3 ]
  %.reload16.fca.0.insert = insertvalue { ptr, i160 } poison, ptr %.reg2mem15.sroa.0.0, 0
  %.reload16.fca.1.insert = insertvalue { ptr, i160 } %.reload16.fca.0.insert, i160 %.reg2mem15.sroa.3.0, 1
  ret { ptr, i160 } %.reload16.fca.1.insert
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr } @MapIterator_getter_f(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 48
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr } undef, ptr %3, 0
  ret { ptr } %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @MapIterator_setter_f(ptr nocapture nofree writeonly align 8 %0, { ptr } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 48
  %.fca.0.extract = extractvalue { ptr } %1, 0
  store ptr %.fca.0.extract, ptr %3, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @MapIterator_getter_iterator(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 24
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 32
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 40
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @MapIterator_setter_iterator(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 16
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 24
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 32
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 40
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr } @MapIterable_getter_f(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 48
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr } undef, ptr %3, 0
  ret { ptr } %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @MapIterable_setter_f(ptr nocapture nofree writeonly align 8 %0, { ptr } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 48
  %.fca.0.extract = extractvalue { ptr } %1, 0
  store ptr %.fca.0.extract, ptr %3, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @MapIterable_getter_iterable(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 24
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 32
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 40
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @MapIterable_setter_iterable(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 16
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 24
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 32
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 40
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_StringIterator(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 40, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @StringIterator_B_init_strString({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 120
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define noundef nonnull align 8 dereferenceable(16) ptr @StringIterator_field_StringIterator_0(ptr nocapture nofree readnone %0) #1 {
  ret ptr @_parameterization_Character
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @StringIterator_B_next_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 128
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @StringIterator_init_strString({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3) #5 {
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract2 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !729
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !729
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !729
  %product.i.i.i = mul i64 %hash_coef.i.i, -7260570988945952630
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !729
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 6499063144389013426
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !732
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef align 8 %.fca.0.extract1) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract1, i64 %6
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr i8, ptr %8, i64 8
  %10 = load ptr, ptr %9, align 8
  %11 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %12 = insertvalue { ptr, ptr, ptr, i32 } %11, ptr %.fca.1.extract, 1
  %13 = insertvalue { ptr, ptr, ptr, i32 } %12, ptr %.fca.2.extract, 2
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, i32 %offset.i.i27, 3
  call void %10(ptr %.fca.1.extract2, { ptr, ptr, ptr, i32 } %14) #39
  %15 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef align 8 %.fca.0.extract1) #37
  %16 = getelementptr i8, ptr %7, i64 8
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr i8, ptr %17, i64 8
  %19 = load ptr, ptr %18, align 8
  call void %19(ptr %.fca.1.extract2, i32 0) #39
  ret void
}

; Function Attrs: nounwind
define { ptr, i160 } @StringIterator_next_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #11 {
  %4 = alloca [0 x ptr], align 8
  %.fca.0.extract10 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract12 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract10, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract10, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract10, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !735
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !735
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !735
  %product.i.i.i = mul i64 %hash_coef.i.i, -7260570988945952630
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !735
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef align 8 %.fca.0.extract10) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract10, i64 %6
  %8 = getelementptr i8, ptr %7, i64 8
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = call i32 %10(ptr %.fca.1.extract12) #40
  %12 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef align 8 %.fca.0.extract10) #50
  %13 = load ptr, ptr %7, align 8
  %14 = load ptr, ptr %13, align 8
  %15 = call { ptr, ptr, ptr, i32 } %14(ptr %.fca.1.extract12) #40
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %15, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %15, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %15, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %15, 3
  %16 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %17 = insertvalue { ptr, ptr, ptr, i32 } %16, ptr %.fca.1.extract, 1
  %18 = insertvalue { ptr, ptr, ptr, i32 } %17, ptr %.fca.2.extract, 2
  %19 = insertvalue { ptr, ptr, ptr, i32 } %18, i32 %.fca.3.extract, 3
  %20 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4) #50
  %21 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef %.fca.0.extract) #50
  %22 = sext i32 %.fca.3.extract to i64
  %23 = getelementptr ptr, ptr %.fca.0.extract, i64 %22
  %24 = getelementptr i8, ptr %23, i64 56
  %25 = load ptr, ptr %24, align 8
  %result.i = call ptr %25({ ptr, ptr, ptr, i32 } %19, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %26 = call i32 %result.i({ ptr, ptr, ptr, i32 } %19, { ptr, ptr, ptr, i32 } %19, ptr nonnull align 8 %4) #42
  %27 = icmp slt i32 %11, %26
  br i1 %27, label %28, label %81

28:                                               ; preds = %3
  %29 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %30 = load ptr, ptr %8, align 8
  %31 = load ptr, ptr %30, align 8
  %32 = call i32 %31(ptr %.fca.1.extract12) #40
  %33 = add i32 %32, 1
  %34 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %35 = getelementptr i8, ptr %30, i64 8
  %36 = load ptr, ptr %35, align 8
  call void %36(ptr %.fca.1.extract12, i32 %33) #39
  %37 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %38 = load ptr, ptr %7, align 8
  %39 = load ptr, ptr %38, align 8
  %40 = call { ptr, ptr, ptr, i32 } %39(ptr %.fca.1.extract12) #40
  %.fca.0.extract45 = extractvalue { ptr, ptr, ptr, i32 } %40, 0
  %.fca.1.extract47 = extractvalue { ptr, ptr, ptr, i32 } %40, 1
  %.fca.2.extract49 = extractvalue { ptr, ptr, ptr, i32 } %40, 2
  %.fca.3.extract51 = extractvalue { ptr, ptr, ptr, i32 } %40, 3
  %41 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract45, 0
  %42 = insertvalue { ptr, ptr, ptr, i32 } %41, ptr %.fca.1.extract47, 1
  %43 = insertvalue { ptr, ptr, ptr, i32 } %42, ptr %.fca.2.extract49, 2
  %44 = insertvalue { ptr, ptr, ptr, i32 } %43, i32 %.fca.3.extract51, 3
  %45 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %46 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef %.fca.0.extract45)
  %47 = sext i32 %.fca.3.extract51 to i64
  %48 = getelementptr ptr, ptr %.fca.0.extract45, i64 %47
  %49 = getelementptr i8, ptr %48, i64 72
  %50 = load ptr, ptr %49, align 8
  %result.i1 = call ptr %50({ ptr, ptr, ptr, i32 } %44, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %51 = call { ptr } %result.i1({ ptr, ptr, ptr, i32 } %44, { ptr, ptr, ptr, i32 } %44, ptr nonnull align 8 %4) #42
  %52 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %53 = load ptr, ptr %8, align 8
  %54 = load ptr, ptr %53, align 8
  %55 = call i32 %54(ptr %.fca.1.extract12) #40
  %result.i3 = call noalias dereferenceable_or_null(1) ptr @bump_malloc_inner(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %56 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %57 = load ptr, ptr %7, align 8
  %58 = load ptr, ptr %57, align 8
  %59 = call { ptr, ptr, ptr, i32 } %58(ptr %.fca.1.extract12) #40
  %.fca.0.extract27 = extractvalue { ptr, ptr, ptr, i32 } %59, 0
  %.fca.1.extract29 = extractvalue { ptr, ptr, ptr, i32 } %59, 1
  %.fca.2.extract31 = extractvalue { ptr, ptr, ptr, i32 } %59, 2
  %.fca.3.extract33 = extractvalue { ptr, ptr, ptr, i32 } %59, 3
  %60 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract27, 0
  %61 = insertvalue { ptr, ptr, ptr, i32 } %60, ptr %.fca.1.extract29, 1
  %62 = insertvalue { ptr, ptr, ptr, i32 } %61, ptr %.fca.2.extract31, 2
  %63 = insertvalue { ptr, ptr, ptr, i32 } %62, i32 %.fca.3.extract33, 3
  %64 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4)
  %65 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef %.fca.0.extract27)
  %66 = sext i32 %.fca.3.extract33 to i64
  %67 = getelementptr ptr, ptr %.fca.0.extract27, i64 %66
  %68 = getelementptr i8, ptr %67, i64 72
  %69 = load ptr, ptr %68, align 8
  %result.i4 = call ptr %69({ ptr, ptr, ptr, i32 } %63, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %70 = call { ptr } %result.i4({ ptr, ptr, ptr, i32 } %63, { ptr, ptr, ptr, i32 } %63, ptr nonnull align 8 %4) #42
  %.fca.0.extract24 = extractvalue { ptr } %70, 0
  %71 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %72 = load ptr, ptr %8, align 8
  %73 = load ptr, ptr %72, align 8
  %74 = call i32 %73(ptr %.fca.1.extract12) #40
  %75 = add i32 %74, -1
  %76 = sext i32 %75 to i64
  %77 = getelementptr i8, ptr %.fca.0.extract24, i64 %76
  %78 = load i8, ptr %77, align 1
  %79 = call ptr @llvm.invariant.start.p0(i64 noundef 40, ptr nocapture nofree noundef nonnull align 16 dereferenceable(120) @Character) #37
  store i8 %78, ptr %result.i3, align 1
  %80 = ptrtoint ptr %result.i3 to i64
  %.sroa.3.8.insert.ext = zext i64 %80 to i160
  %.sroa.3.8.insert.insert = or disjoint i160 %.sroa.3.8.insert.ext, 3402823669209384634633746074317682114560
  br label %81

81:                                               ; preds = %28, %3
  %.reg2mem25.sroa.0.0 = phi ptr [ @Character, %28 ], [ @nil_typ, %3 ]
  %.reg2mem25.sroa.3.0 = phi i160 [ %.sroa.3.8.insert.insert, %28 ], [ undef, %3 ]
  %.reload26.fca.0.insert = insertvalue { ptr, i160 } poison, ptr %.reg2mem25.sroa.0.0, 0
  %.reload26.fca.1.insert = insertvalue { ptr, i160 } %.reload26.fca.0.insert, i160 %.reg2mem25.sroa.3.0, 1
  ret { ptr, i160 } %.reload26.fca.1.insert
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_Character(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 ptrtoint (ptr getelementptr (i8, ptr null, i32 1) to i64), i64 1 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Character_B_init_bytei8({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 112
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_i8_typ(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 ptrtoint (ptr getelementptr (i8, ptr null, i32 1) to i64), i64 1 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, i160 } @_box_i8_typ(ptr nocapture nofree noundef nonnull readonly dereferenceable(1) %0, ptr nocapture nofree readnone %1) #2 {
  %3 = load i8, ptr %0, align 1
  %.sroa.2.sroa.0.0.insert.ext = zext i8 %3 to i160
  %4 = insertvalue { ptr, i160 } { ptr @i8_typ, i160 undef }, i160 %.sroa.2.sroa.0.0.insert.ext, 1
  ret { ptr, i160 } %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @_unbox_i8_typ({ ptr, i160 } %0, ptr nocapture nofree readnone %1, ptr nocapture nofree noundef nonnull writeonly dereferenceable(1) %2) #3 {
  %.fca.1.extract = extractvalue { ptr, i160 } %0, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i8
  store i8 %.sroa.1.8.extract.trunc, ptr %2, align 1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Character_B_byte_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 104
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn
define i8 @Character_byte_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #6 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !738
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !738
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !738
  %product.i.i.i = mul i64 %hash_coef.i.i, 6681222582356018452
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !738
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 40, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract, i64 %5
  %7 = load ptr, ptr %6, align 8
  %8 = load ptr, ptr %7, align 8
  %9 = call i8 %8(ptr %.fca.1.extract) #40
  ret i8 %9
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @Character_init_bytei8({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, i8 %3) #5 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !741
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !741
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !741
  %product.i.i.i = mul i64 %hash_coef.i.i, 6681222582356018452
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !741
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 40, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract, i64 %6
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr i8, ptr %8, i64 8
  %10 = load ptr, ptr %9, align 8
  call void %10(ptr %.fca.1.extract, i8 %3) #39
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define i8 @Character_getter_byte(ptr nocapture nofree noundef nonnull readonly dereferenceable(1) %0) #2 {
  %2 = load i8, ptr %0, align 1
  ret i8 %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @Character_setter_byte(ptr nocapture nofree noundef nonnull writeonly dereferenceable(1) %0, i8 %1) #3 {
  store i8 %1, ptr %0, align 1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define i32 @StringIterator_getter_index(ptr nocapture nofree readonly align 4 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 32
  %3 = load i32, ptr %2, align 4
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @StringIterator_setter_index(ptr nocapture nofree writeonly align 4 %0, i32 %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 32
  store i32 %1, ptr %3, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @StringIterator_getter_str(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(28) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  %3 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %2, 0
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  %5 = load ptr, ptr %4, align 8
  %6 = insertvalue { ptr, ptr, ptr, i32 } %3, ptr %5, 1
  %7 = getelementptr inbounds i8, ptr %0, i64 16
  %8 = load ptr, ptr %7, align 8
  %9 = insertvalue { ptr, ptr, ptr, i32 } %6, ptr %8, 2
  %10 = getelementptr inbounds i8, ptr %0, i64 24
  %11 = load i32, ptr %10, align 8
  %12 = insertvalue { ptr, ptr, ptr, i32 } %9, i32 %11, 3
  ret { ptr, ptr, ptr, i32 } %12
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @StringIterator_setter_str(ptr nocapture nofree noundef nonnull writeonly align 8 dereferenceable(28) %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %0, align 8
  %3 = getelementptr inbounds i8, ptr %0, i64 8
  store ptr %.fca.1.extract, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 16
  store ptr %.fca.2.extract, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 24
  store i32 %.fca.3.extract, ptr %5, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define i32 @String_getter_capacity(ptr nocapture nofree readonly align 4 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 12
  %3 = load i32, ptr %2, align 4
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @String_setter_capacity(ptr nocapture nofree writeonly align 4 %0, i32 %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 12
  store i32 %1, ptr %3, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define i32 @String_getter_length(ptr nocapture nofree readonly align 4 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load i32, ptr %2, align 4
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @String_setter_length(ptr nocapture nofree writeonly align 4 %0, i32 %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 8
  store i32 %1, ptr %3, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr } @String_getter_bytes(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  %3 = insertvalue { ptr } undef, ptr %2, 0
  ret { ptr } %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @String_setter_bytes(ptr nocapture nofree noundef nonnull writeonly align 8 dereferenceable(8) %0, { ptr } %1) #3 {
  %.fca.0.extract = extractvalue { ptr } %1, 0
  store ptr %.fca.0.extract, ptr %0, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_Representable(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 0, i64 1 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Representable_B_repr_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 88
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, argmem: none, inaccessiblemem: none)
define { ptr, ptr, ptr, i32 } @Representable_repr_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #31 {
  %result.i = call noalias align 8 dereferenceable_or_null(7) ptr @bump_malloc_inner(i64 noundef 7, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <6 x i8> <i8 79, i8 98, i8 106, i8 101, i8 99, i8 116>, ptr %result.i, align 8
  %result.i2 = call noalias align 8 dereferenceable_or_null(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %4 = insertvalue { ptr, ptr, ptr, i32 } { ptr @String, ptr undef, ptr undef, i32 undef }, ptr %result.i2, 1
  %5 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr undef, 2
  %6 = insertvalue { ptr, ptr, ptr, i32 } %5, i32 10, 3
  store ptr %result.i, ptr %result.i2, align 8
  %7 = getelementptr i8, ptr %result.i2, i64 8
  store i32 6, ptr %7, align 8
  %8 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String) #37
  %9 = getelementptr i8, ptr %result.i2, i64 12
  store i32 7, ptr %9, align 4
  ret { ptr, ptr, ptr, i32 } %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_CuckooMap(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 64, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @CuckooMap_field_CuckooMap_0(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @CuckooMap_field_CuckooMap_1(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @CuckooMap_field_CuckooMap_6(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite)
define noundef nonnull ptr @CuckooMap_B__Self_max_displacements_(ptr nocapture nofree %0) #28 {
  %2 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %0)
  ret ptr @CuckooMap__Self_max_displacements_
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_init_hasherFunctionK_to_i32_eqFunctionK._K_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 400
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_hash1_keyK({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 408
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_hash2_from_primary_primary_hashi32({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 416
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_index1_primary_hashi32({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 424
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_index2_primary_hashi32({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 432
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_place_entry_or_get_failed_entry_to_insertEntryK._V({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 440
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 448
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_resize_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 456
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 40, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 464
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 32, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 472
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 32, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 480
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_insert_keyK_valueV({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 488
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_size_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 496
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_get_keyK({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 504
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B__set_index_keyK_valueV({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 512
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_remove_keyK({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 520
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_clear_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 528
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B__index_keyK({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 536
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_iterator_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 544
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_each_fFunctionT_to_Nothing({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 552
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_reduce_accumulatorT_fFunctionT._T_to_T({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 560
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_all_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 568
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_any_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 576
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_map_fFunctionT_to_U({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 584
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_filter_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 592
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_chain_otherIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 600
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_interleave_otherIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 608
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_zip_otherIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 616
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMap_B_product_otherIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 624
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define noundef i32 @CuckooMap__Self_max_displacements_(ptr nocapture nofree readnone %0) #1 {
  ret i32 100
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @CuckooMap_init_hasherFunctionK_to_i32_eqFunctionK._K_to_i1({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr } %3, { ptr } %4) #5 {
  %.fca.0.extract8 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract8, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract8, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract8, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !744
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !744
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !744
  %product.i.i.i = mul i64 %hash_coef.i.i, 3547150501766965522
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !744
  %6 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract8) #37
  %7 = sext i32 %offset.i.i to i64
  %8 = getelementptr ptr, ptr %.fca.0.extract8, i64 %7
  %9 = getelementptr i8, ptr %8, i64 56
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr i8, ptr %10, i64 8
  %12 = load ptr, ptr %11, align 8
  call void %12(ptr %.fca.1.extract, { ptr } %3) #39
  %13 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract8) #37
  %14 = getelementptr i8, ptr %8, i64 64
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr i8, ptr %15, i64 8
  %17 = load ptr, ptr %16, align 8
  call void %17(ptr %.fca.1.extract, { ptr } %4) #39
  %18 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract8) #37
  %19 = getelementptr i8, ptr %8, i64 40
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr i8, ptr %20, i64 8
  %22 = load ptr, ptr %21, align 8
  call void %22(ptr %.fca.1.extract, i32 8) #39
  %result.i = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract8) #37
  %24 = getelementptr i8, ptr %8, i64 24
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr i8, ptr %25, i64 8
  %27 = load ptr, ptr %26, align 8
  %28 = insertvalue { ptr } undef, ptr %result.i, 0
  call void %27(ptr %.fca.1.extract, { ptr } %28) #39
  %result.i1 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %29 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract8) #37
  %30 = getelementptr i8, ptr %8, i64 32
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr i8, ptr %31, i64 8
  %33 = load ptr, ptr %32, align 8
  %34 = insertvalue { ptr } undef, ptr %result.i1, 0
  call void %33(ptr %.fca.1.extract, { ptr } %34) #39
  %35 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract8) #37
  %36 = getelementptr i8, ptr %8, i64 48
  %37 = load ptr, ptr %36, align 8
  %38 = getelementptr i8, ptr %37, i64 8
  %39 = load ptr, ptr %38, align 8
  call void %39(ptr %.fca.1.extract, i32 0) #39
  ret void
}

define i32 @CuckooMap_hash1_keyK({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, i160 } %3) #10 {
  %.fca.0.extract6 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract7 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract6, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract6, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract6, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !747
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !747
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !747
  %product.i.i.i = mul i64 %hash_coef.i.i, 3547150501766965522
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !747
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract6) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract6, i64 %6
  %8 = getelementptr i8, ptr %7, i64 56
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = call { ptr } %10(ptr %.fca.1.extract7) #40
  %.fca.0.extract = extractvalue { ptr } %11, 0
  %12 = call i32 %.fca.0.extract({ ptr, i160 } %3)
  ret i32 %12
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define i32 @CuckooMap_hash2_from_primary_primary_hashi32({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, i32 %3) #1 {
  %5 = add i32 %3, 2127912214
  %6 = shl i32 %3, 12
  %7 = add i32 %5, %6
  %8 = ashr i32 %7, 19
  %9 = xor i32 %7, %8
  %10 = xor i32 %9, -949894596
  %11 = add i32 %10, 374761393
  %12 = shl i32 %10, 5
  %13 = add i32 %11, %12
  %14 = add i32 %13, -744332180
  %15 = shl i32 %13, 9
  %16 = xor i32 %14, %15
  %17 = add i32 %16, -42973499
  %18 = shl i32 %16, 3
  %19 = add i32 %17, %18
  %20 = ashr i32 %19, 16
  %21 = xor i32 %19, %20
  %22 = xor i32 %21, -1252372727
  ret i32 %22
}

; Function Attrs: mustprogress nounwind willreturn
define i32 @CuckooMap_index1_primary_hashi32({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, i32 %3) #6 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !750
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !750
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !750
  %product.i.i.i = mul i64 %hash_coef.i.i, 3547150501766965522
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !750
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract, i64 %6
  %8 = getelementptr i8, ptr %7, i64 40
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = call i32 %10(ptr %.fca.1.extract) #40
  %12 = add i32 %11, -1
  %13 = and i32 %12, %3
  ret i32 %13
}

; Function Attrs: nounwind
define i32 @CuckooMap_index2_primary_hashi32({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, i32 %3) #11 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !753
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !753
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !753
  %product.i.i.i = mul i64 %hash_coef.i.i, 3547150501766965522
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !753
  %5 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %6 = insertvalue { ptr, ptr, ptr, i32 } %5, ptr %.fca.1.extract, 1
  %7 = insertvalue { ptr, ptr, ptr, i32 } %6, ptr %.fca.2.extract, 2
  %8 = insertvalue { ptr, ptr, ptr, i32 } %7, i32 %offset.i.i, 3
  %9 = alloca [1 x ptr], align 8
  store ptr @_parameterization_i32, ptr %9, align 8
  %10 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %9) #37
  %11 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %12 = sext i32 %offset.i.i to i64
  %13 = getelementptr ptr, ptr %.fca.0.extract, i64 %12
  %14 = getelementptr i8, ptr %13, i64 96
  %15 = load ptr, ptr %14, align 8
  %16 = alloca { ptr }, align 8
  store ptr @i32_typ, ptr %16, align 8
  %result.i = call ptr %15({ ptr, ptr, ptr, i32 } %8, ptr nocapture nofree noundef nonnull readonly align 8 %16) #45
  %17 = call i32 %result.i({ ptr, ptr, ptr, i32 } %8, { ptr, ptr, ptr, i32 } %8, ptr nonnull align 8 dereferenceable(8) %9, i32 %3) #42
  %18 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract)
  %19 = getelementptr i8, ptr %13, i64 40
  %20 = load ptr, ptr %19, align 8
  %21 = load ptr, ptr %20, align 8
  %22 = call i32 %21(ptr %.fca.1.extract) #40
  %23 = add i32 %22, -1
  %24 = and i32 %23, %17
  ret i32 %24
}

; Function Attrs: nounwind
define { ptr, i160 } @CuckooMap_place_entry_or_get_failed_entry_to_insertEntryK._V({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3) #11 {
.lr.ph:
  %4 = alloca {}, align 8
  %5 = alloca [1 x ptr], align 8
  %6 = alloca { ptr }, align 8
  %7 = alloca [1 x ptr], align 8
  %8 = alloca { ptr }, align 8
  %.fca.0.extract8 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract9 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract8, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract8, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract8, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !756
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !756
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !756
  %product.i.i.i = mul i64 %hash_coef.i.i, 3547150501766965522
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !756
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i14 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i15 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i16 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i17 = load i64, ptr %hash_coef_ptr.i.i14, align 4, !noalias !23
  %tbl_size.i.i18 = load i64, ptr %tbl_size_ptr.i.i15, align 4, !noalias !23
  %offset_tbl.i.i19 = load ptr, ptr %offset_tbl_ptr.i.i16, align 8, !noalias !23
  %product.i.i.i20 = mul i64 %hash_coef.i.i17, 4015701072841558310
  %shifted.i.i.i21 = lshr i64 %product.i.i.i20, 32
  %xored.i.i.i22 = xor i64 %shifted.i.i.i21, %product.i.i.i20
  %hash.i.i.i23 = and i64 %xored.i.i.i22, %tbl_size.i.i18
  %offset_ptr.i.i24 = getelementptr i32, ptr %offset_tbl.i.i19, i64 %hash.i.i.i23
  %offset.i.i39 = load i32, ptr %offset_ptr.i.i24, align 4, !noalias !759
  %9 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract8) #37
  %10 = sext i32 %offset.i.i to i64
  %11 = getelementptr ptr, ptr %.fca.0.extract8, i64 %10
  %12 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract8) #37
  %13 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #37
  %14 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %4) #37
  %.fca.2.extract10 = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %15 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4) #37
  %16 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract8, 0
  %17 = insertvalue { ptr, ptr, ptr, i32 } %16, ptr %.fca.1.extract9, 1
  %18 = insertvalue { ptr, ptr, ptr, i32 } %17, ptr %.fca.2.extract10, 2
  %19 = insertvalue { ptr, ptr, ptr, i32 } %18, i32 %offset.i.i, 3
  br label %20

20:                                               ; preds = %.lr.ph, %.cont
  %.0308 = phi i32 [ 0, %.lr.ph ], [ %56, %.cont ]
  %.070307 = phi i1 [ true, %.lr.ph ], [ %57, %.cont ]
  %.sroa.0.0306 = phi ptr [ %.fca.0.extract, %.lr.ph ], [ %44, %.cont ]
  %.sroa.6.0305 = phi ptr [ %.fca.1.extract, %.lr.ph ], [ %.sroa.speculated111, %.cont ]
  %.sroa.12.0304 = phi ptr [ %.fca.2.extract, %.lr.ph ], [ %.sroa.speculated105, %.cont ]
  %.sroa.17.0303 = phi i32 [ %offset.i.i39, %.lr.ph ], [ %offset.i.i71, %.cont ]
  %21 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.sroa.0.0306, 0
  %22 = insertvalue { ptr, ptr, ptr, i32 } %21, ptr %.sroa.6.0305, 1
  %23 = insertvalue { ptr, ptr, ptr, i32 } %22, ptr %.sroa.12.0304, 2
  %24 = insertvalue { ptr, ptr, ptr, i32 } %23, i32 %.sroa.17.0303, 3
  %25 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull %.sroa.0.0306) #37
  %26 = sext i32 %.sroa.17.0303 to i64
  %27 = getelementptr ptr, ptr %.sroa.0.0306, i64 %26
  %28 = getelementptr i8, ptr %27, i64 64
  %29 = load ptr, ptr %28, align 8
  %result.i43 = call ptr %29({ ptr, ptr, ptr, i32 } %24, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %30 = call i32 %result.i43({ ptr, ptr, ptr, i32 } %24, { ptr, ptr, ptr, i32 } %24, ptr nonnull align 8 %4) #42
  %. = select i1 %.070307, ptr %5, ptr %7
  %.184 = select i1 %.070307, i64 104, i64 112
  %.185 = select i1 %.070307, ptr %6, ptr %8
  %.186 = select i1 %.070307, i64 24, i64 32
  store ptr @_parameterization_i32, ptr %., align 8
  %31 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %.)
  %32 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract8)
  %33 = getelementptr i8, ptr %11, i64 %.184
  %34 = load ptr, ptr %33, align 8
  store ptr @i32_typ, ptr %.185, align 8
  %result.i44 = call ptr %34({ ptr, ptr, ptr, i32 } %19, ptr nocapture nofree noundef nonnull readonly align 8 %.185) #45
  %35 = call i32 %result.i44({ ptr, ptr, ptr, i32 } %19, { ptr, ptr, ptr, i32 } %19, ptr nonnull align 8 dereferenceable(8) %., i32 %30) #42
  %36 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract8)
  %37 = getelementptr i8, ptr %11, i64 %.186
  %38 = load ptr, ptr %37, align 8
  %39 = load ptr, ptr %38, align 8
  %40 = call { ptr } %39(ptr %.fca.1.extract9) #40
  %.fca.0.extract53 = extractvalue { ptr } %40, 0
  %41 = sext i32 %35 to i64
  %42 = shl nsw i64 %41, 5
  %43 = getelementptr i8, ptr %.fca.0.extract53, i64 %42
  %44 = load ptr, ptr %43, align 8
  %45 = getelementptr i8, ptr %43, i64 8
  %46 = load i64, ptr %45, align 4
  %.sroa_idx = getelementptr i8, ptr %43, i64 16
  %47 = load i64, ptr %.sroa_idx, align 4
  %48 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract8)
  %49 = call { ptr } %39(ptr %.fca.1.extract9) #40
  %.fca.0.extract51 = extractvalue { ptr } %49, 0
  %50 = getelementptr i8, ptr %.fca.0.extract51, i64 %42
  store ptr %.sroa.0.0306, ptr %50, align 8
  %51 = getelementptr i8, ptr %50, i64 8
  %52 = ptrtoint ptr %.sroa.6.0305 to i64
  %53 = ptrtoint ptr %.sroa.12.0304 to i64
  store i64 %52, ptr %51, align 4
  %.sroa_idx100 = getelementptr i8, ptr %50, i64 16
  store i64 %53, ptr %.sroa_idx100, align 4
  %.sroa_idx101 = getelementptr i8, ptr %50, i64 24
  store i32 %.sroa.17.0303, ptr %.sroa_idx101, align 4
  %54 = icmp ne ptr %44, @nil_typ
  %55 = icmp ne ptr %44, null
  %.not90 = and i1 %54, %55
  br i1 %.not90, label %.cont, label %61

.cont:                                            ; preds = %20
  %56 = add nuw nsw i32 %.0308, 1
  %57 = xor i1 %.070307, true
  %.sroa.speculated111 = inttoptr i64 %46 to ptr
  %.sroa.speculated105 = inttoptr i64 %47 to ptr
  %hash_coef_ptr.i.i60 = getelementptr i8, ptr %44, i64 8
  %tbl_size_ptr.i.i61 = getelementptr i8, ptr %44, i64 16
  %offset_tbl_ptr.i.i62 = getelementptr i8, ptr %44, i64 40
  %hash_coef.i.i63 = load i64, ptr %hash_coef_ptr.i.i60, align 4
  %tbl_size.i.i64 = load i64, ptr %tbl_size_ptr.i.i61, align 4
  %offset_tbl.i.i65 = load ptr, ptr %offset_tbl_ptr.i.i62, align 8
  %product.i.i.i66 = mul i64 %hash_coef.i.i63, 4015701072841558310
  %shifted.i.i.i67 = lshr i64 %product.i.i.i66, 32
  %xored.i.i.i68 = xor i64 %shifted.i.i.i67, %product.i.i.i66
  %hash.i.i.i69 = and i64 %xored.i.i.i68, %tbl_size.i.i64
  %offset_ptr.i.i70 = getelementptr i32, ptr %offset_tbl.i.i65, i64 %hash.i.i.i69
  %offset.i.i71 = load i32, ptr %offset_ptr.i.i70, align 4
  %58 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 16 dereferenceable(2256) @CuckooMap) #44
  %59 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %4)
  %60 = icmp ult i32 %.0308, 99
  br i1 %60, label %20, label %._crit_edge

61:                                               ; preds = %20
  %62 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract8)
  %63 = getelementptr i8, ptr %11, i64 48
  %64 = load ptr, ptr %63, align 8
  %65 = load ptr, ptr %64, align 8
  %66 = call i32 %65(ptr %.fca.1.extract9) #40
  %67 = add i32 %66, 1
  %68 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract8)
  %69 = getelementptr i8, ptr %64, i64 8
  %70 = load ptr, ptr %69, align 8
  call void %70(ptr %.fca.1.extract9, i32 %67) #39
  br label %71

._crit_edge:                                      ; preds = %.cont
  %.sroa.17.8.insert.ext = zext i32 %offset.i.i71 to i160
  %.sroa.17.8.insert.shift = shl nuw i160 %.sroa.17.8.insert.ext, 128
  %.sroa.12.8.insert.ext = zext i64 %47 to i160
  %.sroa.12.8.insert.shift = shl nuw nsw i160 %.sroa.12.8.insert.ext, 64
  %.sroa.6.8.insert.ext = zext i64 %46 to i160
  %.sroa.12.8.insert.insert = or disjoint i160 %.sroa.12.8.insert.shift, %.sroa.6.8.insert.ext
  %.sroa.6.8.insert.insert = or disjoint i160 %.sroa.12.8.insert.insert, %.sroa.17.8.insert.shift
  br label %71

71:                                               ; preds = %._crit_edge, %61
  %.reg2mem141.sroa.3.0 = phi i160 [ undef, %61 ], [ %.sroa.6.8.insert.insert, %._crit_edge ]
  %.reg2mem141.sroa.0.0 = phi ptr [ @nil_typ, %61 ], [ %44, %._crit_edge ]
  %.reload142.fca.0.insert = insertvalue { ptr, i160 } poison, ptr %.reg2mem141.sroa.0.0, 0
  %.reload142.fca.1.insert = insertvalue { ptr, i160 } %.reload142.fca.0.insert, i160 %.reg2mem141.sroa.3.0, 1
  ret { ptr, i160 } %.reload142.fca.1.insert
}

; Function Attrs: nounwind
define void @CuckooMap_move_entries_old_tableBufferEntryK._V_or_Nil_old_capacity_per_tablei32({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr } %3, i32 %4) #11 {
  %6 = alloca [1 x ptr], align 8
  %7 = alloca { ptr }, align 8
  %.fca.0.extract4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.0.extract = extractvalue { ptr } %3, 0
  %8 = icmp sgt i32 %4, 0
  br i1 %8, label %.lr.ph, label %._crit_edge2._crit_edge

.lr.ph:                                           ; preds = %5
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract4, i64 40
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !762
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract4, i64 8
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !762
  %product.i.i.i = mul i64 %hash_coef.i.i, 3547150501766965522
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract4, i64 16
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !762
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !762
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %9 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract4, 0
  %10 = insertvalue { ptr, ptr, ptr, i32 } %9, ptr %.fca.1.extract, 1
  %11 = insertvalue { ptr, ptr, ptr, i32 } %10, ptr %.fca.2.extract, 2
  %12 = insertvalue { ptr, ptr, ptr, i32 } %11, i32 %offset.i.i, 3
  %13 = sext i32 %offset.i.i to i64
  %14 = getelementptr ptr, ptr %.fca.0.extract4, i64 %13
  %15 = getelementptr i8, ptr %14, i64 8
  %16 = getelementptr i8, ptr %14, i64 120
  br label %17

17:                                               ; preds = %.lr.ph, %._crit_edge
  %.045 = phi i32 [ 0, %.lr.ph ], [ %46, %._crit_edge ]
  %18 = zext nneg i32 %.045 to i64
  %19 = shl nuw nsw i64 %18, 5
  %20 = getelementptr i8, ptr %.fca.0.extract, i64 %19
  %21 = load ptr, ptr %20, align 8
  %22 = icmp ne ptr %21, @nil_typ
  %23 = icmp ne ptr %21, null
  %.not16 = and i1 %22, %23
  br i1 %.not16, label %24, label %._crit_edge

24:                                               ; preds = %17
  %25 = getelementptr i8, ptr %20, i64 8
  %26 = load i64, ptr %25, align 4
  %.sroa_idx = getelementptr i8, ptr %20, i64 16
  %27 = load i64, ptr %.sroa_idx, align 4
  %28 = inttoptr i64 %26 to ptr
  %29 = inttoptr i64 %27 to ptr
  %hash_coef_ptr.i.i3 = getelementptr i8, ptr %21, i64 8
  %tbl_size_ptr.i.i4 = getelementptr i8, ptr %21, i64 16
  %offset_tbl_ptr.i.i5 = getelementptr i8, ptr %21, i64 40
  %hash_coef.i.i6 = load i64, ptr %hash_coef_ptr.i.i3, align 4, !noalias !23
  %tbl_size.i.i7 = load i64, ptr %tbl_size_ptr.i.i4, align 4, !noalias !23
  %offset_tbl.i.i8 = load ptr, ptr %offset_tbl_ptr.i.i5, align 8, !noalias !23
  %product.i.i.i9 = mul i64 %hash_coef.i.i6, 4015701072841558310
  %shifted.i.i.i10 = lshr i64 %product.i.i.i9, 32
  %xored.i.i.i11 = xor i64 %shifted.i.i.i10, %product.i.i.i9
  %hash.i.i.i12 = and i64 %xored.i.i.i11, %tbl_size.i.i7
  %offset_ptr.i.i13 = getelementptr i32, ptr %offset_tbl.i.i8, i64 %hash.i.i.i12
  %offset.i.i28 = load i32, ptr %offset_ptr.i.i13, align 4, !noalias !765
  %30 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %21, 0
  %31 = insertvalue { ptr, ptr, ptr, i32 } %30, ptr %28, 1
  %32 = insertvalue { ptr, ptr, ptr, i32 } %31, ptr %29, 2
  %33 = insertvalue { ptr, ptr, ptr, i32 } %32, i32 %offset.i.i28, 3
  %34 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract4) #37
  %35 = load ptr, ptr %14, align 8
  %result.i = call ptr %35(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract) #41
  %36 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract4) #37
  %37 = load ptr, ptr %15, align 8
  %result.i30 = call ptr %37(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract) #41
  %result.i31 = call noalias nonnull align 8 dereferenceable(32) ptr @bump_malloc_inner(i64 noundef 32, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %38 = getelementptr inbounds i8, ptr %result.i31, i64 16
  store ptr %result.i30, ptr %38, align 8
  %39 = getelementptr inbounds i8, ptr %result.i31, i64 8
  store ptr %result.i, ptr %39, align 8
  %40 = getelementptr inbounds i8, ptr %result.i31, i64 24
  store ptr null, ptr %40, align 8
  %41 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(32) %result.i31) #37
  store ptr @Entry, ptr %result.i31, align 8
  store ptr %result.i31, ptr %6, align 8
  %42 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %6) #37
  %43 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract4) #37
  %44 = load ptr, ptr %16, align 8
  store ptr %21, ptr %7, align 8
  %result.i32 = call ptr %44({ ptr, ptr, ptr, i32 } %12, ptr nocapture nofree noundef nonnull readonly %7) #45
  %45 = call { ptr, i160 } %result.i32({ ptr, ptr, ptr, i32 } %12, { ptr, ptr, ptr, i32 } %12, ptr nonnull align 8 dereferenceable(8) %6, { ptr, ptr, ptr, i32 } %33) #42
  br label %._crit_edge

._crit_edge:                                      ; preds = %17, %24
  %46 = add nuw nsw i32 %.045, 1
  %47 = icmp slt i32 %46, %4
  br i1 %47, label %17, label %._crit_edge2._crit_edge

._crit_edge2._crit_edge:                          ; preds = %._crit_edge, %5
  ret void
}

; Function Attrs: nounwind
define void @CuckooMap_resize_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #11 {
._crit_edge:
  %3 = alloca [2 x ptr], align 8
  %4 = alloca { ptr, ptr }, align 8
  %5 = alloca [2 x ptr], align 8
  %6 = alloca { ptr, ptr }, align 8
  %.fca.0.extract14 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract14, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract14, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract14, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !768
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !768
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !768
  %product.i.i.i = mul i64 %hash_coef.i.i, 3547150501766965522
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !768
  %7 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract14) #37
  %8 = sext i32 %offset.i.i to i64
  %9 = getelementptr ptr, ptr %.fca.0.extract14, i64 %8
  %10 = getelementptr i8, ptr %9, i64 24
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr %11, align 8
  %13 = call { ptr } %12(ptr %.fca.1.extract) #40
  %14 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract14) #37
  %15 = getelementptr i8, ptr %9, i64 32
  %16 = load ptr, ptr %15, align 8
  %17 = load ptr, ptr %16, align 8
  %18 = call { ptr } %17(ptr %.fca.1.extract) #40
  %19 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract14) #37
  %20 = getelementptr i8, ptr %9, i64 40
  %21 = load ptr, ptr %20, align 8
  %22 = load ptr, ptr %21, align 8
  %23 = call i32 %22(ptr %.fca.1.extract) #40
  %24 = shl i32 %23, 1
  %spec.select = call i32 @llvm.smax.i32(i32 %24, i32 noundef 16) #37
  %25 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract14) #37
  %26 = getelementptr i8, ptr %21, i64 8
  %27 = load ptr, ptr %26, align 8
  call void %27(ptr %.fca.1.extract, i32 %spec.select) #39
  %28 = zext nneg i32 %spec.select to i64
  %29 = shl nuw nsw i64 %28, 5
  %result.i = call noalias ptr @bump_malloc_inner(i64 noundef %29, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %30 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract14) #37
  %31 = load ptr, ptr %10, align 8
  %32 = getelementptr i8, ptr %31, i64 8
  %33 = load ptr, ptr %32, align 8
  %34 = insertvalue { ptr } undef, ptr %result.i, 0
  call void %33(ptr %.fca.1.extract, { ptr } %34) #39
  %result.i1 = call noalias ptr @bump_malloc_inner(i64 noundef %29, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %35 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract14) #37
  %36 = load ptr, ptr %15, align 8
  %37 = getelementptr i8, ptr %36, i64 8
  %38 = load ptr, ptr %37, align 8
  %39 = insertvalue { ptr } undef, ptr %result.i1, 0
  call void %38(ptr %.fca.1.extract, { ptr } %39) #39
  %40 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract14) #37
  %41 = getelementptr i8, ptr %9, i64 48
  %42 = load ptr, ptr %41, align 8
  %43 = getelementptr i8, ptr %42, i64 8
  %44 = load ptr, ptr %43, align 8
  call void %44(ptr %.fca.1.extract, i32 0) #39
  %45 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract14, 0
  %46 = insertvalue { ptr, ptr, ptr, i32 } %45, ptr %.fca.1.extract, 1
  %47 = insertvalue { ptr, ptr, ptr, i32 } %46, ptr %.fca.2.extract, 2
  %48 = insertvalue { ptr, ptr, ptr, i32 } %47, i32 %offset.i.i, 3
  %result.i2 = call noalias nonnull align 8 dereferenceable(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %49 = getelementptr inbounds i8, ptr %result.i2, i64 8
  store ptr null, ptr %49, align 8
  store ptr @buffer_typ, ptr %result.i2, align 8
  store ptr %result.i2, ptr %3, align 8
  %50 = getelementptr inbounds i8, ptr %3, i64 8
  store ptr @_parameterization_i32, ptr %50, align 8
  %51 = call ptr @llvm.invariant.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %3) #37
  %52 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract14) #37
  %53 = getelementptr i8, ptr %9, i64 128
  %54 = load ptr, ptr %53, align 8
  store ptr @buffer_typ, ptr %4, align 8
  %55 = getelementptr inbounds i8, ptr %4, i64 8
  store ptr @i32_typ, ptr %55, align 8
  %result.i3 = call ptr %54({ ptr, ptr, ptr, i32 } %48, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  call void %result.i3({ ptr, ptr, ptr, i32 } %48, { ptr, ptr, ptr, i32 } %48, ptr nonnull align 8 dereferenceable(16) %3, { ptr } %13, i32 %23) #42
  %result.i4 = call noalias nonnull align 8 dereferenceable(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %56 = getelementptr inbounds i8, ptr %result.i4, i64 8
  store ptr null, ptr %56, align 8
  store ptr @buffer_typ, ptr %result.i4, align 8
  store ptr %result.i4, ptr %5, align 8
  %57 = getelementptr inbounds i8, ptr %5, i64 8
  store ptr @_parameterization_i32, ptr %57, align 8
  %58 = call ptr @llvm.invariant.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %5)
  %59 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract14)
  %60 = load ptr, ptr %53, align 8
  store ptr @buffer_typ, ptr %6, align 8
  %61 = getelementptr inbounds i8, ptr %6, i64 8
  store ptr @i32_typ, ptr %61, align 8
  %result.i5 = call ptr %60({ ptr, ptr, ptr, i32 } %48, ptr nocapture nofree noundef nonnull readonly %6) #45
  call void %result.i5({ ptr, ptr, ptr, i32 } %48, { ptr, ptr, ptr, i32 } %48, ptr nonnull align 8 dereferenceable(16) %5, { ptr } %18, i32 %23) #42
  ret void
}

define noundef i1 @CuckooMap_replace_in_table_keyK_valueV_h1i32_idxi32_tableBufferEntryK._V_or_Nil({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, i160 } %3, { ptr, i160 } %4, i32 %5, i32 %6, { ptr } %7) #10 {
  %9 = alloca [0 x ptr], align 8
  %.fca.0.extract20 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract21 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract20, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract20, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract20, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !771
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !771
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !771
  %product.i.i.i = mul i64 %hash_coef.i.i, 3547150501766965522
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !771
  %.fca.0.extract = extractvalue { ptr } %7, 0
  %10 = sext i32 %6 to i64
  %11 = shl nsw i64 %10, 5
  %12 = getelementptr i8, ptr %.fca.0.extract, i64 %11
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr i8, ptr %12, i64 8
  %15 = icmp ne ptr %13, @nil_typ
  %16 = icmp ne ptr %13, null
  %.not64 = and i1 %15, %16
  br i1 %.not64, label %17, label %.critedge

17:                                               ; preds = %8
  %18 = load i64, ptr %14, align 4
  %.sroa_idx = getelementptr i8, ptr %12, i64 16
  %19 = load i64, ptr %.sroa_idx, align 4
  %20 = inttoptr i64 %18 to ptr
  %21 = inttoptr i64 %19 to ptr
  %hash_coef_ptr.i.i3 = getelementptr i8, ptr %13, i64 8
  %tbl_size_ptr.i.i4 = getelementptr i8, ptr %13, i64 16
  %offset_tbl_ptr.i.i5 = getelementptr i8, ptr %13, i64 40
  %hash_coef.i.i6 = load i64, ptr %hash_coef_ptr.i.i3, align 4, !noalias !774
  %tbl_size.i.i7 = load i64, ptr %tbl_size_ptr.i.i4, align 4, !noalias !774
  %offset_tbl.i.i8 = load ptr, ptr %offset_tbl_ptr.i.i5, align 8, !noalias !774
  %product.i.i.i9 = mul i64 %hash_coef.i.i6, 4015701072841558310
  %shifted.i.i.i10 = lshr i64 %product.i.i.i9, 32
  %xored.i.i.i11 = xor i64 %shifted.i.i.i10, %product.i.i.i9
  %hash.i.i.i12 = and i64 %xored.i.i.i11, %tbl_size.i.i7
  %offset_ptr.i.i13 = getelementptr i32, ptr %offset_tbl.i.i8, i64 %hash.i.i.i12
  %offset.i.i14 = load i32, ptr %offset_ptr.i.i13, align 4, !noalias !774
  %22 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %13, 0
  %23 = insertvalue { ptr, ptr, ptr, i32 } %22, ptr %20, 1
  %24 = insertvalue { ptr, ptr, ptr, i32 } %23, ptr %21, 2
  %25 = insertvalue { ptr, ptr, ptr, i32 } %24, i32 %offset.i.i14, 3
  %26 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %9) #37
  %27 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %13) #37
  %28 = sext i32 %offset.i.i14 to i64
  %29 = getelementptr ptr, ptr %13, i64 %28
  %30 = getelementptr i8, ptr %29, i64 64
  %31 = load ptr, ptr %30, align 8
  %result.i = call ptr %31({ ptr, ptr, ptr, i32 } %25, ptr nocapture nofree noundef nonnull readonly align 8 %9) #45
  %32 = call i32 %result.i({ ptr, ptr, ptr, i32 } %25, { ptr, ptr, ptr, i32 } %25, ptr nonnull align 8 %9) #42
  %33 = icmp eq i32 %32, %5
  br i1 %33, label %._crit_edge, label %.critedge

._crit_edge:                                      ; preds = %17
  %34 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %9)
  %35 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %13)
  %36 = getelementptr i8, ptr %29, i64 48
  %37 = load ptr, ptr %36, align 8
  %result.i16 = call ptr %37({ ptr, ptr, ptr, i32 } %25, ptr nocapture nofree noundef nonnull readonly align 8 %9) #45
  %38 = call { ptr, i160 } %result.i16({ ptr, ptr, ptr, i32 } %25, { ptr, ptr, ptr, i32 } %25, ptr nonnull align 8 %9) #42
  %39 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract20)
  %40 = sext i32 %offset.i.i to i64
  %41 = getelementptr ptr, ptr %.fca.0.extract20, i64 %40
  %42 = getelementptr i8, ptr %41, i64 64
  %43 = load ptr, ptr %42, align 8
  %44 = load ptr, ptr %43, align 8
  %45 = call { ptr } %44(ptr %.fca.1.extract21) #40
  %.fca.0.extract47 = extractvalue { ptr } %45, 0
  %46 = call i1 %.fca.0.extract47({ ptr, i160 } %38, { ptr, i160 } %3)
  br i1 %46, label %47, label %.critedge

47:                                               ; preds = %._crit_edge
  %48 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract20)
  %49 = load ptr, ptr %41, align 8
  %result.i17 = call align 8 ptr %49(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract21) #41
  %50 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract20)
  %51 = getelementptr i8, ptr %41, i64 8
  %52 = load ptr, ptr %51, align 8
  %result.i18 = call align 8 ptr %52(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract21) #41
  %53 = load ptr, ptr %result.i17, align 8, !alias.scope !777
  %54 = getelementptr i8, ptr %53, i64 72
  %55 = load ptr, ptr %54, align 8, !alias.scope !777
  %result.i.i = call { i64, i64 } %55(ptr nocapture nofree nonnull readonly align 8 %result.i17) #41, !alias.scope !777
  %56 = extractvalue { i64, i64 } %result.i.i, 0
  %57 = extractvalue { i64, i64 } %result.i.i, 1
  %58 = urem i64 20, %57
  %59 = icmp eq i64 %58, 0
  %60 = sub i64 %57, %58
  %61 = select i1 %59, i64 0, i64 %60
  %62 = add i64 %56, 20
  %63 = add i64 %62, %61
  %64 = load ptr, ptr %result.i18, align 8, !alias.scope !777
  %65 = getelementptr i8, ptr %64, i64 72
  %66 = load ptr, ptr %65, align 8, !alias.scope !777
  %result.i1.i = call { i64, i64 } %66(ptr nocapture nofree nonnull readonly align 8 %result.i18) #41, !alias.scope !777
  %67 = extractvalue { i64, i64 } %result.i1.i, 0
  %68 = extractvalue { i64, i64 } %result.i1.i, 1
  %69 = call i64 @llvm.umax.i64(i64 %57, i64 %68) #38
  %70 = call i64 @llvm.umax.i64(i64 %69, i64 noundef 8) #38, !range !16
  %71 = urem i64 %63, %68
  %72 = icmp eq i64 %71, 0
  %73 = sub i64 %68, %71
  %74 = select i1 %72, i64 0, i64 %73
  %75 = add i64 %67, %63
  %76 = add i64 %75, %74
  %77 = urem i64 %76, %70
  %78 = icmp eq i64 %77, 0
  %79 = sub i64 %70, %77
  %80 = select i1 %78, i64 0, i64 %79
  %81 = add i64 %80, %76
  %result.i20 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %81, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i17, ptr %result.i20, align 8
  %82 = getelementptr inbounds i8, ptr %result.i20, i64 8
  store ptr %result.i18, ptr %82, align 8
  %83 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i20)
  %84 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract20)
  %85 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract20)
  %86 = load ptr, ptr %result.i17, align 8
  %87 = getelementptr i8, ptr %86, i64 72
  %88 = load ptr, ptr %87, align 8
  %result.i.i54 = call { i64, i64 } %88(ptr nocapture nofree nonnull readonly align 8 %result.i17) #41
  %89 = extractvalue { i64, i64 } %result.i.i54, 1
  %90 = urem i64 20, %89
  %91 = icmp eq i64 %90, 0
  %reass.sub58 = sub i64 %89, %90
  %92 = add i64 %reass.sub58, 20
  %93 = select i1 %91, i64 20, i64 %92
  %94 = getelementptr i8, ptr %result.i20, i64 %93
  %95 = getelementptr i8, ptr %86, i64 64
  %96 = load ptr, ptr %95, align 8
  call void %96({ ptr, i160 } %3, ptr nocapture nofree nonnull readonly align 8 %result.i17, ptr nocapture nofree writeonly %94) #49
  %97 = load ptr, ptr %result.i20, align 8
  %98 = load ptr, ptr %97, align 8
  %99 = getelementptr i8, ptr %98, i64 72
  %100 = load ptr, ptr %99, align 8
  %result.i.i55 = call { i64, i64 } %100(ptr nocapture nofree nonnull readonly align 8 %97) #41
  %101 = extractvalue { i64, i64 } %result.i.i55, 0
  %102 = extractvalue { i64, i64 } %result.i.i55, 1
  %103 = urem i64 20, %102
  %104 = icmp eq i64 %103, 0
  %105 = sub i64 %102, %103
  %106 = select i1 %104, i64 0, i64 %105
  %107 = add i64 %101, 20
  %108 = add i64 %107, %106
  %109 = load ptr, ptr %82, align 8
  %110 = load ptr, ptr %109, align 8
  %111 = getelementptr i8, ptr %110, i64 72
  %112 = load ptr, ptr %111, align 8
  %result.i1.i56 = call { i64, i64 } %112(ptr nocapture nofree nonnull readonly align 8 %109) #41
  %113 = extractvalue { i64, i64 } %result.i1.i56, 1
  %114 = urem i64 %108, %113
  %115 = icmp eq i64 %114, 0
  %116 = sub i64 %113, %114
  %117 = select i1 %115, i64 0, i64 %116
  %118 = getelementptr i8, ptr %result.i20, i64 %108
  %119 = getelementptr i8, ptr %118, i64 %117
  %120 = getelementptr i8, ptr %110, i64 64
  %121 = load ptr, ptr %120, align 8
  call void %121({ ptr, i160 } %4, ptr nocapture nofree nonnull readonly align 8 %109, ptr nocapture nofree writeonly %119) #49
  %122 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %123 = getelementptr inbounds i8, ptr %result.i20, i64 16
  store i32 %5, ptr %123, align 8
  store ptr @Entry, ptr %12, align 8
  %124 = ptrtoint ptr %result.i20 to i64
  store i64 %124, ptr %14, align 4
  %.sroa_idx28 = getelementptr i8, ptr %12, i64 24
  store i32 10, ptr %.sroa_idx28, align 4
  br label %.critedge

.critedge:                                        ; preds = %47, %._crit_edge, %17, %8
  %.reg2mem45.0 = phi i1 [ false, %._crit_edge ], [ true, %47 ], [ false, %8 ], [ false, %17 ]
  ret i1 %.reg2mem45.0
}

define { ptr, i160 } @CuckooMap_get_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, i160 } %3, i32 %4, i32 %5, { ptr } %6) #10 {
  %8 = alloca [0 x ptr], align 8
  %.fca.0.extract13 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract14 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract13, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract13, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract13, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !780
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !780
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !780
  %product.i.i.i = mul i64 %hash_coef.i.i, 3547150501766965522
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !780
  %.fca.0.extract = extractvalue { ptr } %6, 0
  %9 = sext i32 %5 to i64
  %10 = shl nsw i64 %9, 5
  %11 = getelementptr i8, ptr %.fca.0.extract, i64 %10
  %12 = load ptr, ptr %11, align 8
  %13 = icmp ne ptr %12, @nil_typ
  %14 = icmp ne ptr %12, null
  %.not44 = and i1 %13, %14
  br i1 %.not44, label %15, label %.critedge

15:                                               ; preds = %7
  %16 = getelementptr i8, ptr %11, i64 8
  %17 = load i64, ptr %16, align 4
  %.sroa_idx = getelementptr i8, ptr %11, i64 16
  %18 = load i64, ptr %.sroa_idx, align 4
  %19 = inttoptr i64 %17 to ptr
  %20 = inttoptr i64 %18 to ptr
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %12, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %12, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %12, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !783
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !783
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !783
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 4015701072841558310
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i13 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !783
  %21 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %12, 0
  %22 = insertvalue { ptr, ptr, ptr, i32 } %21, ptr %19, 1
  %23 = insertvalue { ptr, ptr, ptr, i32 } %22, ptr %20, 2
  %24 = insertvalue { ptr, ptr, ptr, i32 } %23, i32 %offset.i.i13, 3
  %25 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %8) #37
  %26 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %12) #37
  %27 = sext i32 %offset.i.i13 to i64
  %28 = getelementptr ptr, ptr %12, i64 %27
  %29 = getelementptr i8, ptr %28, i64 64
  %30 = load ptr, ptr %29, align 8
  %result.i = call ptr %30({ ptr, ptr, ptr, i32 } %24, ptr nocapture nofree noundef nonnull readonly align 8 %8) #45
  %31 = call i32 %result.i({ ptr, ptr, ptr, i32 } %24, { ptr, ptr, ptr, i32 } %24, ptr nonnull align 8 %8) #42
  %32 = icmp eq i32 %31, %4
  br i1 %32, label %._crit_edge, label %.critedge

._crit_edge:                                      ; preds = %15
  %33 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %8)
  %34 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %12)
  %35 = getelementptr i8, ptr %28, i64 48
  %36 = load ptr, ptr %35, align 8
  %result.i15 = call ptr %36({ ptr, ptr, ptr, i32 } %24, ptr nocapture nofree noundef nonnull readonly align 8 %8) #45
  %37 = call { ptr, i160 } %result.i15({ ptr, ptr, ptr, i32 } %24, { ptr, ptr, ptr, i32 } %24, ptr nonnull align 8 %8) #42
  %38 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract13)
  %39 = sext i32 %offset.i.i to i64
  %40 = getelementptr ptr, ptr %.fca.0.extract13, i64 %39
  %41 = getelementptr i8, ptr %40, i64 64
  %42 = load ptr, ptr %41, align 8
  %43 = load ptr, ptr %42, align 8
  %44 = call { ptr } %43(ptr %.fca.1.extract14) #40
  %.fca.0.extract27 = extractvalue { ptr } %44, 0
  %45 = call i1 %.fca.0.extract27({ ptr, i160 } %37, { ptr, i160 } %3)
  br i1 %45, label %46, label %.critedge

46:                                               ; preds = %._crit_edge
  %47 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %8)
  %48 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %12)
  %49 = getelementptr i8, ptr %28, i64 56
  %50 = load ptr, ptr %49, align 8
  %result.i16 = call ptr %50({ ptr, ptr, ptr, i32 } %24, ptr nocapture nofree noundef nonnull readonly align 8 %8) #45
  %51 = call { ptr, i160 } %result.i16({ ptr, ptr, ptr, i32 } %24, { ptr, ptr, ptr, i32 } %24, ptr nonnull align 8 %8) #42
  %.fca.0.extract21 = extractvalue { ptr, i160 } %51, 0
  %.fca.1.extract22 = extractvalue { ptr, i160 } %51, 1
  br label %.critedge

.critedge:                                        ; preds = %46, %._crit_edge, %15, %7
  %.reg2mem43.sroa.3.0 = phi i160 [ %.fca.1.extract22, %46 ], [ poison, %._crit_edge ], [ poison, %7 ], [ poison, %15 ]
  %.reg2mem41.0 = phi ptr [ %.fca.0.extract21, %46 ], [ @nil_typ, %._crit_edge ], [ @nil_typ, %7 ], [ @nil_typ, %15 ]
  %.reload40.fca.0.insert = insertvalue { ptr, i160 } poison, ptr %.reg2mem41.0, 0
  %.reload40.fca.1.insert = insertvalue { ptr, i160 } %.reload40.fca.0.insert, i160 %.reg2mem43.sroa.3.0, 1
  ret { ptr, i160 } %.reload40.fca.1.insert
}

define { ptr, i160 } @CuckooMap_remove_from_table_keyK_h1i32_idxi32_tableBufferEntryK._V_or_Nil({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, i160 } %3, i32 %4, i32 %5, { ptr } %6) #10 {
  %8 = alloca [0 x ptr], align 8
  %.fca.0.extract15 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract16 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract15, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract15, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract15, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !786
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !786
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !786
  %product.i.i.i = mul i64 %hash_coef.i.i, 3547150501766965522
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !786
  %.fca.0.extract = extractvalue { ptr } %6, 0
  %9 = sext i32 %5 to i64
  %10 = shl nsw i64 %9, 5
  %11 = getelementptr i8, ptr %.fca.0.extract, i64 %10
  %12 = load ptr, ptr %11, align 8
  %13 = icmp ne ptr %12, @nil_typ
  %14 = icmp ne ptr %12, null
  %.not51 = and i1 %13, %14
  br i1 %.not51, label %15, label %.critedge

15:                                               ; preds = %7
  %16 = getelementptr i8, ptr %11, i64 8
  %17 = load i64, ptr %16, align 4
  %.sroa_idx = getelementptr i8, ptr %11, i64 16
  %18 = load i64, ptr %.sroa_idx, align 4
  %19 = inttoptr i64 %17 to ptr
  %20 = inttoptr i64 %18 to ptr
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %12, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %12, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %12, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !789
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !789
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !789
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 4015701072841558310
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i13 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !789
  %21 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %12, 0
  %22 = insertvalue { ptr, ptr, ptr, i32 } %21, ptr %19, 1
  %23 = insertvalue { ptr, ptr, ptr, i32 } %22, ptr %20, 2
  %24 = insertvalue { ptr, ptr, ptr, i32 } %23, i32 %offset.i.i13, 3
  %25 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %8) #37
  %26 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %12) #37
  %27 = sext i32 %offset.i.i13 to i64
  %28 = getelementptr ptr, ptr %12, i64 %27
  %29 = getelementptr i8, ptr %28, i64 64
  %30 = load ptr, ptr %29, align 8
  %result.i = call ptr %30({ ptr, ptr, ptr, i32 } %24, ptr nocapture nofree noundef nonnull readonly align 8 %8) #45
  %31 = call i32 %result.i({ ptr, ptr, ptr, i32 } %24, { ptr, ptr, ptr, i32 } %24, ptr nonnull align 8 %8) #42
  %32 = icmp eq i32 %31, %4
  br i1 %32, label %._crit_edge, label %.critedge

._crit_edge:                                      ; preds = %15
  %33 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %8)
  %34 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %12)
  %35 = getelementptr i8, ptr %28, i64 48
  %36 = load ptr, ptr %35, align 8
  %result.i15 = call ptr %36({ ptr, ptr, ptr, i32 } %24, ptr nocapture nofree noundef nonnull readonly align 8 %8) #45
  %37 = call { ptr, i160 } %result.i15({ ptr, ptr, ptr, i32 } %24, { ptr, ptr, ptr, i32 } %24, ptr nonnull align 8 %8) #42
  %38 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract15)
  %39 = sext i32 %offset.i.i to i64
  %40 = getelementptr ptr, ptr %.fca.0.extract15, i64 %39
  %41 = getelementptr i8, ptr %40, i64 64
  %42 = load ptr, ptr %41, align 8
  %43 = load ptr, ptr %42, align 8
  %44 = call { ptr } %43(ptr %.fca.1.extract16) #40
  %.fca.0.extract34 = extractvalue { ptr } %44, 0
  %45 = call i1 %.fca.0.extract34({ ptr, i160 } %37, { ptr, i160 } %3)
  br i1 %45, label %46, label %.critedge

46:                                               ; preds = %._crit_edge
  %47 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %8)
  %48 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 8 %12)
  %49 = getelementptr i8, ptr %28, i64 56
  %50 = load ptr, ptr %49, align 8
  %result.i16 = call ptr %50({ ptr, ptr, ptr, i32 } %24, ptr nocapture nofree noundef nonnull readonly align 8 %8) #45
  %51 = call { ptr, i160 } %result.i16({ ptr, ptr, ptr, i32 } %24, { ptr, ptr, ptr, i32 } %24, ptr nonnull align 8 %8) #42
  %.fca.0.extract28 = extractvalue { ptr, i160 } %51, 0
  %.fca.1.extract29 = extractvalue { ptr, i160 } %51, 1
  store ptr @nil_typ, ptr %11, align 8
  %52 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract15)
  %53 = getelementptr i8, ptr %40, i64 48
  %54 = load ptr, ptr %53, align 8
  %55 = load ptr, ptr %54, align 8
  %56 = call i32 %55(ptr %.fca.1.extract16) #40
  %57 = add i32 %56, -1
  %58 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract15)
  %59 = getelementptr i8, ptr %54, i64 8
  %60 = load ptr, ptr %59, align 8
  call void %60(ptr %.fca.1.extract16, i32 %57) #39
  br label %.critedge

.critedge:                                        ; preds = %46, %._crit_edge, %15, %7
  %.reg2mem47.sroa.3.0 = phi i160 [ %.fca.1.extract29, %46 ], [ poison, %._crit_edge ], [ poison, %7 ], [ poison, %15 ]
  %.reg2mem45.0 = phi ptr [ %.fca.0.extract28, %46 ], [ @nil_typ, %._crit_edge ], [ @nil_typ, %7 ], [ @nil_typ, %15 ]
  %.reload44.fca.0.insert = insertvalue { ptr, i160 } poison, ptr %.reg2mem45.0, 0
  %.reload44.fca.1.insert = insertvalue { ptr, i160 } %.reload44.fca.0.insert, i160 %.reg2mem47.sroa.3.0, 1
  ret { ptr, i160 } %.reload44.fca.1.insert
}

; Function Attrs: nounwind
define void @CuckooMap_insert_keyK_valueV({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, i160 } %3, { ptr, i160 } %4) #11 {
  %6 = alloca [0 x ptr], align 8
  %7 = alloca [1 x ptr], align 8
  %8 = alloca { ptr }, align 8
  %9 = alloca [5 x ptr], align 8
  %10 = alloca { ptr, ptr, ptr, ptr, ptr }, align 8
  %11 = alloca [1 x ptr], align 8
  %12 = alloca { ptr }, align 8
  %.fca.0.extract34 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract35 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract34, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract34, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract34, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8
  %product.i.i.i = mul i64 %hash_coef.i.i, 3547150501766965522
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4
  %.fca.0.extract29 = extractvalue { ptr, i160 } %3, 0
  %.fca.0.extract20 = extractvalue { ptr, i160 } %4, 0
  %13 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract34, 0
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.1.extract35, 1
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, ptr %.fca.2.extract, 2
  %16 = insertvalue { ptr, ptr, ptr, i32 } %15, i32 %offset.i.i, 3
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract34) #37
  %18 = sext i32 %offset.i.i to i64
  %19 = getelementptr ptr, ptr %.fca.0.extract34, i64 %18
  %20 = load ptr, ptr %19, align 8
  %result.i = call ptr %20(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract35) #41
  %21 = alloca [1 x ptr], align 8
  store ptr %result.i, ptr %21, align 8
  %22 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %21) #37
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract34) #37
  %24 = getelementptr i8, ptr %19, i64 88
  %25 = load ptr, ptr %24, align 8
  %26 = alloca { ptr }, align 8
  store ptr %.fca.0.extract29, ptr %26, align 8
  %result.i1 = call ptr %25({ ptr, ptr, ptr, i32 } %16, ptr nocapture nofree noundef nonnull readonly align 8 %26) #45
  %27 = call i32 %result.i1({ ptr, ptr, ptr, i32 } %16, { ptr, ptr, ptr, i32 } %16, ptr nonnull align 8 dereferenceable(8) %21, { ptr, i160 } %3) #42
  %28 = alloca [1 x ptr], align 8
  store ptr @_parameterization_i32, ptr %28, align 8
  %29 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %28)
  %30 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract34)
  %31 = getelementptr i8, ptr %19, i64 104
  %32 = load ptr, ptr %31, align 8
  %33 = alloca { ptr }, align 8
  store ptr @i32_typ, ptr %33, align 8
  %result.i2 = call ptr %32({ ptr, ptr, ptr, i32 } %16, ptr nocapture nofree noundef nonnull readonly align 8 %33) #45
  %34 = call i32 %result.i2({ ptr, ptr, ptr, i32 } %16, { ptr, ptr, ptr, i32 } %16, ptr nonnull align 8 dereferenceable(8) %28, i32 %27) #42
  %35 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract34)
  %36 = getelementptr i8, ptr %19, i64 24
  %37 = load ptr, ptr %36, align 8
  %38 = load ptr, ptr %37, align 8
  %39 = call { ptr } %38(ptr nonnull %.fca.1.extract35) #40
  %40 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract34)
  %41 = load ptr, ptr %19, align 8
  %result.i3 = call ptr %41(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract35) #41
  %42 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract34)
  %43 = getelementptr i8, ptr %19, i64 8
  %44 = load ptr, ptr %43, align 8
  %result.i4 = call ptr %44(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract35) #41
  %result.i5 = call noalias nonnull align 8 dereferenceable(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr @buffer_typ, ptr %result.i5, align 8
  %45 = alloca [5 x ptr], align 8
  store ptr %result.i3, ptr %45, align 8
  %46 = getelementptr inbounds i8, ptr %45, i64 8
  store ptr %result.i4, ptr %46, align 8
  %47 = getelementptr inbounds i8, ptr %45, i64 16
  store ptr @_parameterization_i32, ptr %47, align 8
  %48 = getelementptr inbounds i8, ptr %45, i64 24
  store ptr @_parameterization_i32, ptr %48, align 8
  %49 = getelementptr inbounds i8, ptr %45, i64 32
  store ptr %result.i5, ptr %49, align 8
  %50 = call ptr @llvm.invariant.start.p0(i64 noundef 25, ptr nocapture nofree noundef nonnull align 8 dereferenceable(40) %45)
  %51 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract34)
  %52 = getelementptr i8, ptr %19, i64 144
  %53 = load ptr, ptr %52, align 8
  %54 = alloca { ptr, ptr, ptr, ptr, ptr }, align 8
  store ptr %.fca.0.extract29, ptr %54, align 8
  %55 = getelementptr inbounds i8, ptr %54, i64 8
  store ptr %.fca.0.extract20, ptr %55, align 8
  %56 = getelementptr inbounds i8, ptr %54, i64 16
  store ptr @i32_typ, ptr %56, align 8
  %57 = getelementptr inbounds i8, ptr %54, i64 24
  store ptr @i32_typ, ptr %57, align 8
  %58 = getelementptr inbounds i8, ptr %54, i64 32
  store ptr @buffer_typ, ptr %58, align 8
  %result.i6 = call ptr %53({ ptr, ptr, ptr, i32 } %16, ptr nocapture nofree noundef nonnull readonly align 8 %54) #45
  %59 = call i1 %result.i6({ ptr, ptr, ptr, i32 } %16, { ptr, ptr, ptr, i32 } %16, ptr nonnull align 8 dereferenceable(40) %45, { ptr, i160 } %3, { ptr, i160 } %4, i32 %27, i32 %34, { ptr } %39) #42
  br i1 %59, label %.loopexit, label %60

60:                                               ; preds = %5
  store ptr @_parameterization_i32, ptr %7, align 8
  %61 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %7)
  %62 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract34)
  %63 = getelementptr i8, ptr %19, i64 112
  %64 = load ptr, ptr %63, align 8
  store ptr @i32_typ, ptr %8, align 8
  %result.i7 = call ptr %64({ ptr, ptr, ptr, i32 } %16, ptr nocapture nofree noundef nonnull readonly %8) #45
  %65 = call i32 %result.i7({ ptr, ptr, ptr, i32 } %16, { ptr, ptr, ptr, i32 } %16, ptr nonnull align 8 dereferenceable(8) %7, i32 %27) #42
  %66 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract34)
  %67 = getelementptr i8, ptr %19, i64 32
  %68 = load ptr, ptr %67, align 8
  %69 = load ptr, ptr %68, align 8
  %70 = call { ptr } %69(ptr nonnull %.fca.1.extract35) #40
  %71 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract34)
  %72 = load ptr, ptr %19, align 8
  %result.i8 = call ptr %72(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract35) #41
  %73 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract34)
  %74 = load ptr, ptr %43, align 8
  %result.i9 = call ptr %74(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract35) #41
  %result.i10 = call noalias nonnull align 8 dereferenceable(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr @buffer_typ, ptr %result.i10, align 8
  store ptr %result.i8, ptr %9, align 8
  %75 = getelementptr inbounds i8, ptr %9, i64 8
  store ptr %result.i9, ptr %75, align 8
  %76 = getelementptr inbounds i8, ptr %9, i64 16
  store ptr @_parameterization_i32, ptr %76, align 8
  %77 = getelementptr inbounds i8, ptr %9, i64 24
  store ptr @_parameterization_i32, ptr %77, align 8
  %78 = getelementptr inbounds i8, ptr %9, i64 32
  store ptr %result.i10, ptr %78, align 8
  %79 = call ptr @llvm.invariant.start.p0(i64 noundef 25, ptr nocapture nofree noundef nonnull align 8 dereferenceable(40) %9)
  %80 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract34)
  %81 = load ptr, ptr %52, align 8
  store ptr %.fca.0.extract29, ptr %10, align 8
  %82 = getelementptr inbounds i8, ptr %10, i64 8
  store ptr %.fca.0.extract20, ptr %82, align 8
  %83 = getelementptr inbounds i8, ptr %10, i64 16
  store ptr @i32_typ, ptr %83, align 8
  %84 = getelementptr inbounds i8, ptr %10, i64 24
  store ptr @i32_typ, ptr %84, align 8
  %85 = getelementptr inbounds i8, ptr %10, i64 32
  store ptr @buffer_typ, ptr %85, align 8
  %result.i11 = call ptr %81({ ptr, ptr, ptr, i32 } %16, ptr nocapture nofree noundef nonnull readonly %10) #45
  %86 = call i1 %result.i11({ ptr, ptr, ptr, i32 } %16, { ptr, ptr, ptr, i32 } %16, ptr nonnull align 8 dereferenceable(40) %9, { ptr, i160 } %3, { ptr, i160 } %4, i32 %27, i32 %65, { ptr } %70) #42
  br i1 %86, label %.loopexit, label %87

87:                                               ; preds = %60
  %88 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract34)
  %89 = getelementptr i8, ptr %19, i64 48
  %90 = load ptr, ptr %89, align 8
  %91 = load ptr, ptr %90, align 8
  %92 = call i32 %91(ptr %.fca.1.extract35) #40
  %93 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract34)
  %94 = getelementptr i8, ptr %19, i64 40
  %95 = load ptr, ptr %94, align 8
  %96 = load ptr, ptr %95, align 8
  %97 = call i32 %96(ptr %.fca.1.extract35) #40
  %.not = icmp slt i32 %92, %97
  br i1 %.not, label %._crit_edge, label %98

98:                                               ; preds = %87
  %99 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %6)
  %100 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract34)
  %101 = getelementptr i8, ptr %19, i64 136
  %102 = load ptr, ptr %101, align 8
  %result.i12 = call ptr %102({ ptr, ptr, ptr, i32 } %16, ptr nocapture nofree noundef nonnull readonly align 8 %6) #45
  call void %result.i12({ ptr, ptr, ptr, i32 } %16, { ptr, ptr, ptr, i32 } %16, ptr nonnull align 8 %6) #42
  br label %._crit_edge

._crit_edge:                                      ; preds = %98, %87
  %103 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract34)
  %104 = load ptr, ptr %19, align 8
  %result.i13 = call align 8 ptr %104(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract35) #41
  %105 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract34)
  %106 = load ptr, ptr %43, align 8
  %result.i14 = call align 8 ptr %106(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract35) #41
  %107 = load ptr, ptr %result.i13, align 8
  %108 = getelementptr i8, ptr %107, i64 72
  %109 = load ptr, ptr %108, align 8
  %result.i.i = call { i64, i64 } %109(ptr nocapture nofree nonnull readonly align 8 %result.i13) #41
  %110 = extractvalue { i64, i64 } %result.i.i, 0
  %111 = extractvalue { i64, i64 } %result.i.i, 1
  %112 = urem i64 20, %111
  %113 = icmp eq i64 %112, 0
  %114 = sub i64 %111, %112
  %115 = select i1 %113, i64 0, i64 %114
  %116 = add i64 %110, 20
  %117 = add i64 %116, %115
  %118 = load ptr, ptr %result.i14, align 8
  %119 = getelementptr i8, ptr %118, i64 72
  %120 = load ptr, ptr %119, align 8
  %result.i1.i = call { i64, i64 } %120(ptr nocapture nofree nonnull readonly align 8 %result.i14) #41
  %121 = extractvalue { i64, i64 } %result.i1.i, 0
  %122 = extractvalue { i64, i64 } %result.i1.i, 1
  %123 = call i64 @llvm.umax.i64(i64 %111, i64 %122) #38
  %124 = call i64 @llvm.umax.i64(i64 %123, i64 noundef 8) #38, !range !16
  %125 = urem i64 %117, %122
  %126 = icmp eq i64 %125, 0
  %127 = sub i64 %122, %125
  %128 = select i1 %126, i64 0, i64 %127
  %129 = add i64 %121, %117
  %130 = add i64 %129, %128
  %131 = urem i64 %130, %124
  %132 = icmp eq i64 %131, 0
  %133 = sub i64 %124, %131
  %134 = select i1 %132, i64 0, i64 %133
  %135 = add i64 %134, %130
  %result.i16 = call noalias nonnull align 8 dereferenceable(20) ptr @bump_malloc_inner(i64 noundef %135, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i13, ptr %result.i16, align 8
  %136 = getelementptr inbounds i8, ptr %result.i16, i64 8
  store ptr %result.i14, ptr %136, align 8
  %137 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(20) %result.i16)
  %138 = insertvalue { ptr, ptr, ptr, i32 } { ptr @Entry, ptr undef, ptr undef, i32 undef }, ptr %result.i16, 1
  %139 = insertvalue { ptr, ptr, ptr, i32 } %138, ptr undef, 2
  %140 = insertvalue { ptr, ptr, ptr, i32 } %139, i32 10, 3
  %141 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract34)
  %142 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract34)
  %143 = load ptr, ptr %result.i13, align 8
  %144 = getelementptr i8, ptr %143, i64 72
  %145 = load ptr, ptr %144, align 8
  %result.i.i110 = call { i64, i64 } %145(ptr nocapture nofree nonnull readonly align 8 %result.i13) #41
  %146 = extractvalue { i64, i64 } %result.i.i110, 1
  %147 = urem i64 20, %146
  %148 = icmp eq i64 %147, 0
  %reass.sub113 = sub i64 %146, %147
  %149 = add i64 %reass.sub113, 20
  %150 = select i1 %148, i64 20, i64 %149
  %151 = getelementptr i8, ptr %result.i16, i64 %150
  %152 = getelementptr i8, ptr %143, i64 64
  %153 = load ptr, ptr %152, align 8
  call void %153({ ptr, i160 } %3, ptr nocapture nofree nonnull readonly align 8 %result.i13, ptr nocapture nofree writeonly %151) #49
  %154 = load ptr, ptr %result.i16, align 8
  %155 = load ptr, ptr %154, align 8
  %156 = getelementptr i8, ptr %155, i64 72
  %157 = load ptr, ptr %156, align 8
  %result.i.i111 = call { i64, i64 } %157(ptr nocapture nofree nonnull readonly align 8 %154) #41
  %158 = extractvalue { i64, i64 } %result.i.i111, 0
  %159 = extractvalue { i64, i64 } %result.i.i111, 1
  %160 = urem i64 20, %159
  %161 = icmp eq i64 %160, 0
  %162 = sub i64 %159, %160
  %163 = select i1 %161, i64 0, i64 %162
  %164 = add i64 %158, 20
  %165 = add i64 %164, %163
  %166 = load ptr, ptr %136, align 8
  %167 = load ptr, ptr %166, align 8
  %168 = getelementptr i8, ptr %167, i64 72
  %169 = load ptr, ptr %168, align 8
  %result.i1.i112 = call { i64, i64 } %169(ptr nocapture nofree nonnull readonly align 8 %166) #41
  %170 = extractvalue { i64, i64 } %result.i1.i112, 1
  %171 = urem i64 %165, %170
  %172 = icmp eq i64 %171, 0
  %173 = sub i64 %170, %171
  %174 = select i1 %172, i64 0, i64 %173
  %175 = getelementptr i8, ptr %result.i16, i64 %165
  %176 = getelementptr i8, ptr %175, i64 %174
  %177 = getelementptr i8, ptr %167, i64 64
  %178 = load ptr, ptr %177, align 8
  call void %178({ ptr, i160 } %4, ptr nocapture nofree nonnull readonly align 8 %166, ptr nocapture nofree writeonly %176) #49
  %179 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef nonnull align 16 dereferenceable(200) @Entry) #37
  %180 = getelementptr inbounds i8, ptr %result.i16, i64 16
  store i32 %27, ptr %180, align 8
  %181 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract34)
  %182 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract34)
  %183 = getelementptr i8, ptr %19, i64 120
  %184 = getelementptr i8, ptr %19, i64 136
  %185 = load ptr, ptr %19, align 8
  %result.i48 = call ptr %185(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract35) #41
  %186 = load ptr, ptr %43, align 8
  %result.i49 = call ptr %186(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract35) #41
  %result.i50 = call noalias nonnull align 8 dereferenceable(32) ptr @bump_malloc_inner(i64 noundef 32, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %187 = getelementptr inbounds i8, ptr %result.i50, i64 16
  store ptr @_parameterization_Nil, ptr %187, align 8
  %result.i51 = call noalias nonnull align 8 dereferenceable(32) ptr @bump_malloc_inner(i64 noundef 32, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %188 = getelementptr inbounds i8, ptr %result.i51, i64 16
  store ptr %result.i49, ptr %188, align 8
  %189 = getelementptr inbounds i8, ptr %result.i51, i64 8
  store ptr %result.i48, ptr %189, align 8
  %190 = getelementptr inbounds i8, ptr %result.i51, i64 24
  store ptr null, ptr %190, align 8
  %191 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(32) %result.i51)
  store ptr @Entry, ptr %result.i51, align 8
  %192 = getelementptr inbounds i8, ptr %result.i50, i64 8
  store ptr %result.i51, ptr %192, align 8
  %193 = getelementptr inbounds i8, ptr %result.i50, i64 24
  store ptr null, ptr %193, align 8
  %194 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(32) %result.i50)
  store ptr @union_typ, ptr %result.i50, align 8
  store ptr %result.i50, ptr %11, align 8
  %195 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %11)
  %196 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract34)
  %197 = load ptr, ptr %183, align 8
  store ptr @union_typ, ptr %12, align 8
  %result.i52 = call ptr %197({ ptr, ptr, ptr, i32 } %16, ptr nocapture nofree noundef nonnull readonly %12) #45
  %198 = call { ptr, i160 } %result.i52({ ptr, ptr, ptr, i32 } %16, { ptr, ptr, ptr, i32 } %16, ptr nonnull align 8 dereferenceable(8) %11, { ptr, ptr, ptr, i32 } %140) #42
  %.fca.0.extract41 = extractvalue { ptr, i160 } %198, 0
  %199 = icmp ne ptr %.fca.0.extract41, @nil_typ
  %200 = icmp ne ptr %.fca.0.extract41, null
  %.not80 = and i1 %199, %200
  br i1 %.not80, label %201, label %.loopexit

201:                                              ; preds = %._crit_edge
  %.fca.1.extract42 = extractvalue { ptr, i160 } %198, 1
  %202 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %6)
  %203 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract34)
  %204 = load ptr, ptr %184, align 8
  %result.i53 = call ptr %204({ ptr, ptr, ptr, i32 } %16, ptr nocapture nofree noundef nonnull readonly align 8 %6) #45
  call void %result.i53({ ptr, ptr, ptr, i32 } %16, { ptr, ptr, ptr, i32 } %16, ptr nonnull align 8 %6) #42
  %.sroa.3.8.extract.trunc = trunc i160 %.fca.1.extract42 to i64
  %205 = inttoptr i64 %.sroa.3.8.extract.trunc to ptr
  %.sroa.6.8.extract.shift = lshr i160 %.fca.1.extract42, 64
  %.sroa.6.8.extract.trunc = trunc i160 %.sroa.6.8.extract.shift to i64
  %206 = inttoptr i64 %.sroa.6.8.extract.trunc to ptr
  %hash_coef_ptr.i.i35.1 = getelementptr i8, ptr %.fca.0.extract41, i64 8
  %tbl_size_ptr.i.i36.1 = getelementptr i8, ptr %.fca.0.extract41, i64 16
  %offset_tbl_ptr.i.i37.1 = getelementptr i8, ptr %.fca.0.extract41, i64 40
  %hash_coef.i.i38.1 = load i64, ptr %hash_coef_ptr.i.i35.1, align 4
  %tbl_size.i.i39.1 = load i64, ptr %tbl_size_ptr.i.i36.1, align 4
  %offset_tbl.i.i40.1 = load ptr, ptr %offset_tbl_ptr.i.i37.1, align 8
  %product.i.i.i41.1 = mul i64 %hash_coef.i.i38.1, 4015701072841558310
  %shifted.i.i.i42.1 = lshr i64 %product.i.i.i41.1, 32
  %xored.i.i.i43.1 = xor i64 %shifted.i.i.i42.1, %product.i.i.i41.1
  %hash.i.i.i44.1 = and i64 %xored.i.i.i43.1, %tbl_size.i.i39.1
  %offset_ptr.i.i45.1 = getelementptr i32, ptr %offset_tbl.i.i40.1, i64 %hash.i.i.i44.1
  %offset.i.i46.1 = load i32, ptr %offset_ptr.i.i45.1, align 4
  %207 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract41, 0
  %208 = insertvalue { ptr, ptr, ptr, i32 } %207, ptr %205, 1
  %209 = insertvalue { ptr, ptr, ptr, i32 } %208, ptr %206, 2
  %210 = insertvalue { ptr, ptr, ptr, i32 } %209, i32 %offset.i.i46.1, 3
  %211 = load ptr, ptr %19, align 8
  %result.i48.1 = call ptr %211(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract35) #41
  %212 = load ptr, ptr %43, align 8
  %result.i49.1 = call ptr %212(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract35) #41
  %result.i50.1 = call noalias nonnull align 8 dereferenceable(32) ptr @bump_malloc_inner(i64 noundef 32, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %213 = getelementptr inbounds i8, ptr %result.i50.1, i64 16
  store ptr @_parameterization_Nil, ptr %213, align 8
  %result.i51.1 = call noalias nonnull align 8 dereferenceable(32) ptr @bump_malloc_inner(i64 noundef 32, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %214 = getelementptr inbounds i8, ptr %result.i51.1, i64 16
  store ptr %result.i49.1, ptr %214, align 8
  %215 = getelementptr inbounds i8, ptr %result.i51.1, i64 8
  store ptr %result.i48.1, ptr %215, align 8
  %216 = getelementptr inbounds i8, ptr %result.i51.1, i64 24
  store ptr null, ptr %216, align 8
  %217 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(32) %result.i51.1)
  store ptr @Entry, ptr %result.i51.1, align 8
  %218 = getelementptr inbounds i8, ptr %result.i50.1, i64 8
  store ptr %result.i51.1, ptr %218, align 8
  %219 = getelementptr inbounds i8, ptr %result.i50.1, i64 24
  store ptr null, ptr %219, align 8
  %220 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(32) %result.i50.1)
  store ptr @union_typ, ptr %result.i50.1, align 8
  store ptr %result.i50.1, ptr %11, align 8
  %221 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %11)
  %222 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract34)
  %223 = load ptr, ptr %183, align 8
  store ptr @union_typ, ptr %12, align 8
  %result.i52.1 = call ptr %223({ ptr, ptr, ptr, i32 } %16, ptr nocapture nofree noundef nonnull readonly %12) #45
  %224 = call { ptr, i160 } %result.i52.1({ ptr, ptr, ptr, i32 } %16, { ptr, ptr, ptr, i32 } %16, ptr nonnull align 8 dereferenceable(8) %11, { ptr, ptr, ptr, i32 } %210) #42
  %.fca.0.extract41.1 = extractvalue { ptr, i160 } %224, 0
  %225 = icmp ne ptr %.fca.0.extract41.1, @nil_typ
  %226 = icmp ne ptr %.fca.0.extract41.1, null
  %.not80.1 = and i1 %225, %226
  br i1 %.not80.1, label %227, label %.loopexit

227:                                              ; preds = %201
  %228 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %6)
  %229 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract34)
  %230 = load ptr, ptr %184, align 8
  %result.i53.1 = call ptr %230({ ptr, ptr, ptr, i32 } %16, ptr nocapture nofree noundef nonnull readonly align 8 %6) #45
  call void %result.i53.1({ ptr, ptr, ptr, i32 } %16, { ptr, ptr, ptr, i32 } %16, ptr nonnull align 8 %6) #42
  br label %.loopexit

.loopexit:                                        ; preds = %._crit_edge, %201, %227, %60, %5
  ret void
}

; Function Attrs: mustprogress nounwind willreturn
define i32 @CuckooMap_size_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #6 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !792
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !792
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !792
  %product.i.i.i = mul i64 %hash_coef.i.i, 3547150501766965522
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !792
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract, i64 %5
  %7 = getelementptr i8, ptr %6, i64 48
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = call i32 %9(ptr %.fca.1.extract) #40
  ret i32 %10
}

; Function Attrs: nounwind
define { ptr, i160 } @CuckooMap_get_keyK({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, i160 } %3) #11 {
  %5 = alloca [1 x ptr], align 8
  %6 = alloca { ptr }, align 8
  %7 = alloca [4 x ptr], align 8
  %8 = alloca { ptr, ptr, ptr, ptr }, align 8
  %.fca.0.extract31 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract32 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract31, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract31, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract31, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !795
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !795
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !795
  %product.i.i.i = mul i64 %hash_coef.i.i, 3547150501766965522
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !795
  %.fca.0.extract24 = extractvalue { ptr, i160 } %3, 0
  %9 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract31, 0
  %10 = insertvalue { ptr, ptr, ptr, i32 } %9, ptr %.fca.1.extract32, 1
  %11 = insertvalue { ptr, ptr, ptr, i32 } %10, ptr %.fca.2.extract, 2
  %12 = insertvalue { ptr, ptr, ptr, i32 } %11, i32 %offset.i.i, 3
  %13 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract31) #37
  %14 = sext i32 %offset.i.i to i64
  %15 = getelementptr ptr, ptr %.fca.0.extract31, i64 %14
  %16 = load ptr, ptr %15, align 8
  %result.i = call ptr %16(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract32) #41
  %17 = alloca [1 x ptr], align 8
  store ptr %result.i, ptr %17, align 8
  %18 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %17) #37
  %19 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract31) #37
  %20 = getelementptr i8, ptr %15, i64 88
  %21 = load ptr, ptr %20, align 8
  %22 = alloca { ptr }, align 8
  store ptr %.fca.0.extract24, ptr %22, align 8
  %result.i1 = call ptr %21({ ptr, ptr, ptr, i32 } %12, ptr nocapture nofree noundef nonnull readonly align 8 %22) #45
  %23 = call i32 %result.i1({ ptr, ptr, ptr, i32 } %12, { ptr, ptr, ptr, i32 } %12, ptr nonnull align 8 dereferenceable(8) %17, { ptr, i160 } %3) #42
  %24 = alloca [1 x ptr], align 8
  store ptr @_parameterization_i32, ptr %24, align 8
  %25 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %24)
  %26 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract31)
  %27 = getelementptr i8, ptr %15, i64 104
  %28 = load ptr, ptr %27, align 8
  %29 = alloca { ptr }, align 8
  store ptr @i32_typ, ptr %29, align 8
  %result.i2 = call ptr %28({ ptr, ptr, ptr, i32 } %12, ptr nocapture nofree noundef nonnull readonly align 8 %29) #45
  %30 = call i32 %result.i2({ ptr, ptr, ptr, i32 } %12, { ptr, ptr, ptr, i32 } %12, ptr nonnull align 8 dereferenceable(8) %24, i32 %23) #42
  %31 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract31)
  %32 = getelementptr i8, ptr %15, i64 24
  %33 = load ptr, ptr %32, align 8
  %34 = load ptr, ptr %33, align 8
  %35 = call { ptr } %34(ptr nonnull %.fca.1.extract32) #40
  %36 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract31)
  %37 = load ptr, ptr %15, align 8
  %result.i3 = call ptr %37(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract32) #41
  %result.i4 = call noalias nonnull align 8 dereferenceable(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr @buffer_typ, ptr %result.i4, align 8
  %38 = alloca [4 x ptr], align 8
  store ptr %result.i3, ptr %38, align 8
  %39 = getelementptr inbounds i8, ptr %38, i64 8
  store ptr @_parameterization_i32, ptr %39, align 8
  %40 = getelementptr inbounds i8, ptr %38, i64 16
  store ptr @_parameterization_i32, ptr %40, align 8
  %41 = getelementptr inbounds i8, ptr %38, i64 24
  store ptr %result.i4, ptr %41, align 8
  %42 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(32) %38)
  %43 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract31)
  %44 = getelementptr i8, ptr %15, i64 152
  %45 = load ptr, ptr %44, align 8
  %46 = alloca { ptr, ptr, ptr, ptr }, align 8
  store ptr %.fca.0.extract24, ptr %46, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 8
  store ptr @i32_typ, ptr %47, align 8
  %48 = getelementptr inbounds i8, ptr %46, i64 16
  store ptr @i32_typ, ptr %48, align 8
  %49 = getelementptr inbounds i8, ptr %46, i64 24
  store ptr @buffer_typ, ptr %49, align 8
  %result.i5 = call ptr %45({ ptr, ptr, ptr, i32 } %12, ptr nocapture nofree noundef nonnull readonly align 8 %46) #45
  %50 = call { ptr, i160 } %result.i5({ ptr, ptr, ptr, i32 } %12, { ptr, ptr, ptr, i32 } %12, ptr nonnull align 8 dereferenceable(32) %38, { ptr, i160 } %3, i32 %23, i32 %30, { ptr } %35) #42
  %.fca.0.extract = extractvalue { ptr, i160 } %50, 0
  %51 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract31)
  %52 = icmp ne ptr %.fca.0.extract, @nil_typ
  %53 = icmp ne ptr %.fca.0.extract, null
  %.not63 = and i1 %52, %53
  br i1 %.not63, label %.thread39, label %54

54:                                               ; preds = %4
  store ptr @_parameterization_i32, ptr %5, align 8
  %55 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %5)
  %56 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract31)
  %57 = getelementptr i8, ptr %15, i64 112
  %58 = load ptr, ptr %57, align 8
  store ptr @i32_typ, ptr %6, align 8
  %result.i6 = call ptr %58({ ptr, ptr, ptr, i32 } %12, ptr nocapture nofree noundef nonnull readonly %6) #45
  %59 = call i32 %result.i6({ ptr, ptr, ptr, i32 } %12, { ptr, ptr, ptr, i32 } %12, ptr nonnull align 8 dereferenceable(8) %5, i32 %23) #42
  %60 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract31)
  %61 = getelementptr i8, ptr %15, i64 32
  %62 = load ptr, ptr %61, align 8
  %63 = load ptr, ptr %62, align 8
  %64 = call { ptr } %63(ptr nonnull %.fca.1.extract32) #40
  %65 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract31)
  %66 = load ptr, ptr %15, align 8
  %result.i7 = call ptr %66(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract32) #41
  %result.i8 = call noalias nonnull align 8 dereferenceable(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr @buffer_typ, ptr %result.i8, align 8
  store ptr %result.i7, ptr %7, align 8
  %67 = getelementptr inbounds i8, ptr %7, i64 8
  store ptr @_parameterization_i32, ptr %67, align 8
  %68 = getelementptr inbounds i8, ptr %7, i64 16
  store ptr @_parameterization_i32, ptr %68, align 8
  %69 = getelementptr inbounds i8, ptr %7, i64 24
  store ptr %result.i8, ptr %69, align 8
  %70 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(32) %7)
  %71 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract31)
  %72 = load ptr, ptr %44, align 8
  store ptr %.fca.0.extract24, ptr %8, align 8
  %73 = getelementptr inbounds i8, ptr %8, i64 8
  store ptr @i32_typ, ptr %73, align 8
  %74 = getelementptr inbounds i8, ptr %8, i64 16
  store ptr @i32_typ, ptr %74, align 8
  %75 = getelementptr inbounds i8, ptr %8, i64 24
  store ptr @buffer_typ, ptr %75, align 8
  %result.i9 = call ptr %72({ ptr, ptr, ptr, i32 } %12, ptr nocapture nofree noundef nonnull readonly %8) #45
  %76 = call { ptr, i160 } %result.i9({ ptr, ptr, ptr, i32 } %12, { ptr, ptr, ptr, i32 } %12, ptr nonnull align 8 dereferenceable(32) %7, { ptr, i160 } %3, i32 %23, i32 %59, { ptr } %64) #42
  %.fca.0.extract51 = extractvalue { ptr, i160 } %76, 0
  %77 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract31)
  %78 = icmp ne ptr %.fca.0.extract51, @nil_typ
  %79 = icmp ne ptr %.fca.0.extract51, null
  %.not65.not.not = and i1 %78, %79
  %cond.fr27 = freeze i1 %.not65.not.not
  %spec.select = select i1 %cond.fr27, ptr %.fca.0.extract51, ptr @nil_typ
  br label %.thread39

.thread39:                                        ; preds = %4, %54
  %80 = phi ptr [ %spec.select, %54 ], [ %.fca.0.extract, %4 ]
  %.pn = phi { ptr, i160 } [ %76, %54 ], [ %50, %4 ]
  %81 = extractvalue { ptr, i160 } %.pn, 1
  %.reload55.fca.0.insert = insertvalue { ptr, i160 } poison, ptr %80, 0
  %.reload55.fca.1.insert = insertvalue { ptr, i160 } %.reload55.fca.0.insert, i160 %81, 1
  ret { ptr, i160 } %.reload55.fca.1.insert
}

; Function Attrs: nounwind
define void @CuckooMap__set_index_keyK_valueV({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, i160 } %3, { ptr, i160 } %4) #11 {
  %.fca.0.extract11 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract12 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract11, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract11, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract11, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !798
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !798
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !798
  %product.i.i.i = mul i64 %hash_coef.i.i, 3547150501766965522
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !798
  %.fca.0.extract7 = extractvalue { ptr, i160 } %3, 0
  %.fca.0.extract = extractvalue { ptr, i160 } %4, 0
  %6 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract11, 0
  %7 = insertvalue { ptr, ptr, ptr, i32 } %6, ptr %.fca.1.extract12, 1
  %8 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %.fca.2.extract, 2
  %9 = insertvalue { ptr, ptr, ptr, i32 } %8, i32 %offset.i.i, 3
  %10 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract11) #37
  %11 = sext i32 %offset.i.i to i64
  %12 = getelementptr ptr, ptr %.fca.0.extract11, i64 %11
  %13 = load ptr, ptr %12, align 8
  %result.i = call ptr %13(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract12) #41
  %14 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract11) #37
  %15 = getelementptr i8, ptr %12, i64 8
  %16 = load ptr, ptr %15, align 8
  %result.i1 = call ptr %16(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract12) #41
  %17 = alloca [2 x ptr], align 8
  store ptr %result.i, ptr %17, align 8
  %18 = getelementptr inbounds i8, ptr %17, i64 8
  store ptr %result.i1, ptr %18, align 8
  %19 = call ptr @llvm.invariant.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %17) #37
  %20 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract11) #37
  %21 = getelementptr i8, ptr %12, i64 168
  %22 = load ptr, ptr %21, align 8
  %23 = alloca { ptr, ptr }, align 8
  store ptr %.fca.0.extract7, ptr %23, align 8
  %24 = getelementptr inbounds i8, ptr %23, i64 8
  store ptr %.fca.0.extract, ptr %24, align 8
  %result.i2 = call ptr %22({ ptr, ptr, ptr, i32 } %9, ptr nocapture nofree noundef nonnull readonly align 8 %23) #45
  call void %result.i2({ ptr, ptr, ptr, i32 } %9, { ptr, ptr, ptr, i32 } %9, ptr nonnull align 8 dereferenceable(16) %17, { ptr, i160 } %3, { ptr, i160 } %4) #42
  ret void
}

; Function Attrs: nounwind
define { ptr, i160 } @CuckooMap_remove_keyK({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, i160 } %3) #11 {
  %5 = alloca [1 x ptr], align 8
  %6 = alloca { ptr }, align 8
  %7 = alloca [4 x ptr], align 8
  %8 = alloca { ptr, ptr, ptr, ptr }, align 8
  %.fca.0.extract31 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract32 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract31, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract31, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract31, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !801
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !801
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !801
  %product.i.i.i = mul i64 %hash_coef.i.i, 3547150501766965522
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !801
  %.fca.0.extract24 = extractvalue { ptr, i160 } %3, 0
  %9 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract31, 0
  %10 = insertvalue { ptr, ptr, ptr, i32 } %9, ptr %.fca.1.extract32, 1
  %11 = insertvalue { ptr, ptr, ptr, i32 } %10, ptr %.fca.2.extract, 2
  %12 = insertvalue { ptr, ptr, ptr, i32 } %11, i32 %offset.i.i, 3
  %13 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract31) #37
  %14 = sext i32 %offset.i.i to i64
  %15 = getelementptr ptr, ptr %.fca.0.extract31, i64 %14
  %16 = load ptr, ptr %15, align 8
  %result.i = call ptr %16(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract32) #41
  %17 = alloca [1 x ptr], align 8
  store ptr %result.i, ptr %17, align 8
  %18 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %17) #37
  %19 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract31) #37
  %20 = getelementptr i8, ptr %15, i64 88
  %21 = load ptr, ptr %20, align 8
  %22 = alloca { ptr }, align 8
  store ptr %.fca.0.extract24, ptr %22, align 8
  %result.i1 = call ptr %21({ ptr, ptr, ptr, i32 } %12, ptr nocapture nofree noundef nonnull readonly align 8 %22) #45
  %23 = call i32 %result.i1({ ptr, ptr, ptr, i32 } %12, { ptr, ptr, ptr, i32 } %12, ptr nonnull align 8 dereferenceable(8) %17, { ptr, i160 } %3) #42
  %24 = alloca [1 x ptr], align 8
  store ptr @_parameterization_i32, ptr %24, align 8
  %25 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %24)
  %26 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract31)
  %27 = getelementptr i8, ptr %15, i64 104
  %28 = load ptr, ptr %27, align 8
  %29 = alloca { ptr }, align 8
  store ptr @i32_typ, ptr %29, align 8
  %result.i2 = call ptr %28({ ptr, ptr, ptr, i32 } %12, ptr nocapture nofree noundef nonnull readonly align 8 %29) #45
  %30 = call i32 %result.i2({ ptr, ptr, ptr, i32 } %12, { ptr, ptr, ptr, i32 } %12, ptr nonnull align 8 dereferenceable(8) %24, i32 %23) #42
  %31 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract31)
  %32 = getelementptr i8, ptr %15, i64 24
  %33 = load ptr, ptr %32, align 8
  %34 = load ptr, ptr %33, align 8
  %35 = call { ptr } %34(ptr nonnull %.fca.1.extract32) #40
  %36 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract31)
  %37 = load ptr, ptr %15, align 8
  %result.i3 = call ptr %37(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract32) #41
  %result.i4 = call noalias nonnull align 8 dereferenceable(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr @buffer_typ, ptr %result.i4, align 8
  %38 = alloca [4 x ptr], align 8
  store ptr %result.i3, ptr %38, align 8
  %39 = getelementptr inbounds i8, ptr %38, i64 8
  store ptr @_parameterization_i32, ptr %39, align 8
  %40 = getelementptr inbounds i8, ptr %38, i64 16
  store ptr @_parameterization_i32, ptr %40, align 8
  %41 = getelementptr inbounds i8, ptr %38, i64 24
  store ptr %result.i4, ptr %41, align 8
  %42 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(32) %38)
  %43 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract31)
  %44 = getelementptr i8, ptr %15, i64 160
  %45 = load ptr, ptr %44, align 8
  %46 = alloca { ptr, ptr, ptr, ptr }, align 8
  store ptr %.fca.0.extract24, ptr %46, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 8
  store ptr @i32_typ, ptr %47, align 8
  %48 = getelementptr inbounds i8, ptr %46, i64 16
  store ptr @i32_typ, ptr %48, align 8
  %49 = getelementptr inbounds i8, ptr %46, i64 24
  store ptr @buffer_typ, ptr %49, align 8
  %result.i5 = call ptr %45({ ptr, ptr, ptr, i32 } %12, ptr nocapture nofree noundef nonnull readonly align 8 %46) #45
  %50 = call { ptr, i160 } %result.i5({ ptr, ptr, ptr, i32 } %12, { ptr, ptr, ptr, i32 } %12, ptr nonnull align 8 dereferenceable(32) %38, { ptr, i160 } %3, i32 %23, i32 %30, { ptr } %35) #42
  %.fca.0.extract = extractvalue { ptr, i160 } %50, 0
  %51 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract31)
  %52 = icmp ne ptr %.fca.0.extract, @nil_typ
  %53 = icmp ne ptr %.fca.0.extract, null
  %.not63 = and i1 %52, %53
  br i1 %.not63, label %.thread39, label %54

54:                                               ; preds = %4
  store ptr @_parameterization_i32, ptr %5, align 8
  %55 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %5)
  %56 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract31)
  %57 = getelementptr i8, ptr %15, i64 112
  %58 = load ptr, ptr %57, align 8
  store ptr @i32_typ, ptr %6, align 8
  %result.i6 = call ptr %58({ ptr, ptr, ptr, i32 } %12, ptr nocapture nofree noundef nonnull readonly %6) #45
  %59 = call i32 %result.i6({ ptr, ptr, ptr, i32 } %12, { ptr, ptr, ptr, i32 } %12, ptr nonnull align 8 dereferenceable(8) %5, i32 %23) #42
  %60 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract31)
  %61 = getelementptr i8, ptr %15, i64 32
  %62 = load ptr, ptr %61, align 8
  %63 = load ptr, ptr %62, align 8
  %64 = call { ptr } %63(ptr nonnull %.fca.1.extract32) #40
  %65 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract31)
  %66 = load ptr, ptr %15, align 8
  %result.i7 = call ptr %66(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract32) #41
  %result.i8 = call noalias nonnull align 8 dereferenceable(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr @buffer_typ, ptr %result.i8, align 8
  store ptr %result.i7, ptr %7, align 8
  %67 = getelementptr inbounds i8, ptr %7, i64 8
  store ptr @_parameterization_i32, ptr %67, align 8
  %68 = getelementptr inbounds i8, ptr %7, i64 16
  store ptr @_parameterization_i32, ptr %68, align 8
  %69 = getelementptr inbounds i8, ptr %7, i64 24
  store ptr %result.i8, ptr %69, align 8
  %70 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(32) %7)
  %71 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract31)
  %72 = load ptr, ptr %44, align 8
  store ptr %.fca.0.extract24, ptr %8, align 8
  %73 = getelementptr inbounds i8, ptr %8, i64 8
  store ptr @i32_typ, ptr %73, align 8
  %74 = getelementptr inbounds i8, ptr %8, i64 16
  store ptr @i32_typ, ptr %74, align 8
  %75 = getelementptr inbounds i8, ptr %8, i64 24
  store ptr @buffer_typ, ptr %75, align 8
  %result.i9 = call ptr %72({ ptr, ptr, ptr, i32 } %12, ptr nocapture nofree noundef nonnull readonly %8) #45
  %76 = call { ptr, i160 } %result.i9({ ptr, ptr, ptr, i32 } %12, { ptr, ptr, ptr, i32 } %12, ptr nonnull align 8 dereferenceable(32) %7, { ptr, i160 } %3, i32 %23, i32 %59, { ptr } %64) #42
  %.fca.0.extract51 = extractvalue { ptr, i160 } %76, 0
  %77 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract31)
  %78 = icmp ne ptr %.fca.0.extract51, @nil_typ
  %79 = icmp ne ptr %.fca.0.extract51, null
  %.not65.not.not = and i1 %78, %79
  %cond.fr27 = freeze i1 %.not65.not.not
  %spec.select = select i1 %cond.fr27, ptr %.fca.0.extract51, ptr @nil_typ
  br label %.thread39

.thread39:                                        ; preds = %4, %54
  %80 = phi ptr [ %spec.select, %54 ], [ %.fca.0.extract, %4 ]
  %.pn = phi { ptr, i160 } [ %76, %54 ], [ %50, %4 ]
  %81 = extractvalue { ptr, i160 } %.pn, 1
  %.reload55.fca.0.insert = insertvalue { ptr, i160 } poison, ptr %80, 0
  %.reload55.fca.1.insert = insertvalue { ptr, i160 } %.reload55.fca.0.insert, i160 %81, 1
  ret { ptr, i160 } %.reload55.fca.1.insert
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @CuckooMap_clear_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #5 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !804
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !804
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !804
  %product.i.i.i = mul i64 %hash_coef.i.i, 3547150501766965522
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !804
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract, i64 %5
  %7 = getelementptr i8, ptr %6, i64 40
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr i8, ptr %8, i64 8
  %10 = load ptr, ptr %9, align 8
  call void %10(ptr %.fca.1.extract, i32 8) #39
  %result.i = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %11 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %12 = getelementptr i8, ptr %6, i64 24
  %13 = load ptr, ptr %12, align 8
  %14 = getelementptr i8, ptr %13, i64 8
  %15 = load ptr, ptr %14, align 8
  %16 = insertvalue { ptr } undef, ptr %result.i, 0
  call void %15(ptr %.fca.1.extract, { ptr } %16) #39
  %result.i1 = call noalias dereferenceable_or_null(256) ptr @bump_malloc_inner(i64 noundef 256, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %18 = getelementptr i8, ptr %6, i64 32
  %19 = load ptr, ptr %18, align 8
  %20 = getelementptr i8, ptr %19, i64 8
  %21 = load ptr, ptr %20, align 8
  %22 = insertvalue { ptr } undef, ptr %result.i1, 0
  call void %21(ptr %.fca.1.extract, { ptr } %22) #39
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %24 = getelementptr i8, ptr %6, i64 48
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr i8, ptr %25, i64 8
  %27 = load ptr, ptr %26, align 8
  call void %27(ptr %.fca.1.extract, i32 0) #39
  ret void
}

; Function Attrs: nounwind
define { ptr, i160 } @Map__index_keyK({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, i160 } %3) #11 {
  %.fca.0.extract11 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract12 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract11, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract11, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract11, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !807
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !807
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !807
  %product.i.i.i = mul i64 %hash_coef.i.i, -5249855671126779970
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !807
  %.fca.0.extract6 = extractvalue { ptr, i160 } %3, 0
  %5 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract11, 0
  %6 = insertvalue { ptr, ptr, ptr, i32 } %5, ptr %.fca.1.extract12, 1
  %7 = insertvalue { ptr, ptr, ptr, i32 } %6, ptr %.fca.2.extract, 2
  %8 = insertvalue { ptr, ptr, ptr, i32 } %7, i32 %offset.i.i, 3
  %9 = call ptr @llvm.invariant.start.p0(i64 noundef 480, ptr nocapture nofree noundef align 8 %.fca.0.extract11) #37
  %10 = sext i32 %offset.i.i to i64
  %11 = getelementptr ptr, ptr %.fca.0.extract11, i64 %10
  %12 = load ptr, ptr %11, align 8
  %result.i = call ptr %12(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract12) #41
  %13 = alloca [1 x ptr], align 8
  store ptr %result.i, ptr %13, align 8
  %14 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %13) #37
  %15 = call ptr @llvm.invariant.start.p0(i64 noundef 480, ptr nocapture nofree noundef align 8 %.fca.0.extract11) #37
  %16 = getelementptr i8, ptr %11, i64 32
  %17 = load ptr, ptr %16, align 8
  %18 = alloca { ptr }, align 8
  store ptr %.fca.0.extract6, ptr %18, align 8
  %result.i1 = call ptr %17({ ptr, ptr, ptr, i32 } %8, ptr nocapture nofree noundef nonnull readonly align 8 %18) #45
  %19 = call { ptr, i160 } %result.i1({ ptr, ptr, ptr, i32 } %8, { ptr, ptr, ptr, i32 } %8, ptr nonnull align 8 dereferenceable(8) %13, { ptr, i160 } %3) #42
  %.fca.0.extract = extractvalue { ptr, i160 } %19, 0
  %20 = icmp eq ptr %.fca.0.extract, @nil_typ
  %21 = icmp eq ptr %.fca.0.extract, null
  %22 = or i1 %20, %21
  br i1 %22, label %23, label %._crit_edge

23:                                               ; preds = %4
  %result.i3 = call noalias align 8 dereferenceable_or_null(72) ptr @bump_malloc_inner(i64 noundef 72, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %result.i.i = call noalias align 8 dereferenceable_or_null(7) ptr @bump_malloc_inner(i64 noundef 7, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <6 x i8> <i8 60, i8 78, i8 111, i8 110, i8 101, i8 62>, ptr %result.i.i, align 8
  %result.i2.i = call noalias align 8 dereferenceable_or_null(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i, ptr %result.i2.i, align 8
  %24 = getelementptr i8, ptr %result.i2.i, i64 8
  store i32 6, ptr %24, align 8
  %25 = getelementptr i8, ptr %result.i2.i, i64 12
  store i32 7, ptr %25, align 4
  %26 = getelementptr i8, ptr %result.i3, i64 40
  store ptr @String, ptr %26, align 8
  %27 = getelementptr i8, ptr %result.i3, i64 48
  store ptr %result.i2.i, ptr %27, align 8
  %28 = getelementptr i8, ptr %result.i3, i64 64
  store i32 10, ptr %28, align 8
  %29 = getelementptr i8, ptr %result.i3, i64 8
  %30 = getelementptr i8, ptr %result.i3, i64 16
  %31 = getelementptr i8, ptr %result.i3, i64 32
  %result.i5 = call noalias align 64 dereferenceable_or_null(55) ptr @bump_malloc_inner(i64 noundef 55, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %32 = load <54 x i8>, ptr @otwol_CUsersPaulKOneDriveDocumentsPLPyPLlibmapmini, align 64
  store <54 x i8> %32, ptr %result.i5, align 64
  %result.i7 = call noalias align 8 dereferenceable_or_null(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i5, ptr %result.i7, align 8
  %33 = getelementptr i8, ptr %result.i7, i64 8
  store i32 54, ptr %33, align 8
  %34 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String) #37
  %35 = getelementptr i8, ptr %result.i7, i64 12
  store i32 55, ptr %35, align 4
  %36 = call ptr @llvm.invariant.start.p0(i64 noundef 208, ptr nocapture nofree noundef nonnull align 16 dereferenceable(288) @KeyNotFound)
  store i32 16, ptr %result.i3, align 8
  %37 = call ptr @llvm.invariant.start.p0(i64 noundef 104, ptr nocapture nofree noundef nonnull align 16 dereferenceable(288) @KeyNotFound) #37
  store ptr @String, ptr %29, align 8
  store ptr %result.i7, ptr %30, align 8
  store i32 10, ptr %31, align 8
  %38 = ptrtoint ptr %result.i3 to i64
  %.sroa.444.8.insert.ext = zext i64 %38 to i160
  %.sroa.444.8.insert.insert = or disjoint i160 %.sroa.444.8.insert.ext, 3402823669209384634633746074317682114560
  %39 = insertvalue { ptr, i160 } { ptr @KeyNotFound, i160 undef }, i160 %.sroa.444.8.insert.insert, 1
  %current_coroutine.i = load ptr, ptr @current_coroutine, align 8
  %40 = getelementptr i8, ptr %current_coroutine.i, i64 48
  store { ptr, i160 } %39, ptr %40, align 8
  %into_callee_buf.i = getelementptr i8, ptr %current_coroutine.i, i64 8
  call preserve_nonecc void @context_switch(ptr nocapture nofree noundef nonnull writeonly align 8 dereferenceable(24) %into_callee_buf.i, ptr noundef nonnull align 8 dereferenceable(24) @into_caller_buf) #54
  br label %._crit_edge

._crit_edge:                                      ; preds = %23, %4
  %.sroa.0.0 = phi ptr [ @nil_typ, %23 ], [ %.fca.0.extract, %4 ]
  %41 = call ptr @llvm.invariant.start.p0(i64 noundef 480, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract11)
  %.fca.1.extract = extractvalue { ptr, i160 } %19, 1
  %.reload13.fca.0.insert = insertvalue { ptr, i160 } poison, ptr %.sroa.0.0, 0
  %.reload13.fca.1.insert = insertvalue { ptr, i160 } %.reload13.fca.0.insert, i160 %.fca.1.extract, 1
  ret { ptr, i160 } %.reload13.fca.1.insert
}

; Function Attrs: mustprogress nounwind willreturn
define { ptr, ptr, ptr, i32 } @CuckooMap_iterator_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #6 {
  %.fca.0.extract13 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract13, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract13, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract13, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !810
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !810
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !810
  %product.i.i.i = mul i64 %hash_coef.i.i, 3547150501766965522
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !810
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract13) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract13, i64 %5
  %7 = getelementptr i8, ptr %6, i64 24
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = call { ptr } %9(ptr nonnull %.fca.1.extract) #40
  %11 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract13) #37
  %12 = getelementptr i8, ptr %6, i64 32
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr %13, align 8
  %15 = call { ptr } %14(ptr nonnull %.fca.1.extract) #40
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract13) #37
  %17 = getelementptr i8, ptr %6, i64 40
  %18 = load ptr, ptr %17, align 8
  %19 = load ptr, ptr %18, align 8
  %20 = call i32 %19(ptr nonnull %.fca.1.extract) #40
  %21 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract13) #37
  %22 = load ptr, ptr %6, align 8
  %result.i = call ptr %22(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract) #41
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract13) #37
  %24 = getelementptr i8, ptr %6, i64 8
  %25 = load ptr, ptr %24, align 8
  %result.i1 = call ptr %25(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract) #41
  %26 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract13) #37
  %27 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract13) #37
  %result.i3 = call noalias nonnull align 8 dereferenceable(32) ptr @bump_malloc_inner(i64 noundef 32, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %28 = getelementptr inbounds i8, ptr %result.i3, i64 16
  store ptr %result.i1, ptr %28, align 8
  %29 = getelementptr inbounds i8, ptr %result.i3, i64 8
  store ptr %result.i, ptr %29, align 8
  %30 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(32) %result.i3) #37
  store ptr @Pair, ptr %result.i3, align 8
  %result.i5 = call noalias nonnull align 8 dereferenceable(56) ptr @bump_malloc_inner(i64 noundef 56, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i, ptr %result.i5, align 8
  %31 = getelementptr inbounds i8, ptr %result.i5, i64 8
  store ptr %result.i1, ptr %31, align 8
  %32 = getelementptr inbounds i8, ptr %result.i5, i64 16
  store ptr %result.i3, ptr %32, align 8
  %33 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(56) %result.i5) #37
  %34 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract13) #37
  %35 = load ptr, ptr %7, align 8
  %36 = load ptr, ptr %35, align 8
  %37 = call { ptr } %36(ptr %.fca.1.extract) #40
  %38 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract13) #50
  %39 = load ptr, ptr %12, align 8
  %40 = load ptr, ptr %39, align 8
  %41 = call { ptr } %40(ptr %.fca.1.extract) #40
  %42 = call ptr @llvm.invariant.start.p0(i64 noundef 2176, ptr nocapture nofree noundef align 8 %.fca.0.extract13) #50
  %43 = load ptr, ptr %17, align 8
  %44 = load ptr, ptr %43, align 8
  %45 = call i32 %44(ptr %.fca.1.extract) #40
  %46 = insertvalue { ptr, ptr, ptr, i32 } { ptr @CuckooMapIterator, ptr undef, ptr undef, i32 undef }, ptr %result.i5, 1
  %47 = insertvalue { ptr, ptr, ptr, i32 } %46, ptr undef, 2
  %48 = getelementptr inbounds i8, ptr %result.i5, i64 24
  %.fca.0.extract.i = extractvalue { ptr } %37, 0
  store ptr %.fca.0.extract.i, ptr %48, align 8
  %49 = getelementptr inbounds i8, ptr %result.i5, i64 32
  %.fca.0.extract.i31 = extractvalue { ptr } %41, 0
  store ptr %.fca.0.extract.i31, ptr %49, align 8
  %50 = getelementptr inbounds i8, ptr %result.i5, i64 40
  store i32 %45, ptr %50, align 8
  %51 = call ptr @llvm.invariant.start.p0(i64 noundef 136, ptr nocapture nofree noundef nonnull align 16 dereferenceable(216) @CuckooMapIterator) #37
  %52 = insertvalue { ptr, ptr, ptr, i32 } %47, i32 24, 3
  ret { ptr, ptr, ptr, i32 } %52
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_CuckooMapIterator(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 56, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMapIterator_B_init_map_table1BufferEntryK._V_or_Nil_map_table2BufferEntryK._V_or_Nil_table_leni32({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 168
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @CuckooMapIterator_field_CuckooMapIterator_0(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @CuckooMapIterator_field_CuckooMapIterator_1(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @CuckooMapIterator_field_CuckooMapIterator_2(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 16
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMapIterator_B_next_from_table_tableBufferEntryK._V_or_Nil({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 176
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @CuckooMapIterator_B_next_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 184
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @CuckooMapIterator_init_map_table1BufferEntryK._V_or_Nil_map_table2BufferEntryK._V_or_Nil_table_leni32({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr } %3, { ptr } %4, i32 %5) #5 {
  %.fca.0.extract5 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !813
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !813
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !813
  %product.i.i.i = mul i64 %hash_coef.i.i, -1975748647346050920
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !813
  %7 = call ptr @llvm.invariant.start.p0(i64 noundef 136, ptr nocapture nofree noundef align 8 %.fca.0.extract5) #37
  %8 = sext i32 %offset.i.i to i64
  %9 = getelementptr ptr, ptr %.fca.0.extract5, i64 %8
  %10 = getelementptr i8, ptr %9, i64 24
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr i8, ptr %11, i64 8
  %13 = load ptr, ptr %12, align 8
  call void %13(ptr %.fca.1.extract, { ptr } %3) #39
  %14 = call ptr @llvm.invariant.start.p0(i64 noundef 136, ptr nocapture nofree noundef align 8 %.fca.0.extract5) #37
  %15 = getelementptr i8, ptr %9, i64 32
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr i8, ptr %16, i64 8
  %18 = load ptr, ptr %17, align 8
  call void %18(ptr %.fca.1.extract, { ptr } %4) #39
  %19 = call ptr @llvm.invariant.start.p0(i64 noundef 136, ptr nocapture nofree noundef align 8 %.fca.0.extract5) #37
  %20 = getelementptr i8, ptr %9, i64 40
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr i8, ptr %21, i64 8
  %23 = load ptr, ptr %22, align 8
  call void %23(ptr %.fca.1.extract, i32 %5) #39
  %24 = call ptr @llvm.invariant.start.p0(i64 noundef 136, ptr nocapture nofree noundef align 8 %.fca.0.extract5) #37
  %25 = getelementptr i8, ptr %9, i64 48
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr i8, ptr %26, i64 8
  %28 = load ptr, ptr %27, align 8
  call void %28(ptr %.fca.1.extract, i32 0) #39
  %29 = call ptr @llvm.invariant.start.p0(i64 noundef 136, ptr nocapture nofree noundef align 8 %.fca.0.extract5) #37
  %30 = getelementptr i8, ptr %9, i64 56
  %31 = load ptr, ptr %30, align 8
  %32 = getelementptr i8, ptr %31, i64 8
  %33 = load ptr, ptr %32, align 8
  call void %33(ptr %.fca.1.extract, i1 false) #39
  ret void
}

; Function Attrs: nounwind
define { ptr, i160 } @CuckooMapIterator_next_from_table_tableBufferEntryK._V_or_Nil({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr } %3) #11 {
  %5 = alloca [0 x ptr], align 8
  %.fca.0.extract5 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract6 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !816
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !816
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !816
  %product.i.i.i = mul i64 %hash_coef.i.i, -1975748647346050920
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !816
  %.fca.0.extract = extractvalue { ptr } %3, 0
  %6 = call ptr @llvm.invariant.start.p0(i64 noundef 136, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract5) #44
  %7 = sext i32 %offset.i.i to i64
  %8 = getelementptr ptr, ptr %.fca.0.extract5, i64 %7
  %9 = getelementptr i8, ptr %8, i64 48
  %10 = getelementptr i8, ptr %8, i64 40
  br label %11

11:                                               ; preds = %20, %4
  %12 = load ptr, ptr %9, align 8
  %13 = load ptr, ptr %12, align 8
  %14 = call i32 %13(ptr %.fca.1.extract6) #40
  %15 = call ptr @llvm.invariant.start.p0(i64 noundef 136, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract5) #44
  %16 = load ptr, ptr %10, align 8
  %17 = load ptr, ptr %16, align 8
  %18 = call i32 %17(ptr %.fca.1.extract6) #40
  %19 = icmp slt i32 %14, %18
  br i1 %19, label %20, label %.thread41

20:                                               ; preds = %11
  %21 = call ptr @llvm.invariant.start.p0(i64 noundef 136, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract5)
  %22 = call i32 %13(ptr %.fca.1.extract6) #40
  %23 = sext i32 %22 to i64
  %24 = shl nsw i64 %23, 5
  %25 = getelementptr i8, ptr %.fca.0.extract, i64 %24
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr i8, ptr %25, i64 8
  %28 = load i160, ptr %27, align 4
  %29 = call ptr @llvm.invariant.start.p0(i64 noundef 136, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract5)
  %30 = call i32 %13(ptr %.fca.1.extract6) #40
  %31 = add i32 %30, 1
  %32 = call ptr @llvm.invariant.start.p0(i64 noundef 136, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract5)
  %33 = getelementptr i8, ptr %12, i64 8
  %34 = load ptr, ptr %33, align 8
  call void %34(ptr %.fca.1.extract6, i32 %31) #39
  %35 = icmp eq ptr %26, @nil_typ
  %36 = icmp eq ptr %26, null
  %.not30.not = or i1 %35, %36
  br i1 %.not30.not, label %11, label %37

37:                                               ; preds = %20
  %.sroa.331.8.extract.trunc = trunc i160 %28 to i64
  %38 = inttoptr i64 %.sroa.331.8.extract.trunc to ptr
  %.sroa.532.8.extract.shift = lshr i160 %28, 64
  %.sroa.532.8.extract.trunc = trunc i160 %.sroa.532.8.extract.shift to i64
  %39 = inttoptr i64 %.sroa.532.8.extract.trunc to ptr
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %26, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %26, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %26, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !819
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !819
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !819
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 4015701072841558310
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i13 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !819
  %40 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %26, 0
  %41 = insertvalue { ptr, ptr, ptr, i32 } %40, ptr %38, 1
  %42 = insertvalue { ptr, ptr, ptr, i32 } %41, ptr %39, 2
  %43 = insertvalue { ptr, ptr, ptr, i32 } %42, i32 %offset.i.i13, 3
  %44 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %5)
  %45 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef align 8 %26)
  %46 = sext i32 %offset.i.i13 to i64
  %47 = getelementptr ptr, ptr %26, i64 %46
  %48 = getelementptr i8, ptr %47, i64 72
  %49 = load ptr, ptr %48, align 8
  %result.i = call ptr %49({ ptr, ptr, ptr, i32 } %43, ptr nocapture nofree noundef nonnull readonly align 8 %5) #45
  %50 = call { ptr, ptr, ptr, i32 } %result.i({ ptr, ptr, ptr, i32 } %43, { ptr, ptr, ptr, i32 } %43, ptr nonnull align 8 %5) #42
  %.fca.0.extract8 = extractvalue { ptr, ptr, ptr, i32 } %50, 0
  %.fca.1.extract9 = extractvalue { ptr, ptr, ptr, i32 } %50, 1
  %.fca.2.extract10 = extractvalue { ptr, ptr, ptr, i32 } %50, 2
  %hash_coef_ptr.i.i16 = getelementptr i8, ptr %.fca.0.extract8, i64 8
  %tbl_size_ptr.i.i17 = getelementptr i8, ptr %.fca.0.extract8, i64 16
  %offset_tbl_ptr.i.i18 = getelementptr i8, ptr %.fca.0.extract8, i64 40
  %hash_coef.i.i19 = load i64, ptr %hash_coef_ptr.i.i16, align 4, !noalias !822
  %tbl_size.i.i20 = load i64, ptr %tbl_size_ptr.i.i17, align 4, !noalias !822
  %offset_tbl.i.i21 = load ptr, ptr %offset_tbl_ptr.i.i18, align 8, !noalias !822
  %product.i.i.i22 = mul i64 %hash_coef.i.i19, 9197944775169318296
  %shifted.i.i.i23 = lshr i64 %product.i.i.i22, 32
  %xored.i.i.i24 = xor i64 %shifted.i.i.i23, %product.i.i.i22
  %hash.i.i.i25 = and i64 %xored.i.i.i24, %tbl_size.i.i20
  %offset_ptr.i.i26 = getelementptr i32, ptr %offset_tbl.i.i21, i64 %hash.i.i.i25
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i26, align 4, !noalias !822
  %51 = ptrtoint ptr %.fca.1.extract9 to i64
  %52 = ptrtoint ptr %.fca.2.extract10 to i64
  %.sroa.6.8.insert.ext = zext i32 %offset.i.i27 to i160
  %.sroa.6.8.insert.shift = shl nuw i160 %.sroa.6.8.insert.ext, 128
  %.sroa.5.8.insert.ext = zext i64 %52 to i160
  %.sroa.5.8.insert.shift = shl nuw nsw i160 %.sroa.5.8.insert.ext, 64
  %.sroa.5.8.insert.insert = or disjoint i160 %.sroa.6.8.insert.shift, %.sroa.5.8.insert.shift
  %.sroa.3.8.insert.ext = zext i64 %51 to i160
  %.sroa.3.8.insert.insert = or disjoint i160 %.sroa.5.8.insert.insert, %.sroa.3.8.insert.ext
  br label %.thread41

.thread41:                                        ; preds = %11, %37
  %.reg2mem26.sroa.3.0 = phi i160 [ %.sroa.3.8.insert.insert, %37 ], [ undef, %11 ]
  %.reg2mem26.sroa.0.0 = phi ptr [ %.fca.0.extract8, %37 ], [ @nil_typ, %11 ]
  %.reload27.fca.0.insert = insertvalue { ptr, i160 } poison, ptr %.reg2mem26.sroa.0.0, 0
  %.reload27.fca.1.insert = insertvalue { ptr, i160 } %.reload27.fca.0.insert, i160 %.reg2mem26.sroa.3.0, 1
  ret { ptr, i160 } %.reload27.fca.1.insert
}

; Function Attrs: nounwind
define { ptr, i160 } @CuckooMapIterator_next_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #11 {
  %4 = alloca [1 x ptr], align 8
  %5 = alloca { ptr }, align 8
  %6 = alloca [1 x ptr], align 8
  %7 = alloca { ptr }, align 8
  %.fca.0.extract5 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract6 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract5, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !825
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !825
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !825
  %product.i.i.i = mul i64 %hash_coef.i.i, -1975748647346050920
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !825
  %8 = call ptr @llvm.invariant.start.p0(i64 noundef 136, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract5) #37
  %9 = sext i32 %offset.i.i to i64
  %10 = getelementptr ptr, ptr %.fca.0.extract5, i64 %9
  %11 = getelementptr i8, ptr %10, i64 56
  %12 = load ptr, ptr %11, align 8
  %13 = load ptr, ptr %12, align 8
  %14 = call i1 %13(ptr %.fca.1.extract6) #40
  br i1 %14, label %._crit_edge, label %15

._crit_edge:                                      ; preds = %3
  %.pre = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract5, 0
  %.pre32 = insertvalue { ptr, ptr, ptr, i32 } %.pre, ptr %.fca.1.extract6, 1
  %.pre34 = insertvalue { ptr, ptr, ptr, i32 } %.pre32, ptr %.fca.2.extract, 2
  %.pre36 = insertvalue { ptr, ptr, ptr, i32 } %.pre34, i32 %offset.i.i, 3
  br label %43

15:                                               ; preds = %3
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 136, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract5) #50
  %17 = getelementptr i8, ptr %10, i64 24
  %18 = load ptr, ptr %17, align 8
  %19 = load ptr, ptr %18, align 8
  %20 = call { ptr } %19(ptr %.fca.1.extract6) #40
  %21 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract5, 0
  %22 = insertvalue { ptr, ptr, ptr, i32 } %21, ptr %.fca.1.extract6, 1
  %23 = insertvalue { ptr, ptr, ptr, i32 } %22, ptr %.fca.2.extract, 2
  %24 = insertvalue { ptr, ptr, ptr, i32 } %23, i32 %offset.i.i, 3
  %result.i = call noalias nonnull align 8 dereferenceable(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr @buffer_typ, ptr %result.i, align 8
  store ptr %result.i, ptr %4, align 8
  %25 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %4) #50
  %26 = call ptr @llvm.invariant.start.p0(i64 noundef 136, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract5) #50
  %27 = getelementptr i8, ptr %10, i64 72
  %28 = load ptr, ptr %27, align 8
  store ptr @buffer_typ, ptr %5, align 8
  %result.i1 = call ptr %28({ ptr, ptr, ptr, i32 } %24, ptr nocapture nofree noundef nonnull readonly align 8 %5) #45
  %29 = call { ptr, i160 } %result.i1({ ptr, ptr, ptr, i32 } %24, { ptr, ptr, ptr, i32 } %24, ptr nonnull align 8 dereferenceable(8) %4, { ptr } %20) #42
  %.fca.0.extract15 = extractvalue { ptr, i160 } %29, 0
  %30 = icmp ne ptr %.fca.0.extract15, @nil_typ
  %31 = icmp ne ptr %.fca.0.extract15, null
  %.not22.not.not = and i1 %30, %31
  br i1 %.not22.not.not, label %42, label %32

32:                                               ; preds = %15
  %33 = call ptr @llvm.invariant.start.p0(i64 noundef 136, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract5)
  %34 = getelementptr i8, ptr %10, i64 48
  %35 = load ptr, ptr %34, align 8
  %36 = getelementptr i8, ptr %35, i64 8
  %37 = load ptr, ptr %36, align 8
  call void %37(ptr %.fca.1.extract6, i32 0) #39
  %38 = call ptr @llvm.invariant.start.p0(i64 noundef 136, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract5)
  %39 = load ptr, ptr %11, align 8
  %40 = getelementptr i8, ptr %39, i64 8
  %41 = load ptr, ptr %40, align 8
  call void %41(ptr %.fca.1.extract6, i1 true) #39
  br label %43

42:                                               ; preds = %15
  %.fca.1.extract16 = extractvalue { ptr, i160 } %29, 1
  %hash_coef_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract15, i64 8
  %tbl_size_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract15, i64 16
  %offset_tbl_ptr.i.i5 = getelementptr i8, ptr %.fca.0.extract15, i64 40
  %hash_coef.i.i6 = load i64, ptr %hash_coef_ptr.i.i3, align 4, !noalias !828
  %tbl_size.i.i7 = load i64, ptr %tbl_size_ptr.i.i4, align 4, !noalias !828
  %offset_tbl.i.i8 = load ptr, ptr %offset_tbl_ptr.i.i5, align 8, !noalias !828
  %product.i.i.i9 = mul i64 %hash_coef.i.i6, 9197944775169318296
  %shifted.i.i.i10 = lshr i64 %product.i.i.i9, 32
  %xored.i.i.i11 = xor i64 %shifted.i.i.i10, %product.i.i.i9
  %hash.i.i.i12 = and i64 %xored.i.i.i11, %tbl_size.i.i7
  %offset_ptr.i.i13 = getelementptr i32, ptr %offset_tbl.i.i8, i64 %hash.i.i.i12
  %offset.i.i14 = load i32, ptr %offset_ptr.i.i13, align 4, !noalias !828
  %.sroa.5.8.insert.ext = zext i32 %offset.i.i14 to i160
  %.sroa.5.8.insert.shift = shl nuw i160 %.sroa.5.8.insert.ext, 128
  %.sroa.3.8.insert.ext = and i160 %.fca.1.extract16, 340282366920938463463374607431768211455
  %.sroa.3.8.insert.insert = or disjoint i160 %.sroa.5.8.insert.shift, %.sroa.3.8.insert.ext
  br label %55

43:                                               ; preds = %._crit_edge, %32
  %.pre-phi37 = phi { ptr, ptr, ptr, i32 } [ %.pre36, %._crit_edge ], [ %24, %32 ]
  %44 = call ptr @llvm.invariant.start.p0(i64 noundef 136, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract5) #50
  %45 = getelementptr i8, ptr %10, i64 32
  %46 = load ptr, ptr %45, align 8
  %47 = load ptr, ptr %46, align 8
  %48 = call { ptr } %47(ptr %.fca.1.extract6) #40
  %result.i16 = call noalias nonnull align 8 dereferenceable(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %49 = getelementptr inbounds i8, ptr %result.i16, i64 8
  store ptr null, ptr %49, align 8
  store ptr @buffer_typ, ptr %result.i16, align 8
  store ptr %result.i16, ptr %6, align 8
  %50 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %6) #50
  %51 = call ptr @llvm.invariant.start.p0(i64 noundef 136, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract5) #50
  %52 = getelementptr i8, ptr %10, i64 72
  %53 = load ptr, ptr %52, align 8
  store ptr @buffer_typ, ptr %7, align 8
  %result.i17 = call ptr %53({ ptr, ptr, ptr, i32 } %.pre-phi37, ptr nocapture nofree noundef nonnull readonly align 8 %7) #45
  %54 = call { ptr, i160 } %result.i17({ ptr, ptr, ptr, i32 } %.pre-phi37, { ptr, ptr, ptr, i32 } %.pre-phi37, ptr nonnull align 8 dereferenceable(8) %6, { ptr } %48) #42
  %.fca.0.extract7 = extractvalue { ptr, i160 } %54, 0
  %.fca.1.extract8 = extractvalue { ptr, i160 } %54, 1
  br label %55

55:                                               ; preds = %42, %43
  %.reg2mem37.sroa.0.0 = phi ptr [ %.fca.0.extract7, %43 ], [ %.fca.0.extract15, %42 ]
  %.reg2mem37.sroa.3.0 = phi i160 [ %.fca.1.extract8, %43 ], [ %.sroa.3.8.insert.insert, %42 ]
  %.reload38.fca.0.insert = insertvalue { ptr, i160 } poison, ptr %.reg2mem37.sroa.0.0, 0
  %.reload38.fca.1.insert = insertvalue { ptr, i160 } %.reload38.fca.0.insert, i160 %.reg2mem37.sroa.3.0, 1
  ret { ptr, i160 } %.reload38.fca.1.insert
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, inaccessiblemem: none)
define { i64, i64 } @_data_size_Entry(ptr nocapture nofree readonly align 8 %0) #26 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr i8, ptr %4, i64 72
  %6 = load ptr, ptr %5, align 8
  %result.i = call { i64, i64 } %6(ptr nocapture nofree nonnull readonly align 8 %3) #41
  %7 = extractvalue { i64, i64 } %result.i, 0
  %8 = extractvalue { i64, i64 } %result.i, 1
  %9 = urem i64 20, %8
  %10 = icmp eq i64 %9, 0
  %11 = sub i64 %8, %9
  %12 = select i1 %10, i64 0, i64 %11
  %13 = add i64 %7, 20
  %14 = add i64 %13, %12
  %15 = getelementptr i8, ptr %0, i64 16
  %16 = load ptr, ptr %15, align 8
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr i8, ptr %17, i64 72
  %19 = load ptr, ptr %18, align 8
  %result.i1 = call { i64, i64 } %19(ptr nocapture nofree nonnull readonly align 8 %16) #41
  %20 = extractvalue { i64, i64 } %result.i1, 0
  %21 = extractvalue { i64, i64 } %result.i1, 1
  %22 = tail call i64 @llvm.umax.i64(i64 %8, i64 %21) #38
  %23 = tail call i64 @llvm.umax.i64(i64 %22, i64 noundef 8) #38, !range !16
  %24 = urem i64 %14, %21
  %25 = icmp eq i64 %24, 0
  %26 = sub i64 %21, %24
  %27 = select i1 %25, i64 0, i64 %26
  %28 = add i64 %20, %14
  %29 = add i64 %28, %27
  %30 = urem i64 %29, %23
  %31 = icmp eq i64 %30, 0
  %32 = sub i64 %23, %30
  %33 = select i1 %31, i64 0, i64 %32
  %34 = add i64 %33, %29
  %35 = insertvalue { i64, i64 } undef, i64 %34, 0
  %36 = insertvalue { i64, i64 } %35, i64 %23, 1
  ret { i64, i64 } %36
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @Entry_field_Entry_0(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @Entry_field_Entry_1(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  ret ptr %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Entry_B_init_keyK_valueV_primary_hashi32({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 160
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Entry_B_key_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 168
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Entry_B_value_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 176
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Entry_B_primary_hash_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 184
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Entry_B_to_pair_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 192
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @Entry_init_keyK_valueV_primary_hashi32({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, i160 } %3, { ptr, i160 } %4, i32 %5) #5 {
  %.fca.0.extract12 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract13 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract12, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract12, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract12, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !831
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !831
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !831
  %product.i.i.i = mul i64 %hash_coef.i.i, 4015701072841558310
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !831
  %7 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef align 8 %.fca.0.extract12) #37
  %8 = sext i32 %offset.i.i to i64
  %9 = getelementptr ptr, ptr %.fca.0.extract12, i64 %8
  %10 = getelementptr i8, ptr %9, i64 24
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr i8, ptr %11, i64 8
  %13 = load ptr, ptr %12, align 8
  call void %13(ptr %.fca.1.extract13, { ptr, i160 } %3) #39
  %14 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef align 8 %.fca.0.extract12) #37
  %15 = getelementptr i8, ptr %9, i64 32
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr i8, ptr %16, i64 8
  %18 = load ptr, ptr %17, align 8
  call void %18(ptr %.fca.1.extract13, { ptr, i160 } %4) #39
  %19 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef align 8 %.fca.0.extract12) #37
  %20 = getelementptr i8, ptr %9, i64 16
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr i8, ptr %21, i64 8
  %23 = load ptr, ptr %22, align 8
  call void %23(ptr %.fca.1.extract13, i32 %5) #39
  ret void
}

; Function Attrs: mustprogress nounwind willreturn
define { ptr, i160 } @Entry_key_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #6 {
  %.fca.0.extract3 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract4 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract3, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract3, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract3, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !834
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !834
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !834
  %product.i.i.i = mul i64 %hash_coef.i.i, 4015701072841558310
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !834
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef align 8 %.fca.0.extract3) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract3, i64 %5
  %7 = getelementptr i8, ptr %6, i64 24
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = call { ptr, i160 } %9(ptr %.fca.1.extract4) #40
  ret { ptr, i160 } %10
}

; Function Attrs: mustprogress nounwind willreturn
define { ptr, i160 } @Entry_value_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #6 {
  %.fca.0.extract3 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract4 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract3, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract3, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract3, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !837
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !837
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !837
  %product.i.i.i = mul i64 %hash_coef.i.i, 4015701072841558310
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !837
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef align 8 %.fca.0.extract3) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract3, i64 %5
  %7 = getelementptr i8, ptr %6, i64 32
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = call { ptr, i160 } %9(ptr %.fca.1.extract4) #40
  ret { ptr, i160 } %10
}

; Function Attrs: mustprogress nounwind willreturn
define i32 @Entry_primary_hash_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #6 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !840
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !840
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !840
  %product.i.i.i = mul i64 %hash_coef.i.i, 4015701072841558310
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !840
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract, i64 %5
  %7 = getelementptr i8, ptr %6, i64 16
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = call i32 %9(ptr %.fca.1.extract) #40
  ret i32 %10
}

; Function Attrs: mustprogress nounwind willreturn
define { ptr, ptr, ptr, i32 } @Entry_to_pair_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #6 {
  %.fca.0.extract27 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract28 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract27, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract27, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract27, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !843
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !843
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !843
  %product.i.i.i = mul i64 %hash_coef.i.i, 4015701072841558310
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !843
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef align 8 %.fca.0.extract27) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract27, i64 %5
  %7 = getelementptr i8, ptr %6, i64 24
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = call { ptr, i160 } %9(ptr nonnull %.fca.1.extract28) #40
  %11 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef align 8 %.fca.0.extract27) #37
  %12 = getelementptr i8, ptr %6, i64 32
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr %13, align 8
  %15 = call { ptr, i160 } %14(ptr nonnull %.fca.1.extract28) #40
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef align 8 %.fca.0.extract27) #37
  %17 = load ptr, ptr %6, align 8
  %result.i = call align 8 ptr %17(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract28) #41
  %18 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef align 8 %.fca.0.extract27) #37
  %19 = getelementptr i8, ptr %6, i64 8
  %20 = load ptr, ptr %19, align 8
  %result.i1 = call align 8 ptr %20(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract28) #41
  %21 = load ptr, ptr %result.i, align 8, !alias.scope !846
  %22 = getelementptr i8, ptr %21, i64 72
  %23 = load ptr, ptr %22, align 8, !alias.scope !846
  %result.i.i = call { i64, i64 } %23(ptr nocapture nofree nonnull readonly align 8 %result.i) #41, !alias.scope !846
  %24 = extractvalue { i64, i64 } %result.i.i, 0
  %25 = extractvalue { i64, i64 } %result.i.i, 1
  %26 = urem i64 16, %25
  %27 = icmp eq i64 %26, 0
  %28 = sub i64 %25, %26
  %29 = select i1 %27, i64 0, i64 %28
  %30 = add i64 %24, 16
  %31 = add i64 %30, %29
  %32 = load ptr, ptr %result.i1, align 8, !alias.scope !846
  %33 = getelementptr i8, ptr %32, i64 72
  %34 = load ptr, ptr %33, align 8, !alias.scope !846
  %result.i1.i = call { i64, i64 } %34(ptr nocapture nofree nonnull readonly align 8 %result.i1) #41, !alias.scope !846
  %35 = extractvalue { i64, i64 } %result.i1.i, 0
  %36 = extractvalue { i64, i64 } %result.i1.i, 1
  %37 = call i64 @llvm.umax.i64(i64 %25, i64 %36) #38
  %38 = call i64 @llvm.umax.i64(i64 %37, i64 noundef 8) #38, !range !16
  %39 = urem i64 %31, %36
  %40 = icmp eq i64 %39, 0
  %41 = sub i64 %36, %39
  %42 = select i1 %40, i64 0, i64 %41
  %43 = add i64 %35, %31
  %44 = add i64 %43, %42
  %45 = urem i64 %44, %38
  %46 = icmp eq i64 %45, 0
  %47 = sub i64 %38, %45
  %48 = select i1 %46, i64 0, i64 %47
  %49 = add i64 %48, %44
  %result.i3 = call noalias nonnull align 8 dereferenceable(16) ptr @bump_malloc_inner(i64 noundef %49, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i, ptr %result.i3, align 8
  %50 = getelementptr inbounds i8, ptr %result.i3, i64 8
  store ptr %result.i1, ptr %50, align 8
  %51 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %result.i3) #37
  %52 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef align 8 %.fca.0.extract27) #37
  %53 = load ptr, ptr %7, align 8
  %54 = load ptr, ptr %53, align 8
  %55 = call { ptr, i160 } %54(ptr nonnull %.fca.1.extract28) #40
  %56 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef align 8 %.fca.0.extract27) #50
  %57 = load ptr, ptr %12, align 8
  %58 = load ptr, ptr %57, align 8
  %59 = call { ptr, i160 } %58(ptr nonnull %.fca.1.extract28) #40
  %60 = insertvalue { ptr, ptr, ptr, i32 } { ptr @Pair, ptr undef, ptr undef, i32 undef }, ptr %result.i3, 1
  %61 = insertvalue { ptr, ptr, ptr, i32 } %60, ptr undef, 2
  %62 = insertvalue { ptr, ptr, ptr, i32 } %61, i32 10, 3
  %63 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef align 8 %.fca.0.extract27) #50
  %64 = call ptr @llvm.invariant.start.p0(i64 noundef 120, ptr nocapture nofree noundef align 8 %.fca.0.extract27) #50
  %65 = load ptr, ptr %result.i, align 8
  %66 = getelementptr i8, ptr %65, i64 72
  %67 = load ptr, ptr %66, align 8
  %result.i.i30 = call { i64, i64 } %67(ptr nocapture nofree nonnull readonly align 8 %result.i) #41
  %68 = extractvalue { i64, i64 } %result.i.i30, 1
  %69 = urem i64 16, %68
  %70 = icmp eq i64 %69, 0
  %reass.sub33 = sub i64 %68, %69
  %71 = add i64 %reass.sub33, 16
  %72 = select i1 %70, i64 16, i64 %71
  %73 = getelementptr i8, ptr %result.i3, i64 %72
  %74 = getelementptr i8, ptr %65, i64 64
  %75 = load ptr, ptr %74, align 8
  call void %75({ ptr, i160 } %55, ptr nocapture nofree nonnull readonly align 8 %result.i, ptr nocapture nofree writeonly %73) #49
  %76 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @Pair) #37
  %77 = load ptr, ptr %result.i3, align 8
  %78 = load ptr, ptr %77, align 8
  %79 = getelementptr i8, ptr %78, i64 72
  %80 = load ptr, ptr %79, align 8
  %result.i.i31 = call { i64, i64 } %80(ptr nocapture nofree nonnull readonly align 8 %77) #41
  %81 = extractvalue { i64, i64 } %result.i.i31, 0
  %82 = extractvalue { i64, i64 } %result.i.i31, 1
  %83 = urem i64 16, %82
  %84 = icmp eq i64 %83, 0
  %85 = sub i64 %82, %83
  %86 = select i1 %84, i64 0, i64 %85
  %87 = add i64 %81, 16
  %88 = add i64 %87, %86
  %89 = load ptr, ptr %50, align 8
  %90 = load ptr, ptr %89, align 8
  %91 = getelementptr i8, ptr %90, i64 72
  %92 = load ptr, ptr %91, align 8
  %result.i1.i32 = call { i64, i64 } %92(ptr nocapture nofree nonnull readonly align 8 %89) #41
  %93 = extractvalue { i64, i64 } %result.i1.i32, 1
  %94 = urem i64 %88, %93
  %95 = icmp eq i64 %94, 0
  %96 = sub i64 %93, %94
  %97 = select i1 %95, i64 0, i64 %96
  %98 = getelementptr i8, ptr %result.i3, i64 %88
  %99 = getelementptr i8, ptr %98, i64 %97
  %100 = getelementptr i8, ptr %90, i64 64
  %101 = load ptr, ptr %100, align 8
  call void %101({ ptr, i160 } %59, ptr nocapture nofree nonnull readonly align 8 %89, ptr nocapture nofree writeonly %99) #49
  ret { ptr, ptr, ptr, i32 } %62
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, inaccessiblemem: none)
define { ptr, i160 } @Entry_getter_value(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(16) %0) #26 {
  %2 = load ptr, ptr %0, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr i8, ptr %3, i64 72
  %5 = load ptr, ptr %4, align 8
  %result.i = call { i64, i64 } %5(ptr nocapture nofree nonnull readonly align 8 %2) #41
  %6 = extractvalue { i64, i64 } %result.i, 0
  %7 = extractvalue { i64, i64 } %result.i, 1
  %8 = urem i64 20, %7
  %9 = icmp eq i64 %8, 0
  %10 = sub i64 %7, %8
  %11 = select i1 %9, i64 0, i64 %10
  %12 = add i64 %6, 20
  %13 = add i64 %12, %11
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  %15 = load ptr, ptr %14, align 8
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr i8, ptr %16, i64 72
  %18 = load ptr, ptr %17, align 8
  %result.i1 = call { i64, i64 } %18(ptr nocapture nofree nonnull readonly align 8 %15) #41
  %19 = extractvalue { i64, i64 } %result.i1, 1
  %20 = urem i64 %13, %19
  %21 = icmp eq i64 %20, 0
  %22 = sub i64 %19, %20
  %23 = select i1 %21, i64 0, i64 %22
  %24 = getelementptr i8, ptr %0, i64 %13
  %25 = getelementptr i8, ptr %24, i64 %23
  %26 = getelementptr i8, ptr %16, i64 56
  %27 = load ptr, ptr %26, align 8
  %result.i2 = call { ptr, i160 } %27(ptr nocapture nofree readonly %25, ptr nocapture nofree nonnull readonly align 8 %15) #41
  ret { ptr, i160 } %result.i2
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @Entry_setter_value(ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %0, { ptr, i160 } %1) #27 {
  %3 = load ptr, ptr %0, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr i8, ptr %4, i64 72
  %6 = load ptr, ptr %5, align 8
  %result.i = call { i64, i64 } %6(ptr nocapture nofree nonnull readonly align 8 %3) #41
  %7 = extractvalue { i64, i64 } %result.i, 0
  %8 = extractvalue { i64, i64 } %result.i, 1
  %9 = urem i64 20, %8
  %10 = icmp eq i64 %9, 0
  %11 = sub i64 %8, %9
  %12 = select i1 %10, i64 0, i64 %11
  %13 = add i64 %7, 20
  %14 = add i64 %13, %12
  %15 = getelementptr inbounds i8, ptr %0, i64 8
  %16 = load ptr, ptr %15, align 8
  %17 = load ptr, ptr %16, align 8
  %18 = getelementptr i8, ptr %17, i64 72
  %19 = load ptr, ptr %18, align 8
  %result.i1 = call { i64, i64 } %19(ptr nocapture nofree nonnull readonly align 8 %16) #41
  %20 = extractvalue { i64, i64 } %result.i1, 1
  %21 = urem i64 %14, %20
  %22 = icmp eq i64 %21, 0
  %23 = sub i64 %20, %21
  %24 = select i1 %22, i64 0, i64 %23
  %25 = getelementptr i8, ptr %0, i64 %14
  %26 = getelementptr i8, ptr %25, i64 %24
  %27 = getelementptr i8, ptr %17, i64 64
  %28 = load ptr, ptr %27, align 8
  call void %28({ ptr, i160 } %1, ptr nocapture nofree nonnull readonly align 8 %16, ptr nocapture nofree writeonly %26) #49
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, inaccessiblemem: none)
define { ptr, i160 } @Entry_getter_key(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #26 {
  %2 = load ptr, ptr %0, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr i8, ptr %3, i64 72
  %5 = load ptr, ptr %4, align 8
  %result.i = call { i64, i64 } %5(ptr nocapture nofree nonnull readonly align 8 %2) #41
  %6 = extractvalue { i64, i64 } %result.i, 1
  %7 = urem i64 20, %6
  %8 = icmp eq i64 %7, 0
  %reass.sub = sub i64 %6, %7
  %9 = add i64 %reass.sub, 20
  %10 = select i1 %8, i64 20, i64 %9
  %11 = getelementptr i8, ptr %0, i64 %10
  %12 = getelementptr i8, ptr %3, i64 56
  %13 = load ptr, ptr %12, align 8
  %result.i1 = call { ptr, i160 } %13(ptr nocapture nofree readonly %11, ptr nocapture nofree nonnull readonly align 8 %2) #41
  ret { ptr, i160 } %result.i1
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @Entry_setter_key(ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %0, { ptr, i160 } %1) #27 {
  %3 = load ptr, ptr %0, align 8
  %4 = load ptr, ptr %3, align 8
  %5 = getelementptr i8, ptr %4, i64 72
  %6 = load ptr, ptr %5, align 8
  %result.i = call { i64, i64 } %6(ptr nocapture nofree nonnull readonly align 8 %3) #41
  %7 = extractvalue { i64, i64 } %result.i, 1
  %8 = urem i64 20, %7
  %9 = icmp eq i64 %8, 0
  %reass.sub = sub i64 %7, %8
  %10 = add i64 %reass.sub, 20
  %11 = select i1 %9, i64 20, i64 %10
  %12 = getelementptr i8, ptr %0, i64 %11
  %13 = getelementptr i8, ptr %4, i64 64
  %14 = load ptr, ptr %13, align 8
  call void %14({ ptr, i160 } %1, ptr nocapture nofree nonnull readonly align 8 %3, ptr nocapture nofree writeonly %12) #49
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define i32 @Entry_getter_primary_hash(ptr nocapture nofree readonly align 4 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 16
  %3 = load i32, ptr %2, align 4
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @Entry_setter_primary_hash(ptr nocapture nofree writeonly align 4 %0, i32 %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 16
  store i32 %1, ptr %3, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define i1 @CuckooMapIterator_getter_on_second(ptr nocapture nofree readonly %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 48
  %3 = load i1, ptr %2, align 1
  ret i1 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @CuckooMapIterator_setter_on_second(ptr nocapture nofree writeonly %0, i1 %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 48
  store i1 %1, ptr %3, align 1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define i32 @CuckooMapIterator_getter_index(ptr nocapture nofree readonly align 4 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 44
  %3 = load i32, ptr %2, align 4
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @CuckooMapIterator_setter_index(ptr nocapture nofree writeonly align 4 %0, i32 %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 44
  store i32 %1, ptr %3, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define i32 @CuckooMapIterator_getter_table_len(ptr nocapture nofree readonly align 4 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 40
  %3 = load i32, ptr %2, align 4
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @CuckooMapIterator_setter_table_len(ptr nocapture nofree writeonly align 4 %0, i32 %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 40
  store i32 %1, ptr %3, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr } @CuckooMapIterator_getter_map_table2(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 32
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr } undef, ptr %3, 0
  ret { ptr } %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @CuckooMapIterator_setter_map_table2(ptr nocapture nofree writeonly align 8 %0, { ptr } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 32
  %.fca.0.extract = extractvalue { ptr } %1, 0
  store ptr %.fca.0.extract, ptr %3, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr } @CuckooMapIterator_getter_map_table1(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 24
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr } undef, ptr %3, 0
  ret { ptr } %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @CuckooMapIterator_setter_map_table1(ptr nocapture nofree writeonly align 8 %0, { ptr } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 24
  %.fca.0.extract = extractvalue { ptr } %1, 0
  store ptr %.fca.0.extract, ptr %3, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_KeyNotFound(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 72, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @KeyNotFound_B_init_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 152
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @KeyNotFound_B_set_info_line_numberi32_file_nameString({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef align 8 %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef align 8 %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 160
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @KeyNotFound_B_init_messageString({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 144
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @KeyNotFound_B_report_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 168
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @KeyNotFound_B_print_message_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 176
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @Exception_init_messageString({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3) #5 {
  %.fca.0.extract13 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract14 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract13, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract13, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract13, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !849
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !849
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !849
  %product.i.i.i = mul i64 %hash_coef.i.i, 9027164862567808692
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !849
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 6499063144389013426
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !852
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 104, ptr nocapture nofree noundef align 8 %.fca.0.extract13) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract13, i64 %6
  %8 = getelementptr i8, ptr %7, i64 16
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr i8, ptr %9, i64 8
  %11 = load ptr, ptr %10, align 8
  %12 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %13 = insertvalue { ptr, ptr, ptr, i32 } %12, ptr %.fca.1.extract, 1
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.2.extract, 2
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, i32 %offset.i.i27, 3
  call void %11(ptr %.fca.1.extract14, { ptr, ptr, ptr, i32 } %15) #39
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 104, ptr nocapture nofree noundef align 8 %.fca.0.extract13) #37
  %17 = load ptr, ptr %7, align 8
  %18 = getelementptr i8, ptr %17, i64 8
  %19 = load ptr, ptr %18, align 8
  call void %19(ptr %.fca.1.extract14, i32 0) #39
  %result.i = call noalias dereferenceable_or_null(1) ptr @bump_malloc_inner(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %result.i30 = call noalias align 8 dereferenceable_or_null(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %20 = insertvalue { ptr, ptr, ptr, i32 } { ptr @String, ptr undef, ptr undef, i32 undef }, ptr %result.i30, 1
  %21 = insertvalue { ptr, ptr, ptr, i32 } %20, ptr undef, 2
  %22 = insertvalue { ptr, ptr, ptr, i32 } %21, i32 10, 3
  store ptr %result.i, ptr %result.i30, align 8
  %23 = getelementptr i8, ptr %result.i30, i64 8
  store i32 0, ptr %23, align 8
  %24 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String) #37
  %25 = getelementptr i8, ptr %result.i30, i64 12
  store i32 1, ptr %25, align 4
  %26 = call ptr @llvm.invariant.start.p0(i64 noundef 104, ptr nocapture nofree noundef align 8 %.fca.0.extract13)
  %27 = getelementptr i8, ptr %7, i64 8
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr i8, ptr %28, i64 8
  %30 = load ptr, ptr %29, align 8
  call void %30(ptr %.fca.1.extract14, { ptr, ptr, ptr, i32 } %22) #39
  ret void
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @Exception_init_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #5 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !855
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !855
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !855
  %product.i.i.i = mul i64 %hash_coef.i.i, 9027164862567808692
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !855
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 104, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract, i64 %5
  %7 = load ptr, ptr %6, align 8
  %8 = getelementptr i8, ptr %7, i64 8
  %9 = load ptr, ptr %8, align 8
  call void %9(ptr %.fca.1.extract, i32 0) #39
  %result.i = call noalias align 8 dereferenceable_or_null(7) ptr @bump_malloc_inner(i64 noundef 7, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <6 x i8> <i8 60, i8 78, i8 111, i8 110, i8 101, i8 62>, ptr %result.i, align 8
  %result.i2 = call noalias align 8 dereferenceable_or_null(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %10 = insertvalue { ptr, ptr, ptr, i32 } { ptr @String, ptr undef, ptr undef, i32 undef }, ptr %result.i2, 1
  %11 = insertvalue { ptr, ptr, ptr, i32 } %10, ptr undef, 2
  %12 = insertvalue { ptr, ptr, ptr, i32 } %11, i32 10, 3
  store ptr %result.i, ptr %result.i2, align 8
  %13 = getelementptr i8, ptr %result.i2, i64 8
  store i32 6, ptr %13, align 8
  %14 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String) #37
  %15 = getelementptr i8, ptr %result.i2, i64 12
  store i32 7, ptr %15, align 4
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 104, ptr nocapture nofree noundef align 8 %.fca.0.extract)
  %17 = getelementptr i8, ptr %6, i64 16
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr i8, ptr %18, i64 8
  %20 = load ptr, ptr %19, align 8
  call void %20(ptr %.fca.1.extract, { ptr, ptr, ptr, i32 } %12) #39
  %result.i18 = call noalias dereferenceable_or_null(1) ptr @bump_malloc_inner(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %result.i20 = call noalias align 8 dereferenceable_or_null(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %21 = insertvalue { ptr, ptr, ptr, i32 } { ptr @String, ptr undef, ptr undef, i32 undef }, ptr %result.i20, 1
  %22 = insertvalue { ptr, ptr, ptr, i32 } %21, ptr undef, 2
  %23 = insertvalue { ptr, ptr, ptr, i32 } %22, i32 10, 3
  store ptr %result.i18, ptr %result.i20, align 8
  %24 = getelementptr i8, ptr %result.i20, i64 8
  store i32 0, ptr %24, align 8
  %25 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String) #37
  %26 = getelementptr i8, ptr %result.i20, i64 12
  store i32 1, ptr %26, align 4
  %27 = call ptr @llvm.invariant.start.p0(i64 noundef 104, ptr nocapture nofree noundef align 8 %.fca.0.extract)
  %28 = getelementptr i8, ptr %6, i64 8
  %29 = load ptr, ptr %28, align 8
  %30 = getelementptr i8, ptr %29, i64 8
  %31 = load ptr, ptr %30, align 8
  call void %31(ptr %.fca.1.extract, { ptr, ptr, ptr, i32 } %23) #39
  ret void
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @Exception_set_info_line_numberi32_file_nameString({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, i32 %3, { ptr, ptr, ptr, i32 } %4) #5 {
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract2 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !858
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !858
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !858
  %product.i.i.i = mul i64 %hash_coef.i.i, 9027164862567808692
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !858
  %6 = call ptr @llvm.invariant.start.p0(i64 noundef 104, ptr nocapture nofree noundef align 8 %.fca.0.extract1) #37
  %7 = sext i32 %offset.i.i to i64
  %8 = getelementptr ptr, ptr %.fca.0.extract1, i64 %7
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr i8, ptr %9, i64 8
  %11 = load ptr, ptr %10, align 8
  call void %11(ptr %.fca.1.extract2, i32 %3) #39
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %4, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 6499063144389013426
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !861
  %12 = call ptr @llvm.invariant.start.p0(i64 noundef 104, ptr nocapture nofree noundef align 8 %.fca.0.extract1) #37
  %13 = getelementptr i8, ptr %8, i64 8
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr i8, ptr %14, i64 8
  %16 = load ptr, ptr %15, align 8
  %17 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %18 = insertvalue { ptr, ptr, ptr, i32 } %17, ptr %.fca.1.extract, 1
  %19 = insertvalue { ptr, ptr, ptr, i32 } %18, ptr %.fca.2.extract, 2
  %20 = insertvalue { ptr, ptr, ptr, i32 } %19, i32 %offset.i.i27, 3
  call void %16(ptr %.fca.1.extract2, { ptr, ptr, ptr, i32 } %20) #39
  ret void
}

; Function Attrs: nounwind
define void @Exception_report_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #11 {
._crit_edge.lr.ph.i:
  %3 = alloca [0 x ptr], align 8
  %result.i.i173.h2s179 = alloca [10 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(10) %result.i.i173.h2s179, i8 0, i64 10, i1 false)
  %result.i.i141.h2s181 = alloca [13 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(13) %result.i.i141.h2s181, i8 0, i64 13, i1 false)
  %result.i.i109.h2s183 = alloca [8 x i8], align 8
  store i64 0, ptr %result.i.i109.h2s183, align 8
  %result.i.i77.h2s185 = alloca [27 x i8], align 32
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 32 dereferenceable(27) %result.i.i77.h2s185, i8 0, i64 27, i1 false)
  %result.i.i.h2s187 = alloca [10 x i8], align 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(10) %result.i.i.h2s187, i8 0, i64 10, i1 false)
  %.fca.0.extract89 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract91 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract89, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract89, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract89, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !864
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !864
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !864
  %product.i.i.i = mul i64 %hash_coef.i.i, 9027164862567808692
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !864
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %3) #37
  store <9 x i8> <i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45>, ptr %result.i.i.h2s187, align 16
  %puts = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(10) %result.i.i.h2s187) #43
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %3) #44
  store <26 x i8> <i8 69, i8 120, i8 99, i8 101, i8 112, i8 116, i8 105, i8 111, i8 110, i8 32, i8 116, i8 104, i8 114, i8 111, i8 119, i8 110, i8 32, i8 102, i8 114, i8 111, i8 109, i8 32, i8 102, i8 105, i8 108, i8 101>, ptr %result.i.i77.h2s185, align 32
  %6 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String) #44
  %puts97 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(27) %result.i.i77.h2s185) #43
  %7 = call ptr @llvm.invariant.start.p0(i64 noundef 104, ptr nocapture nofree noundef align 8 %.fca.0.extract89) #44
  %8 = sext i32 %offset.i.i to i64
  %9 = getelementptr ptr, ptr %.fca.0.extract89, i64 %8
  %10 = getelementptr i8, ptr %9, i64 8
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr %11, align 8
  %13 = call { ptr, ptr, ptr, i32 } %12(ptr %.fca.1.extract91) #40
  %.fca.0.extract52 = extractvalue { ptr, ptr, ptr, i32 } %13, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %13, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %13, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %13, 3
  %14 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract52, 0
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, ptr %.fca.1.extract, 1
  %16 = insertvalue { ptr, ptr, ptr, i32 } %15, ptr %.fca.2.extract, 2
  %17 = insertvalue { ptr, ptr, ptr, i32 } %16, i32 %.fca.3.extract, 3
  %18 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %3)
  %19 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef %.fca.0.extract52)
  %20 = sext i32 %.fca.3.extract to i64
  %21 = getelementptr ptr, ptr %.fca.0.extract52, i64 %20
  %22 = getelementptr i8, ptr %21, i64 80
  %23 = load ptr, ptr %22, align 8
  %result.i10 = call ptr %23({ ptr, ptr, ptr, i32 } %17, ptr nocapture nofree noundef nonnull readonly align 8 %3) #45
  %24 = call { ptr } %result.i10({ ptr, ptr, ptr, i32 } %17, { ptr, ptr, ptr, i32 } %17, ptr nonnull align 8 %3) #42
  %.fca.0.extract50 = extractvalue { ptr } %24, 0
  %puts98 = call i32 @puts(ptr nocapture nofree noundef nonnull readonly dereferenceable(1) %.fca.0.extract50) #42
  %25 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %3)
  %26 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %3)
  store <7 x i8> <i8 65, i8 116, i8 32, i8 108, i8 105, i8 110, i8 101>, ptr %result.i.i109.h2s183, align 8
  %27 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %puts99 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(8) %result.i.i109.h2s183) #42
  %28 = call ptr @llvm.invariant.start.p0(i64 noundef 104, ptr nocapture nofree noundef align 8 %.fca.0.extract89)
  %29 = load ptr, ptr %9, align 8
  %30 = load ptr, ptr %29, align 8
  %31 = call i32 %30(ptr %.fca.1.extract91) #40
  %32 = call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %31) #42
  %33 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %3)
  %34 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %3)
  store <12 x i8> <i8 87, i8 105, i8 116, i8 104, i8 32, i8 109, i8 101, i8 115, i8 115, i8 97, i8 103, i8 101>, ptr %result.i.i141.h2s181, align 16
  %.fca.2.extract93 = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %35 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %puts100 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(13) %result.i.i141.h2s181) #42
  %36 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract89, 0
  %37 = insertvalue { ptr, ptr, ptr, i32 } %36, ptr %.fca.1.extract91, 1
  %38 = insertvalue { ptr, ptr, ptr, i32 } %37, ptr %.fca.2.extract93, 2
  %39 = insertvalue { ptr, ptr, ptr, i32 } %38, i32 %offset.i.i, 3
  %40 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %3)
  %41 = call ptr @llvm.invariant.start.p0(i64 noundef 104, ptr nocapture nofree noundef align 8 %.fca.0.extract89)
  %42 = getelementptr i8, ptr %9, i64 56
  %43 = load ptr, ptr %42, align 8
  %result.i21 = call ptr %43({ ptr, ptr, ptr, i32 } %39, ptr nocapture nofree noundef nonnull readonly align 8 %3) #45
  call void %result.i21({ ptr, ptr, ptr, i32 } %39, { ptr, ptr, ptr, i32 } %39, ptr nonnull align 8 %3) #42
  %44 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %3)
  %45 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %3)
  store <9 x i8> <i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45, i8 45>, ptr %result.i.i173.h2s179, align 16
  %46 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String)
  %puts101 = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(10) %result.i.i173.h2s179) #42
  ret void
}

; Function Attrs: nounwind
define void @Exception_print_message_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #11 {
  %4 = alloca [0 x ptr], align 8
  %.fca.0.extract2 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract4 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !867
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !867
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !867
  %product.i.i.i = mul i64 %hash_coef.i.i, 9027164862567808692
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !867
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 104, ptr nocapture nofree noundef align 8 %.fca.0.extract2) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract2, i64 %6
  %8 = getelementptr i8, ptr %7, i64 16
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = call { ptr, ptr, ptr, i32 } %10(ptr %.fca.1.extract4) #40
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %11, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %11, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %11, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %11, 3
  %12 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract1, 0
  %13 = insertvalue { ptr, ptr, ptr, i32 } %12, ptr %.fca.1.extract, 1
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.2.extract, 2
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, i32 %.fca.3.extract, 3
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4) #50
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef %.fca.0.extract1) #50
  %18 = sext i32 %.fca.3.extract to i64
  %19 = getelementptr ptr, ptr %.fca.0.extract1, i64 %18
  %20 = getelementptr i8, ptr %19, i64 80
  %21 = load ptr, ptr %20, align 8
  %result.i = call ptr %21({ ptr, ptr, ptr, i32 } %15, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %22 = call { ptr } %result.i({ ptr, ptr, ptr, i32 } %15, { ptr, ptr, ptr, i32 } %15, ptr nonnull align 8 %4) #42
  %.fca.0.extract = extractvalue { ptr } %22, 0
  %puts = call i32 @puts(ptr nocapture nofree noundef nonnull readonly dereferenceable(1) %.fca.0.extract) #42
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @puts(ptr nocapture noundef readonly) local_unnamed_addr #20

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_Exception(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 72, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Exception_B_init_messageString({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 144
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Exception_B_init_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 152
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Exception_B_set_info_line_numberi32_file_nameString({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef align 8 %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef align 8 %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 160
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Exception_B_report_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 168
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Exception_B_print_message_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 176
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @Exception_getter_message(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 40
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 48
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 56
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 64
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @Exception_setter_message(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 40
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 48
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 56
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 64
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @Exception_getter_file_name(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 16
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 24
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 32
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @Exception_setter_file_name(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 8
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 16
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 24
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 32
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define i32 @Exception_getter_line_number(ptr nocapture nofree noundef nonnull readonly align 4 dereferenceable(4) %0) #2 {
  %2 = load i32, ptr %0, align 4
  ret i32 %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @Exception_setter_line_number(ptr nocapture nofree noundef nonnull writeonly align 4 dereferenceable(4) %0, i32 %1) #3 {
  store i32 %1, ptr %0, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @KeyNotFound_getter_message(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 40
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 48
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 56
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 64
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @KeyNotFound_setter_message(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 40
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 48
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 56
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 64
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @KeyNotFound_getter_file_name(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 16
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 24
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 32
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @KeyNotFound_setter_file_name(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 8
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 16
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 24
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 32
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define i32 @KeyNotFound_getter_line_number(ptr nocapture nofree noundef nonnull readonly align 4 dereferenceable(4) %0) #2 {
  %2 = load i32, ptr %0, align 4
  ret i32 %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @KeyNotFound_setter_line_number(ptr nocapture nofree noundef nonnull writeonly align 4 dereferenceable(4) %0, i32 %1) #3 {
  store i32 %1, ptr %0, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_Map(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 24, i64 8 }
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn
define { ptr, i160 } @_box_union_typ(ptr nocapture nofree readonly %0, ptr nocapture nofree readonly align 4 %1) #32 {
  %.sroa.3 = alloca [24 x i8], align 8
  %3 = getelementptr i8, ptr %1, i64 8
  %4 = load i64, ptr %3, align 4
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %_data_size_union_typ.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %2, %.lr.ph.i
  %.in.i = phi i64 [ %23, %.lr.ph.i ], [ %4, %2 ]
  %6 = phi i64 [ %21, %.lr.ph.i ], [ 1, %2 ]
  %.reg2mem22.011.i = phi i64 [ %20, %.lr.ph.i ], [ 0, %2 ]
  %.reg2mem20.010.i = phi i64 [ %14, %.lr.ph.i ], [ 1, %2 ]
  %7 = inttoptr i64 %.in.i to ptr
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr i8, ptr %8, i64 72
  %10 = load ptr, ptr %9, align 8
  %11 = call { i64, i64 } %10(ptr nonnull align 8 %7) #42
  %12 = extractvalue { i64, i64 } %11, 0
  %13 = extractvalue { i64, i64 } %11, 1
  %14 = call i64 @llvm.umax.i64(i64 noundef %13, i64 noundef %.reg2mem20.010.i)
  %15 = urem i64 %.reg2mem22.011.i, %13
  %16 = icmp eq i64 %15, 0
  %17 = sub i64 %13, %15
  %18 = select i1 %16, i64 0, i64 %17
  %19 = call i64 @llvm.umax.i64(i64 noundef %12, i64 noundef %.reg2mem22.011.i)
  %20 = call i64 @llvm.umax.i64(i64 noundef %19, i64 noundef %18)
  %21 = add i64 %6, 1
  %22 = getelementptr ptr, ptr %1, i64 %21
  %23 = load i64, ptr %22, align 4
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %._crit_edge.i, label %.lr.ph.i

._crit_edge.i:                                    ; preds = %.lr.ph.i
  %right_size.i = icmp eq i64 %20, 32
  %spec.select6.i = select i1 %right_size.i, i64 0, i64 8
  %25 = add i64 %spec.select6.i, %20
  br label %_data_size_union_typ.exit

_data_size_union_typ.exit:                        ; preds = %2, %._crit_edge.i
  %.reg2mem20.0.lcssa4.i = phi i64 [ 1, %2 ], [ %14, %._crit_edge.i ]
  %final_size.i = phi i64 [ 8, %2 ], [ %25, %._crit_edge.i ]
  %26 = urem i64 %final_size.i, %.reg2mem20.0.lcssa4.i
  %27 = icmp eq i64 %26, 0
  %28 = sub i64 %.reg2mem20.0.lcssa4.i, %26
  %29 = select i1 %27, i64 0, i64 %28
  %30 = add i64 %29, %final_size.i
  %31 = icmp eq i64 %30, 32
  br i1 %31, label %32, label %36

32:                                               ; preds = %_data_size_union_typ.exit
  %33 = load ptr, ptr %0, align 8
  %34 = getelementptr i8, ptr %0, i64 8
  %35 = load i160, ptr %34, align 4
  store i160 %35, ptr %.sroa.3, align 8
  br label %40

36:                                               ; preds = %_data_size_union_typ.exit
  %37 = icmp slt i64 %30, 17
  br i1 %37, label %39, label %38

38:                                               ; preds = %36
  %result.i1 = tail call noalias ptr @bump_malloc_inner(i64 noundef %30, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  tail call void @llvm.memcpy.inline.p0.p0.i64(ptr nocapture nofree writeonly align 1 %result.i1, ptr nocapture nofree readonly align 1 %0, i64 %30, i1 noundef false) #37
  store ptr %result.i1, ptr %.sroa.3, align 8
  br label %40

39:                                               ; preds = %36
  call void @llvm.memcpy.inline.p0.p0.i64(ptr noalias nocapture nofree noundef nonnull writeonly align 8 dereferenceable(24) %.sroa.3, ptr nocapture nofree readonly align 1 %0, i64 %30, i1 noundef false) #37
  br label %40

40:                                               ; preds = %39, %38, %32
  %.sroa.0.0 = phi ptr [ %33, %32 ], [ @union_typ, %39 ], [ @union_typ, %38 ]
  %41 = insertvalue { ptr, i160 } undef, ptr %.sroa.0.0, 0
  %.sroa.3.0..sroa.3.0..sroa.3.0..sroa.3.0..sroa.3.0..sroa.3.0..sroa.3.0..sroa.3.0..sroa.3.0..sroa.3.0..sroa.3.0..sroa.3.8. = load i160, ptr %.sroa.3, align 8
  %42 = insertvalue { ptr, i160 } %41, i160 %.sroa.3.0..sroa.3.0..sroa.3.0..sroa.3.0..sroa.3.0..sroa.3.0..sroa.3.0..sroa.3.0..sroa.3.0..sroa.3.0..sroa.3.0..sroa.3.8., 1
  ret { ptr, i160 } %42
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define i32 @i32_hasher(i32 %0) #1 {
  %2 = add i32 %0, 2127912214
  %3 = shl i32 %0, 12
  %4 = add i32 %2, %3
  %5 = ashr i32 %4, 19
  %6 = xor i32 %4, %5
  %7 = xor i32 %6, -949894596
  %8 = add i32 %7, 374761393
  %9 = shl i32 %7, 5
  %10 = add i32 %8, %9
  %11 = add i32 %10, -744332180
  %12 = shl i32 %10, 9
  %13 = xor i32 %11, %12
  %14 = add i32 %13, -42973499
  %15 = shl i32 %13, 3
  %16 = add i32 %14, %15
  %17 = ashr i32 %16, 16
  %18 = xor i32 %16, %17
  %19 = xor i32 %18, -1252372727
  ret i32 %19
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr } @CuckooMap_getter_eq(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 56
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr } undef, ptr %3, 0
  ret { ptr } %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @CuckooMap_setter_eq(ptr nocapture nofree writeonly align 8 %0, { ptr } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 56
  %.fca.0.extract = extractvalue { ptr } %1, 0
  store ptr %.fca.0.extract, ptr %3, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr } @CuckooMap_getter_hasher(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 48
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr } undef, ptr %3, 0
  ret { ptr } %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @CuckooMap_setter_hasher(ptr nocapture nofree writeonly align 8 %0, { ptr } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 48
  %.fca.0.extract = extractvalue { ptr } %1, 0
  store ptr %.fca.0.extract, ptr %3, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define i32 @CuckooMap_getter_size(ptr nocapture nofree readonly align 4 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 44
  %3 = load i32, ptr %2, align 4
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @CuckooMap_setter_size(ptr nocapture nofree writeonly align 4 %0, i32 %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 44
  store i32 %1, ptr %3, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define i32 @CuckooMap_getter_table_len(ptr nocapture nofree readonly align 4 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 40
  %3 = load i32, ptr %2, align 4
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @CuckooMap_setter_table_len(ptr nocapture nofree writeonly align 4 %0, i32 %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 40
  store i32 %1, ptr %3, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr } @CuckooMap_getter_table2(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 32
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr } undef, ptr %3, 0
  ret { ptr } %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @CuckooMap_setter_table2(ptr nocapture nofree writeonly align 8 %0, { ptr } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 32
  %.fca.0.extract = extractvalue { ptr } %1, 0
  store ptr %.fca.0.extract, ptr %3, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr } @CuckooMap_getter_table1(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 24
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr } undef, ptr %3, 0
  ret { ptr } %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @CuckooMap_setter_table1(ptr nocapture nofree writeonly align 8 %0, { ptr } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 24
  %.fca.0.extract = extractvalue { ptr } %1, 0
  store ptr %.fca.0.extract, ptr %3, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_HashMap(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 24, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_IO(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 0, i64 1 }
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @IO_B__Self_print_xNil__Self_print_xi8__Self_print_xi1__Self_print_xf64__Self_print_xRepresentable__Self_print_xi32__Self_print_xString__Self_print_xi64__Self_print_xCharacter(ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %0) #33 {
  %2 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %0) #37
  %3 = load ptr, ptr %0, align 8
  %4 = icmp eq ptr %3, @i8_typ
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = icmp eq ptr %3, @bool_typ
  br i1 %6, label %24, label %7

7:                                                ; preds = %5
  %8 = icmp eq ptr %3, @f64_typ
  br i1 %8, label %24, label %9

9:                                                ; preds = %7
  %10 = getelementptr i8, ptr %3, i64 8
  %11 = getelementptr i8, ptr %3, i64 16
  %12 = getelementptr i8, ptr %3, i64 24
  %13 = getelementptr i8, ptr %3, i64 32
  %14 = load i64, ptr %10, align 4
  %15 = load i64, ptr %11, align 4
  %16 = load ptr, ptr %12, align 8
  %17 = load ptr, ptr %13, align 8
  %result.i = call i1 %16(i64 %15, i64 %14, i64 6499063144389013426, i64 ptrtoint (ptr @String to i64), ptr readonly %17) #41
  br i1 %result.i, label %18, label %.critedge

18:                                               ; preds = %9
  %result.i1 = call i1 %16(i64 %15, i64 %14, i64 6681222582356018452, i64 ptrtoint (ptr @Character to i64), ptr readonly %17) #41
  br i1 %result.i1, label %.critedge, label %24

.critedge:                                        ; preds = %18, %9
  %19 = icmp eq ptr %3, @i64_typ
  br i1 %19, label %24, label %20

20:                                               ; preds = %.critedge
  %result.i2 = call i1 %16(i64 %15, i64 %14, i64 6681222582356018452, i64 ptrtoint (ptr @Character to i64), ptr readonly %17) #41
  br i1 %result.i2, label %21, label %.critedge15

21:                                               ; preds = %20
  br i1 %result.i, label %.critedge17, label %24

.critedge15:                                      ; preds = %20
  %result.i4 = call i1 %16(i64 %15, i64 %14, i64 -7260840641129990118, i64 ptrtoint (ptr @Representable to i64), ptr readonly %17) #41
  %result.i4.not = xor i1 %result.i4, true
  %brmerge = or i1 %result.i, %result.i4.not
  br i1 %brmerge, label %.critedge17, label %24

.critedge17:                                      ; preds = %.critedge15, %21
  %22 = icmp eq ptr %3, @i32_typ
  %23 = select i1 %22, i32 6, i32 1
  br label %24

24:                                               ; preds = %.critedge15, %.critedge17, %21, %.critedge, %18, %7, %5, %1
  %.reg2mem29.0 = phi i32 [ 2, %1 ], [ 3, %5 ], [ 4, %7 ], [ 8, %.critedge ], [ %23, %.critedge17 ], [ 9, %21 ], [ 7, %18 ], [ 5, %.critedge15 ]
  %25 = zext nneg i32 %.reg2mem29.0 to i64
  %26 = getelementptr [10 x ptr], ptr @IO, i64 0, i64 %25
  %27 = getelementptr i8, ptr %26, i64 80
  %28 = load ptr, ptr %27, align 8
  ret ptr %28
}

; Function Attrs: nofree nounwind
define void @IO__Self_print_xNil(ptr nocapture nofree readnone %0, { ptr, i160 } %1) #20 {
._crit_edge.lr.ph.i:
  %result.i.i.h2s17 = alloca [4 x i8], align 4
  store i32 0, ptr %result.i.i.h2s17, align 4
  store <3 x i8> <i8 110, i8 105, i8 108>, ptr %result.i.i.h2s17, align 4
  %2 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String) #50
  %puts = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(4) %result.i.i.h2s17) #42
  ret void
}

; Function Attrs: nofree nounwind
define void @IO__Self_print_xi8(ptr nocapture nofree readnone %0, { ptr, i160 } %1) #20 {
  %.fca.1.extract = extractvalue { ptr, i160 } %1, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i8
  %3 = sext i8 %.sroa.1.8.extract.trunc to i32
  %4 = tail call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %3) #42
  ret void
}

; Function Attrs: nofree nounwind
define void @IO__Self_print_xi1(ptr nocapture nofree readnone %0, { ptr, i160 } %1) #20 {
  %result.i.i49.h2s58 = alloca [6 x i8], align 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(6) %result.i.i49.h2s58, i8 0, i64 6, i1 false)
  %result.i.i.h2s60 = alloca [5 x i8], align 4
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(5) %result.i.i.h2s60, i8 0, i64 5, i1 false)
  %.fca.1.extract = extractvalue { ptr, i160 } %1, 1
  %3 = trunc i160 %.fca.1.extract to i1
  br i1 %3, label %._crit_edge.lr.ph.i, label %._crit_edge.lr.ph.i50

._crit_edge.lr.ph.i:                              ; preds = %2
  store i32 1702195828, ptr %result.i.i.h2s60, align 4
  br label %String_c_string_.exit

._crit_edge.lr.ph.i50:                            ; preds = %2
  store <5 x i8> <i8 102, i8 97, i8 108, i8 115, i8 101>, ptr %result.i.i49.h2s58, align 8
  br label %String_c_string_.exit

String_c_string_.exit:                            ; preds = %._crit_edge.lr.ph.i50, %._crit_edge.lr.ph.i
  %4 = phi i32 [ 4, %._crit_edge.lr.ph.i ], [ 5, %._crit_edge.lr.ph.i50 ]
  %result.i.i49.sink = phi ptr [ %result.i.i.h2s60, %._crit_edge.lr.ph.i ], [ %result.i.i49.h2s58, %._crit_edge.lr.ph.i50 ]
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String) #50
  %6 = zext nneg i32 %4 to i64
  %7 = getelementptr i8, ptr %result.i.i49.sink, i64 %6
  store i8 0, ptr %7, align 1
  %puts = call i32 @puts(ptr nocapture nofree noundef nonnull readonly dereferenceable(5) %result.i.i49.sink) #42
  ret void
}

; Function Attrs: nofree nounwind
define void @IO__Self_print_xf64(ptr nocapture nofree readnone %0, { ptr, i160 } %1) #20 {
  %.fca.1.extract = extractvalue { ptr, i160 } %1, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i64
  %3 = bitcast i64 %.sroa.1.8.extract.trunc to double
  %4 = tail call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @float_string, double %3) #42
  ret void
}

; Function Attrs: nounwind
define void @IO__Self_print_xRepresentable(ptr nocapture nofree readnone %0, { ptr, i160 } %1) #11 {
  %3 = alloca [0 x ptr], align 8
  %.fca.0.extract2 = extractvalue { ptr, i160 } %1, 0
  %.fca.1.extract3 = extractvalue { ptr, i160 } %1, 1
  %.sroa.317.8.extract.trunc = trunc i160 %.fca.1.extract3 to i64
  %4 = inttoptr i64 %.sroa.317.8.extract.trunc to ptr
  %.sroa.518.8.extract.shift = lshr i160 %.fca.1.extract3, 64
  %.sroa.518.8.extract.trunc = trunc i160 %.sroa.518.8.extract.shift to i64
  %5 = inttoptr i64 %.sroa.518.8.extract.trunc to ptr
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !870
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !870
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !870
  %product.i.i.i = mul i64 %hash_coef.i.i, -7260840641129990118
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !870
  %6 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract2, 0
  %7 = insertvalue { ptr, ptr, ptr, i32 } %6, ptr %4, 1
  %8 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %5, 2
  %9 = insertvalue { ptr, ptr, ptr, i32 } %8, i32 %offset.i.i, 3
  %10 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %3) #37
  %11 = call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef align 8 %.fca.0.extract2) #37
  %12 = sext i32 %offset.i.i to i64
  %13 = getelementptr ptr, ptr %.fca.0.extract2, i64 %12
  %14 = load ptr, ptr %13, align 8
  %result.i = call ptr %14({ ptr, ptr, ptr, i32 } %9, ptr nocapture nofree noundef nonnull readonly align 8 %3) #45
  %15 = call { ptr, ptr, ptr, i32 } %result.i({ ptr, ptr, ptr, i32 } %9, { ptr, ptr, ptr, i32 } %9, ptr nonnull align 8 %3) #42
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %15, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %15, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %15, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !873
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !873
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !873
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, 6499063144389013426
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i13 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !873
  %16 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract1, 0
  %17 = insertvalue { ptr, ptr, ptr, i32 } %16, ptr %.fca.1.extract, 1
  %18 = insertvalue { ptr, ptr, ptr, i32 } %17, ptr %.fca.2.extract, 2
  %19 = insertvalue { ptr, ptr, ptr, i32 } %18, i32 %offset.i.i13, 3
  %20 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %3)
  %21 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef align 8 %.fca.0.extract1)
  %22 = sext i32 %offset.i.i13 to i64
  %23 = getelementptr ptr, ptr %.fca.0.extract1, i64 %22
  %24 = getelementptr i8, ptr %23, i64 80
  %25 = load ptr, ptr %24, align 8
  %result.i15 = call ptr %25({ ptr, ptr, ptr, i32 } %19, ptr nocapture nofree noundef nonnull readonly align 8 %3) #45
  %26 = call { ptr } %result.i15({ ptr, ptr, ptr, i32 } %19, { ptr, ptr, ptr, i32 } %19, ptr nonnull align 8 %3) #42
  %.fca.0.extract = extractvalue { ptr } %26, 0
  %puts = call i32 @puts(ptr nocapture nofree noundef nonnull readonly dereferenceable(1) %.fca.0.extract) #42
  ret void
}

; Function Attrs: nofree nounwind
define void @IO__Self_print_xi32(ptr nocapture nofree readnone %0, { ptr, i160 } %1) #20 {
  %.fca.1.extract = extractvalue { ptr, i160 } %1, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i32
  %3 = tail call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(4) @i32_string, i32 %.sroa.1.8.extract.trunc) #42
  ret void
}

; Function Attrs: nounwind
define void @IO__Self_print_xString(ptr nocapture nofree readnone %0, { ptr, i160 } %1) #11 {
  %3 = alloca [0 x ptr], align 8
  %.fca.0.extract1 = extractvalue { ptr, i160 } %1, 0
  %.fca.1.extract = extractvalue { ptr, i160 } %1, 1
  %.sroa.3.8.extract.trunc = trunc i160 %.fca.1.extract to i64
  %4 = inttoptr i64 %.sroa.3.8.extract.trunc to ptr
  %.sroa.5.8.extract.shift = lshr i160 %.fca.1.extract, 64
  %.sroa.5.8.extract.trunc = trunc i160 %.sroa.5.8.extract.shift to i64
  %5 = inttoptr i64 %.sroa.5.8.extract.trunc to ptr
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !876
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !876
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !876
  %product.i.i.i = mul i64 %hash_coef.i.i, 6499063144389013426
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !876
  %6 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract1, 0
  %7 = insertvalue { ptr, ptr, ptr, i32 } %6, ptr %4, 1
  %8 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %5, 2
  %9 = insertvalue { ptr, ptr, ptr, i32 } %8, i32 %offset.i.i, 3
  %10 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %3) #37
  %11 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef align 8 %.fca.0.extract1) #37
  %12 = sext i32 %offset.i.i to i64
  %13 = getelementptr ptr, ptr %.fca.0.extract1, i64 %12
  %14 = getelementptr i8, ptr %13, i64 80
  %15 = load ptr, ptr %14, align 8
  %result.i = call ptr %15({ ptr, ptr, ptr, i32 } %9, ptr nocapture nofree noundef nonnull readonly align 8 %3) #45
  %16 = call { ptr } %result.i({ ptr, ptr, ptr, i32 } %9, { ptr, ptr, ptr, i32 } %9, ptr nonnull align 8 %3) #42
  %.fca.0.extract = extractvalue { ptr } %16, 0
  %puts = call i32 @puts(ptr nocapture nofree noundef nonnull readonly dereferenceable(1) %.fca.0.extract) #42
  ret void
}

; Function Attrs: nofree nounwind
define void @IO__Self_print_xi64(ptr nocapture nofree readnone %0, { ptr, i160 } %1) #20 {
  %.fca.1.extract = extractvalue { ptr, i160 } %1, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i64
  %3 = tail call i32 (ptr, ...) @printf(ptr nocapture nofree noundef nonnull readonly dereferenceable(6) @i64_string, i64 %.sroa.1.8.extract.trunc) #42
  ret void
}

; Function Attrs: nounwind
define void @IO__Self_print_xCharacter(ptr nocapture nofree readnone %0, { ptr, i160 } %1) #11 {
  %3 = alloca [0 x ptr], align 8
  %.h2s1 = alloca [2 x i8], align 1
  %.fca.0.extract = extractvalue { ptr, i160 } %1, 0
  %.fca.1.extract = extractvalue { ptr, i160 } %1, 1
  %.sroa.3.8.extract.trunc = trunc i160 %.fca.1.extract to i64
  %4 = inttoptr i64 %.sroa.3.8.extract.trunc to ptr
  %.sroa.5.8.extract.shift = lshr i160 %.fca.1.extract, 64
  %.sroa.5.8.extract.trunc = trunc i160 %.sroa.5.8.extract.shift to i64
  %5 = inttoptr i64 %.sroa.5.8.extract.trunc to ptr
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !879
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !879
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !879
  %product.i.i.i = mul i64 %hash_coef.i.i, 6681222582356018452
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !879
  %6 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %7 = insertvalue { ptr, ptr, ptr, i32 } %6, ptr %4, 1
  %8 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %5, 2
  %9 = insertvalue { ptr, ptr, ptr, i32 } %8, i32 %offset.i.i, 3
  %10 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %3) #37
  %11 = call ptr @llvm.invariant.start.p0(i64 noundef 40, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %12 = sext i32 %offset.i.i to i64
  %13 = getelementptr ptr, ptr %.fca.0.extract, i64 %12
  %14 = getelementptr i8, ptr %13, i64 8
  %15 = load ptr, ptr %14, align 8
  %result.i = call ptr %15({ ptr, ptr, ptr, i32 } %9, ptr nocapture nofree noundef nonnull readonly align 8 %3) #45
  %16 = call i8 %result.i({ ptr, ptr, ptr, i32 } %9, { ptr, ptr, ptr, i32 } %9, ptr nonnull align 8 %3) #42
  store i8 %16, ptr %.h2s1, align 1
  %17 = getelementptr inbounds i8, ptr %.h2s1, i64 1
  store i8 0, ptr %17, align 1
  %puts = call i32 @puts(ptr noalias nocapture nofree noundef nonnull readonly dereferenceable(2) %.h2s1) #42
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_f64_typ(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 8, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, i160 } @_box_f64_typ(ptr nocapture nofree noundef nonnull readonly dereferenceable(8) %0, ptr nocapture nofree readnone %1) #2 {
  %3 = load i64, ptr %0, align 1
  %.sroa.2.sroa.0.0.insert.ext = zext i64 %3 to i160
  %4 = insertvalue { ptr, i160 } { ptr @f64_typ, i160 undef }, i160 %.sroa.2.sroa.0.0.insert.ext, 1
  ret { ptr, i160 } %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @_unbox_f64_typ({ ptr, i160 } %0, ptr nocapture nofree readnone %1, ptr nocapture nofree noundef nonnull writeonly dereferenceable(8) %2) #3 {
  %.fca.1.extract = extractvalue { ptr, i160 } %0, 1
  %.sroa.1.8.extract.trunc = trunc i160 %.fca.1.extract to i64
  store i64 %.sroa.1.8.extract.trunc, ptr %2, align 1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_Array(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 24, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @Array_field_Array_0(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite)
define noundef nonnull ptr @Array_B__Self_from_iterable_iterableIterableT(ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %0) #28 {
  %2 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %0) #37
  ret ptr @Array__Self_from_iterable_iterableIterableT
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_init_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 336
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_init_capacityi32({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 344
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_init_lengthi32_capacityi32({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 352
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_init_bufferBufferT_lengthi32_capacityi32({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 360
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_length_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 368
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_capacity_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 376
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_append_xT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 384
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_extend_otherArrayT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 392
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_reserve_new_capacityi32({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 400
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B__index_xi32({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 408
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B__set_index_xi32_valueT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef align 8 %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef align 8 %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 416
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_throw_oob_xi32({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 424
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_unchecked_index_xi32({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 432
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_unchecked_insert_xi32_valueT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef align 8 %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef align 8 %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 440
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_iterator_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 448
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_each_fFunctionT_to_Nothing({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 456
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_reduce_accumulatorT_fFunctionT._T_to_T({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 464
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_all_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 472
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_any_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 480
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_map_fFunctionT_to_U({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 488
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_filter_fFunctionT_to_i1({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 496
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_chain_otherIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 504
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_interleave_otherIterableT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 512
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_zip_otherIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 520
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_product_otherIterableU({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 528
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @Array_B_repr_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 536
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: nounwind
define { ptr, ptr, ptr, i32 } @Array__Self_from_iterable_iterableIterableT(ptr nocapture nofree readnone %0, { ptr, ptr, ptr, i32 } %1) #11 {
  %3 = alloca [0 x ptr], align 8
  %.fca.0.extract26 = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract27 = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract28 = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract29 = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract26, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract26, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract26, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !882
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !882
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !882
  %product.i.i.i = mul i64 %hash_coef.i.i, 3037712219555723519
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !882
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract26) #44
  %5 = sext i32 %.fca.3.extract29 to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract26, i64 %5
  %7 = load ptr, ptr %6, align 8
  %result.i = call align 8 ptr %7(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract27) #41
  %result.i2 = call noalias nonnull align 8 dereferenceable(24) ptr @bump_malloc_inner(i64 noundef 24, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i, ptr %result.i2, align 8
  %8 = call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(24) %result.i2) #44
  %9 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull readonly align 8 %3) #44
  %10 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 16 dereferenceable(744) @Array) #37
  %11 = load ptr, ptr %result.i, align 8
  %12 = getelementptr i8, ptr %11, i64 72
  %13 = load ptr, ptr %12, align 8
  %result.i1.i = call { i64, i64 } %13(ptr nocapture nofree nonnull readonly align 8 %result.i) #41
  %14 = extractvalue { i64, i64 } %result.i1.i, 0
  %result.i2.i = call noalias ptr @bump_malloc_inner(i64 noundef %14, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %15 = getelementptr inbounds i8, ptr %result.i2, i64 8
  store ptr %result.i2.i, ptr %15, align 8
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 16 dereferenceable(744) @Array) #37
  %17 = getelementptr inbounds i8, ptr %result.i2, i64 20
  store i32 1, ptr %17, align 4
  %18 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract26, 0
  %19 = insertvalue { ptr, ptr, ptr, i32 } %18, ptr %.fca.1.extract27, 1
  %20 = insertvalue { ptr, ptr, ptr, i32 } %19, ptr %.fca.2.extract28, 2
  %21 = insertvalue { ptr, ptr, ptr, i32 } %20, i32 %offset.i.i, 3
  %22 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %3) #44
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 184, ptr nocapture nofree noundef align 8 %.fca.0.extract26) #44
  %24 = sext i32 %offset.i.i to i64
  %25 = getelementptr ptr, ptr %.fca.0.extract26, i64 %24
  %26 = getelementptr i8, ptr %25, i64 8
  %27 = load ptr, ptr %26, align 8
  %result.i18 = call ptr %27({ ptr, ptr, ptr, i32 } %21, ptr nocapture nofree noundef nonnull readonly align 8 %3) #45
  %28 = call { ptr, ptr, ptr, i32 } %result.i18({ ptr, ptr, ptr, i32 } %21, { ptr, ptr, ptr, i32 } %21, ptr nonnull align 8 %3) #42
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %28, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %28, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %28, 2
  %hash_coef_ptr.i.i20 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i21 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i22 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i23 = load i64, ptr %hash_coef_ptr.i.i20, align 4, !noalias !23
  %tbl_size.i.i24 = load i64, ptr %tbl_size_ptr.i.i21, align 4, !noalias !23
  %offset_tbl.i.i25 = load ptr, ptr %offset_tbl_ptr.i.i22, align 8, !noalias !23
  %product.i.i.i26 = mul i64 %hash_coef.i.i23, 8673632051301757104
  %shifted.i.i.i27 = lshr i64 %product.i.i.i26, 32
  %xored.i.i.i28 = xor i64 %shifted.i.i.i27, %product.i.i.i26
  %hash.i.i.i29 = and i64 %xored.i.i.i28, %tbl_size.i.i24
  %offset_ptr.i.i30 = getelementptr i32, ptr %offset_tbl.i.i25, i64 %hash.i.i.i29
  %offset.i.i45 = load i32, ptr %offset_ptr.i.i30, align 4, !noalias !885
  %29 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %30 = insertvalue { ptr, ptr, ptr, i32 } %29, ptr %.fca.1.extract, 1
  %31 = insertvalue { ptr, ptr, ptr, i32 } %30, ptr %.fca.2.extract, 2
  %32 = insertvalue { ptr, ptr, ptr, i32 } %31, i32 %offset.i.i45, 3
  %33 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %3)
  %34 = call ptr @llvm.invariant.start.p0(i64 noundef 24, ptr nocapture nofree noundef align 8 %.fca.0.extract)
  %35 = sext i32 %offset.i.i45 to i64
  %36 = getelementptr ptr, ptr %.fca.0.extract, i64 %35
  %37 = getelementptr i8, ptr %36, i64 8
  %38 = load ptr, ptr %37, align 8
  %result.i4793 = call ptr %38({ ptr, ptr, ptr, i32 } %32, ptr nocapture nofree noundef nonnull readonly align 8 %3) #45
  %39 = call { ptr, i160 } %result.i4793({ ptr, ptr, ptr, i32 } %32, { ptr, ptr, ptr, i32 } %32, ptr nonnull align 8 %3) #42
  %.fca.0.extract6394 = extractvalue { ptr, i160 } %39, 0
  %40 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract26)
  %41 = icmp ne ptr %.fca.0.extract6394, @nil_typ
  %42 = icmp ne ptr %.fca.0.extract6394, null
  %.not7195 = and i1 %41, %42
  br i1 %.not7195, label %._crit_edge.lr.ph, label %.critedge

._crit_edge.lr.ph:                                ; preds = %2
  %43 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract26)
  %44 = getelementptr inbounds i8, ptr %result.i2, i64 16
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.lr.ph, %Array_append_xT.exit
  %45 = phi ptr [ %result.i2.i, %._crit_edge.lr.ph ], [ %73, %Array_append_xT.exit ]
  %.pre99 = phi i32 [ 0, %._crit_edge.lr.ph ], [ %84, %Array_append_xT.exit ]
  %46 = phi { ptr, i160 } [ %39, %._crit_edge.lr.ph ], [ %87, %Array_append_xT.exit ]
  %47 = load i32, ptr %17, align 4
  %.not.i = icmp slt i32 %.pre99, %47
  br i1 %.not.i, label %._crit_edge.Array_append_xT.exit_crit_edge, label %48

._crit_edge.Array_append_xT.exit_crit_edge:       ; preds = %._crit_edge
  %.pre104 = load ptr, ptr %result.i, align 8
  br label %Array_append_xT.exit

48:                                               ; preds = %._crit_edge
  %49 = shl i32 %47, 1
  %.not.i100 = icmp sgt i32 %49, %47
  %.pre.pre = load ptr, ptr %15, align 8
  %.pre = load ptr, ptr %result.i, align 8
  br i1 %.not.i100, label %50, label %Array_append_xT.exit

50:                                               ; preds = %48
  store i32 %49, ptr %17, align 4
  %51 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 16 dereferenceable(744) @Array)
  %52 = getelementptr i8, ptr %.pre, i64 72
  %53 = load ptr, ptr %52, align 8
  %result.i2.i101 = call { i64, i64 } %53(ptr nocapture nofree nonnull readonly %result.i) #41
  %54 = extractvalue { i64, i64 } %result.i2.i101, 0
  %55 = sext i32 %49 to i64
  %56 = mul i64 %54, %55
  %result.i3.i = call noalias ptr @bump_malloc_inner(i64 noundef %56, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i3.i, ptr %15, align 8
  %57 = icmp sgt i32 %.pre99, 0
  %.pre105 = load ptr, ptr %result.i, align 8
  br i1 %57, label %._crit_edge.lr.ph.i, label %Array_append_xT.exit

._crit_edge.lr.ph.i:                              ; preds = %50
  %58 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 16 dereferenceable(744) @Array)
  %59 = getelementptr i8, ptr %.pre105, i64 72
  %60 = getelementptr i8, ptr %.pre105, i64 56
  %61 = getelementptr i8, ptr %.pre105, i64 64
  br label %._crit_edge.i

._crit_edge.i:                                    ; preds = %._crit_edge.i, %._crit_edge.lr.ph.i
  %.022.i = phi i32 [ 0, %._crit_edge.lr.ph.i ], [ %70, %._crit_edge.i ]
  %62 = load ptr, ptr %59, align 8
  %result.i5.i = call { i64, i64 } %62(ptr nocapture nofree nonnull readonly %result.i) #41
  %63 = extractvalue { i64, i64 } %result.i5.i, 0
  %64 = zext nneg i32 %.022.i to i64
  %65 = mul i64 %63, %64
  %66 = getelementptr i8, ptr %.pre.pre, i64 %65
  %67 = load ptr, ptr %60, align 8
  %result.i6.i = call { ptr, i160 } %67(ptr nocapture nofree readonly %66, ptr nocapture nofree nonnull readonly %result.i) #41
  %68 = getelementptr i8, ptr %result.i3.i, i64 %65
  %69 = load ptr, ptr %61, align 8
  call void %69({ ptr, i160 } %result.i6.i, ptr nocapture nofree nonnull readonly %result.i, ptr nocapture nofree writeonly %68) #49
  %70 = add nuw nsw i32 %.022.i, 1
  %71 = icmp slt i32 %70, %.pre99
  br i1 %71, label %._crit_edge.i, label %Array_append_xT.exit

Array_append_xT.exit:                             ; preds = %._crit_edge.i, %._crit_edge.Array_append_xT.exit_crit_edge, %50, %48
  %72 = phi ptr [ %.pre104, %._crit_edge.Array_append_xT.exit_crit_edge ], [ %.pre, %48 ], [ %.pre105, %50 ], [ %.pre105, %._crit_edge.i ]
  %73 = phi ptr [ %45, %._crit_edge.Array_append_xT.exit_crit_edge ], [ %.pre.pre, %48 ], [ %result.i3.i, %50 ], [ %result.i3.i, %._crit_edge.i ]
  %74 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 16 dereferenceable(744) @Array) #50
  %75 = getelementptr i8, ptr %72, i64 72
  %76 = load ptr, ptr %75, align 8
  %result.i2.i98 = call { i64, i64 } %76(ptr nocapture nofree nonnull readonly %result.i) #41
  %77 = extractvalue { i64, i64 } %result.i2.i98, 0
  %78 = sext i32 %.pre99 to i64
  %79 = mul i64 %77, %78
  %80 = getelementptr i8, ptr %73, i64 %79
  %81 = getelementptr i8, ptr %72, i64 64
  %82 = load ptr, ptr %81, align 8
  call void %82({ ptr, i160 } %46, ptr nocapture nofree nonnull readonly %result.i, ptr nocapture nofree writeonly %80) #49
  %83 = load i32, ptr %44, align 8
  %84 = add i32 %83, 1
  %85 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 16 dereferenceable(744) @Array) #50
  store i32 %84, ptr %44, align 8
  %86 = load ptr, ptr %37, align 8
  %result.i47 = call ptr %86({ ptr, ptr, ptr, i32 } %32, ptr nocapture nofree noundef nonnull readonly %3) #45
  %87 = call { ptr, i160 } %result.i47({ ptr, ptr, ptr, i32 } %32, { ptr, ptr, ptr, i32 } %32, ptr nonnull align 8 %3) #42
  %.fca.0.extract63 = extractvalue { ptr, i160 } %87, 0
  %88 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract26)
  %89 = icmp ne ptr %.fca.0.extract63, @nil_typ
  %90 = icmp ne ptr %.fca.0.extract63, null
  %.not71 = and i1 %89, %90
  br i1 %.not71, label %._crit_edge, label %.critedge

.critedge:                                        ; preds = %Array_append_xT.exit, %2
  %.pre-phi = insertvalue { ptr, ptr, ptr, i32 } { ptr @Array, ptr undef, ptr undef, i32 undef }, ptr %result.i2, 1
  %91 = insertvalue { ptr, ptr, ptr, i32 } %.pre-phi, ptr undef, 2
  %92 = insertvalue { ptr, ptr, ptr, i32 } %91, i32 10, 3
  ret { ptr, ptr, ptr, i32 } %92
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @Array_init_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #5 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !888
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !888
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !888
  %product.i.i.i = mul i64 %hash_coef.i.i, -5261542750394134544
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !888
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract, i64 %5
  %7 = load ptr, ptr %6, align 8
  %result.i = call nonnull align 8 dereferenceable(8) ptr %7(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract) #41
  %8 = load ptr, ptr %result.i, align 8
  %9 = getelementptr i8, ptr %8, i64 72
  %10 = load ptr, ptr %9, align 8
  %result.i1 = call { i64, i64 } %10(ptr nocapture nofree nonnull readonly align 8 %result.i) #41
  %11 = extractvalue { i64, i64 } %result.i1, 0
  %result.i2 = call noalias ptr @bump_malloc_inner(i64 noundef %11, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %12 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %13 = getelementptr i8, ptr %6, i64 8
  %14 = load ptr, ptr %13, align 8
  %15 = getelementptr i8, ptr %14, i64 8
  %16 = load ptr, ptr %15, align 8
  %17 = insertvalue { ptr } undef, ptr %result.i2, 0
  call void %16(ptr %.fca.1.extract, { ptr } %17) #39
  %18 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %19 = getelementptr i8, ptr %6, i64 16
  %20 = load ptr, ptr %19, align 8
  %21 = getelementptr i8, ptr %20, i64 8
  %22 = load ptr, ptr %21, align 8
  call void %22(ptr %.fca.1.extract, i32 0) #39
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #50
  %24 = getelementptr i8, ptr %6, i64 24
  %25 = load ptr, ptr %24, align 8
  %26 = getelementptr i8, ptr %25, i64 8
  %27 = load ptr, ptr %26, align 8
  call void %27(ptr %.fca.1.extract, i32 1) #39
  ret void
}

; Function Attrs: mustprogress nounwind willreturn
define void @Array_init_capacityi32({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, i32 %3) #6 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !891
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !891
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !891
  %product.i.i.i = mul i64 %hash_coef.i.i, -5261542750394134544
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !891
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract, i64 %6
  %8 = getelementptr i8, ptr %7, i64 24
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr i8, ptr %9, i64 8
  %11 = load ptr, ptr %10, align 8
  call void %11(ptr %.fca.1.extract, i32 %3) #39
  %12 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %13 = load ptr, ptr %8, align 8
  %14 = load ptr, ptr %13, align 8
  %15 = call i32 %14(ptr nonnull %.fca.1.extract) #40
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %17 = load ptr, ptr %7, align 8
  %result.i = call nonnull align 8 dereferenceable(8) ptr %17(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract) #41
  %18 = load ptr, ptr %result.i, align 8
  %19 = getelementptr i8, ptr %18, i64 72
  %20 = load ptr, ptr %19, align 8
  %result.i1 = call { i64, i64 } %20(ptr nocapture nofree nonnull readonly align 8 %result.i) #41
  %21 = extractvalue { i64, i64 } %result.i1, 0
  %22 = sext i32 %15 to i64
  %23 = mul i64 %21, %22
  %result.i2 = call noalias ptr @bump_malloc_inner(i64 noundef %23, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %24 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %25 = getelementptr i8, ptr %7, i64 8
  %26 = load ptr, ptr %25, align 8
  %27 = getelementptr i8, ptr %26, i64 8
  %28 = load ptr, ptr %27, align 8
  %29 = insertvalue { ptr } undef, ptr %result.i2, 0
  call void %28(ptr %.fca.1.extract, { ptr } %29) #39
  %30 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %31 = getelementptr i8, ptr %7, i64 16
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr i8, ptr %32, i64 8
  %34 = load ptr, ptr %33, align 8
  call void %34(ptr %.fca.1.extract, i32 0) #39
  ret void
}

; Function Attrs: mustprogress nounwind willreturn
define void @Array_init_lengthi32_capacityi32({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, i32 %3, i32 %4) #6 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !894
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !894
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !894
  %product.i.i.i = mul i64 %hash_coef.i.i, -5261542750394134544
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !894
  %6 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %7 = sext i32 %offset.i.i to i64
  %8 = getelementptr ptr, ptr %.fca.0.extract, i64 %7
  %9 = getelementptr i8, ptr %8, i64 16
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr i8, ptr %10, i64 8
  %12 = load ptr, ptr %11, align 8
  call void %12(ptr %.fca.1.extract, i32 %3) #39
  %13 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %14 = getelementptr i8, ptr %8, i64 24
  %15 = load ptr, ptr %14, align 8
  %16 = getelementptr i8, ptr %15, i64 8
  %17 = load ptr, ptr %16, align 8
  call void %17(ptr %.fca.1.extract, i32 %4) #39
  %18 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %19 = load ptr, ptr %14, align 8
  %20 = load ptr, ptr %19, align 8
  %21 = call i32 %20(ptr nonnull %.fca.1.extract) #40
  %22 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %23 = load ptr, ptr %8, align 8
  %result.i = call nonnull align 8 dereferenceable(8) ptr %23(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract) #41
  %24 = load ptr, ptr %result.i, align 8
  %25 = getelementptr i8, ptr %24, i64 72
  %26 = load ptr, ptr %25, align 8
  %result.i1 = call { i64, i64 } %26(ptr nocapture nofree nonnull readonly align 8 %result.i) #41
  %27 = extractvalue { i64, i64 } %result.i1, 0
  %28 = sext i32 %21 to i64
  %29 = mul i64 %27, %28
  %result.i2 = call noalias ptr @bump_malloc_inner(i64 noundef %29, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %30 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %31 = getelementptr i8, ptr %8, i64 8
  %32 = load ptr, ptr %31, align 8
  %33 = getelementptr i8, ptr %32, i64 8
  %34 = load ptr, ptr %33, align 8
  %35 = insertvalue { ptr } undef, ptr %result.i2, 0
  call void %34(ptr %.fca.1.extract, { ptr } %35) #39
  ret void
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @Array_init_bufferBufferT_lengthi32_capacityi32({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr } %3, i32 %4, i32 %5) #5 {
  %.fca.0.extract2 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract2, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !897
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !897
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !897
  %product.i.i.i = mul i64 %hash_coef.i.i, -5261542750394134544
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !897
  %7 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract2) #37
  %8 = sext i32 %offset.i.i to i64
  %9 = getelementptr ptr, ptr %.fca.0.extract2, i64 %8
  %10 = getelementptr i8, ptr %9, i64 8
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr i8, ptr %11, i64 8
  %13 = load ptr, ptr %12, align 8
  call void %13(ptr %.fca.1.extract, { ptr } %3) #39
  %14 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract2) #37
  %15 = getelementptr i8, ptr %9, i64 16
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr i8, ptr %16, i64 8
  %18 = load ptr, ptr %17, align 8
  call void %18(ptr %.fca.1.extract, i32 %4) #39
  %19 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract2) #37
  %20 = getelementptr i8, ptr %9, i64 24
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr i8, ptr %21, i64 8
  %23 = load ptr, ptr %22, align 8
  call void %23(ptr %.fca.1.extract, i32 %5) #39
  ret void
}

; Function Attrs: mustprogress nounwind willreturn
define i32 @Array_length_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #6 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !900
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !900
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !900
  %product.i.i.i = mul i64 %hash_coef.i.i, -5261542750394134544
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !900
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract, i64 %5
  %7 = getelementptr i8, ptr %6, i64 16
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = call i32 %9(ptr %.fca.1.extract) #40
  ret i32 %10
}

; Function Attrs: mustprogress nounwind willreturn
define i32 @Array_capacity_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #6 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !903
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !903
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !903
  %product.i.i.i = mul i64 %hash_coef.i.i, -5261542750394134544
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !903
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract, i64 %5
  %7 = getelementptr i8, ptr %6, i64 24
  %8 = load ptr, ptr %7, align 8
  %9 = load ptr, ptr %8, align 8
  %10 = call i32 %9(ptr %.fca.1.extract) #40
  ret i32 %10
}

; Function Attrs: nounwind
define { ptr, ptr, ptr, i32 } @Array_append_xT({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, i160 } %3) #11 {
  %5 = alloca [1 x ptr], align 8
  %6 = alloca { ptr }, align 8
  %.fca.0.extract4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract5 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract4, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract4, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract4, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !906
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !906
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !906
  %product.i.i.i = mul i64 %hash_coef.i.i, -5261542750394134544
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !906
  %7 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract4) #37
  %8 = sext i32 %offset.i.i to i64
  %9 = getelementptr ptr, ptr %.fca.0.extract4, i64 %8
  %10 = getelementptr i8, ptr %9, i64 16
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr %11, align 8
  %13 = call i32 %12(ptr %.fca.1.extract5) #40
  %14 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract4) #37
  %15 = getelementptr i8, ptr %9, i64 24
  %16 = load ptr, ptr %15, align 8
  %17 = load ptr, ptr %16, align 8
  %18 = call i32 %17(ptr %.fca.1.extract5) #40
  %.not = icmp slt i32 %13, %18
  br i1 %.not, label %.._crit_edge_crit_edge, label %19

.._crit_edge_crit_edge:                           ; preds = %4
  %.pre29 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract4, 0
  %.pre30 = insertvalue { ptr, ptr, ptr, i32 } %.pre29, ptr %.fca.1.extract5, 1
  %.pre32 = insertvalue { ptr, ptr, ptr, i32 } %.pre30, ptr %.fca.2.extract, 2
  br label %._crit_edge

19:                                               ; preds = %4
  %20 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract4) #50
  %21 = call i32 %17(ptr %.fca.1.extract5) #40
  %22 = shl i32 %21, 1
  %23 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract4, 0
  %24 = insertvalue { ptr, ptr, ptr, i32 } %23, ptr %.fca.1.extract5, 1
  %25 = insertvalue { ptr, ptr, ptr, i32 } %24, ptr %.fca.2.extract, 2
  %26 = insertvalue { ptr, ptr, ptr, i32 } %25, i32 %offset.i.i, 3
  store ptr @_parameterization_i32, ptr %5, align 8
  %27 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %5) #50
  %28 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract4) #50
  %29 = getelementptr i8, ptr %9, i64 104
  %30 = load ptr, ptr %29, align 8
  store ptr @i32_typ, ptr %6, align 8
  %result.i = call ptr %30({ ptr, ptr, ptr, i32 } %26, ptr nocapture nofree noundef nonnull readonly align 8 %6) #45
  call void %result.i({ ptr, ptr, ptr, i32 } %26, { ptr, ptr, ptr, i32 } %26, ptr nonnull align 8 dereferenceable(8) %5, i32 %22) #42
  %.pre = load ptr, ptr %10, align 8
  %.pre28 = load ptr, ptr %.pre, align 8
  br label %._crit_edge

._crit_edge:                                      ; preds = %.._crit_edge_crit_edge, %19
  %.pre-phi33 = phi { ptr, ptr, ptr, i32 } [ %.pre32, %.._crit_edge_crit_edge ], [ %25, %19 ]
  %31 = phi ptr [ %12, %.._crit_edge_crit_edge ], [ %.pre28, %19 ]
  %32 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract4) #50
  %33 = getelementptr i8, ptr %9, i64 8
  %34 = load ptr, ptr %33, align 8
  %35 = load ptr, ptr %34, align 8
  %36 = call { ptr } %35(ptr nonnull %.fca.1.extract5) #40
  %.fca.0.extract14 = extractvalue { ptr } %36, 0
  %37 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract4) #50
  %38 = call i32 %31(ptr nonnull %.fca.1.extract5) #40
  %39 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract4) #50
  %40 = load ptr, ptr %9, align 8
  %result.i1 = call nonnull align 8 dereferenceable(8) ptr %40(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract5) #41
  %41 = load ptr, ptr %result.i1, align 8
  %42 = getelementptr i8, ptr %41, i64 72
  %43 = load ptr, ptr %42, align 8
  %result.i2 = call { i64, i64 } %43(ptr nocapture nofree nonnull readonly align 8 %result.i1) #41
  %44 = extractvalue { i64, i64 } %result.i2, 0
  %45 = sext i32 %38 to i64
  %46 = mul i64 %44, %45
  %47 = getelementptr i8, ptr %.fca.0.extract14, i64 %46
  %48 = getelementptr i8, ptr %41, i64 64
  %49 = load ptr, ptr %48, align 8
  call void %49({ ptr, i160 } %3, ptr nocapture nofree nonnull readonly align 8 %result.i1, ptr nocapture nofree writeonly %47) #49
  %50 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract4) #50
  %51 = load ptr, ptr %10, align 8
  %52 = load ptr, ptr %51, align 8
  %53 = call i32 %52(ptr %.fca.1.extract5) #40
  %54 = add i32 %53, 1
  %55 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract4) #50
  %56 = getelementptr i8, ptr %51, i64 8
  %57 = load ptr, ptr %56, align 8
  call void %57(ptr %.fca.1.extract5, i32 %54) #39
  %hash_coef.i.i7 = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !909
  %tbl_size.i.i8 = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !909
  %offset_tbl.i.i9 = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !909
  %product.i.i.i10 = mul i64 %hash_coef.i.i7, -5261542750394134544
  %shifted.i.i.i11 = lshr i64 %product.i.i.i10, 32
  %xored.i.i.i12 = xor i64 %shifted.i.i.i11, %product.i.i.i10
  %hash.i.i.i13 = and i64 %xored.i.i.i12, %tbl_size.i.i8
  %offset_ptr.i.i14 = getelementptr i32, ptr %offset_tbl.i.i9, i64 %hash.i.i.i13
  %offset.i.i15 = load i32, ptr %offset_ptr.i.i14, align 4, !noalias !909
  %58 = insertvalue { ptr, ptr, ptr, i32 } %.pre-phi33, i32 %offset.i.i15, 3
  ret { ptr, ptr, ptr, i32 } %58
}

; Function Attrs: nounwind
define { ptr, ptr, ptr, i32 } @Array_extend_otherArrayT({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3) #11 {
  %5 = alloca [0 x ptr], align 8
  %6 = alloca [1 x ptr], align 8
  %7 = alloca { ptr }, align 8
  %8 = alloca [2 x ptr], align 8
  %9 = alloca { ptr, ptr }, align 8
  %.fca.0.extract10 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract11 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract12 = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract10, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract10, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract10, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !912
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !912
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !912
  %product.i.i.i = mul i64 %hash_coef.i.i, -5261542750394134544
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !912
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !915
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !915
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !915
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, -5261542750394134544
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i13 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !915
  %10 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %11 = insertvalue { ptr, ptr, ptr, i32 } %10, ptr %.fca.1.extract, 1
  %12 = insertvalue { ptr, ptr, ptr, i32 } %11, ptr %.fca.2.extract, 2
  %13 = insertvalue { ptr, ptr, ptr, i32 } %12, i32 %offset.i.i13, 3
  %14 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %5) #37
  %15 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %16 = sext i32 %offset.i.i13 to i64
  %17 = getelementptr ptr, ptr %.fca.0.extract, i64 %16
  %18 = getelementptr i8, ptr %17, i64 72
  %19 = load ptr, ptr %18, align 8
  %result.i = call ptr %19({ ptr, ptr, ptr, i32 } %13, ptr nocapture nofree noundef nonnull readonly align 8 %5) #45
  %20 = call i32 %result.i({ ptr, ptr, ptr, i32 } %13, { ptr, ptr, ptr, i32 } %13, ptr nonnull align 8 %5) #42
  %21 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract10)
  %22 = sext i32 %offset.i.i to i64
  %23 = getelementptr ptr, ptr %.fca.0.extract10, i64 %22
  %24 = getelementptr i8, ptr %23, i64 16
  %25 = load ptr, ptr %24, align 8
  %26 = load ptr, ptr %25, align 8
  %27 = call i32 %26(ptr %.fca.1.extract11) #40
  %28 = add i32 %27, %20
  %29 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract10, 0
  %30 = insertvalue { ptr, ptr, ptr, i32 } %29, ptr %.fca.1.extract11, 1
  %31 = insertvalue { ptr, ptr, ptr, i32 } %30, ptr %.fca.2.extract12, 2
  %32 = insertvalue { ptr, ptr, ptr, i32 } %31, i32 %offset.i.i, 3
  %33 = alloca [1 x ptr], align 8
  store ptr @_parameterization_i32, ptr %33, align 8
  %34 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %33)
  %35 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract10)
  %36 = getelementptr i8, ptr %23, i64 104
  %37 = load ptr, ptr %36, align 8
  %38 = alloca { ptr }, align 8
  store ptr @i32_typ, ptr %38, align 8
  %result.i15 = call ptr %37({ ptr, ptr, ptr, i32 } %32, ptr nocapture nofree noundef nonnull readonly align 8 %38) #45
  call void %result.i15({ ptr, ptr, ptr, i32 } %32, { ptr, ptr, ptr, i32 } %32, ptr nonnull align 8 dereferenceable(8) %33, i32 %28) #42
  %39 = getelementptr inbounds i8, ptr %8, i64 8
  %40 = getelementptr inbounds i8, ptr %9, i64 8
  %41 = icmp sgt i32 %20, 0
  br i1 %41, label %._crit_edge.lr.ph, label %._crit_edge1._crit_edge

._crit_edge.lr.ph:                                ; preds = %4
  %42 = getelementptr i8, ptr %17, i64 136
  %43 = getelementptr i8, ptr %23, i64 144
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.lr.ph, %._crit_edge
  %.052 = phi i32 [ 0, %._crit_edge.lr.ph ], [ %54, %._crit_edge ]
  %44 = add i32 %.052, %27
  store ptr @_parameterization_i32, ptr %6, align 8
  %45 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %6)
  %46 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract)
  %47 = load ptr, ptr %42, align 8
  store ptr @i32_typ, ptr %7, align 8
  %result.i16 = call ptr %47({ ptr, ptr, ptr, i32 } %13, ptr nocapture nofree noundef nonnull readonly %7) #45
  %48 = call { ptr, i160 } %result.i16({ ptr, ptr, ptr, i32 } %13, { ptr, ptr, ptr, i32 } %13, ptr nonnull align 8 dereferenceable(8) %6, i32 %.052) #42
  %.fca.0.extract23 = extractvalue { ptr, i160 } %48, 0
  %49 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %50 = load ptr, ptr %23, align 8
  %result.i17 = call ptr %50(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract11) #41
  store ptr @_parameterization_i32, ptr %8, align 8
  store ptr %result.i17, ptr %39, align 8
  %51 = call ptr @llvm.invariant.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %8)
  %52 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %53 = load ptr, ptr %43, align 8
  store ptr @i32_typ, ptr %9, align 8
  store ptr %.fca.0.extract23, ptr %40, align 8
  %result.i18 = call ptr %53({ ptr, ptr, ptr, i32 } %32, ptr nocapture nofree noundef nonnull readonly %9) #45
  call void %result.i18({ ptr, ptr, ptr, i32 } %32, { ptr, ptr, ptr, i32 } %32, ptr nonnull align 8 dereferenceable(16) %8, i32 %44, { ptr, i160 } %48) #42
  %54 = add nuw nsw i32 %.052, 1
  %55 = icmp slt i32 %54, %20
  br i1 %55, label %._crit_edge, label %._crit_edge1._crit_edge

._crit_edge1._crit_edge:                          ; preds = %._crit_edge, %4
  %56 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %57 = load ptr, ptr %24, align 8
  %58 = getelementptr i8, ptr %57, i64 8
  %59 = load ptr, ptr %58, align 8
  call void %59(ptr %.fca.1.extract11, i32 %28) #39
  %hash_coef.i.i23 = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !918
  %tbl_size.i.i24 = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !918
  %offset_tbl.i.i25 = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !918
  %product.i.i.i26 = mul i64 %hash_coef.i.i23, -5261542750394134544
  %shifted.i.i.i27 = lshr i64 %product.i.i.i26, 32
  %xored.i.i.i28 = xor i64 %shifted.i.i.i27, %product.i.i.i26
  %hash.i.i.i29 = and i64 %xored.i.i.i28, %tbl_size.i.i24
  %offset_ptr.i.i30 = getelementptr i32, ptr %offset_tbl.i.i25, i64 %hash.i.i.i29
  %offset.i.i31 = load i32, ptr %offset_ptr.i.i30, align 4, !noalias !918
  %60 = insertvalue { ptr, ptr, ptr, i32 } %31, i32 %offset.i.i31, 3
  ret { ptr, ptr, ptr, i32 } %60
}

; Function Attrs: mustprogress nounwind willreturn
define void @Array_reserve_new_capacityi32({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, i32 %3) #6 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8
  %product.i.i.i = mul i64 %hash_coef.i.i, -5261542750394134544
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract, i64 %6
  %8 = getelementptr i8, ptr %7, i64 24
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = call i32 %10(ptr %.fca.1.extract) #40
  %.not = icmp sgt i32 %3, %11
  br i1 %.not, label %12, label %.loopexit

12:                                               ; preds = %4
  %13 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %14 = getelementptr i8, ptr %9, i64 8
  %15 = load ptr, ptr %14, align 8
  call void %15(ptr %.fca.1.extract, i32 %3) #39
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %17 = getelementptr i8, ptr %7, i64 8
  %18 = load ptr, ptr %17, align 8
  %19 = load ptr, ptr %18, align 8
  %20 = call { ptr } %19(ptr nonnull %.fca.1.extract) #40
  %.fca.0.extract22 = extractvalue { ptr } %20, 0
  %21 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %22 = load ptr, ptr %8, align 8
  %23 = load ptr, ptr %22, align 8
  %24 = call i32 %23(ptr nonnull %.fca.1.extract) #40
  %25 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %26 = load ptr, ptr %7, align 8
  %result.i = call nonnull align 8 dereferenceable(8) ptr %26(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract) #41
  %27 = load ptr, ptr %result.i, align 8
  %28 = getelementptr i8, ptr %27, i64 72
  %29 = load ptr, ptr %28, align 8
  %result.i2 = call { i64, i64 } %29(ptr nocapture nofree nonnull readonly align 8 %result.i) #41
  %30 = extractvalue { i64, i64 } %result.i2, 0
  %31 = sext i32 %24 to i64
  %32 = mul i64 %30, %31
  %result.i3 = call noalias ptr @bump_malloc_inner(i64 noundef %32, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %33 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %34 = load ptr, ptr %17, align 8
  %35 = getelementptr i8, ptr %34, i64 8
  %36 = load ptr, ptr %35, align 8
  %37 = insertvalue { ptr } undef, ptr %result.i3, 0
  call void %36(ptr %.fca.1.extract, { ptr } %37) #39
  %38 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %39 = getelementptr i8, ptr %7, i64 16
  %40 = load ptr, ptr %39, align 8
  %41 = load ptr, ptr %40, align 8
  %42 = call i32 %41(ptr %.fca.1.extract) #40
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %._crit_edge.lr.ph, label %.loopexit

._crit_edge.lr.ph:                                ; preds = %12
  %44 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %45 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.lr.ph, %._crit_edge
  %.022 = phi i32 [ 0, %._crit_edge.lr.ph ], [ %63, %._crit_edge ]
  %46 = load ptr, ptr %7, align 8
  %result.i4 = call align 8 ptr %46(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract) #41
  %47 = load ptr, ptr %result.i4, align 8
  %48 = getelementptr i8, ptr %47, i64 72
  %49 = load ptr, ptr %48, align 8
  %result.i5 = call { i64, i64 } %49(ptr nocapture nofree nonnull readonly align 8 %result.i4) #41
  %50 = extractvalue { i64, i64 } %result.i5, 0
  %51 = zext nneg i32 %.022 to i64
  %52 = mul i64 %50, %51
  %53 = getelementptr i8, ptr %.fca.0.extract22, i64 %52
  %54 = getelementptr i8, ptr %47, i64 56
  %55 = load ptr, ptr %54, align 8
  %result.i6 = call { ptr, i160 } %55(ptr nocapture nofree readonly %53, ptr nocapture nofree nonnull readonly align 8 %result.i4) #41
  %56 = load ptr, ptr %17, align 8
  %57 = load ptr, ptr %56, align 8
  %58 = call { ptr } %57(ptr nonnull %.fca.1.extract) #40
  %.fca.0.extract7 = extractvalue { ptr } %58, 0
  %59 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %60 = getelementptr i8, ptr %.fca.0.extract7, i64 %52
  %61 = getelementptr i8, ptr %47, i64 64
  %62 = load ptr, ptr %61, align 8
  call void %62({ ptr, i160 } %result.i6, ptr nocapture nofree nonnull readonly align 8 %result.i4, ptr nocapture nofree writeonly %60) #49
  %63 = add nuw nsw i32 %.022, 1
  %64 = load ptr, ptr %39, align 8
  %65 = load ptr, ptr %64, align 8
  %66 = call i32 %65(ptr %.fca.1.extract) #40
  %67 = icmp slt i32 %63, %66
  br i1 %67, label %._crit_edge, label %.loopexit

.loopexit:                                        ; preds = %._crit_edge, %12, %4
  ret void
}

; Function Attrs: nounwind
define { ptr, i160 } @Array__index_xi32({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, i32 %3) #11 {
  %5 = alloca [1 x ptr], align 8
  %6 = alloca { ptr }, align 8
  %7 = alloca [1 x ptr], align 8
  %8 = alloca { ptr }, align 8
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !921
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !921
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !921
  %product.i.i.i = mul i64 %hash_coef.i.i, -5261542750394134544
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !921
  %9 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #37
  %10 = sext i32 %offset.i.i to i64
  %11 = getelementptr ptr, ptr %.fca.0.extract, i64 %10
  %12 = getelementptr i8, ptr %11, i64 16
  %13 = load ptr, ptr %12, align 8
  %14 = load ptr, ptr %13, align 8
  %15 = call i32 %14(ptr %.fca.1.extract) #40
  %16 = add i32 %15, -1
  %17 = icmp sgt i32 %3, %16
  %18 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #37
  %19 = call i32 %14(ptr %.fca.1.extract) #40
  %20 = add i32 %19, %3
  %21 = icmp slt i32 %20, 0
  %.0 = select i1 %17, i1 true, i1 %21
  br i1 %.0, label %22, label %._crit_edge

22:                                               ; preds = %4
  %23 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %24 = insertvalue { ptr, ptr, ptr, i32 } %23, ptr %.fca.1.extract, 1
  %25 = insertvalue { ptr, ptr, ptr, i32 } %24, ptr %.fca.2.extract, 2
  %26 = insertvalue { ptr, ptr, ptr, i32 } %25, i32 %offset.i.i, 3
  store ptr @_parameterization_i32, ptr %5, align 8
  %27 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %5) #50
  %28 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %29 = getelementptr i8, ptr %11, i64 128
  %30 = load ptr, ptr %29, align 8
  store ptr @i32_typ, ptr %6, align 8
  %result.i = call ptr %30({ ptr, ptr, ptr, i32 } %26, ptr nocapture nofree noundef nonnull readonly align 8 %6) #45
  call void %result.i({ ptr, ptr, ptr, i32 } %26, { ptr, ptr, ptr, i32 } %26, ptr nonnull align 8 dereferenceable(8) %5, i32 %3) #42
  br label %._crit_edge

._crit_edge:                                      ; preds = %22, %4
  %31 = icmp slt i32 %3, 0
  br i1 %31, label %32, label %._crit_edge1

32:                                               ; preds = %._crit_edge
  %33 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %34 = load ptr, ptr %12, align 8
  %35 = load ptr, ptr %34, align 8
  %36 = call i32 %35(ptr %.fca.1.extract) #40
  %37 = add i32 %36, %3
  br label %._crit_edge1

._crit_edge1:                                     ; preds = %32, %._crit_edge
  %.027 = phi i32 [ %37, %32 ], [ %3, %._crit_edge ]
  %38 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %39 = insertvalue { ptr, ptr, ptr, i32 } %38, ptr %.fca.1.extract, 1
  %40 = insertvalue { ptr, ptr, ptr, i32 } %39, ptr %.fca.2.extract, 2
  %41 = insertvalue { ptr, ptr, ptr, i32 } %40, i32 %offset.i.i, 3
  store ptr @_parameterization_i32, ptr %7, align 8
  %42 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %7) #50
  %43 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #50
  %44 = getelementptr i8, ptr %11, i64 136
  %45 = load ptr, ptr %44, align 8
  store ptr @i32_typ, ptr %8, align 8
  %result.i2 = call ptr %45({ ptr, ptr, ptr, i32 } %41, ptr nocapture nofree noundef nonnull readonly align 8 %8) #45
  %46 = call { ptr, i160 } %result.i2({ ptr, ptr, ptr, i32 } %41, { ptr, ptr, ptr, i32 } %41, ptr nonnull align 8 dereferenceable(8) %7, i32 %.027) #42
  ret { ptr, i160 } %46
}

; Function Attrs: nounwind
define void @Array__set_index_xi32_valueT({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, i32 %3, { ptr, i160 } %4) #11 {
  %6 = alloca [1 x ptr], align 8
  %7 = alloca { ptr }, align 8
  %8 = alloca [2 x ptr], align 8
  %9 = alloca { ptr, ptr }, align 8
  %.fca.0.extract16 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract17 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract16, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract16, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract16, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !924
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !924
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !924
  %product.i.i.i = mul i64 %hash_coef.i.i, -5261542750394134544
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !924
  %10 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract16) #37
  %11 = sext i32 %offset.i.i to i64
  %12 = getelementptr ptr, ptr %.fca.0.extract16, i64 %11
  %13 = getelementptr i8, ptr %12, i64 16
  %14 = load ptr, ptr %13, align 8
  %15 = load ptr, ptr %14, align 8
  %16 = call i32 %15(ptr %.fca.1.extract17) #40
  %17 = add i32 %16, -1
  %18 = icmp sgt i32 %3, %17
  %19 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract16) #37
  %20 = call i32 %15(ptr %.fca.1.extract17) #40
  %21 = add i32 %20, %3
  %22 = icmp slt i32 %21, 0
  %.0 = select i1 %18, i1 true, i1 %22
  br i1 %.0, label %23, label %._crit_edge

23:                                               ; preds = %5
  %24 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract16, 0
  %25 = insertvalue { ptr, ptr, ptr, i32 } %24, ptr %.fca.1.extract17, 1
  %26 = insertvalue { ptr, ptr, ptr, i32 } %25, ptr %.fca.2.extract, 2
  %27 = insertvalue { ptr, ptr, ptr, i32 } %26, i32 %offset.i.i, 3
  store ptr @_parameterization_i32, ptr %6, align 8
  %28 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %6) #50
  %29 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract16) #50
  %30 = getelementptr i8, ptr %12, i64 128
  %31 = load ptr, ptr %30, align 8
  store ptr @i32_typ, ptr %7, align 8
  %result.i = call ptr %31({ ptr, ptr, ptr, i32 } %27, ptr nocapture nofree noundef nonnull readonly align 8 %7) #45
  call void %result.i({ ptr, ptr, ptr, i32 } %27, { ptr, ptr, ptr, i32 } %27, ptr nonnull align 8 dereferenceable(8) %6, i32 %3) #42
  br label %._crit_edge

._crit_edge:                                      ; preds = %23, %5
  %32 = icmp slt i32 %3, 0
  br i1 %32, label %33, label %._crit_edge1

33:                                               ; preds = %._crit_edge
  %34 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract16) #50
  %35 = load ptr, ptr %13, align 8
  %36 = load ptr, ptr %35, align 8
  %37 = call i32 %36(ptr %.fca.1.extract17) #40
  %38 = add i32 %37, %3
  br label %._crit_edge1

._crit_edge1:                                     ; preds = %33, %._crit_edge
  %.027 = phi i32 [ %38, %33 ], [ %3, %._crit_edge ]
  %.fca.0.extract = extractvalue { ptr, i160 } %4, 0
  %39 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract16, 0
  %40 = insertvalue { ptr, ptr, ptr, i32 } %39, ptr %.fca.1.extract17, 1
  %41 = insertvalue { ptr, ptr, ptr, i32 } %40, ptr %.fca.2.extract, 2
  %42 = insertvalue { ptr, ptr, ptr, i32 } %41, i32 %offset.i.i, 3
  %43 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract16) #50
  %44 = load ptr, ptr %12, align 8
  %result.i2 = call ptr %44(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract17) #41
  store ptr @_parameterization_i32, ptr %8, align 8
  %45 = getelementptr inbounds i8, ptr %8, i64 8
  store ptr %result.i2, ptr %45, align 8
  %46 = call ptr @llvm.invariant.start.p0(i64 noundef 4, ptr nocapture nofree noundef nonnull align 8 dereferenceable(16) %8) #50
  %47 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract16) #50
  %48 = getelementptr i8, ptr %12, i64 144
  %49 = load ptr, ptr %48, align 8
  store ptr @i32_typ, ptr %9, align 8
  %50 = getelementptr inbounds i8, ptr %9, i64 8
  store ptr %.fca.0.extract, ptr %50, align 8
  %result.i3 = call ptr %49({ ptr, ptr, ptr, i32 } %42, ptr nocapture nofree noundef nonnull readonly align 8 %9) #45
  call void %result.i3({ ptr, ptr, ptr, i32 } %42, { ptr, ptr, ptr, i32 } %42, ptr nonnull align 8 dereferenceable(16) %8, i32 %.027, { ptr, i160 } %4) #42
  ret void
}

; Function Attrs: nounwind
define void @Array_throw_oob_xi32({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, i32 %3) #11 {
  %result.i1 = call noalias align 8 dereferenceable_or_null(72) ptr @bump_malloc_inner(i64 noundef 72, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %result.i.i = call noalias align 8 dereferenceable_or_null(7) ptr @bump_malloc_inner(i64 noundef 7, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <6 x i8> <i8 60, i8 78, i8 111, i8 110, i8 101, i8 62>, ptr %result.i.i, align 8
  %result.i2.i = call noalias align 8 dereferenceable_or_null(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i.i, ptr %result.i2.i, align 8
  %5 = getelementptr i8, ptr %result.i2.i, i64 8
  store i32 6, ptr %5, align 8
  %6 = getelementptr i8, ptr %result.i2.i, i64 12
  store i32 7, ptr %6, align 4
  %7 = getelementptr i8, ptr %result.i1, i64 40
  store ptr @String, ptr %7, align 8
  %8 = getelementptr i8, ptr %result.i1, i64 48
  store ptr %result.i2.i, ptr %8, align 8
  %9 = getelementptr i8, ptr %result.i1, i64 64
  store i32 10, ptr %9, align 8
  %10 = getelementptr i8, ptr %result.i1, i64 8
  %11 = getelementptr i8, ptr %result.i1, i64 16
  %12 = getelementptr i8, ptr %result.i1, i64 32
  %result.i3 = call noalias align 64 dereferenceable_or_null(57) ptr @bump_malloc_inner(i64 noundef 57, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %13 = load <56 x i8>, ptr @hblhi_CUsersPaulKOneDriveDocumentsPLPyPLlibarraymini, align 64
  store <56 x i8> %13, ptr %result.i3, align 64
  %result.i5 = call noalias align 8 dereferenceable_or_null(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i3, ptr %result.i5, align 8
  %14 = getelementptr i8, ptr %result.i5, i64 8
  store i32 56, ptr %14, align 8
  %15 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String) #37
  %16 = getelementptr i8, ptr %result.i5, i64 12
  store i32 57, ptr %16, align 4
  store i32 89, ptr %result.i1, align 8
  %17 = call ptr @llvm.invariant.start.p0(i64 noundef 104, ptr nocapture nofree noundef nonnull align 16 dereferenceable(184) @Exception) #37
  store ptr @String, ptr %10, align 8
  store ptr %result.i5, ptr %11, align 8
  store i32 10, ptr %12, align 8
  %18 = ptrtoint ptr %result.i1 to i64
  %.sroa.4.8.insert.ext = zext i64 %18 to i160
  %.sroa.4.8.insert.insert = or disjoint i160 %.sroa.4.8.insert.ext, 3402823669209384634633746074317682114560
  %19 = insertvalue { ptr, i160 } { ptr @Exception, i160 undef }, i160 %.sroa.4.8.insert.insert, 1
  %current_coroutine.i = load ptr, ptr @current_coroutine, align 8
  %20 = getelementptr i8, ptr %current_coroutine.i, i64 48
  store { ptr, i160 } %19, ptr %20, align 8
  %into_callee_buf.i = getelementptr i8, ptr %current_coroutine.i, i64 8
  call preserve_nonecc void @context_switch(ptr nocapture nofree noundef nonnull writeonly align 8 dereferenceable(24) %into_callee_buf.i, ptr noundef nonnull align 8 dereferenceable(24) @into_caller_buf) #54
  ret void
}

; Function Attrs: mustprogress nounwind willreturn
define { ptr, i160 } @Array_unchecked_index_xi32({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, i32 %3) #6 {
  %.fca.0.extract4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract5 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract4, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract4, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract4, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !927
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !927
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !927
  %product.i.i.i = mul i64 %hash_coef.i.i, -5261542750394134544
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !927
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract4) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract4, i64 %6
  %8 = getelementptr i8, ptr %7, i64 8
  %9 = load ptr, ptr %8, align 8
  %10 = load ptr, ptr %9, align 8
  %11 = call { ptr } %10(ptr nonnull %.fca.1.extract5) #40
  %.fca.0.extract1 = extractvalue { ptr } %11, 0
  %12 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract4) #50
  %13 = load ptr, ptr %7, align 8
  %result.i = call nonnull align 8 dereferenceable(8) ptr %13(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract5) #41
  %14 = load ptr, ptr %result.i, align 8
  %15 = getelementptr i8, ptr %14, i64 72
  %16 = load ptr, ptr %15, align 8
  %result.i1 = call { i64, i64 } %16(ptr nocapture nofree nonnull readonly align 8 %result.i) #41
  %17 = extractvalue { i64, i64 } %result.i1, 0
  %18 = sext i32 %3 to i64
  %19 = mul i64 %17, %18
  %20 = getelementptr i8, ptr %.fca.0.extract1, i64 %19
  %21 = getelementptr i8, ptr %14, i64 56
  %22 = load ptr, ptr %21, align 8
  %result.i2 = call { ptr, i160 } %22(ptr nocapture nofree readonly %20, ptr nocapture nofree nonnull readonly align 8 %result.i) #41
  ret { ptr, i160 } %result.i2
}

; Function Attrs: mustprogress nounwind willreturn
define void @Array_unchecked_insert_xi32_valueT({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, i32 %3, { ptr, i160 } %4) #6 {
  %.fca.0.extract6 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract7 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract6, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract6, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract6, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !930
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !930
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !930
  %product.i.i.i = mul i64 %hash_coef.i.i, -5261542750394134544
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !930
  %6 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract6) #37
  %7 = sext i32 %offset.i.i to i64
  %8 = getelementptr ptr, ptr %.fca.0.extract6, i64 %7
  %9 = getelementptr i8, ptr %8, i64 8
  %10 = load ptr, ptr %9, align 8
  %11 = load ptr, ptr %10, align 8
  %12 = call { ptr } %11(ptr nonnull %.fca.1.extract7) #40
  %.fca.0.extract = extractvalue { ptr } %12, 0
  %13 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract6) #50
  %14 = load ptr, ptr %8, align 8
  %result.i = call nonnull align 8 dereferenceable(8) ptr %14(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract7) #41
  %15 = load ptr, ptr %result.i, align 8
  %16 = getelementptr i8, ptr %15, i64 72
  %17 = load ptr, ptr %16, align 8
  %result.i1 = call { i64, i64 } %17(ptr nocapture nofree nonnull readonly align 8 %result.i) #41
  %18 = extractvalue { i64, i64 } %result.i1, 0
  %19 = sext i32 %3 to i64
  %20 = mul i64 %18, %19
  %21 = getelementptr i8, ptr %.fca.0.extract, i64 %20
  %22 = getelementptr i8, ptr %15, i64 64
  %23 = load ptr, ptr %22, align 8
  call void %23({ ptr, i160 } %4, ptr nocapture nofree nonnull readonly align 8 %result.i, ptr nocapture nofree writeonly %21) #49
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(readwrite, inaccessiblemem: none)
define { ptr, ptr, ptr, i32 } @Array_iterator_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #27 {
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %0, 2
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !933
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !933
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !933
  %product.i.i.i = mul i64 %hash_coef.i.i, -5261542750394134544
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !933
  %4 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %5 = sext i32 %offset.i.i to i64
  %6 = getelementptr ptr, ptr %.fca.0.extract, i64 %5
  %7 = load ptr, ptr %6, align 8
  %result.i = call ptr %7(ptr nocapture nofree noundef nonnull readonly %.fca.1.extract) #41
  %result.i2 = call noalias nonnull align 8 dereferenceable(48) ptr @bump_malloc_inner(i64 noundef 48, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store ptr %result.i, ptr %result.i2, align 8
  %8 = call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr noalias nocapture nofree noundef nonnull align 8 dereferenceable(48) %result.i2) #37
  %hash_coef.i.i7 = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !23
  %tbl_size.i.i8 = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !23
  %offset_tbl.i.i9 = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !23
  %product.i.i.i10 = mul i64 %hash_coef.i.i7, -5261542750394134544
  %shifted.i.i.i11 = lshr i64 %product.i.i.i10, 32
  %xored.i.i.i12 = xor i64 %shifted.i.i.i11, %product.i.i.i10
  %hash.i.i.i13 = and i64 %xored.i.i.i12, %tbl_size.i.i8
  %offset_ptr.i.i14 = getelementptr i32, ptr %offset_tbl.i.i9, i64 %hash.i.i.i13
  %offset.i.i15 = load i32, ptr %offset_ptr.i.i14, align 4, !noalias !23
  %9 = insertvalue { ptr, ptr, ptr, i32 } { ptr @ArrayIterator, ptr undef, ptr undef, i32 undef }, ptr %result.i2, 1
  %10 = insertvalue { ptr, ptr, ptr, i32 } %9, ptr undef, 2
  %11 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef align 8 %.fca.0.extract) #37
  %12 = getelementptr inbounds i8, ptr %result.i2, i64 8
  store ptr %.fca.0.extract, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %result.i2, i64 16
  store ptr %.fca.1.extract, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %result.i2, i64 24
  store ptr %.fca.2.extract, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %result.i2, i64 32
  store i32 %offset.i.i15, ptr %15, align 8
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 16 dereferenceable(160) @ArrayIterator) #37
  %17 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 17, 3
  ret { ptr, ptr, ptr, i32 } %17
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, argmem: none, inaccessiblemem: none)
define { ptr, ptr, ptr, i32 } @Array_repr_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #31 {
  %result.i = call noalias align 8 dereferenceable_or_null(6) ptr @bump_malloc_inner(i64 noundef 6, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  store <5 x i8> <i8 65, i8 114, i8 114, i8 97, i8 121>, ptr %result.i, align 8
  %result.i2 = call noalias align 8 dereferenceable_or_null(16) ptr @bump_malloc_inner(i64 noundef 16, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) @current_ptr) #46
  %4 = insertvalue { ptr, ptr, ptr, i32 } { ptr @String, ptr undef, ptr undef, i32 undef }, ptr %result.i2, 1
  %5 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr undef, 2
  %6 = insertvalue { ptr, ptr, ptr, i32 } %5, i32 10, 3
  store ptr %result.i, ptr %result.i2, align 8
  %7 = getelementptr i8, ptr %result.i2, i64 8
  store i32 5, ptr %7, align 8
  %8 = call ptr @llvm.invariant.start.p0(i64 noundef 632, ptr nocapture nofree noundef nonnull align 16 dereferenceable(712) @String) #37
  %9 = getelementptr i8, ptr %result.i2, i64 12
  store i32 6, ptr %9, align 4
  ret { ptr, ptr, ptr, i32 } %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define { i64, i64 } @_data_size_ArrayIterator(ptr nocapture nofree readnone %0) #1 {
  ret { i64, i64 } { i64 48, i64 8 }
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ArrayIterator_B_init_arrayArrayT({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 8, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %1) #37
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 120
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define ptr @ArrayIterator_field_ArrayIterator_0(ptr nocapture nofree noundef nonnull readonly align 8 dereferenceable(8) %0) #2 {
  %2 = load ptr, ptr %0, align 8
  ret ptr %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define ptr @ArrayIterator_B_next_({ ptr, ptr, ptr, i32 } %0, ptr nocapture nofree %1) #4 {
  %3 = tail call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree %1)
  %4 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %5 = getelementptr i8, ptr %4, i64 128
  %6 = load ptr, ptr %5, align 8
  ret ptr %6
}

; Function Attrs: mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none)
define void @ArrayIterator_init_arrayArrayT({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2, { ptr, ptr, ptr, i32 } %3) #5 {
  %.fca.0.extract1 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract2 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract1, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract1, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract1, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !936
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !936
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !936
  %product.i.i.i = mul i64 %hash_coef.i.i, 3447345754186651411
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !936
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %3, 2
  %hash_coef_ptr.i.i2 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %tbl_size_ptr.i.i3 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %offset_tbl_ptr.i.i4 = getelementptr i8, ptr %.fca.0.extract, i64 40
  %hash_coef.i.i5 = load i64, ptr %hash_coef_ptr.i.i2, align 4, !noalias !23
  %tbl_size.i.i6 = load i64, ptr %tbl_size_ptr.i.i3, align 4, !noalias !23
  %offset_tbl.i.i7 = load ptr, ptr %offset_tbl_ptr.i.i4, align 8, !noalias !23
  %product.i.i.i8 = mul i64 %hash_coef.i.i5, -5261542750394134544
  %shifted.i.i.i9 = lshr i64 %product.i.i.i8, 32
  %xored.i.i.i10 = xor i64 %shifted.i.i.i9, %product.i.i.i8
  %hash.i.i.i11 = and i64 %xored.i.i.i10, %tbl_size.i.i6
  %offset_ptr.i.i12 = getelementptr i32, ptr %offset_tbl.i.i7, i64 %hash.i.i.i11
  %offset.i.i27 = load i32, ptr %offset_ptr.i.i12, align 4, !noalias !939
  %5 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef align 8 %.fca.0.extract1) #37
  %6 = sext i32 %offset.i.i to i64
  %7 = getelementptr ptr, ptr %.fca.0.extract1, i64 %6
  %8 = getelementptr i8, ptr %7, i64 8
  %9 = load ptr, ptr %8, align 8
  %10 = getelementptr i8, ptr %9, i64 8
  %11 = load ptr, ptr %10, align 8
  %12 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %13 = insertvalue { ptr, ptr, ptr, i32 } %12, ptr %.fca.1.extract, 1
  %14 = insertvalue { ptr, ptr, ptr, i32 } %13, ptr %.fca.2.extract, 2
  %15 = insertvalue { ptr, ptr, ptr, i32 } %14, i32 %offset.i.i27, 3
  call void %11(ptr %.fca.1.extract2, { ptr, ptr, ptr, i32 } %15) #39
  %16 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef align 8 %.fca.0.extract1) #37
  %17 = getelementptr i8, ptr %7, i64 16
  %18 = load ptr, ptr %17, align 8
  %19 = getelementptr i8, ptr %18, i64 8
  %20 = load ptr, ptr %19, align 8
  call void %20(ptr %.fca.1.extract2, i32 0) #39
  ret void
}

; Function Attrs: nounwind
define { ptr, i160 } @ArrayIterator_next_({ ptr, ptr, ptr, i32 } %0, { ptr, ptr, ptr, i32 } %1, ptr nocapture nofree readnone %2) #11 {
  %4 = alloca [0 x ptr], align 8
  %5 = alloca [1 x ptr], align 8
  %6 = alloca { ptr }, align 8
  %.fca.0.extract10 = extractvalue { ptr, ptr, ptr, i32 } %0, 0
  %.fca.1.extract12 = extractvalue { ptr, ptr, ptr, i32 } %0, 1
  %hash_coef_ptr.i.i = getelementptr i8, ptr %.fca.0.extract10, i64 8
  %tbl_size_ptr.i.i = getelementptr i8, ptr %.fca.0.extract10, i64 16
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract10, i64 40
  %hash_coef.i.i = load i64, ptr %hash_coef_ptr.i.i, align 4, !noalias !942
  %tbl_size.i.i = load i64, ptr %tbl_size_ptr.i.i, align 4, !noalias !942
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !942
  %product.i.i.i = mul i64 %hash_coef.i.i, 3447345754186651411
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %tbl_size.i.i
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !942
  %7 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef align 8 %.fca.0.extract10) #37
  %8 = sext i32 %offset.i.i to i64
  %9 = getelementptr ptr, ptr %.fca.0.extract10, i64 %8
  %10 = getelementptr i8, ptr %9, i64 16
  %11 = load ptr, ptr %10, align 8
  %12 = load ptr, ptr %11, align 8
  %13 = call i32 %12(ptr %.fca.1.extract12) #40
  %14 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef align 8 %.fca.0.extract10) #50
  %15 = getelementptr i8, ptr %9, i64 8
  %16 = load ptr, ptr %15, align 8
  %17 = load ptr, ptr %16, align 8
  %18 = call { ptr, ptr, ptr, i32 } %17(ptr %.fca.1.extract12) #40
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %18, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %18, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %18, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %18, 3
  %19 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %20 = insertvalue { ptr, ptr, ptr, i32 } %19, ptr %.fca.1.extract, 1
  %21 = insertvalue { ptr, ptr, ptr, i32 } %20, ptr %.fca.2.extract, 2
  %22 = insertvalue { ptr, ptr, ptr, i32 } %21, i32 %.fca.3.extract, 3
  %23 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %4) #50
  %24 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef %.fca.0.extract) #50
  %25 = sext i32 %.fca.3.extract to i64
  %26 = getelementptr ptr, ptr %.fca.0.extract, i64 %25
  %27 = getelementptr i8, ptr %26, i64 72
  %28 = load ptr, ptr %27, align 8
  %result.i = call ptr %28({ ptr, ptr, ptr, i32 } %22, ptr nocapture nofree noundef nonnull readonly align 8 %4) #45
  %29 = call i32 %result.i({ ptr, ptr, ptr, i32 } %22, { ptr, ptr, ptr, i32 } %22, ptr nonnull align 8 %4) #42
  %.not = icmp slt i32 %13, %29
  br i1 %.not, label %30, label %59

30:                                               ; preds = %3
  %31 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %32 = load ptr, ptr %10, align 8
  %33 = load ptr, ptr %32, align 8
  %34 = call i32 %33(ptr %.fca.1.extract12) #40
  %35 = add i32 %34, 1
  %36 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %37 = getelementptr i8, ptr %32, i64 8
  %38 = load ptr, ptr %37, align 8
  call void %38(ptr %.fca.1.extract12, i32 %35) #39
  %39 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %40 = load ptr, ptr %10, align 8
  %41 = load ptr, ptr %40, align 8
  %42 = call i32 %41(ptr %.fca.1.extract12) #40
  %43 = add i32 %42, -1
  %44 = call ptr @llvm.invariant.start.p0(i64 noundef 80, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract10)
  %45 = load ptr, ptr %15, align 8
  %46 = load ptr, ptr %45, align 8
  %47 = call { ptr, ptr, ptr, i32 } %46(ptr %.fca.1.extract12) #40
  %.fca.0.extract26 = extractvalue { ptr, ptr, ptr, i32 } %47, 0
  %.fca.1.extract28 = extractvalue { ptr, ptr, ptr, i32 } %47, 1
  %.fca.2.extract30 = extractvalue { ptr, ptr, ptr, i32 } %47, 2
  %.fca.3.extract32 = extractvalue { ptr, ptr, ptr, i32 } %47, 3
  %48 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract26, 0
  %49 = insertvalue { ptr, ptr, ptr, i32 } %48, ptr %.fca.1.extract28, 1
  %50 = insertvalue { ptr, ptr, ptr, i32 } %49, ptr %.fca.2.extract30, 2
  %51 = insertvalue { ptr, ptr, ptr, i32 } %50, i32 %.fca.3.extract32, 3
  store ptr @_parameterization_i32, ptr %5, align 8
  %52 = call ptr @llvm.invariant.start.p0(i64 noundef 1, ptr nocapture nofree noundef nonnull align 8 dereferenceable(8) %5)
  %53 = call ptr @llvm.invariant.start.p0(i64 noundef 664, ptr nocapture nofree noundef %.fca.0.extract26)
  %54 = sext i32 %.fca.3.extract32 to i64
  %55 = getelementptr ptr, ptr %.fca.0.extract26, i64 %54
  %56 = getelementptr i8, ptr %55, i64 136
  %57 = load ptr, ptr %56, align 8
  store ptr @i32_typ, ptr %6, align 8
  %result.i1 = call ptr %57({ ptr, ptr, ptr, i32 } %51, ptr nocapture nofree noundef nonnull readonly %6) #45
  %58 = call { ptr, i160 } %result.i1({ ptr, ptr, ptr, i32 } %51, { ptr, ptr, ptr, i32 } %51, ptr nonnull align 8 dereferenceable(8) %5, i32 %43) #42
  %.fca.0.extract20 = extractvalue { ptr, i160 } %58, 0
  %.fca.1.extract22 = extractvalue { ptr, i160 } %58, 1
  br label %59

59:                                               ; preds = %30, %3
  %.reg2mem21.sroa.0.0 = phi ptr [ %.fca.0.extract20, %30 ], [ @nil_typ, %3 ]
  %.reg2mem21.sroa.3.0 = phi i160 [ %.fca.1.extract22, %30 ], [ undef, %3 ]
  %.reload22.fca.0.insert = insertvalue { ptr, i160 } poison, ptr %.reg2mem21.sroa.0.0, 0
  %.reload22.fca.1.insert = insertvalue { ptr, i160 } %.reload22.fca.0.insert, i160 %.reg2mem21.sroa.3.0, 1
  ret { ptr, i160 } %.reload22.fca.1.insert
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define i32 @ArrayIterator_getter_index(ptr nocapture nofree readonly align 4 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 40
  %3 = load i32, ptr %2, align 4
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @ArrayIterator_setter_index(ptr nocapture nofree writeonly align 4 %0, i32 %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 40
  store i32 %1, ptr %3, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr, ptr, ptr, i32 } @ArrayIterator_getter_array(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %3, 0
  %5 = getelementptr i8, ptr %0, i64 16
  %6 = load ptr, ptr %5, align 8
  %7 = insertvalue { ptr, ptr, ptr, i32 } %4, ptr %6, 1
  %8 = getelementptr i8, ptr %0, i64 24
  %9 = load ptr, ptr %8, align 8
  %10 = insertvalue { ptr, ptr, ptr, i32 } %7, ptr %9, 2
  %11 = getelementptr i8, ptr %0, i64 32
  %12 = load i32, ptr %11, align 8
  %13 = insertvalue { ptr, ptr, ptr, i32 } %10, i32 %12, 3
  ret { ptr, ptr, ptr, i32 } %13
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @ArrayIterator_setter_array(ptr nocapture nofree writeonly align 8 %0, { ptr, ptr, ptr, i32 } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 8
  %.fca.0.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 0
  %.fca.1.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 1
  %.fca.2.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 2
  %.fca.3.extract = extractvalue { ptr, ptr, ptr, i32 } %1, 3
  store ptr %.fca.0.extract, ptr %3, align 8
  %4 = getelementptr i8, ptr %0, i64 16
  store ptr %.fca.1.extract, ptr %4, align 8
  %5 = getelementptr i8, ptr %0, i64 24
  store ptr %.fca.2.extract, ptr %5, align 8
  %6 = getelementptr i8, ptr %0, i64 32
  store i32 %.fca.3.extract, ptr %6, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define i32 @Array_getter_capacity(ptr nocapture nofree readonly align 4 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 20
  %3 = load i32, ptr %2, align 4
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @Array_setter_capacity(ptr nocapture nofree writeonly align 4 %0, i32 %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 20
  store i32 %1, ptr %3, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define i32 @Array_getter_length(ptr nocapture nofree readonly align 4 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 16
  %3 = load i32, ptr %2, align 4
  ret i32 %3
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @Array_setter_length(ptr nocapture nofree writeonly align 4 %0, i32 %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 16
  store i32 %1, ptr %3, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read)
define { ptr } @Array_getter_buffer(ptr nocapture nofree readonly align 8 %0) #2 {
  %2 = getelementptr i8, ptr %0, i64 8
  %3 = load ptr, ptr %2, align 8
  %4 = insertvalue { ptr } undef, ptr %3, 0
  ret { ptr } %4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write)
define void @Array_setter_buffer(ptr nocapture nofree writeonly align 8 %0, { ptr } %1) #3 {
  %3 = getelementptr i8, ptr %0, i64 8
  %.fca.0.extract = extractvalue { ptr } %1, 0
  store ptr %.fca.0.extract, ptr %3, align 8
  ret void
}

; Function Attrs: nounwind
define void @report_exception({ ptr } %0) local_unnamed_addr #11 {
  %2 = alloca [0 x ptr], align 8
  %.fca.0.extract2 = extractvalue { ptr } %0, 0
  %3 = getelementptr i8, ptr %.fca.0.extract2, i64 48
  %4 = load { ptr, i160 }, ptr %3, align 8
  %.fca.0.extract = extractvalue { ptr, i160 } %4, 0
  %5 = getelementptr i8, ptr %.fca.0.extract, i64 8
  %6 = getelementptr i8, ptr %.fca.0.extract, i64 16
  %7 = getelementptr i8, ptr %.fca.0.extract, i64 24
  %8 = getelementptr i8, ptr %.fca.0.extract, i64 32
  %9 = load i64, ptr %5, align 4
  %10 = load i64, ptr %6, align 4
  %11 = load ptr, ptr %7, align 8
  %12 = load ptr, ptr %8, align 8
  %result.i = call i1 %11(i64 %10, i64 %9, i64 9027164862567808692, i64 ptrtoint (ptr @Exception to i64), ptr readonly %12) #41
  br i1 %result.i, label %13, label %._crit_edge

13:                                               ; preds = %1
  %.fca.1.extract = extractvalue { ptr, i160 } %4, 1
  %.sroa.3.8.extract.trunc = trunc i160 %.fca.1.extract to i64
  %14 = inttoptr i64 %.sroa.3.8.extract.trunc to ptr
  %.sroa.5.8.extract.shift = lshr i160 %.fca.1.extract, 64
  %.sroa.5.8.extract.trunc = trunc i160 %.sroa.5.8.extract.shift to i64
  %15 = inttoptr i64 %.sroa.5.8.extract.trunc to ptr
  %offset_tbl_ptr.i.i = getelementptr i8, ptr %.fca.0.extract, i64 40
  %offset_tbl.i.i = load ptr, ptr %offset_tbl_ptr.i.i, align 8, !noalias !945
  %product.i.i.i = mul i64 %9, 9027164862567808692
  %shifted.i.i.i = lshr i64 %product.i.i.i, 32
  %xored.i.i.i = xor i64 %shifted.i.i.i, %product.i.i.i
  %hash.i.i.i = and i64 %xored.i.i.i, %10
  %offset_ptr.i.i = getelementptr i32, ptr %offset_tbl.i.i, i64 %hash.i.i.i
  %offset.i.i = load i32, ptr %offset_ptr.i.i, align 4, !noalias !945
  %16 = insertvalue { ptr, ptr, ptr, i32 } undef, ptr %.fca.0.extract, 0
  %17 = insertvalue { ptr, ptr, ptr, i32 } %16, ptr %14, 1
  %18 = insertvalue { ptr, ptr, ptr, i32 } %17, ptr %15, 2
  %19 = insertvalue { ptr, ptr, ptr, i32 } %18, i32 %offset.i.i, 3
  %20 = call ptr @llvm.invariant.start.p0(i64 noundef 0, ptr nocapture nofree noundef nonnull align 8 %2) #37
  %21 = call ptr @llvm.invariant.start.p0(i64 noundef 104, ptr nocapture nofree noundef nonnull align 8 %.fca.0.extract) #37
  %22 = sext i32 %offset.i.i to i64
  %23 = getelementptr ptr, ptr %.fca.0.extract, i64 %22
  %24 = getelementptr i8, ptr %23, i64 48
  %25 = load ptr, ptr %24, align 8
  %result.i1 = call ptr %25({ ptr, ptr, ptr, i32 } %19, ptr nocapture nofree noundef nonnull readonly align 8 %2) #45
  call void %result.i1({ ptr, ptr, ptr, i32 } %19, { ptr, ptr, ptr, i32 } %19, ptr nonnull align 8 %2) #42
  br label %._crit_edge

._crit_edge:                                      ; preds = %13, %1
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none)
define i1 @i32_eq(i32 %0, i32 %1) #1 {
  %3 = icmp eq i32 %0, %1
  ret i1 %3
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #34

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #34

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #35

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #36

attributes #0 = { mustprogress nofree norecurse nosync nounwind speculatable willreturn memory(argmem: read) "disable-tail-calls"="true" }
attributes #1 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) "disable-tail-calls"="true" }
attributes #2 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) "disable-tail-calls"="true" }
attributes #3 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write) "disable-tail-calls"="true" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) "disable-tail-calls"="true" }
attributes #5 = { mustprogress nounwind willreturn memory(readwrite, inaccessiblemem: none) "disable-tail-calls"="true" }
attributes #6 = { mustprogress nounwind willreturn "disable-tail-calls"="true" }
attributes #7 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) "disable-tail-calls"="true" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) "disable-tail-calls"="true" }
attributes #9 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) "disable-tail-calls"="true" }
attributes #10 = { "disable-tail-calls"="true" }
attributes #11 = { nounwind "disable-tail-calls"="true" }
attributes #12 = { mustprogress nofree norecurse nosync nounwind speculatable willreturn memory(read, inaccessiblemem: none) "disable-tail-calls"="true" }
attributes #13 = { mustprogress nofree norecurse nosync nounwind willreturn allockind("alloc,zeroed") allocsize(0) memory(readwrite, argmem: none, inaccessiblemem: none) "alloc-family"="malloc" "disable-tail-calls"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nosync nounwind willreturn allockind("alloc,zeroed") allocsize(0) memory(argmem: readwrite) "alloc-family"="malloc" "disable-tail-calls"="true" }
attributes #15 = { mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) "disable-tail-calls"="true" }
attributes #16 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: read) "disable-tail-calls"="true" }
attributes #17 = { mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0) "alloc-family"="malloc" "disable-tail-calls"="true" }
attributes #18 = { mustprogress nocallback nofree nosync nounwind willreturn "disable-tail-calls"="true" }
attributes #19 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) "disable-tail-calls"="true" }
attributes #20 = { nofree nounwind "disable-tail-calls"="true" }
attributes #21 = { mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(1) "alloc-family"="malloc" "disable-tail-calls"="true" }
attributes #22 = { mustprogress nofree norecurse nosync nounwind speculatable willreturn memory(read, argmem: readwrite, inaccessiblemem: none) "disable-tail-calls"="true" }
attributes #23 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) "disable-tail-calls"="true" }
attributes #24 = { noinline nounwind memory(readwrite) "disable-tail-calls"="true" }
attributes #25 = { noreturn nounwind "disable-tail-calls"="true" }
attributes #26 = { mustprogress nofree nosync nounwind willreturn memory(read, inaccessiblemem: none) "disable-tail-calls"="true" }
attributes #27 = { mustprogress nofree nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) "disable-tail-calls"="true" }
attributes #28 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) "disable-tail-calls"="true" }
attributes #29 = { nofree norecurse nosync nounwind memory(readwrite, argmem: read, inaccessiblemem: none) "disable-tail-calls"="true" }
attributes #30 = { mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, argmem: read, inaccessiblemem: none) "disable-tail-calls"="true" }
attributes #31 = { mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, argmem: none, inaccessiblemem: none) "disable-tail-calls"="true" }
attributes #32 = { mustprogress nofree nosync nounwind willreturn "disable-tail-calls"="true" }
attributes #33 = { mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) "disable-tail-calls"="true" }
attributes #34 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #35 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #36 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #37 = { nofree willreturn }
attributes #38 = { nofree nosync willreturn }
attributes #39 = { nounwind willreturn memory(argmem: readwrite) }
attributes #40 = { nounwind willreturn memory(argmem: read, inaccessiblemem: readwrite) }
attributes #41 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) }
attributes #42 = { nounwind }
attributes #43 = { nofree nounwind }
attributes #44 = { nofree }
attributes #45 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) }
attributes #46 = { mustprogress nofree nosync nounwind willreturn allockind("alloc,zeroed") allocsize(0) "alloc-family"="malloc" }
attributes #47 = { nofree nounwind willreturn }
attributes #48 = { mustprogress nofree nosync nounwind willreturn memory(argmem: read) }
attributes #49 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }
attributes #50 = { willreturn }
attributes #51 = { mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(1) "alloc-family"="malloc" }
attributes #52 = { mustprogress nofree nosync nounwind willreturn }
attributes #53 = { noreturn nounwind }
attributes #54 = { nounwind memory(readwrite) }

!llvm.module.flags = !{!0}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{!2}
!2 = distinct !{!2, !3, !"set_offset: %fat_ptr"}
!3 = distinct !{!3, !"set_offset"}
!4 = !{!5}
!5 = distinct !{!5, !6, !"set_offset: %fat_ptr"}
!6 = distinct !{!6, !"set_offset"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"set_offset: %fat_ptr"}
!9 = distinct !{!9, !"set_offset"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"set_offset: %fat_ptr"}
!12 = distinct !{!12, !"set_offset"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"size_wrapper: argument 0"}
!15 = distinct !{!15, !"size_wrapper"}
!16 = !{i64 8, i64 0}
!17 = !{!18}
!18 = distinct !{!18, !19, !"set_offset: %fat_ptr"}
!19 = distinct !{!19, !"set_offset"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"size_wrapper: argument 0"}
!22 = distinct !{!22, !"size_wrapper"}
!23 = !{}
!24 = !{!25}
!25 = distinct !{!25, !26, !"set_offset: %fat_ptr"}
!26 = distinct !{!26, !"set_offset"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"set_offset: %fat_ptr"}
!29 = distinct !{!29, !"set_offset"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"set_offset: %fat_ptr"}
!32 = distinct !{!32, !"set_offset"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"set_offset: %fat_ptr"}
!35 = distinct !{!35, !"set_offset"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"set_offset: %fat_ptr"}
!38 = distinct !{!38, !"set_offset"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"set_offset: %fat_ptr"}
!41 = distinct !{!41, !"set_offset"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"set_offset: %fat_ptr"}
!44 = distinct !{!44, !"set_offset"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"set_offset: %fat_ptr"}
!47 = distinct !{!47, !"set_offset"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"set_offset: %fat_ptr"}
!50 = distinct !{!50, !"set_offset"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"set_offset: %fat_ptr"}
!53 = distinct !{!53, !"set_offset"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"size_wrapper: argument 0"}
!56 = distinct !{!56, !"size_wrapper"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"set_offset: %fat_ptr"}
!59 = distinct !{!59, !"set_offset"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"size_wrapper: argument 0"}
!62 = distinct !{!62, !"size_wrapper"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"set_offset: %fat_ptr"}
!65 = distinct !{!65, !"set_offset"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"set_offset: %fat_ptr"}
!68 = distinct !{!68, !"set_offset"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"set_offset: %fat_ptr"}
!71 = distinct !{!71, !"set_offset"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"set_offset: %fat_ptr"}
!74 = distinct !{!74, !"set_offset"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"set_offset: %fat_ptr"}
!77 = distinct !{!77, !"set_offset"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"set_offset: %fat_ptr"}
!80 = distinct !{!80, !"set_offset"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"set_offset: %fat_ptr"}
!83 = distinct !{!83, !"set_offset"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"set_offset: %fat_ptr"}
!86 = distinct !{!86, !"set_offset"}
!87 = !{!88}
!88 = distinct !{!88, !89, !"size_wrapper: argument 0"}
!89 = distinct !{!89, !"size_wrapper"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"set_offset: %fat_ptr"}
!92 = distinct !{!92, !"set_offset"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"size_wrapper: argument 0"}
!95 = distinct !{!95, !"size_wrapper"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"set_offset: %fat_ptr"}
!98 = distinct !{!98, !"set_offset"}
!99 = !{!100}
!100 = distinct !{!100, !101, !"set_offset: %fat_ptr"}
!101 = distinct !{!101, !"set_offset"}
!102 = !{!103}
!103 = distinct !{!103, !104, !"set_offset: %fat_ptr"}
!104 = distinct !{!104, !"set_offset"}
!105 = !{!106}
!106 = distinct !{!106, !107, !"set_offset: %fat_ptr"}
!107 = distinct !{!107, !"set_offset"}
!108 = !{!109}
!109 = distinct !{!109, !110, !"set_offset: %fat_ptr"}
!110 = distinct !{!110, !"set_offset"}
!111 = !{!112}
!112 = distinct !{!112, !113, !"set_offset: %fat_ptr"}
!113 = distinct !{!113, !"set_offset"}
!114 = !{!115}
!115 = distinct !{!115, !116, !"set_offset: %fat_ptr"}
!116 = distinct !{!116, !"set_offset"}
!117 = !{!118}
!118 = distinct !{!118, !119, !"set_offset: %fat_ptr"}
!119 = distinct !{!119, !"set_offset"}
!120 = !{!121}
!121 = distinct !{!121, !122, !"set_offset: %fat_ptr"}
!122 = distinct !{!122, !"set_offset"}
!123 = !{!124}
!124 = distinct !{!124, !125, !"set_offset: %fat_ptr"}
!125 = distinct !{!125, !"set_offset"}
!126 = !{!127}
!127 = distinct !{!127, !128, !"size_wrapper: argument 0"}
!128 = distinct !{!128, !"size_wrapper"}
!129 = !{!130}
!130 = distinct !{!130, !131, !"set_offset: %fat_ptr"}
!131 = distinct !{!131, !"set_offset"}
!132 = !{!133}
!133 = distinct !{!133, !134, !"size_wrapper: argument 0"}
!134 = distinct !{!134, !"size_wrapper"}
!135 = !{!136}
!136 = distinct !{!136, !137, !"set_offset: %fat_ptr"}
!137 = distinct !{!137, !"set_offset"}
!138 = !{!139}
!139 = distinct !{!139, !140, !"set_offset: %fat_ptr"}
!140 = distinct !{!140, !"set_offset"}
!141 = !{!142}
!142 = distinct !{!142, !143, !"set_offset: %fat_ptr"}
!143 = distinct !{!143, !"set_offset"}
!144 = !{!145}
!145 = distinct !{!145, !146, !"set_offset: %fat_ptr"}
!146 = distinct !{!146, !"set_offset"}
!147 = !{!148}
!148 = distinct !{!148, !149, !"set_offset: %fat_ptr"}
!149 = distinct !{!149, !"set_offset"}
!150 = !{!151}
!151 = distinct !{!151, !152, !"set_offset: %fat_ptr"}
!152 = distinct !{!152, !"set_offset"}
!153 = !{!154}
!154 = distinct !{!154, !155, !"set_offset: %fat_ptr"}
!155 = distinct !{!155, !"set_offset"}
!156 = !{!157}
!157 = distinct !{!157, !158, !"set_offset: %fat_ptr"}
!158 = distinct !{!158, !"set_offset"}
!159 = !{!160}
!160 = distinct !{!160, !161, !"set_offset: %fat_ptr"}
!161 = distinct !{!161, !"set_offset"}
!162 = !{!163}
!163 = distinct !{!163, !164, !"set_offset: %fat_ptr"}
!164 = distinct !{!164, !"set_offset"}
!165 = !{!166}
!166 = distinct !{!166, !167, !"set_offset: %fat_ptr"}
!167 = distinct !{!167, !"set_offset"}
!168 = !{!169}
!169 = distinct !{!169, !170, !"set_offset: %fat_ptr"}
!170 = distinct !{!170, !"set_offset"}
!171 = !{!172}
!172 = distinct !{!172, !173, !"size_wrapper: argument 0"}
!173 = distinct !{!173, !"size_wrapper"}
!174 = !{!175}
!175 = distinct !{!175, !176, !"set_offset: %fat_ptr"}
!176 = distinct !{!176, !"set_offset"}
!177 = !{!178}
!178 = distinct !{!178, !179, !"size_wrapper: argument 0"}
!179 = distinct !{!179, !"size_wrapper"}
!180 = !{!181}
!181 = distinct !{!181, !182, !"set_offset: %fat_ptr"}
!182 = distinct !{!182, !"set_offset"}
!183 = !{!184}
!184 = distinct !{!184, !185, !"set_offset: %fat_ptr"}
!185 = distinct !{!185, !"set_offset"}
!186 = !{!187}
!187 = distinct !{!187, !188, !"set_offset: %fat_ptr"}
!188 = distinct !{!188, !"set_offset"}
!189 = !{!190}
!190 = distinct !{!190, !191, !"set_offset: %fat_ptr"}
!191 = distinct !{!191, !"set_offset"}
!192 = !{!193}
!193 = distinct !{!193, !194, !"set_offset: %fat_ptr"}
!194 = distinct !{!194, !"set_offset"}
!195 = !{!196}
!196 = distinct !{!196, !197, !"set_offset: %fat_ptr"}
!197 = distinct !{!197, !"set_offset"}
!198 = !{!199}
!199 = distinct !{!199, !200, !"set_offset: %fat_ptr"}
!200 = distinct !{!200, !"set_offset"}
!201 = !{!202}
!202 = distinct !{!202, !203, !"set_offset: %fat_ptr"}
!203 = distinct !{!203, !"set_offset"}
!204 = !{!205}
!205 = distinct !{!205, !206, !"size_wrapper: argument 0"}
!206 = distinct !{!206, !"size_wrapper"}
!207 = !{!208}
!208 = distinct !{!208, !209, !"set_offset: %fat_ptr"}
!209 = distinct !{!209, !"set_offset"}
!210 = !{!211}
!211 = distinct !{!211, !212, !"size_wrapper: argument 0"}
!212 = distinct !{!212, !"size_wrapper"}
!213 = !{!214}
!214 = distinct !{!214, !215, !"set_offset: %fat_ptr"}
!215 = distinct !{!215, !"set_offset"}
!216 = !{!217}
!217 = distinct !{!217, !218, !"set_offset: %fat_ptr"}
!218 = distinct !{!218, !"set_offset"}
!219 = !{!220}
!220 = distinct !{!220, !221, !"set_offset: %fat_ptr"}
!221 = distinct !{!221, !"set_offset"}
!222 = !{!223}
!223 = distinct !{!223, !224, !"set_offset: %fat_ptr"}
!224 = distinct !{!224, !"set_offset"}
!225 = !{!226}
!226 = distinct !{!226, !227, !"set_offset: %fat_ptr"}
!227 = distinct !{!227, !"set_offset"}
!228 = !{!229}
!229 = distinct !{!229, !230, !"set_offset: %fat_ptr"}
!230 = distinct !{!230, !"set_offset"}
!231 = !{!232}
!232 = distinct !{!232, !233, !"set_offset: %fat_ptr"}
!233 = distinct !{!233, !"set_offset"}
!234 = !{!235}
!235 = distinct !{!235, !236, !"set_offset: %fat_ptr"}
!236 = distinct !{!236, !"set_offset"}
!237 = !{!238}
!238 = distinct !{!238, !239, !"set_offset: %fat_ptr"}
!239 = distinct !{!239, !"set_offset"}
!240 = !{!241}
!241 = distinct !{!241, !242, !"set_offset: %fat_ptr"}
!242 = distinct !{!242, !"set_offset"}
!243 = !{!244}
!244 = distinct !{!244, !245, !"set_offset: %fat_ptr"}
!245 = distinct !{!245, !"set_offset"}
!246 = !{!247}
!247 = distinct !{!247, !248, !"set_offset: %fat_ptr"}
!248 = distinct !{!248, !"set_offset"}
!249 = !{!250}
!250 = distinct !{!250, !251, !"size_wrapper: argument 0"}
!251 = distinct !{!251, !"size_wrapper"}
!252 = !{!253}
!253 = distinct !{!253, !254, !"set_offset: %fat_ptr"}
!254 = distinct !{!254, !"set_offset"}
!255 = !{!256}
!256 = distinct !{!256, !257, !"size_wrapper: argument 0"}
!257 = distinct !{!257, !"size_wrapper"}
!258 = !{!259}
!259 = distinct !{!259, !260, !"set_offset: %fat_ptr"}
!260 = distinct !{!260, !"set_offset"}
!261 = !{!262}
!262 = distinct !{!262, !263, !"set_offset: %fat_ptr"}
!263 = distinct !{!263, !"set_offset"}
!264 = !{!265}
!265 = distinct !{!265, !266, !"set_offset: %fat_ptr"}
!266 = distinct !{!266, !"set_offset"}
!267 = !{!268}
!268 = distinct !{!268, !269, !"set_offset: %fat_ptr"}
!269 = distinct !{!269, !"set_offset"}
!270 = !{!271}
!271 = distinct !{!271, !272, !"set_offset: %fat_ptr"}
!272 = distinct !{!272, !"set_offset"}
!273 = !{!274}
!274 = distinct !{!274, !275, !"set_offset: %fat_ptr"}
!275 = distinct !{!275, !"set_offset"}
!276 = !{!277}
!277 = distinct !{!277, !278, !"set_offset: %fat_ptr"}
!278 = distinct !{!278, !"set_offset"}
!279 = !{!280}
!280 = distinct !{!280, !281, !"set_offset: %fat_ptr"}
!281 = distinct !{!281, !"set_offset"}
!282 = !{!283}
!283 = distinct !{!283, !284, !"size_wrapper: argument 0"}
!284 = distinct !{!284, !"size_wrapper"}
!285 = !{!286}
!286 = distinct !{!286, !287, !"set_offset: %fat_ptr"}
!287 = distinct !{!287, !"set_offset"}
!288 = !{!289}
!289 = distinct !{!289, !290, !"size_wrapper: argument 0"}
!290 = distinct !{!290, !"size_wrapper"}
!291 = !{!292}
!292 = distinct !{!292, !293, !"set_offset: %fat_ptr"}
!293 = distinct !{!293, !"set_offset"}
!294 = !{!295}
!295 = distinct !{!295, !296, !"set_offset: %fat_ptr"}
!296 = distinct !{!296, !"set_offset"}
!297 = !{!298}
!298 = distinct !{!298, !299, !"set_offset: %fat_ptr"}
!299 = distinct !{!299, !"set_offset"}
!300 = !{!301}
!301 = distinct !{!301, !302, !"set_offset: %fat_ptr"}
!302 = distinct !{!302, !"set_offset"}
!303 = !{!304}
!304 = distinct !{!304, !305, !"set_offset: %fat_ptr"}
!305 = distinct !{!305, !"set_offset"}
!306 = !{!307}
!307 = distinct !{!307, !308, !"set_offset: %fat_ptr"}
!308 = distinct !{!308, !"set_offset"}
!309 = !{!310}
!310 = distinct !{!310, !311, !"set_offset: %fat_ptr"}
!311 = distinct !{!311, !"set_offset"}
!312 = !{!313}
!313 = distinct !{!313, !314, !"set_offset: %fat_ptr"}
!314 = distinct !{!314, !"set_offset"}
!315 = !{!316}
!316 = distinct !{!316, !317, !"set_offset: %fat_ptr"}
!317 = distinct !{!317, !"set_offset"}
!318 = !{!319}
!319 = distinct !{!319, !320, !"set_offset: %fat_ptr"}
!320 = distinct !{!320, !"set_offset"}
!321 = !{!322}
!322 = distinct !{!322, !323, !"set_offset: %fat_ptr"}
!323 = distinct !{!323, !"set_offset"}
!324 = !{!325}
!325 = distinct !{!325, !326, !"set_offset: %fat_ptr"}
!326 = distinct !{!326, !"set_offset"}
!327 = !{!328}
!328 = distinct !{!328, !329, !"set_offset: %fat_ptr"}
!329 = distinct !{!329, !"set_offset"}
!330 = !{!331}
!331 = distinct !{!331, !332, !"set_offset: %fat_ptr"}
!332 = distinct !{!332, !"set_offset"}
!333 = !{!334}
!334 = distinct !{!334, !335, !"size_wrapper: argument 0"}
!335 = distinct !{!335, !"size_wrapper"}
!336 = !{!337}
!337 = distinct !{!337, !338, !"set_offset: %fat_ptr"}
!338 = distinct !{!338, !"set_offset"}
!339 = !{!340}
!340 = distinct !{!340, !341, !"size_wrapper: argument 0"}
!341 = distinct !{!341, !"size_wrapper"}
!342 = !{!343}
!343 = distinct !{!343, !344, !"set_offset: %fat_ptr"}
!344 = distinct !{!344, !"set_offset"}
!345 = !{!346}
!346 = distinct !{!346, !347, !"set_offset: %fat_ptr"}
!347 = distinct !{!347, !"set_offset"}
!348 = !{!349}
!349 = distinct !{!349, !350, !"set_offset: %fat_ptr"}
!350 = distinct !{!350, !"set_offset"}
!351 = !{!352}
!352 = distinct !{!352, !353, !"set_offset: %fat_ptr"}
!353 = distinct !{!353, !"set_offset"}
!354 = !{!355}
!355 = distinct !{!355, !356, !"set_offset: %fat_ptr"}
!356 = distinct !{!356, !"set_offset"}
!357 = !{!358}
!358 = distinct !{!358, !359, !"set_offset: %fat_ptr"}
!359 = distinct !{!359, !"set_offset"}
!360 = !{!361}
!361 = distinct !{!361, !362, !"set_offset: %fat_ptr"}
!362 = distinct !{!362, !"set_offset"}
!363 = !{!364}
!364 = distinct !{!364, !365, !"set_offset: %fat_ptr"}
!365 = distinct !{!365, !"set_offset"}
!366 = !{!367}
!367 = distinct !{!367, !368, !"size_wrapper: argument 0"}
!368 = distinct !{!368, !"size_wrapper"}
!369 = !{!370}
!370 = distinct !{!370, !371, !"set_offset: %fat_ptr"}
!371 = distinct !{!371, !"set_offset"}
!372 = !{!373}
!373 = distinct !{!373, !374, !"size_wrapper: argument 0"}
!374 = distinct !{!374, !"size_wrapper"}
!375 = !{!376}
!376 = distinct !{!376, !377, !"set_offset: %fat_ptr"}
!377 = distinct !{!377, !"set_offset"}
!378 = !{!379}
!379 = distinct !{!379, !380, !"set_offset: %fat_ptr"}
!380 = distinct !{!380, !"set_offset"}
!381 = !{!382}
!382 = distinct !{!382, !383, !"set_offset: %fat_ptr"}
!383 = distinct !{!383, !"set_offset"}
!384 = !{!385}
!385 = distinct !{!385, !386, !"set_offset: %fat_ptr"}
!386 = distinct !{!386, !"set_offset"}
!387 = !{!388}
!388 = distinct !{!388, !389, !"set_offset: %fat_ptr"}
!389 = distinct !{!389, !"set_offset"}
!390 = !{!391}
!391 = distinct !{!391, !392, !"set_offset: %fat_ptr"}
!392 = distinct !{!392, !"set_offset"}
!393 = !{!394}
!394 = distinct !{!394, !395, !"set_offset: %fat_ptr"}
!395 = distinct !{!395, !"set_offset"}
!396 = !{!397}
!397 = distinct !{!397, !398, !"set_offset: %fat_ptr"}
!398 = distinct !{!398, !"set_offset"}
!399 = !{!400}
!400 = distinct !{!400, !401, !"set_offset: %fat_ptr"}
!401 = distinct !{!401, !"set_offset"}
!402 = !{!403}
!403 = distinct !{!403, !404, !"set_offset: %fat_ptr"}
!404 = distinct !{!404, !"set_offset"}
!405 = !{!406}
!406 = distinct !{!406, !407, !"set_offset: %fat_ptr"}
!407 = distinct !{!407, !"set_offset"}
!408 = !{!409}
!409 = distinct !{!409, !410, !"set_offset: %fat_ptr"}
!410 = distinct !{!410, !"set_offset"}
!411 = !{!412}
!412 = distinct !{!412, !413, !"size_wrapper: argument 0"}
!413 = distinct !{!413, !"size_wrapper"}
!414 = !{!415}
!415 = distinct !{!415, !416, !"set_offset: %fat_ptr"}
!416 = distinct !{!416, !"set_offset"}
!417 = !{!418}
!418 = distinct !{!418, !419, !"size_wrapper: argument 0"}
!419 = distinct !{!419, !"size_wrapper"}
!420 = !{!421}
!421 = distinct !{!421, !422, !"set_offset: %fat_ptr"}
!422 = distinct !{!422, !"set_offset"}
!423 = !{!424}
!424 = distinct !{!424, !425, !"set_offset: %fat_ptr"}
!425 = distinct !{!425, !"set_offset"}
!426 = !{!427}
!427 = distinct !{!427, !428, !"set_offset: %fat_ptr"}
!428 = distinct !{!428, !"set_offset"}
!429 = !{!430}
!430 = distinct !{!430, !431, !"set_offset: %fat_ptr"}
!431 = distinct !{!431, !"set_offset"}
!432 = !{!433}
!433 = distinct !{!433, !434, !"set_offset: %fat_ptr"}
!434 = distinct !{!434, !"set_offset"}
!435 = !{!436}
!436 = distinct !{!436, !437, !"set_offset: %fat_ptr"}
!437 = distinct !{!437, !"set_offset"}
!438 = !{!439}
!439 = distinct !{!439, !440, !"set_offset: %fat_ptr"}
!440 = distinct !{!440, !"set_offset"}
!441 = !{!442}
!442 = distinct !{!442, !443, !"set_offset: %fat_ptr"}
!443 = distinct !{!443, !"set_offset"}
!444 = !{!445}
!445 = distinct !{!445, !446, !"set_offset: %fat_ptr"}
!446 = distinct !{!446, !"set_offset"}
!447 = !{!448}
!448 = distinct !{!448, !449, !"set_offset: %fat_ptr"}
!449 = distinct !{!449, !"set_offset"}
!450 = !{!451}
!451 = distinct !{!451, !452, !"size_wrapper: argument 0"}
!452 = distinct !{!452, !"size_wrapper"}
!453 = !{!454}
!454 = distinct !{!454, !455, !"set_offset: %fat_ptr"}
!455 = distinct !{!455, !"set_offset"}
!456 = !{!457}
!457 = distinct !{!457, !458, !"size_wrapper: argument 0"}
!458 = distinct !{!458, !"size_wrapper"}
!459 = !{!460}
!460 = distinct !{!460, !461, !"set_offset: %fat_ptr"}
!461 = distinct !{!461, !"set_offset"}
!462 = !{!463}
!463 = distinct !{!463, !464, !"set_offset: %fat_ptr"}
!464 = distinct !{!464, !"set_offset"}
!465 = !{!466}
!466 = distinct !{!466, !467, !"set_offset: %fat_ptr"}
!467 = distinct !{!467, !"set_offset"}
!468 = !{!469}
!469 = distinct !{!469, !470, !"set_offset: %fat_ptr"}
!470 = distinct !{!470, !"set_offset"}
!471 = !{!472}
!472 = distinct !{!472, !473, !"set_offset: %fat_ptr"}
!473 = distinct !{!473, !"set_offset"}
!474 = !{!475}
!475 = distinct !{!475, !476, !"set_offset: %fat_ptr"}
!476 = distinct !{!476, !"set_offset"}
!477 = !{!478}
!478 = distinct !{!478, !479, !"set_offset: %fat_ptr"}
!479 = distinct !{!479, !"set_offset"}
!480 = !{!481}
!481 = distinct !{!481, !482, !"set_offset: %fat_ptr"}
!482 = distinct !{!482, !"set_offset"}
!483 = !{!484}
!484 = distinct !{!484, !485, !"set_offset: %fat_ptr"}
!485 = distinct !{!485, !"set_offset"}
!486 = !{!487}
!487 = distinct !{!487, !488, !"set_offset: %fat_ptr"}
!488 = distinct !{!488, !"set_offset"}
!489 = !{!490}
!490 = distinct !{!490, !491, !"set_offset: %fat_ptr"}
!491 = distinct !{!491, !"set_offset"}
!492 = !{!493}
!493 = distinct !{!493, !494, !"set_offset: %fat_ptr"}
!494 = distinct !{!494, !"set_offset"}
!495 = !{!496}
!496 = distinct !{!496, !497, !"set_offset: %fat_ptr"}
!497 = distinct !{!497, !"set_offset"}
!498 = !{!499}
!499 = distinct !{!499, !500, !"set_offset: %fat_ptr"}
!500 = distinct !{!500, !"set_offset"}
!501 = !{!502}
!502 = distinct !{!502, !503, !"set_offset: %fat_ptr"}
!503 = distinct !{!503, !"set_offset"}
!504 = !{!505}
!505 = distinct !{!505, !506, !"set_offset: %fat_ptr"}
!506 = distinct !{!506, !"set_offset"}
!507 = !{!508}
!508 = distinct !{!508, !509, !"set_offset: %fat_ptr"}
!509 = distinct !{!509, !"set_offset"}
!510 = !{!511}
!511 = distinct !{!511, !512, !"set_offset: %fat_ptr"}
!512 = distinct !{!512, !"set_offset"}
!513 = !{!514}
!514 = distinct !{!514, !515, !"set_offset: %fat_ptr"}
!515 = distinct !{!515, !"set_offset"}
!516 = !{!517}
!517 = distinct !{!517, !518, !"set_offset: %fat_ptr"}
!518 = distinct !{!518, !"set_offset"}
!519 = !{!520}
!520 = distinct !{!520, !521, !"set_offset: %fat_ptr"}
!521 = distinct !{!521, !"set_offset"}
!522 = !{!523}
!523 = distinct !{!523, !524, !"set_offset: %fat_ptr"}
!524 = distinct !{!524, !"set_offset"}
!525 = !{!526}
!526 = distinct !{!526, !527, !"set_offset: %fat_ptr"}
!527 = distinct !{!527, !"set_offset"}
!528 = !{!529}
!529 = distinct !{!529, !530, !"set_offset: %fat_ptr"}
!530 = distinct !{!530, !"set_offset"}
!531 = !{!532}
!532 = distinct !{!532, !533, !"set_offset: %fat_ptr"}
!533 = distinct !{!533, !"set_offset"}
!534 = !{!535}
!535 = distinct !{!535, !536, !"set_offset: %fat_ptr"}
!536 = distinct !{!536, !"set_offset"}
!537 = !{!538}
!538 = distinct !{!538, !539, !"set_offset: %fat_ptr"}
!539 = distinct !{!539, !"set_offset"}
!540 = !{!541}
!541 = distinct !{!541, !542, !"set_offset: %fat_ptr"}
!542 = distinct !{!542, !"set_offset"}
!543 = !{!544}
!544 = distinct !{!544, !545, !"set_offset: %fat_ptr"}
!545 = distinct !{!545, !"set_offset"}
!546 = !{!547}
!547 = distinct !{!547, !548, !"set_offset: %fat_ptr"}
!548 = distinct !{!548, !"set_offset"}
!549 = !{!550}
!550 = distinct !{!550, !551, !"set_offset: %fat_ptr"}
!551 = distinct !{!551, !"set_offset"}
!552 = !{!553}
!553 = distinct !{!553, !554, !"set_offset: %fat_ptr"}
!554 = distinct !{!554, !"set_offset"}
!555 = !{!556}
!556 = distinct !{!556, !557, !"set_offset: %fat_ptr"}
!557 = distinct !{!557, !"set_offset"}
!558 = !{!559}
!559 = distinct !{!559, !560, !"set_offset: %fat_ptr"}
!560 = distinct !{!560, !"set_offset"}
!561 = !{!562}
!562 = distinct !{!562, !563, !"set_offset: %fat_ptr"}
!563 = distinct !{!563, !"set_offset"}
!564 = !{!565}
!565 = distinct !{!565, !566, !"set_offset: %fat_ptr"}
!566 = distinct !{!566, !"set_offset"}
!567 = !{!568}
!568 = distinct !{!568, !569, !"set_offset: %fat_ptr"}
!569 = distinct !{!569, !"set_offset"}
!570 = !{!571}
!571 = distinct !{!571, !572, !"set_offset: %fat_ptr"}
!572 = distinct !{!572, !"set_offset"}
!573 = !{!574}
!574 = distinct !{!574, !575, !"set_offset: %fat_ptr"}
!575 = distinct !{!575, !"set_offset"}
!576 = !{!577}
!577 = distinct !{!577, !578, !"set_offset: %fat_ptr"}
!578 = distinct !{!578, !"set_offset"}
!579 = !{!580}
!580 = distinct !{!580, !581, !"set_offset: %fat_ptr"}
!581 = distinct !{!581, !"set_offset"}
!582 = !{!583}
!583 = distinct !{!583, !584, !"set_offset: %fat_ptr"}
!584 = distinct !{!584, !"set_offset"}
!585 = !{!586}
!586 = distinct !{!586, !587, !"set_offset: %fat_ptr"}
!587 = distinct !{!587, !"set_offset"}
!588 = !{!589}
!589 = distinct !{!589, !590, !"set_offset: %fat_ptr"}
!590 = distinct !{!590, !"set_offset"}
!591 = !{!592}
!592 = distinct !{!592, !593, !"set_offset: %fat_ptr"}
!593 = distinct !{!593, !"set_offset"}
!594 = !{!595}
!595 = distinct !{!595, !596, !"set_offset: %fat_ptr"}
!596 = distinct !{!596, !"set_offset"}
!597 = !{!598}
!598 = distinct !{!598, !599, !"set_offset: %fat_ptr"}
!599 = distinct !{!599, !"set_offset"}
!600 = !{!601}
!601 = distinct !{!601, !602, !"set_offset: %fat_ptr"}
!602 = distinct !{!602, !"set_offset"}
!603 = !{!604}
!604 = distinct !{!604, !605, !"set_offset: %fat_ptr"}
!605 = distinct !{!605, !"set_offset"}
!606 = !{!607}
!607 = distinct !{!607, !608, !"set_offset: %fat_ptr"}
!608 = distinct !{!608, !"set_offset"}
!609 = !{!610}
!610 = distinct !{!610, !611, !"set_offset: %fat_ptr"}
!611 = distinct !{!611, !"set_offset"}
!612 = !{!613}
!613 = distinct !{!613, !614, !"set_offset: %fat_ptr"}
!614 = distinct !{!614, !"set_offset"}
!615 = !{!616}
!616 = distinct !{!616, !617, !"set_offset: %fat_ptr"}
!617 = distinct !{!617, !"set_offset"}
!618 = !{!619}
!619 = distinct !{!619, !620, !"set_offset: %fat_ptr"}
!620 = distinct !{!620, !"set_offset"}
!621 = !{!622}
!622 = distinct !{!622, !623, !"set_offset: %fat_ptr"}
!623 = distinct !{!623, !"set_offset"}
!624 = !{!625}
!625 = distinct !{!625, !626, !"set_offset: %fat_ptr"}
!626 = distinct !{!626, !"set_offset"}
!627 = !{!628}
!628 = distinct !{!628, !629, !"set_offset: %fat_ptr"}
!629 = distinct !{!629, !"set_offset"}
!630 = !{!631}
!631 = distinct !{!631, !632, !"set_offset: %fat_ptr"}
!632 = distinct !{!632, !"set_offset"}
!633 = !{!634}
!634 = distinct !{!634, !635, !"set_offset: %fat_ptr"}
!635 = distinct !{!635, !"set_offset"}
!636 = !{!637}
!637 = distinct !{!637, !638, !"size_wrapper: argument 0"}
!638 = distinct !{!638, !"size_wrapper"}
!639 = !{!640}
!640 = distinct !{!640, !641, !"set_offset: %fat_ptr"}
!641 = distinct !{!641, !"set_offset"}
!642 = !{!643}
!643 = distinct !{!643, !644, !"set_offset: %fat_ptr"}
!644 = distinct !{!644, !"set_offset"}
!645 = !{!646}
!646 = distinct !{!646, !647, !"set_offset: %fat_ptr"}
!647 = distinct !{!647, !"set_offset"}
!648 = !{!649}
!649 = distinct !{!649, !650, !"set_offset: %fat_ptr"}
!650 = distinct !{!650, !"set_offset"}
!651 = !{!652}
!652 = distinct !{!652, !653, !"set_offset: %fat_ptr"}
!653 = distinct !{!653, !"set_offset"}
!654 = !{!655}
!655 = distinct !{!655, !656, !"set_offset: %fat_ptr"}
!656 = distinct !{!656, !"set_offset"}
!657 = !{!658}
!658 = distinct !{!658, !659, !"set_offset: %fat_ptr"}
!659 = distinct !{!659, !"set_offset"}
!660 = !{!661}
!661 = distinct !{!661, !662, !"set_offset: %fat_ptr"}
!662 = distinct !{!662, !"set_offset"}
!663 = !{!664}
!664 = distinct !{!664, !665, !"set_offset: %fat_ptr"}
!665 = distinct !{!665, !"set_offset"}
!666 = !{!667}
!667 = distinct !{!667, !668, !"set_offset: %fat_ptr"}
!668 = distinct !{!668, !"set_offset"}
!669 = !{!670}
!670 = distinct !{!670, !671, !"set_offset: %fat_ptr"}
!671 = distinct !{!671, !"set_offset"}
!672 = !{!673}
!673 = distinct !{!673, !674, !"set_offset: %fat_ptr"}
!674 = distinct !{!674, !"set_offset"}
!675 = !{!676}
!676 = distinct !{!676, !677, !"set_offset: %fat_ptr"}
!677 = distinct !{!677, !"set_offset"}
!678 = !{!679}
!679 = distinct !{!679, !680, !"set_offset: %fat_ptr"}
!680 = distinct !{!680, !"set_offset"}
!681 = !{!682}
!682 = distinct !{!682, !683, !"set_offset: %fat_ptr"}
!683 = distinct !{!683, !"set_offset"}
!684 = !{!685}
!685 = distinct !{!685, !686, !"set_offset: %fat_ptr"}
!686 = distinct !{!686, !"set_offset"}
!687 = !{!688}
!688 = distinct !{!688, !689, !"set_offset: %fat_ptr"}
!689 = distinct !{!689, !"set_offset"}
!690 = !{!691}
!691 = distinct !{!691, !692, !"set_offset: %fat_ptr"}
!692 = distinct !{!692, !"set_offset"}
!693 = !{!694}
!694 = distinct !{!694, !695, !"set_offset: %fat_ptr"}
!695 = distinct !{!695, !"set_offset"}
!696 = !{!697}
!697 = distinct !{!697, !698, !"set_offset: %fat_ptr"}
!698 = distinct !{!698, !"set_offset"}
!699 = !{!700}
!700 = distinct !{!700, !701, !"set_offset: %fat_ptr"}
!701 = distinct !{!701, !"set_offset"}
!702 = !{!703}
!703 = distinct !{!703, !704, !"set_offset: %fat_ptr"}
!704 = distinct !{!704, !"set_offset"}
!705 = !{!706}
!706 = distinct !{!706, !707, !"set_offset: %fat_ptr"}
!707 = distinct !{!707, !"set_offset"}
!708 = !{!709}
!709 = distinct !{!709, !710, !"set_offset: %fat_ptr"}
!710 = distinct !{!710, !"set_offset"}
!711 = !{!712}
!712 = distinct !{!712, !713, !"set_offset: %fat_ptr"}
!713 = distinct !{!713, !"set_offset"}
!714 = !{!715}
!715 = distinct !{!715, !716, !"set_offset: %fat_ptr"}
!716 = distinct !{!716, !"set_offset"}
!717 = !{!718}
!718 = distinct !{!718, !719, !"set_offset: %fat_ptr"}
!719 = distinct !{!719, !"set_offset"}
!720 = !{!721}
!721 = distinct !{!721, !722, !"set_offset: %fat_ptr"}
!722 = distinct !{!722, !"set_offset"}
!723 = !{!724}
!724 = distinct !{!724, !725, !"set_offset: %fat_ptr"}
!725 = distinct !{!725, !"set_offset"}
!726 = !{!727}
!727 = distinct !{!727, !728, !"set_offset: %fat_ptr"}
!728 = distinct !{!728, !"set_offset"}
!729 = !{!730}
!730 = distinct !{!730, !731, !"set_offset: %fat_ptr"}
!731 = distinct !{!731, !"set_offset"}
!732 = !{!733}
!733 = distinct !{!733, !734, !"set_offset: %fat_ptr"}
!734 = distinct !{!734, !"set_offset"}
!735 = !{!736}
!736 = distinct !{!736, !737, !"set_offset: %fat_ptr"}
!737 = distinct !{!737, !"set_offset"}
!738 = !{!739}
!739 = distinct !{!739, !740, !"set_offset: %fat_ptr"}
!740 = distinct !{!740, !"set_offset"}
!741 = !{!742}
!742 = distinct !{!742, !743, !"set_offset: %fat_ptr"}
!743 = distinct !{!743, !"set_offset"}
!744 = !{!745}
!745 = distinct !{!745, !746, !"set_offset: %fat_ptr"}
!746 = distinct !{!746, !"set_offset"}
!747 = !{!748}
!748 = distinct !{!748, !749, !"set_offset: %fat_ptr"}
!749 = distinct !{!749, !"set_offset"}
!750 = !{!751}
!751 = distinct !{!751, !752, !"set_offset: %fat_ptr"}
!752 = distinct !{!752, !"set_offset"}
!753 = !{!754}
!754 = distinct !{!754, !755, !"set_offset: %fat_ptr"}
!755 = distinct !{!755, !"set_offset"}
!756 = !{!757}
!757 = distinct !{!757, !758, !"set_offset: %fat_ptr"}
!758 = distinct !{!758, !"set_offset"}
!759 = !{!760}
!760 = distinct !{!760, !761, !"set_offset: %fat_ptr"}
!761 = distinct !{!761, !"set_offset"}
!762 = !{!763}
!763 = distinct !{!763, !764, !"set_offset: %fat_ptr"}
!764 = distinct !{!764, !"set_offset"}
!765 = !{!766}
!766 = distinct !{!766, !767, !"set_offset: %fat_ptr"}
!767 = distinct !{!767, !"set_offset"}
!768 = !{!769}
!769 = distinct !{!769, !770, !"set_offset: %fat_ptr"}
!770 = distinct !{!770, !"set_offset"}
!771 = !{!772}
!772 = distinct !{!772, !773, !"set_offset: %fat_ptr"}
!773 = distinct !{!773, !"set_offset"}
!774 = !{!775}
!775 = distinct !{!775, !776, !"set_offset: %fat_ptr"}
!776 = distinct !{!776, !"set_offset"}
!777 = !{!778}
!778 = distinct !{!778, !779, !"size_wrapper: argument 0"}
!779 = distinct !{!779, !"size_wrapper"}
!780 = !{!781}
!781 = distinct !{!781, !782, !"set_offset: %fat_ptr"}
!782 = distinct !{!782, !"set_offset"}
!783 = !{!784}
!784 = distinct !{!784, !785, !"set_offset: %fat_ptr"}
!785 = distinct !{!785, !"set_offset"}
!786 = !{!787}
!787 = distinct !{!787, !788, !"set_offset: %fat_ptr"}
!788 = distinct !{!788, !"set_offset"}
!789 = !{!790}
!790 = distinct !{!790, !791, !"set_offset: %fat_ptr"}
!791 = distinct !{!791, !"set_offset"}
!792 = !{!793}
!793 = distinct !{!793, !794, !"set_offset: %fat_ptr"}
!794 = distinct !{!794, !"set_offset"}
!795 = !{!796}
!796 = distinct !{!796, !797, !"set_offset: %fat_ptr"}
!797 = distinct !{!797, !"set_offset"}
!798 = !{!799}
!799 = distinct !{!799, !800, !"set_offset: %fat_ptr"}
!800 = distinct !{!800, !"set_offset"}
!801 = !{!802}
!802 = distinct !{!802, !803, !"set_offset: %fat_ptr"}
!803 = distinct !{!803, !"set_offset"}
!804 = !{!805}
!805 = distinct !{!805, !806, !"set_offset: %fat_ptr"}
!806 = distinct !{!806, !"set_offset"}
!807 = !{!808}
!808 = distinct !{!808, !809, !"set_offset: %fat_ptr"}
!809 = distinct !{!809, !"set_offset"}
!810 = !{!811}
!811 = distinct !{!811, !812, !"set_offset: %fat_ptr"}
!812 = distinct !{!812, !"set_offset"}
!813 = !{!814}
!814 = distinct !{!814, !815, !"set_offset: %fat_ptr"}
!815 = distinct !{!815, !"set_offset"}
!816 = !{!817}
!817 = distinct !{!817, !818, !"set_offset: %fat_ptr"}
!818 = distinct !{!818, !"set_offset"}
!819 = !{!820}
!820 = distinct !{!820, !821, !"set_offset: %fat_ptr"}
!821 = distinct !{!821, !"set_offset"}
!822 = !{!823}
!823 = distinct !{!823, !824, !"set_offset: %fat_ptr"}
!824 = distinct !{!824, !"set_offset"}
!825 = !{!826}
!826 = distinct !{!826, !827, !"set_offset: %fat_ptr"}
!827 = distinct !{!827, !"set_offset"}
!828 = !{!829}
!829 = distinct !{!829, !830, !"set_offset: %fat_ptr"}
!830 = distinct !{!830, !"set_offset"}
!831 = !{!832}
!832 = distinct !{!832, !833, !"set_offset: %fat_ptr"}
!833 = distinct !{!833, !"set_offset"}
!834 = !{!835}
!835 = distinct !{!835, !836, !"set_offset: %fat_ptr"}
!836 = distinct !{!836, !"set_offset"}
!837 = !{!838}
!838 = distinct !{!838, !839, !"set_offset: %fat_ptr"}
!839 = distinct !{!839, !"set_offset"}
!840 = !{!841}
!841 = distinct !{!841, !842, !"set_offset: %fat_ptr"}
!842 = distinct !{!842, !"set_offset"}
!843 = !{!844}
!844 = distinct !{!844, !845, !"set_offset: %fat_ptr"}
!845 = distinct !{!845, !"set_offset"}
!846 = !{!847}
!847 = distinct !{!847, !848, !"size_wrapper: argument 0"}
!848 = distinct !{!848, !"size_wrapper"}
!849 = !{!850}
!850 = distinct !{!850, !851, !"set_offset: %fat_ptr"}
!851 = distinct !{!851, !"set_offset"}
!852 = !{!853}
!853 = distinct !{!853, !854, !"set_offset: %fat_ptr"}
!854 = distinct !{!854, !"set_offset"}
!855 = !{!856}
!856 = distinct !{!856, !857, !"set_offset: %fat_ptr"}
!857 = distinct !{!857, !"set_offset"}
!858 = !{!859}
!859 = distinct !{!859, !860, !"set_offset: %fat_ptr"}
!860 = distinct !{!860, !"set_offset"}
!861 = !{!862}
!862 = distinct !{!862, !863, !"set_offset: %fat_ptr"}
!863 = distinct !{!863, !"set_offset"}
!864 = !{!865}
!865 = distinct !{!865, !866, !"set_offset: %fat_ptr"}
!866 = distinct !{!866, !"set_offset"}
!867 = !{!868}
!868 = distinct !{!868, !869, !"set_offset: %fat_ptr"}
!869 = distinct !{!869, !"set_offset"}
!870 = !{!871}
!871 = distinct !{!871, !872, !"set_offset: %fat_ptr"}
!872 = distinct !{!872, !"set_offset"}
!873 = !{!874}
!874 = distinct !{!874, !875, !"set_offset: %fat_ptr"}
!875 = distinct !{!875, !"set_offset"}
!876 = !{!877}
!877 = distinct !{!877, !878, !"set_offset: %fat_ptr"}
!878 = distinct !{!878, !"set_offset"}
!879 = !{!880}
!880 = distinct !{!880, !881, !"set_offset: %fat_ptr"}
!881 = distinct !{!881, !"set_offset"}
!882 = !{!883}
!883 = distinct !{!883, !884, !"set_offset: %fat_ptr"}
!884 = distinct !{!884, !"set_offset"}
!885 = !{!886}
!886 = distinct !{!886, !887, !"set_offset: %fat_ptr"}
!887 = distinct !{!887, !"set_offset"}
!888 = !{!889}
!889 = distinct !{!889, !890, !"set_offset: %fat_ptr"}
!890 = distinct !{!890, !"set_offset"}
!891 = !{!892}
!892 = distinct !{!892, !893, !"set_offset: %fat_ptr"}
!893 = distinct !{!893, !"set_offset"}
!894 = !{!895}
!895 = distinct !{!895, !896, !"set_offset: %fat_ptr"}
!896 = distinct !{!896, !"set_offset"}
!897 = !{!898}
!898 = distinct !{!898, !899, !"set_offset: %fat_ptr"}
!899 = distinct !{!899, !"set_offset"}
!900 = !{!901}
!901 = distinct !{!901, !902, !"set_offset: %fat_ptr"}
!902 = distinct !{!902, !"set_offset"}
!903 = !{!904}
!904 = distinct !{!904, !905, !"set_offset: %fat_ptr"}
!905 = distinct !{!905, !"set_offset"}
!906 = !{!907}
!907 = distinct !{!907, !908, !"set_offset: %fat_ptr"}
!908 = distinct !{!908, !"set_offset"}
!909 = !{!910}
!910 = distinct !{!910, !911, !"set_offset: %fat_ptr"}
!911 = distinct !{!911, !"set_offset"}
!912 = !{!913}
!913 = distinct !{!913, !914, !"set_offset: %fat_ptr"}
!914 = distinct !{!914, !"set_offset"}
!915 = !{!916}
!916 = distinct !{!916, !917, !"set_offset: %fat_ptr"}
!917 = distinct !{!917, !"set_offset"}
!918 = !{!919}
!919 = distinct !{!919, !920, !"set_offset: %fat_ptr"}
!920 = distinct !{!920, !"set_offset"}
!921 = !{!922}
!922 = distinct !{!922, !923, !"set_offset: %fat_ptr"}
!923 = distinct !{!923, !"set_offset"}
!924 = !{!925}
!925 = distinct !{!925, !926, !"set_offset: %fat_ptr"}
!926 = distinct !{!926, !"set_offset"}
!927 = !{!928}
!928 = distinct !{!928, !929, !"set_offset: %fat_ptr"}
!929 = distinct !{!929, !"set_offset"}
!930 = !{!931}
!931 = distinct !{!931, !932, !"set_offset: %fat_ptr"}
!932 = distinct !{!932, !"set_offset"}
!933 = !{!934}
!934 = distinct !{!934, !935, !"set_offset: %fat_ptr"}
!935 = distinct !{!935, !"set_offset"}
!936 = !{!937}
!937 = distinct !{!937, !938, !"set_offset: %fat_ptr"}
!938 = distinct !{!938, !"set_offset"}
!939 = !{!940}
!940 = distinct !{!940, !941, !"set_offset: %fat_ptr"}
!941 = distinct !{!941, !"set_offset"}
!942 = !{!943}
!943 = distinct !{!943, !944, !"set_offset: %fat_ptr"}
!944 = distinct !{!944, !"set_offset"}
!945 = !{!946}
!946 = distinct !{!946, !947, !"set_offset: %fat_ptr"}
!947 = distinct !{!947, !"set_offset"}
