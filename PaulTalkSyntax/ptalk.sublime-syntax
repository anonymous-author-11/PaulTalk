%YAML 1.2
---
name: PaulTalk
file_extensions:
  - mini
scope: source.mini

variables:
  identifier: '[A-Za-z_][A-Za-z0-9_]*'
  class_name: '[A-Z][A-Za-z0-9_]*'

contexts:
  main:
    - include: comments
    - include: class-definition
    - include: function-definition
    - include: keywords
    - include: cf-keywords
    - include: operators
    - include: word-operators
    - include: modifiers
    - include: types
    - include: strings
    - include: chars
    - include: numbers
    - include: booleans
    - include: function-calls
    - include: field-access
    - include: class-names

  comments:
    - match: '/\*'
      scope: punctuation.definition.comment.begin.mini
      push: block_comment

    - match: '//'
      scope: punctuation.definition.comment.line.mini
      push:
        - meta_scope: comment.line.double-slash.mini
        - match: $\n?
          pop: true

  block_comment:
    - meta_scope: comment.block.mini
    - match: '\*/'
      scope: punctuation.definition.comment.end.mini
      pop: true 

  class-definition:
    - match: '\b(class)\s+({{class_name}})'
      captures:
        1: keyword.declaration.class.mini
        2: entity.name.type.mini

  function-definition:
    - match: '\b(def)\s+({{identifier}}|==|=|<|>|<=|>=|\+|\-|\*|\/|->|\[\])'
      captures:
        1: keyword.declaration.function.mini
        2: entity.name.function.mini

  cf-keywords:
    - match: '\b(return|if|else|while|break|continue|for|in|yield)\b'
      scope: keyword.control.mini

  word-operators:
    - match: '\b(as|into|of|is|not|or|and|bit_and|bit_or|bit_xor)\b'
      scope: keyword.operator.expression.mini

  modifiers:
    - match: '\b(abstract|extern)\b'
      scope: storage.modifier.mini

  keywords:
    - match: '\b(where|getter|setter|extends|yields|import|alias|regions|holds)\b'
      scope: keyword.other.mini

  types:
    - match: '\b(i8|u8|i16|u16|i32|u32|f64|i64|u64|i128|u128)\b'
      scope: storage.type.mini

  strings:
    - match: '"'
      push: string

  chars:
    - match: "'"
      push: char
      
  numbers:
    - match: '\b(0x[0-9a-fA-F]+(?:_[0-9a-fA-F]+)*|\d+(?:_\d+)*\.\d+(?:_\d+)*|\d+(?:_\d+)*)\b'
      scope: constant.numeric.mini

  booleans:
    - match: '\b(true|false|nil)\b'
      scope: constant.language.mini

  operators:
    - match: '(==|=|<:|<|>|<=|>=|\+|\-|\*|(?<!/)/(?!/)|->|\|)'
      scope: keyword.operator.mini

  function-calls:
    - match: '\b({{identifier}})\s*\('
      captures:
        1: variable.function.mini

  field-access:
    - match: '@{{identifier}}|self'
      scope: variable.other.member.mini

  class-names:
    - match: '\b{{class_name}}\b'
      scope: entity.name.type.mini

  string:
    - meta_scope: string.quoted.double.mini
    - match: '\\'
      scope: constant.character.escape.mini
    - match: '"'
      pop: true

  char:
    - meta_scope: string.quoted.single.mini
    - match: '\\'
      scope: constant.character.escape.mini
    - match: "'"
      pop: true